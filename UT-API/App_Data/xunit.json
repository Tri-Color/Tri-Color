[
  {
    "$id": "1",
    "FileName": "BriefingWorkRecordMigratorFact.cs",
    "Description": "BriefingWorkRecordMigratorFact",
    "WhenList": [],
    "ThenList": [
      "should_migrate_successfully",
      "should_migrate_missing_info_successfully",
      "should_migrate_successfully_when_briefing_coordinator_is_null"
    ],
    "Children": []
  },
  {
    "$id": "2",
    "FileName": "EmployerWorkRecordMigratorFact.cs",
    "Description": "EmployerWorkRecordMigratorFact",
    "WhenList": [],
    "ThenList": [
      "should_migrate_successfully_with_month_employer_work_record_info",
      "should_migrate_successfully_with_annual_employer_work_record_info"
    ],
    "Children": []
  },
  {
    "$id": "3",
    "FileName": "ImmigrationWorkRecordMigratorFact.cs",
    "Description": "ImmigrationWorkRecordMigratorFact",
    "WhenList": [],
    "ThenList": [
      "should_migrate_successfully_with_basic_immigration_work_record_info",
      "should_migrate_missing_item",
      "should_migrate_successfully_with_full_immigration_work_record_info"
    ],
    "Children": []
  },
  {
    "$id": "4",
    "FileName": "SocialSecurityWorkRecordMigrationFact.cs",
    "Description": "SocialSecurityWorkRecordMigrationFact",
    "WhenList": [],
    "ThenList": [
      "should_migrate_successfully",
      "should_migrate_missing_info_successfully"
    ],
    "Children": []
  },
  {
    "$id": "5",
    "FileName": "TaxWorkRecordMigratorFacts.cs",
    "Description": "TaxWorkRecordMigratorFacts",
    "WhenList": [],
    "ThenList": [
      "should_migrate_successfully_with_basic_tax_work_record_info_for_other_compliance",
      "should_migrate_successfully_with_basic_tax_work_record_info_for_tax_return",
      "should_migrate_successfully_with_missing_info_for_tax_return",
      "should_not_migrate_tax_briefing_work_record",
      "should_migrate_successfully_with_full_tax_work_record_info",
      "should_transfer_null_if_note_author_is_null"
    ],
    "Children": []
  },
  {
    "$id": "6",
    "FileName": "AssigneeMigratorFacts.cs",
    "Description": "AssigneeMigratorFacts",
    "WhenList": [],
    "ThenList": [
      "should_support_to_migrate_specific_assignee",
      "should_create_new_stream_for_each_assignee",
      "should_be_success_if_assignee_is_migrated_to_eventstore",
      "should_create_two_events_when_force_migrate_assignee",
      "should_create_an_event_when_first_migration_failed",
      "should_take_assignee_snapshot_into_eventstore",
      "should_migrate_client_associations",
      "should_get_null_when_family_member_coutry_is_null",
      "should_take_restricted_assignee_snapshot_into_eventstore"
    ],
    "Children": []
  },
  {
    "$id": "7",
    "FileName": "BatchMigrateRunnerFacts.cs",
    "Description": "BatchMigrateRunnerFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_migrate_engagement_if_time_exceed"
    ],
    "Children": []
  },
  {
    "$id": "8",
    "FileName": "ClientMigratorFacts.cs",
    "Description": "ClientMigratorFacts",
    "WhenList": [],
    "ThenList": [
      "should_migrate_pending_client_into_eventstore",
      "should_migrate_approved_client_into_eventstore"
    ],
    "Children": []
  },
  {
    "$id": "9",
    "FileName": "EngagementMigratorFacts.cs",
    "Description": "EngagementMigratorFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_new_stream_for_each_engagement",
      "should_append_to_original_stream_if_engagement_already_exists_in_event_store",
      "should_take_current_engagement_snapshot_into_event",
      "should_take_snap_shot_of_responsible_offices",
      "shold_take_snapshot_of_engaged_office_contact",
      "shold_take_snapshot_of_custom_field_subscription",
      "shold_take_snapshot_of_check_list_subscription",
      "shold_take_snapshot_of_engagement_task_template_ids",
      "shold_take_snapshot_of_engagement_administrators",
      "should_append_stream_if_engagement_exist",
      "shold_take_snapshot_of_admin_access_lists",
      "should_migrate_correct_coordinating_office"
    ],
    "Children": []
  },
  {
    "$id": "10",
    "FileName": "StaffMigratorFacts.cs",
    "Description": "StaffMigratorFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_new_stream_for_each_staff",
      "should_be_success_if_staff_is_migrated_to_eventstore",
      "should_skip_staff_which_is_migrated_to_eventstore",
      "should_create_two_events_when_force_migrate_staff",
      "should_take_staff_snapshot_into_eventstore"
    ],
    "Children": []
  },
  {
    "$id": "11",
    "FileName": "TeamMigratorFacts.cs",
    "Description": "TeamMigratorFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_new_stream_for_team",
      "should_be_success_if_team_is_migrated_to_eventstore",
      "should_skip_team_which_is_migrated_to_eventstore",
      "should_create_two_events_when_force_migrate_team",
      "should_take_team_snapshot_into_eventstore"
    ],
    "Children": []
  },
  {
    "$id": "12",
    "FileName": "InCsvFileFacts.cs",
    "Description": "InCsvFileFacts",
    "WhenList": [],
    "ThenList": [
      "should_fetch_filtered_assigned_when_active_assignee_with_US_and_workrecord_is_active",
      "should_fetch_filtered_assigned_when_active_assignee_with_closed_workrecord_in_included_days",
      "should_get_only_one_record_when_active_assignee_with_multiple_closed_workrecord_in_included_days",
      "should_get_assignee_if_close_work_records_has_us_assigned_work_record_task_within_days",
      "should_serve_assignee_if_close_work_records_has_us_assigned_check_list_item",
      "should_serve_assignee_if_open_work_records_has_us_assigned_check_list_item",
      "should_get_assignee_if_open_workrecords_has_us_assigned_work_record_task"
    ],
    "Children": []
  },
  {
    "$id": "13",
    "FileName": "GetAssigneeForPrivateClientFacts.cs",
    "Description": "GetAssigneeForPrivateClientFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_serve_assignee_belongs_to_private_client_if_assignee_has_open_work_record",
      "should_not_serve_assignee_belong_to_private_client_if_assignee_have_no_open_work_record"
    ],
    "Children": []
  },
  {
    "$id": "14",
    "FileName": "GetAssigneeWorkRecordRelatedFacts.cs",
    "Description": "GetAssigneeWorkRecordRelatedFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_fetch_filtered_assigned_when_active_assignee_with_closed_workrecord_in_excluded_days",
      "should_not_in_csv_file_if_assignee_has_only_open_non_tax_work_record",
      "should_not_in_csv_file_if_assignee_has_only_close_non_tax_work_record",
      "should_not_fetch_filtered_assignees_when_no_workrecord_in_US"
    ],
    "Children": []
  },
  {
    "$id": "15",
    "FileName": "GetInActiveAssigneeFacts.cs",
    "Description": "GetInActiveAssigneeFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_serve_inactive_assignee_when_assignee_has_no_open_work_record",
      "should_not_serve_assignee_when_inactive_assignee_has_no_open_work_record"
    ],
    "Children": []
  },
  {
    "$id": "16",
    "FileName": "GetRestrictedAssigneeFacts.cs",
    "Description": "GetRestrictedAssigneeFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_serve_restricted_assignee_if_assignee_has_open_work_record",
      "should_not_serve_restricted_assignee_when_assignee_is_restricted_if_assignee_has_no_open_work_record"
    ],
    "Children": []
  },
  {
    "$id": "17",
    "FileName": "CsvFileGeneratorFacts.cs",
    "Description": "CsvFileGeneratorFacts",
    "WhenList": [],
    "ThenList": [
      "should_generate_csv_content"
    ],
    "Children": []
  },
  {
    "$id": "18",
    "FileName": "NextLinkGeneratorFacts.cs",
    "Description": "NextLinkGeneratorFacts",
    "WhenList": [],
    "ThenList": [
      "should_generate_file_by_latest_event_id",
      "should_generate_file_by_zero_when_no_any_event"
    ],
    "Children": []
  },
  {
    "$id": "19",
    "FileName": "AssigneePersonalDetailsSectionPerfFacts.cs",
    "Description": "AssigneePersonalDetailsSectionPerfFacts",
    "WhenList": [],
    "ThenList": [
      "should_time_less_than_10s_when_get_personal_details_data_with_default_filter"
    ],
    "Children": []
  },
  {
    "$id": "20",
    "FileName": "MyDataSlowQuyerAnalysisServiceFacts.cs",
    "Description": "MyDataSlowQuyerAnalysisServiceFacts",
    "WhenList": [],
    "ThenList": [
      "should_save_analysis_result_after_analyze"
    ],
    "Children": []
  },
  {
    "$id": "21",
    "FileName": "RestrictedAssigneeFilterFacts.cs",
    "Description": "RestrictedAssigneeFilterFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_false_when_current_user_is_global_admin_while_some_assignees_are_restricted",
      "should_return_false_when_current_user_is_on_acl_while_some_assignees_are_restricted",
      "should_return_false_when_current_user_is_not_on_contact_list_while_some_assignees_are_restricted",
      "should_return_false_when_all_assignees_are_normal",
      "should_return_true_when_current_user_is_not_on_acl_while_some_assignees_are_restricted",
      "should_return_false_when_user_is_not_on_acl_while_only_inactive_assignees_are_restricted_for_assignee_sections",
      "should_return_true_when_user_is_not_on_acl_while_only_inactive_assignees_are_restricted_for_workrecord_sections"
    ],
    "Children": []
  },
  {
    "$id": "22",
    "FileName": "SimpleMemoryCacheFact.cs",
    "Description": "SimpleMemoryCacheFact",
    "WhenList": [],
    "ThenList": [
      "should_return_correctly_object_from_cache_after_add_object_to_it",
      "should_return_null_from_cache_when_cache_is_not_exist",
      "should_return_null_from_cache_when_cache_expiration"
    ],
    "Children": []
  },
  {
    "$id": "23",
    "FileName": "SingleEngagmentAclFilterFacts.cs",
    "Description": "SingleEngagmentAclFilterFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_false_current_user_is_acl_with_restricted_engagement",
      "should_return_true_current_user_is_not_acl_with_restricted_engagement",
      "should_return_false_current_user_is_global_Admin_with_restricted_engagement",
      "should_return_false_with_normal_engagement",
      "should_not_be_filtered_out_if_current_user_is_subscribed_office_primary_contact_for_restricted_engagement",
      "should_not_be_filtered_out_if_current_user_is_subscribed_office_secondary_contact_for_restricted_engagement",
      "should_not_be_filtered_out_if_current_user_is_coordinating_office_primary_contact_for_restricted_engagement",
      "should_not_be_filtered_out_if_current_user_is_coordinating_office_secondary_contact_for_restricted_engagement",
      "should_be_filtered_out_if_current_user_is_coordinating_office_primary_contact_but_in_another_office_for_restricted_engagement",
      "should_be_filtered_out_if_current_user_is_coordinating_office_secondary_contact_but_in_another_office_for_restricted_engagement"
    ],
    "Children": []
  },
  {
    "$id": "24",
    "FileName": "SlowQueryLogFormatterFacts.cs",
    "Description": "SlowQueryLogFormatterFacts",
    "WhenList": [],
    "ThenList": [
      "should_contain_slow_query_label_in_slow_log_message",
      "should_contain_time_taken_in_slow_log_message",
      "should_contain_sql_in_slow_log_message",
      "should_contain_parameters_in_slow_log_message",
      "should_contain_slow_query_analysis_label_in_analysis_result_message",
      "should_contain_slow_query_id_in_analysis_result_message",
      "should_contain_time_taken_in_analysis_result_message",
      "should_contain_sql_in_analysis_result_message",
      "should_contain_parameters_in_analysis_result_message",
      "should_contain_execution_plan_in_analysis_result_message",
      "should_contain_output_message_in_analysis_result_message"
    ],
    "Children": []
  },
  {
    "$id": "25",
    "FileName": "SlowQueryLoggerFacts.cs",
    "Description": "SlowQueryLoggerFacts",
    "WhenList": [],
    "ThenList": [
      "should_log_query_when_it_takes_more_time_than_threshold",
      "should_not_log_query_when_it_takes_less_time_than_threshold",
      "should_log_query_information_when_it_takes_more_time_than_threshold"
    ],
    "Children": []
  },
  {
    "$id": "26",
    "FileName": "StaffServedEngagementFilterFacts.cs",
    "Description": "StaffServedEngagementFilterFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_false_current_user_is_acl_with_normal_and_restricted_engagement",
      "should_return_true_current_user_is_not_acl_with_restricted_engagement",
      "should_return_fasle_current_user_is_globa_admin_with_restricted_engagement",
      "should_return_false_current_user_does_not_have_served_engagement",
      "should_return_false_current_user_in_team_of_wr_related_engagement",
      "should_return_true_current_user_in_team_of_wr_related_restricted_engagement"
    ],
    "Children": []
  },
  {
    "$id": "27",
    "FileName": "AssigneeUacFacts.cs",
    "Description": "AssigneeUacFacts",
    "WhenList": [],
    "ThenList": [
      "should_staff_not_get_assignee_when_staff_not_in_subscribed_office",
      "should_staff_get_assignees_when_staff_in_assignee_general_contact",
      "should_staff_not_get_assignee_when_only_in_work_office",
      "should_staff_get_assignee_when_is_coordinating_office_and_self_nominate",
      "should_staff_not_get_assignee_when_is_coordinating_office_but_not_self_nominate",
      "should_not_get_assignee_with_workrecord_but_staff_not_in_workrecord_responsible_office",
      "should_get_assignee_with_workrecord_and_staff_in_reponsible_office",
      "should_staff_get_work_record_when_staff_in_workrecord_team",
      "should_not_get_assignee_with_workrecord_when_office_assigned_to_task_but_staff_not",
      "should_get_assignee_with_workrecord_but_staff_any_task_assigned_to",
      "should_not_get_assignee_with_workrecord_when_office_assigned_but_staff_not_to_check_list_item",
      "should_get_assignee_with_workrecord_but_staff_any_check_list_item_assigned_to"
    ],
    "Children": []
  },
  {
    "$id": "28",
    "FileName": "FilterFacts.cs",
    "Description": "FilterFacts",
    "WhenList": [],
    "ThenList": [
      "should_filter_by_practice_type_when_assignee_no_workrecords",
      "should_filter_by_practice_type_when_assignee_have_workrecords",
      "should_filter_by_engagement_when_assignee_no_workrecords",
      "should_filter_by_engagement_when_assignee_have_workrecords",
      "should_filter_by_assignee_lastname_when_assignee_no_workrecords",
      "should_filter_by_assignee_lastname_when_assignee_have_workrecords",
      "should_filter_by_home_country_when_assignee_no_workrecords",
      "should_filter_by_home_country_when_assignee_have_workrecords",
      "should_filter_by_assignee_custom_field_country_when_assignee_no_workrecords",
      "should_filter_by_assignee_custom_field_country_when_assignee_have_workrecords",
      "should_filter_by_workrecord_country_when_assignee_no_workrecords",
      "should_filter_by_workrecord_country_when_assignee_have_workrecords",
      "should_filter_by_responsible_office_when_assignee_no_workrecords",
      "should_filter_by_responsible_office_when_assignee_have_workrecords",
      "should_filter_by_primary_service_when_assignee_no_workrecords",
      "should_filter_by_primary_service_when_assignee_have_workrecords",
      "should_filter_by_year_when_assignee_no_workrecords",
      "should_filter_by_year_when_assignee_have_workrecords",
      "should_filter_by_questionnaire_current_status_when_assignee_no_workrecords",
      "should_filter_by_questionnaire_current_status_when_assignee_have_workrecords",
      "should_filter_by_go_migration_status_when_assignee_no_workrecords",
      "should_filter_by_go_migration_status_when_assignee_have_workrecords",
      "should_get_restricted_assignee_data_correctly_when_staff_in_acl",
      "should_get_restricted_assignee_data_correctly_when_staff_in_primary_contact",
      "should_not_get_restricted_assignee_data_correctly_when_staff_not_in_acl",
      "should_not_get_restricted_assignee_data_correctly_when_staff_not_in_primary_contact"
    ],
    "Children": []
  },
  {
    "$id": "29",
    "FileName": "WorkRecordUacFact.cs",
    "Description": "WorkRecordUacFact",
    "WhenList": [],
    "ThenList": [
      "should_staff_get_work_record_when_staff_is_coordinating_office_and_self_nominate",
      "should_staff_get_work_record_when_staff_in_workrecord_responsible_office",
      "should_staff_get_work_record_when_staff_in_workrecord_team",
      "should_staff_get_work_record_when_staff_assigned_to_workrecord_task",
      "should_staff_get_work_record_when_staff_assigned_to_workrecord_check_list",
      "should_staff_get_work_record_when_staff_is_assignee_pwc_contact"
    ],
    "Children": []
  },
  {
    "$id": "30",
    "FileName": "AssigneeAccountStatusSectionFact.cs",
    "Description": "AssigneeAccountStatusSectionFact",
    "WhenList": [],
    "ThenList": [
      "should_get_assignee_account_status_header_when_practice_type_is_tax",
      "should_get_all_assignees_belong_to_selected_engagement_and_practice_type",
      "should_get_engagement_as_ANY_when_engagement_criteria_empty",
      "should_not_export_invalid_assignees"
    ],
    "Children": []
  },
  {
    "$id": "31",
    "FileName": "AssigneeCalendarSectionFact.cs",
    "Description": "AssigneeCalendarSectionFact",
    "WhenList": [],
    "ThenList": [
      "should_get_assignee_calendar_header_when_practice_type_is_tax",
      "should_get_all_assignees_calendar_data_belong_to_selected_engagement_and_practice_type",
      "should_fetch_next_day_data_when_have_cross_day_travel",
      "should_split_to_two_records_when_have_third_location",
      "should_split_to_two_records_when_have_third_location_cross_day",
      "should_not_show_destination_country_if_assignee_stay_in_one_country_for_two_days",
      "should_not_show_activity_out_of_selected_days",
      "should_export_data_even_no_calendar_filled_on_those_days",
      "should_export_data_filtered_by_assignee_home_country",
      "should_export_data_filtered_by_assignee_assignments_host_country",
      "should_export_data_filtered_by_assignee_home_country_and_host_country",
      "should_export_data_filtered_by_given_country_which_may_be_both_home_or_host_country",
      "should_export_assignee_calendar_report_with_given_assignee_filter"
    ],
    "Children": [
      {
        "$id": "32",
        "FileName": "AssigneeCalendarSectionFact.cs",
        "Description": "LocationValues",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "33",
    "FileName": "AssigneeCountryCustomFieldSectionFacts.cs",
    "Description": "AssigneeCountryCustomFieldSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_country_custom_fields_data",
      "should_not_get_country_custom_fields_which_on_migration_when_current_user_not_admin",
      "should_get_country_custom_fields_with_filter_engagement",
      "should_get_country_custom_fields_with_filter_lastname",
      "should_get_country_custom_fields_with_filter_homecountry",
      "should_get_country_custom_fields_data_with_assignee_custom_field_country",
      "should_staff_not_get_restricted_country_custom_field_data_with_uac",
      "should_get_country_custom_field_with_filter_practice_type_is_tax",
      "should_get_country_custom_field_with_filter_practice_type_is_immigration",
      "should_get_data_by_practice_type_when_assignee_has_multi_engagements_which_have_different_practice_type",
      "should_get_assignee_custom_fields_different_type",
      "should_get_data_by_practice_type_when_assignee_has_multi_engagements_and_country_custom_field_has_multi_practice_type",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_custom_field_data_from_deleted_or_inactive_assignees"
    ],
    "Children": []
  },
  {
    "$id": "34",
    "FileName": "AssigneeEngagementCustomFieldSectionFacts.cs",
    "Description": "AssigneeEngagementCustomFieldSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_custom_fields_data",
      "should_not_get_engagement_custom_fields_which_on_migration_when_current_user_not_admin",
      "should_get_multi_engagement_customfield_when_assignee_have_multi_engagement",
      "should_get_assignee_custom_fields_by_location_and_assignee_engagement",
      "should_get_assignee_custom_fields_with_filter_engagment",
      "should_get_assignee_custom_fields_with_filter_assignee_lastname",
      "should_get_assignee_custom_fields_with_filter_assignee_home_country",
      "should_get_assignee_custom_fields_different_type",
      "with_uac_should_get_custom_field_which_in_engagement_practice_type_same_as_staff",
      "should_get_custom_field_with_filter_practice_type_is_tax",
      "should_get_custom_field_with_filter_practice_type_is_immigration",
      "should_get_engagement_custom_field_when_no_country_custom_field_but_assignee_home_country_equal_filter_country_custom_field_country",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_deleted_or_inactive_assignee"
    ],
    "Children": []
  },
  {
    "$id": "35",
    "FileName": "AssigneePersonalDetailsSectionFacts.cs",
    "Description": "AssigneePersonalDetailsSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_personal_details_data",
      "should_get_personal_details_data_with_filter_engagement",
      "should_get_personal_details_data_with_filter_lastname",
      "should_get_personal_details_data_with_filter_homecountry",
      "should_not_get_personal_details_data_which_on_migration_when_current_user_not_admin",
      "should_get_multi_rows_when_assignee_have_multi_engagement",
      "should_get_assignee_when_no_coutry_custom_field_but_assignee_home_country_equal_filter_country_custom_field_country",
      "should_get_assignee_in_subscribed_engagement_when_no_engagement_filter",
      "should_get_assignee_when_no_coutry_custom_field_and_no_with_filter_country_custom_field_country",
      "should_get_personal_details_with_filter_practice_type_is_tax",
      "should_get_personal_details_with_filter_practice_type_is_immigration",
      "should_get_data_by_practice_type_when_assignee_has_multi_engagements_which_have_different_practice_type",
      "should_get_personal_details_with_filter_tax_year",
      "should_get_personal_details_with_filter_workrecord_type",
      "should_get_personal_details_with_filter_team",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_deleted_or_inactive_assignee"
    ],
    "Children": []
  },
  {
    "$id": "36",
    "FileName": "AssignmentDetailsSectionFacts.cs",
    "Description": "AssignmentDetailsSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_header",
      "should_get_assignment_data",
      "should_get_assignment_custom_field_only_for_selected_engagement",
      "should_get_assignment_with_custom_field_name_even_without_value",
      "should_get_assignment_without_custom_fields_when_searching_with_all_engagements",
      "should_get_personal_details_data_with_filter_engagement",
      "should_get_data_with_filter_lastname",
      "should_not_get_assignment_data_from_deleted_or_inactive_assignee",
      "should_get_assignments_custom_field_value_when_it_contains_special_characters"
    ],
    "Children": []
  },
  {
    "$id": "37",
    "FileName": "CheckListStatusSectionFacts.cs",
    "Description": "CheckListStatusSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_checklist_status_header_correctly",
      "should_get_work_record_check_list_status_data_without_filter",
      "should_get_work_record_check_list_status_data_with_engagement_filter",
      "should_get_work_record_check_list_status_data_with_home_country_filter",
      "should_get_work_record_check_list_status_data_last_name_filter",
      "should_get_work_record_check_list_status_data_with_country_custom_field_country_filter",
      "should_not_get_work_record_check_list_status_data_apply_work_record_public_uac_when_staff_not_in_subscribed_offices",
      "should_get_work_record_check_list_status_data_apply_work_record_staff_in_subscribed_offices",
      "should_get_checklist_status_not_contains_status_is_cross_out",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_from_deleted_assignee_but_include_inactive_assignee"
    ],
    "Children": []
  },
  {
    "$id": "38",
    "FileName": "CurrentlyWithSectionFacts.cs",
    "Description": "CurrentlyWithSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_currently_with_header_when_practice_type_is_tax",
      "should_get_currently_with_data_given_when_practice_type_is_tax",
      "should_get_currently_with_data_given_when_work_record_type_is_briefing",
      "should_get_current_responsible_staff_when_no_responsibleid_in_task",
      "should_get_currently_status_task_when_practice_type_is_tax",
      "should_get_revisions_task_first_when_have_not_complete_revisions_task",
      "should_get_task_by_filter",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_currently_status_from_deleted_assignees_but_include_inactive_assignee"
    ],
    "Children": []
  },
  {
    "$id": "39",
    "FileName": "EfileConsentEmployerReturnSectionFacts.cs",
    "Description": "EfileConsentEmployerReturnSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_append_employer_return_related_headers_when_reporting_country_is_Singapore",
      "should_add_employer_return_values_when_work_record_has_employer_return_info",
      "should_return_employer_return_by_status_filter",
      "should_return_all_employer_return_status_if_no_employer_return_status_filter_provided"
    ],
    "Children": []
  },
  {
    "$id": "40",
    "FileName": "EfileReportSectionFacts.cs",
    "Description": "EfileReportSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_correct_header_name_when_export_efile_consent_report",
      "should_get_data_when_export_efile_consent_report",
      "should_not_get_data_when_tax_return_is_not_yet_delivered",
      "should_filter_data_by_tax_year",
      "should_filter_data_by_engagement",
      "should_filter_data_by_country",
      "should_not_filter_data_by_is_efile_consent_on",
      "should_filter_data_by_downloaded_status",
      "should_filter_data_by_consent_status",
      "should_get_multi_engagement_data",
      "should_not_get_data_when_staff_can_not_view_public_work_record",
      "should_get_data_when_staff_is_in_efile_group",
      "should_not_get_data_of_engaged_office_when_staff_in_efile_group",
      "should_return_false_when_current_user_is_global_admin_while_some_assignees_are_restricted",
      "should_return_false_when_current_user_is_on_acl_while_some_assignees_are_restricted",
      "should_return_false_when_current_user_is_not_on_contact_list_while_some_assignees_are_restricted",
      "should_return_false_when_all_assignees_are_normal",
      "should_return_false_when_current_user_in_efile_group_for_restricted_assigneed",
      "should_return_true_when_current_user_is_not_on_acl_or_contact_while_some_assignees_are_restricted",
      "should_not_get_data_when_assignee_is_restricted",
      "should_get_data_when_assignee_is_restricted_and_current_staff_on_acl",
      "should_get_data_when_assignee_is_restricted_and_current_staff_is_global_admin",
      "should_get_data_when_assignee_is_restricted_and_current_staff_on_contact",
      "should_get_data_when_export_efile_consent_assignee_is_restricted_and_current_staff_in_efile_group",
      "should_not_get_data_from_invalid_assignees"
    ],
    "Children": []
  },
  {
    "$id": "41",
    "FileName": "ExcelNameAndTabsFacts.cs",
    "Description": "ExcelNameAndTabsFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_corret_excel_name_and_tabs",
      "should_get_correct_excel_name_and_tabs_when_select_single_section"
    ],
    "Children": []
  },
  {
    "$id": "42",
    "FileName": "ImmigrationApplicationStandardReportSectionFact.cs",
    "Description": "ImmigrationApplicationStandardReportSectionFact",
    "WhenList": [],
    "ThenList": [
      "should_get_work_record_details_header_when_is_immigration_application",
      "should_get_valid_data_with_immigrartion_application_filter",
      "should_get_current_service_tasks_responsibilities_of_in_preparation_milestone_for_immigration_work_record_with_two_applications",
      "should_get_current_service_task_responsibilities_of_immigration_workrecord_with_two_applications_in_different_service_milestone",
      "should_get_current_service_task_responsibilities_of_immigration_workrecord_with_a_task_template",
      "should_get_work_milestone_current_task_responsibility_when_first_task_is_finished_and_second_task_is_crossed_out",
      "should_get_work_milestone_current_task_responsibilities_when_first_task_finished",
      "should_show_different_color_for_different_work_record_with_immigrartion_application_filter"
    ],
    "Children": []
  },
  {
    "$id": "43",
    "FileName": "MissingInformationSectionFacts.cs",
    "Description": "MissingInformationSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_missing_information_header_when_practice_type_is_tax",
      "should_get_missing_information_data_given_missing_items_from_Assignee_when_practice_type_is_tax",
      "should_get_missing_information_data_given_missing_items_from_PwC_when_practice_type_is_tax",
      "should_get_missing_information_data_given_missing_items_from_Client_when_practice_type_is_tax",
      "should_get_missing_information_data_given_missing_items_the_received_date_same_identified_date_when_practice_type_is_tax",
      "should_get_missing_information_data_with_filter_engagement_when_practice_type_is_tax",
      "should_get_missing_information_data_with_filter_home_country_when_practice_type_is_tax",
      "should_get_missing_information_data_with_filter_last_name_when_practice_type_is_tax",
      "should_get_missing_information_data_with_filter_work_record_country_when_practice_type_is_tax",
      "should_get_missing_information_data_with_filter_tax_year_when_practice_type_is_tax",
      "should_get_missing_information_data_with_filter_primary_service_when_practice_type_is_tax",
      "should_get_missing_information_data_with_filter_responsible_office_when_practice_type_is_tax",
      "should_not_get_missing_information_data_with_work_record_private_Uac_rules_when_staff_in_coordinating_office_but_not_self_nominate",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_missing_information_from_deleted_assignees_but_include_inactive_assignees"
    ],
    "Children": []
  },
  {
    "$id": "44",
    "FileName": "OutOfScopeWorkSectionFacts.cs",
    "Description": "OutOfScopeWorkSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_out_of_scope_work_section_header",
      "should_get_out_of_scope_work_section_data",
      "should_not_get_data_from_deleted_but_include_inactive_assignee",
      "should_get_out_of_scope_work_section_with_filter"
    ],
    "Children": []
  },
  {
    "$id": "45",
    "FileName": "QuestionnaireDistributionReportSectionFact.cs",
    "Description": "QuestionnaireDistributionReportSectionFact",
    "WhenList": [],
    "ThenList": [
      "should_export_tax_questionnaire_distribution",
      "should_exclude_FBA_returns_and_Canadian_non_income_returns",
      "should_seperate_fiscal_year_and_calendar_year_in_report"
    ],
    "Children": []
  },
  {
    "$id": "46",
    "FileName": "QuestionnaireSectionFacts.cs",
    "Description": "QuestionnaireSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_questionnaire_header_when_practice_type_is_tax",
      "should_get_work_record_details_data_when_practice_type_is_tax",
      "should_get_work_record_details_data_when_practice_type_is_tax_and_has_team_name",
      "should_get_work_record_details_data_when_practice_type_is_tax_and_has_team_name_and_contact_is_null",
      "should_get_work_record_details_data_when_practice_type_is_immigration_and_has_team_name",
      "should_get_work_record_details_data_when_questionnaire_contact_office_not_in_the_same_country_with_the_primary_service",
      "should_get_questionnaire_header_when_practice_type_is_immigration",
      "should_get_work_record_details_data_when_practice_type_is_immigration",
      "should_get_questionnaire_header_when_practice_type_is_social_security",
      "should_not_get_work_record_questionnaire_data_when_practice_type_is_scoial_security",
      "should_get_work_record_details_data_with_questionnaire_status_filter",
      "should_get_work_record_details_data_with_work_record_country_filter",
      "should_get_work_record_details_data_with_team_filter",
      "should_get_work_record_details_data_with_work_record_year",
      "should_get_qestionnaire_set_name_tracking_when_questionnaire_id_is_default_value_practice_type_is_tax",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_work_record_details_data_from_deleted_assignees_but_include_inactive_assignees"
    ],
    "Children": []
  },
  {
    "$id": "47",
    "FileName": "QuestionnaireStandardReportSectionFact.cs",
    "Description": "QuestionnaireStandardReportSectionFact",
    "WhenList": [],
    "ThenList": [
      "should_get_questionnaire_header_when_practice_type_is_tax",
      "should_get_right_cell_value_with_filters",
      "should_get_valid_data_with_practice_filter",
      "should_get_valid_data_with_practice_filter_for_immigration",
      "should_get_valid_data_with_engagement_filter",
      "should_not_get_data_from_deleted_assignees_but_include_inactive_assignees"
    ],
    "Children": []
  },
  {
    "$id": "48",
    "FileName": "ServiceEvaluationSectionFacts.cs",
    "Description": "ServiceEvaluationSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_service_evaluation_header_when_practice_type_is_tax",
      "should_get_service_evaluation_data_when_practice_type_is_tax_and_complete",
      "should_get_service_evaluation_correct_data_with_home_country_filter_when_practice_type_is_tax",
      "should_get_service_evaluation_header_when_practice_type_is_socail_security",
      "should_get_service_evaluation_data_when_practice_type_is_social_security",
      "should_get_service_evaluation_header_when_practice_type_is_immigration",
      "should_get_service_evaluation_data_when_practice_type_is_immigration",
      "should_OFF_when_evaluation_not_exist",
      "should_not_send_when_evaluation_create_but_not_send",
      "should_OFF_when_evaluation_create_but_evaluation_is_turned_off_later_on_engagement",
      "should_not_influence_by_turnning_off_on_engagement_after_evaluation_sent",
      "should_OFF_when_evaluation_create_but_evaluation_is_turned_off_later_on_workrecord",
      "should_not_influence_by_turnning_off_on_workrecord_after_evaluation_sent",
      "should_send_when_evaluation_send_but_not_submit",
      "should_not_get_service_evaluation_data_from_deleted_assignees_but_include_inactive_assignees"
    ],
    "Children": []
  },
  {
    "$id": "49",
    "FileName": "TaskStatusSectionFacts.cs",
    "Description": "TaskStatusSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_task_status_header_correctly",
      "should_get_work_record_task_status_data_without_filter",
      "should_get_work_record_revision_task_status_data",
      "should_get_work_record_task_status_data_for_mutli_assignment",
      "should_get_milestone_name_of_by_practice_type_and_work_record_type",
      "should_get_online_briefing_work_record_milestone_notify_and_schedule_without_responsible_office_and_staff",
      "should_get_work_record_task_status_data_with_engagement_filter",
      "should_not_get_work_record_task_status_data_apply_work_record_public_uac_when_staff_not_in_subscribed_office",
      "should_get_work_record_task_status_data_apply_work_record_public_uac_when_staff_in_work_office",
      "should_get_task_status_not_contain_status_is_cross_out",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_task_status_from_deleted_assignees_but_inactive_assignees"
    ],
    "Children": []
  },
  {
    "$id": "50",
    "FileName": "TaxEqualizationSectionFacts.cs",
    "Description": "TaxEqualizationSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_tax_equalization_header_when_practice_type_is_tax",
      "should_get_tax_equalization_data_when_practice_type_is_tax",
      "should_get_tax_equalization_data_with_filter_engagement_when_practice_type_is_tax",
      "should_get_tax_equalization_data_with_filter_home_country_when_practice_type_is_tax",
      "should_get_tax_equalization_with_filter_last_name_when_practice_type_is_tax",
      "should_tax_equalizaiton_data_with_filter_work_record_country_when_practice_type_is_tax",
      "should_get_tax_equalization_data_with_filter_tax_year_when_practice_type_is_tax",
      "should_get_tax_equalization_data_with_filter_primary_service_when_practice_type_is_tax",
      "should_get_tax_equalization_data_with_filter_responsible_office_when_practice_type_is_tax",
      "should_not_get_tax_equalization_data_with_work_record_private_Uac_rules_when_staff_in_coordinating_office_but_not_self_nominate",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_tax_equalization_data_from_deleted_assignees_but_inactive_assignees"
    ],
    "Children": []
  },
  {
    "$id": "51",
    "FileName": "TaxReturnReportSectionFact.cs",
    "Description": "TaxReturnReportSectionFact",
    "WhenList": [],
    "ThenList": [
      "should_get_tax_return_headers",
      "should_get_tax_return_body",
      "should_have_non_downloaded_prefix_filename_when_exporting_tax_returns_that_have_not_been_downloaded",
      "should_have_no_prefix_in_filename_when_exporting_tax_returns_that_have_been_downloaded",
      "should_have_no_prefix_in_filename_when_exporting_all_tax_returns"
    ],
    "Children": []
  },
  {
    "$id": "52",
    "FileName": "WorkRecordDetailsSectionFacts.cs",
    "Description": "WorkRecordDetailsSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_work_record_details_header_when_practice_type_is_tax_not_included_briefing",
      "should_get_work_record_details_data_when_practice_type_is_tax",
      "should_get_work_record_details_data_with_questioniar_when_practice_type_is_tax",
      "should_get_work_record_details_data_without_questioniar_when_practice_type_is_tax",
      "should_get_work_record_details_data_and_contact_office_country_abbr_is_office_country_when_office_country_diff_work_record_country",
      "should_get_imm_work_record_details_data_and_contact_office_country_abbr_is_office_country_when_office_country_diff_work_record_country",
      "should_get_ss_work_record_details_data_and_contact_office_country_abbr_is_office_country_when_office_country_diff_work_record_country",
      "should_task_templete_empty_when_use_default_task_templete",
      "should_not_get_work_record_details_data_when_practice_type_is_tax_and_current_user_not_in_subscribed_office_the_work_record_relate",
      "should_get_work_record_details_data_when_current_user_not_in_subscribed_office_the_work_record_relate_but_in_work_record_team",
      "should_not_get_work_record_details_data_when_current_user_in_related_engagement_team_but_not_the_sepcific_wr",
      "should_get_work_record_details_correct_data_with_engagement_filter_when_practice_type_is_tax",
      "should_get_work_record_details_correct_data_with_home_country_filter_when_practice_type_is_tax",
      "should_get_work_record_details_correct_data_with_last_name_filter_when_practice_type_is_tax",
      "should_get_work_record_details_correct_data_with_filter_country_custom_field_country_when_practice_type_is_tax",
      "should_get_work_record_details_correct_data_with_work_record_country_filter_when_practice_type_is_tax",
      "should_get_work_record_details_correct_data_with_tax_year_filter_when_practice_type_is_tax",
      "should_get_work_record_details_correct_data_with_work_record_type_filter_when_practice_type_is_tax",
      "should_get_work_record_details_correct_data_with_work_record_type_filter_when_practice_type_is_ss",
      "should_get_work_record_details_correct_data_with_primary_service_filter_when_practice_type_is_tax",
      "should_get_work_record_details_correct_data_with_responsible_office_filter",
      "should_get_work_record_details_correct_data_with_team_filter",
      "should_get_work_record_details_header_when_work_record_type_is_social_security_coc",
      "should_get_work_record_details_header_when_work_record_type_is_social_security_other_compliance",
      "should_get_work_record_details_data_when_work_record_type_is_social_security_coc",
      "should_get_work_record_details_data_when_work_record_type_is_social_security_other_compliance",
      "should_get_work_record_details_header_when_practice_type_is_immigration_not_included_briefing",
      "should_get_work_record_details_data_when_practice_type_is_immigration",
      "should_get_work_record_details_data_when_practice_type_is_tax_and_tax_year_is_null",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_get_london_work_records_when_engagement_subscribes_offices_london_and_shanghai_for_non_country_level_role_in_london",
      "should_get_shanghai_work_records_when_engagement_subscribes_offices_london_and_shanghai_for_non_country_level_role_in_london",
      "should_not_get_manchester_work_records_when_engagement_subscribes_offices_manchester_and_shanghai_for_non_country_level_role_in_london",
      "should_not_get_shanghai_work_records_when_engagement_subscribes_offices_manchester_and_shanghai_for_non_country_level_role_in_london",
      "should_get_london_work_records_when_engagement_subscribes_offices_london_and_shanghai_for_country_level_role_in_london",
      "should_get_shanghai_work_records_when_engagement_subscribes_offices_london_and_shanghai_for_country_level_role_in_london",
      "should_get_manchester_work_records_when_engagement_subscribes_offices_manchester_and_shanghai_for_country_level_role_in_london",
      "should_get_shanghai_work_records_when_engagement_subscribes_offices_manchester_and_shanghai_for_country_level_role_in_london"
    ],
    "Children": [
      {
        "$id": "53",
        "FileName": "WorkRecordDetailsSectionFacts.cs",
        "Description": "should_not_export_from_invalid_assignee",
        "WhenList": [],
        "ThenList": [
          "when_practice_type_is_tax",
          "when_practice_type_is_social_security",
          "when_practice_type_is_immigration"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "54",
    "FileName": "WorkRecordDetailsSectionForBriefingFacts.cs",
    "Description": "WorkRecordDetailsSectionForBriefingFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_work_record_details_header_when_work_record_type_is_briefing",
      "should_get_work_record_details_data_when_work_record_is_tax_briefing",
      "should_get_work_record_details_data_when_work_record_is_social_security_briefing",
      "should_get_empty_briefing_method_when_online_briefing_work_record_not_completed_yet"
    ],
    "Children": []
  },
  {
    "$id": "55",
    "FileName": "WorkRecordNoteSectionFacts.cs",
    "Description": "WorkRecordNoteSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_work_record_notes_header_when_practice_type_is_tax",
      "should_get_work_record_note_data_when_practice_type_is_tax",
      "should_get_work_record_note_data_when_practice_type_is_tax_and_author_is_null",
      "should_not_get_work_record_note_data_when_current_user_not_in_restricted_engagement_acl",
      "should_not_get_workrecord_note_when_staff_is_not_on_restricted_assignee_acl_list",
      "should_get_work_record_note_when_practice_type_is_immigration"
    ],
    "Children": [
      {
        "$id": "56",
        "FileName": "WorkRecordNoteSectionFacts.cs",
        "Description": "should_not_get_work_record_note_from_invalid_assignee",
        "WhenList": [],
        "ThenList": [
          "when_practice_type_is_tax",
          "when_practice_type_is_social_security",
          "when_practice_type_is_immigration"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "57",
    "FileName": "WorkRecordStandardCountryLevelReportSectionCustomFieldFact.cs",
    "Description": "WorkRecordStandardCountryLevelReportSectionCustomFieldFact",
    "WhenList": [],
    "ThenList": [
      "should_get_custom_field_name_with_multiple_custom_fields",
      "should_get_custom_field_name_with_different_practice_type",
      "should_get_custom_field_name_when_custom_field_has_multiple_practice_types",
      "should_not_load_custom_field_when_not_specified_country_in_search_request",
      "should_put_custom_field_column_after_emplyer_return_info_in_report_header",
      "should_not_load_custom_field_when_current_user_is_in_office_which_not_subscribed_engagement",
      "should_load_custom_field_when_specified_engagement_and_current_user_is_in_coordinating_office",
      "should_load_custom_field_when_specified_engagement_and_current_user_is_in_work_office",
      "should_load_custom_field_when_specified_engagement_and_current_user_is_in_delegated_coordinating_office",
      "should_load_custom_field_when_specified_engagement_and_current_user_is_country_level_role",
      "should_load_custom_field_value",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_self_nominated_and_in_coordinating_office",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_self_nominated_and_in_delegated_coordinating_office",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_in_responsible_office",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_assigned_to_a_task",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_PwC_contact",
      "should_mask_restricted_custom_field_value_with_asterisks_when_specified_engagement_and_current_user_only_in_subscribed_office"
    ],
    "Children": []
  },
  {
    "$id": "58",
    "FileName": "WorkRecordStandardCountryLevelReportSectionFact.cs",
    "Description": "WorkRecordStandardCountryLevelReportSectionFact",
    "WhenList": [],
    "ThenList": [
      "should_get_work_record_details_header_when_work_record_type_is_tax_return",
      "should_get_work_record_details_header_when_work_record_type_is_immigration_general",
      "should_get_work_record_details_header_when_work_record_type_is_immigration_application",
      "should_get_work_record_details_header_when_work_record_type_is_social_security_coc",
      "should_get_work_record_details_header_when_work_record_type_is_social_security_other_compliance",
      "should_not_get_work_record_details_when_practice_type_is_tax_and_current_user_not_country_level",
      "should_get_right_header_value_with_filters",
      "should_get_beijing_workrecord_when_current_user_in_shanghai_office",
      "should_get_beijing_workrecord_when_current_user_in_shanghai_office_for_immi_workrecord",
      "should_get_valid_data_with_practice_filter_for_immi_workrecord_and_current_user_is_country_level",
      "should_not_get_subscribe_workrecord_when_responsible_office_not_in_country",
      "should_filter_by_workrecord_country",
      "should_filter_by_tax_year",
      "should_filter_immigration_work_record_by_year",
      "should_get_team_name_as_questionnaire_contact",
      "should_filter_by_practice_type",
      "should_filter_by_workrecord_type",
      "should_filter_all_tax_return_and_other_compliance_when_workrecord_type_is_tax_return_and_otherCompliance",
      "should_not_export_from_deleted_assignee_but_include_inactive_assignee",
      "should_get_data_when_current_milestone_is_created",
      "should_get_valid_data_when_current_user_not_in_restricted_engagement_acl_but_is_country_level",
      "should_get_valid_data_when_current_user_not_in_restricted_engagement_acl_but_is_global_admin",
      "should_get_valid_data_when_current_user_not_in_restricted_assignee_acl_but_is_country_level",
      "should_return_forbidden_when_current_user_is_not_country_level",
      "should_get_right_expiry_Date_when_prictace_type_is_social_security",
      "should_get_right_Certificate_Start_Date_when_prictace_type_is_social_security",
      "should_not_include_certificate_start_date_when_work_record_type_is_social_security_other_compliance",
      "should_show_billing_status_as_billed_or_not_billed",
      "should_export_out_of_scope_work_count",
      "should_leave_out_of_scope_work_count_blank_if_there_is_no_out_of_scope",
      "should_get_employer_return_info_header_when_work_record_type_is_singapore_tax_return",
      "should_export_employer_return_file_content_for_tax_return_work_record_in_singapore",
      "should_not_export_employer_return_info_if_employer_return_toggle_is_off",
      "should_export_team_for_work_record_report",
      "should_export_primary_service_for_work_record_report",
      "should_get_questionnaire_status_for_immi_workrecord"
    ],
    "Children": []
  },
  {
    "$id": "59",
    "FileName": "WorkRecordStandardCountryLevelReportSectionFactForBriefing.cs",
    "Description": "WorkRecordStandardCountryLevelReportSectionFactForBriefing",
    "WhenList": [],
    "ThenList": [
      "should_get_work_record_details_header_when_work_record_type_is_tax_briefing",
      "should_get_work_record_details_header_when_work_record_type_is_immigration_briefing",
      "should_get_work_record_details_header_when_work_record_type_is_social_security_briefing",
      "should_get_correct_value_when_work_record_type_is_tax_briefing",
      "should_get_correct_value_when_work_record_type_is_immigration_briefing",
      "should_get_work_record_details_header_when_is_immigration_briefing",
      "should_get_correct_value_when_work_record_type_is_social_security_briefing",
      "should_get_empty_briefing_method_when_online_briefing_work_record_not_completed_yet"
    ],
    "Children": []
  },
  {
    "$id": "60",
    "FileName": "WorkRecordStandardCountryLevelReportSectionForCurrentlyWithFact.cs",
    "Description": "WorkRecordStandardCountryLevelReportSectionForCurrentlyWithFact",
    "WhenList": [],
    "ThenList": [
      "should_get_current_task_responsibility_when_get_country_level_work_record_report",
      "should_get_empty_when_normal_task_has_responsibility_but_revision_task_does_not_have_responsibility",
      "should_get_distinct_created_and_started_task_responsibilities_on_current_milestone_for_immigration_practice_type"
    ],
    "Children": []
  },
  {
    "$id": "61",
    "FileName": "WorkRecordStandardCountryLevelReportSectionForCurrentTaskOfficeFact.cs",
    "Description": "WorkRecordStandardCountryLevelReportSectionForCurrentTaskOfficeFact",
    "WhenList": [],
    "ThenList": [
      "should_get_empty_current_task_office_when_no_task_is_start",
      "should_get_current_task_office_when_normal_task_started",
      "should_get_current_created_revision_task_office_when_normal_task_started",
      "should_get_current_normal_task_office_when_normal_task_started_and_revision_task_is_done_or_crossedOut",
      "should_get_distinct_current_task_office_when_more_than_one_revision_tasks_are_started_in_same_office",
      "should_get_multi_current_revision_task_office_when_revision_task_is_created_or_started"
    ],
    "Children": []
  },
  {
    "$id": "62",
    "FileName": "WorkRecordStandardCountryLevelReportSectionForCurrentTaskStartedDateFact.cs",
    "Description": "WorkRecordStandardCountryLevelReportSectionForCurrentTaskStartedDateFact",
    "WhenList": [],
    "ThenList": [
      "should_get_empty_current_task_started_date_when_no_task_is_start",
      "should_get_empty_current_task_started_date_when_normal_task_is_started_but_revision_task_is_created",
      "should_get_current_task_started_date_when_normal_task_started",
      "should_get_current_task_started_date_when_revision_task_started",
      "should_get_two_current_task_started_date_when_two_revision_task_started_on_different_date",
      "should_get_one_current_task_started_date_when_two_revision_task_started_on_same_date",
      "should_not_get_current_task_started_date_for_immigration_work_record",
      "should_not_get_current_task_started_date_for_briefing_work_record"
    ],
    "Children": []
  },
  {
    "$id": "63",
    "FileName": "WorkRecordStandardReportSectionCustomFieldFact.cs",
    "Description": "WorkRecordStandardReportSectionCustomFieldFact",
    "WhenList": [],
    "ThenList": [
      "should_get_custom_field_name_with_multiple_custom_fields",
      "should_get_custom_field_name_with_different_practice_type",
      "should_get_custom_field_name_when_custom_field_has_multiple_practice_types",
      "should_not_load_custom_field_when_not_specified_country_in_search_request",
      "should_put_custom_field_column_after_emplyer_return_info_in_report_header",
      "should_not_load_custom_field_when_current_user_is_in_office_which_not_subscribed_engagement",
      "should_load_custom_field_when_specified_engagement_and_current_user_is_in_coordinating_office",
      "should_load_custom_field_when_specified_engagement_and_current_user_is_in_work_office",
      "should_load_custom_field_when_specified_engagement_and_current_user_is_in_delegated_coordinating_office",
      "should_load_custom_field_when_specified_engagement_and_current_user_is_country_level_role",
      "should_load_custom_field_value",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_self_nominated_and_in_coordinating_office",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_self_nominated_and_in_delegated_coordinating_office",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_in_responsible_office",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_assigned_to_a_task",
      "should_load_restricted_custom_field_value_when_specified_engagement_and_current_user_is_PwC_contact",
      "should_mask_restricted_custom_field_value_with_asterisks_when_specified_engagement_and_current_user_only_in_subscribed_office"
    ],
    "Children": []
  },
  {
    "$id": "64",
    "FileName": "WorkRecordStandardReportSectionFact.cs",
    "Description": "WorkRecordStandardReportSectionFact",
    "WhenList": [],
    "ThenList": [
      "should_get_work_record_details_header_when_is_tax_return",
      "should_show_frontload_column_when_generate_report_for_tax_return_report_after_2015",
      "should_not_show_frontload_column_in_report_header",
      "should_get_work_record_details_header_when_is_tax_other",
      "should_get_work_record_details_header_when_is_immigration_general",
      "should_get_work_record_details_header_when_is_social_security_coc",
      "should_get_work_record_details_header_when_is_social_security_other_compliance",
      "should_get_right_cell_value_with_filters",
      "should_get_valid_data_with_practice_filter",
      "should_get_valid_data_without_frontload_and_cycle_time_kpi_for_tax_return_work_record_before_2015",
      "should_not_show_front_load_kpi_column_header_after_days_in_house_column_when_work_record_report_filter_is_before_2015",
      "should_get_valid_data_with_practice_filter_is_tax_other",
      "should_get_valid_data_with_practice_filter_for_immi_workrecord",
      "should_not_show_different_color_for_different_work_record_with_not_immigrartion_application_filter",
      "should_not_get_valid_data_when_current_user_not_subscribed_the_work_record_engagement",
      "should_not_get_valid_data_when_current_user_not_in_restricted_engagement_acl",
      "should_get_valid_data_when_current_user_not_in_restricted_engagement_acl_but_is_globalAdmin",
      "should_not_get_valid_data_when_current_user_not_in_restricted_assignee_acl",
      "should_get_valid_data_when_current_user_not_in_restricted_assignee_acl_but_is_global_admin",
      "should_get_valid_data_with_work_record_type_filter",
      "should_get_valid_data_with_work_record_type_filter_as_tax_return_and_other_compliance",
      "should_get_valid_data_and_questionnaire_contact_is_team_name",
      "should_get_valid_data_with_responsible_office_filter",
      "should_get_valid_data_with_team_filter",
      "should_get_valid_data_with_work_record_country_filter",
      "should_get_valid_data_with_work_record_year_filter_and_practicetype_is_tax",
      "should_get_valid_data_with_work_record_year_filter_and_practicetype_is_immigration",
      "should_get_valid_data_with_engagement_filter",
      "should_get_data_when_current_milestone_is_created_and_current_resposibility_is_null",
      "should_get_right_expiry_Date_when_prictace_type_is_social_security",
      "should_get_right_Certificate_Start_Date_when_prictace_type_is_social_security",
      "should_not_include_certificate_start_date_when_work_record_type_is_social_security_other_compliance",
      "should_filter_out_work_record_of_deleted_assignee_but_inactive_assignee",
      "should_show_billing_status_as_billed_or_not_billed_for_non_tax_work_record",
      "should_show_billing_status_as_billed_or_not_billed",
      "should_export_out_of_scope_work_count",
      "should_leave_out_of_scope_work_count_blank_if_there_is_no_out_of_scope",
      "should_have_employer_return_file_header_for_not_briefing_work_record_with_tax_practice_type_in_singapore_country",
      "should_export_employer_return_file_content_for_tax_return_work_record_in_singapore",
      "should_export_employer_return_file_header_for_tax_return_work_record_without_employer_return_file_in_singapore",
      "should_export_team_for_work_record_report_for_immigration_briefing_and_social_security",
      "should_export_team_for_work_record_report_for_tax_return_and_other_compliance",
      "should_export_primary_service_for_work_record_report",
      "should_get_questionnaire_status_for_immi_workrecord",
      "should_set_employer_return_info_header_style_correctly",
      "should_not_export_employer_return_info_if_emloyer_return_toggle_is_off"
    ],
    "Children": []
  },
  {
    "$id": "65",
    "FileName": "WorkRecordStandardReportSectionForBriefingFact.cs",
    "Description": "WorkRecordStandardReportSectionForBriefingFact",
    "WhenList": [],
    "ThenList": [
      "should_get_correct_column_header_for_tax_briefing_work_record",
      "should_get_correct_header_for_immigration_and_social_security_briefing_work_record",
      "should_get_valid_data_for_tax_briefing_work_record",
      "should_get_valid_data_for_immigration_briefing_work_record",
      "should_get_valid_data_for_social_security_briefing_work_record",
      "should_get_empty_briefing_kpi_when_briefing_work_record_has_no_kpi_data",
      "should_get_empty_briefing_method_when_online_briefing_work_record_not_completed_yet"
    ],
    "Children": []
  },
  {
    "$id": "66",
    "FileName": "WorkRecordStandardReportSectionForCurrentlyWithFact.cs",
    "Description": "WorkRecordStandardReportSectionForCurrentlyWithFact",
    "WhenList": [],
    "ThenList": [
      "should_get_current_task_responsibility_when_current_milestone_has_multiple_normal_tasks",
      "should_get_empty_when_normal_task_with_responsibility_has_started_but_revision_task_without_responsibility_is_created",
      "should_get_created_and_started_task_responsibilities_of_current_milestone_for_immigration_practice_type"
    ],
    "Children": []
  },
  {
    "$id": "67",
    "FileName": "WorkRecordStandardReportSectionForCurrentTaskOfficeFact.cs",
    "Description": "WorkRecordStandardReportSectionForCurrentTaskOfficeFact",
    "WhenList": [],
    "ThenList": [
      "should_get_empty_current_task_office_when_no_task_is_start",
      "should_get_current_task_office_when_normal_task_started",
      "should_get_current_created_revision_task_office_when_normal_task_started",
      "should_get_current_normal_task_office_when_normal_task_started_and_revision_task_is_done_or_crossedOut",
      "should_get_multi_current_revision_task_office_when_revision_task_status_is_created_or_started",
      "should_get_distinct_current_task_office_when_more_than_one_revision_tasks_are_started_in_same_office"
    ],
    "Children": []
  },
  {
    "$id": "68",
    "FileName": "WorkRecordStandardReportSectionForCurrentTaskStartedDateFact.cs",
    "Description": "WorkRecordStandardReportSectionForCurrentTaskStartedDateFact",
    "WhenList": [],
    "ThenList": [
      "should_get_empty_current_task_started_date_no_task_is_started",
      "should_get_empty_current_task_started_date_when_normal_task_is_started_but_revision_task_is_created",
      "should_get_current_task_started_date_when_normal_task_started",
      "should_get_current_task_started_date_when_revision_task_started",
      "should_get_two_current_task_started_date_when_two_revision_task_started_on_different_date",
      "should_get_one_current_task_started_date_when_two_revision_task_started_on_same_date",
      "should_not_get_current_task_started_date_for_immigration_work_record",
      "should_not_get_current_task_started_date_for_briefing_work_record"
    ],
    "Children": []
  },
  {
    "$id": "69",
    "FileName": "WRCountryCustomFieldSectionFacts.cs",
    "Description": "WRCountryCustomFieldSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_wr_country_custom_field_section_header",
      "should_get_wr_country_custom_field_section_data",
      "should_get_wr_country_custom_field_section_data_with_work_record_country_filter",
      "should_get_open_wr_country_custom_field_section_data_with_private_uac_when_staff_only_in_work_office",
      "should_not_get_restricted_wr_country_custom_field_section_data_with_private_uac_when_staff_only_in_work_office",
      "should_get_restricted_wr_country_custom_field_section_data_with_private_uac_when_staff_only_in_coordinating_office_and_self_nominate",
      "should_get_work_record_custom_fields_different_type",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_data_from_deleted_assignee_but_include_inactive_assignee"
    ],
    "Children": []
  },
  {
    "$id": "70",
    "FileName": "WREngagementCustomFieldSectionFacts.cs",
    "Description": "WREngagementCustomFieldSectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_wr_engagement_custom_field_section_header",
      "should_get_wr_engagement_custom_field_section_data",
      "should_get_wr_engagement_custom_field_section_data_with_engagement_filter",
      "should_get_open_wr_engagement_custom_field_section_data_with_private_uac_when_staff_only_in_coordinating_office",
      "should_not_get_restricted_wr_engagement_custom_field_section_data_with_private_uac_when_staff_only_in_coordinating_office",
      "should_get_restricted_wr_engagement_custom_field_section_data_with_private_uac_when_staff_in_coordinating_office_and_self_nominate",
      "should_get_assignee_custom_fields_different_type",
      "should_get_restricted_assignee_when_current_user_in_acl",
      "should_get_restricted_assignee_when_current_user_is_global_admin",
      "should_get_restricted_assignee_when_current_user_is_primary_contact",
      "should_not_get_restricted_assignee_when_current_user_is_not_contact_and_not_in_acl",
      "should_not_get_data_from_deleted_but_include_inactive_assignee"
    ],
    "Children": []
  },
  {
    "$id": "71",
    "FileName": "when_get_billing_overview.cs",
    "Description": "when_get_billing_overview",
    "WhenList": [],
    "ThenList": [
      "should_get_billing_overview_of_an_engagement",
      "should_get_office_billing_overview_even_if_it_has_no_ready_work_record"
    ],
    "Children": []
  },
  {
    "$id": "72",
    "FileName": "when_get_billing_feature.cs",
    "Description": "when_get_billing_feature",
    "WhenList": [],
    "ThenList": [
      "should_get_billing_feature"
    ],
    "Children": []
  },
  {
    "$id": "73",
    "FileName": "when_get_engagement_billing_model.cs",
    "Description": "when_get_engagement_billing_model",
    "WhenList": [],
    "ThenList": [
      "should_get_engagement_billing_model"
    ],
    "Children": []
  },
  {
    "$id": "74",
    "FileName": "when_update_engagement_billing_model.cs",
    "Description": "when_update_engagement_billing_model",
    "WhenList": [],
    "ThenList": [
      "should_fail_if_engagement_fee_does_not_exist_when_update",
      "should_return_error_if_current_billing_model_has_been_set",
      "should_return_error_if_invalid_billing_model_is_specified",
      "should_not_set_billing_model_as_not_set"
    ],
    "Children": []
  },
  {
    "$id": "75",
    "FileName": "when_update_engagement_billing_model_to_centralized.cs",
    "Description": "when_update_engagement_billing_model_to_centralized",
    "WhenList": [],
    "ThenList": [
      "should_update_to_centralized_billing_model"
    ],
    "Children": []
  },
  {
    "$id": "76",
    "FileName": "when_update_engagement_billing_model_to_decentralized.cs",
    "Description": "when_update_engagement_billing_model_to_decentralized",
    "WhenList": [],
    "ThenList": [
      "should_update_to_decentralized_billing_model"
    ],
    "Children": []
  },
  {
    "$id": "77",
    "FileName": "when_batch_update_billing_country_fees.cs",
    "Description": "when_batch_update_billing_country_fees",
    "WhenList": [],
    "ThenList": [
      "when_update_a_billing_country_fee"
    ],
    "Children": []
  },
  {
    "$id": "78",
    "FileName": "when_create_centralized_engagement_fee_setting.cs",
    "Description": "when_create_centralized_engagement_fee_setting",
    "WhenList": [],
    "ThenList": [
      "should_return_error_when_billing_model_is_not_match",
      "should_create_engagement_fee_setting_and_billing_model"
    ],
    "Children": []
  },
  {
    "$id": "79",
    "FileName": "when_create_delete_or_update_centralized_engagement_type_of_service_fee.cs",
    "Description": "when_create_delete_or_update_centralized_engagement_type_of_service_fee",
    "WhenList": [],
    "ThenList": [
      "should_update_engagement_type_of_service_fee",
      "should_not_update_engagement_type_of_service_fee_if_it_does_not_belong_to_the_engagement_fee_setting",
      "should_return_error_when_update_engagement_type_of_service_fee_if_billing_model_is_not_set",
      "should_create_engagement_type_of_service_fee",
      "should_create_engagement_type_of_service_fees_for_same_type_of_service_but_different_engagements",
      "should_create_engagement_type_of_service_fees_for_same_engagement_but_different_type_of_services",
      "should_not_create_engagement_type_of_service_fees_for_same_engagement_and_same_type_of_services",
      "should_create_engagement_type_of_service_fee_with_country",
      "should_create_engagement_type_of_service_fee_with_currency_according_to_default_external_currency",
      "should_return_error_when_create_engagement_type_of_service_fee_if_billing_model_is_not_centralized",
      "should_return_error_when_create_engagement_type_of_service_fee_but_currency_is_not_found_by_country",
      "should_delete_engagement_type_of_service_fee",
      "should_delete_billing_country_fees_when_delete_a_centralized_engagement_type_of_service_fee_which_service_country_is_US",
      "should_not_delete_engagement_type_of_service_fee_if_it_does_not_belong_to_engagement_fee_setting",
      "should_return_error_when_engagement_is_not_found_in_billing_service_and_try_to_update_etos_fees",
      "should_return_error_when_engagement_is_not_found_in_billing_service_and_try_to_create_or_delete_etos_fees",
      "should_not_change_currency_when_update_internal_fee",
      "should_save_internal_fee_currency_according_to_internal_fee_currency_mode_when_create_new_engagement_type_of_service_fee"
    ],
    "Children": []
  },
  {
    "$id": "80",
    "FileName": "when_get_billing_country_fees.cs",
    "Description": "when_get_billing_country_fees",
    "WhenList": [],
    "ThenList": [
      "should_get_billing_country_fees_by_engagement_type_of_service_fee_id"
    ],
    "Children": []
  },
  {
    "$id": "81",
    "FileName": "when_get_centralized_engagement_fee_setting.cs",
    "Description": "when_get_centralized_engagement_fee_setting",
    "WhenList": [],
    "ThenList": [
      "should_get_null_if_engagement_fee_does_not_exist",
      "should_get_engagement_fee_setting"
    ],
    "Children": []
  },
  {
    "$id": "82",
    "FileName": "when_get_centralized_engagement_type_of_service_fee.cs",
    "Description": "when_get_centralized_engagement_type_of_service_fee",
    "WhenList": [],
    "ThenList": [
      "should_not_get_fee_if_billing_model_is_not_set",
      "should_get_fee_if_billing_model_is_centralized",
      "should_not_return_engagement_type_of_service_fee_if_it_does_not_belong_to_engagement_fee_setting"
    ],
    "Children": []
  },
  {
    "$id": "83",
    "FileName": "when_get_centralized_engagement_type_of_service_fee_with_billing_country_count.cs",
    "Description": "when_get_centralized_engagement_type_of_service_fee_with_billing_country_count",
    "WhenList": [],
    "ThenList": [
      "should_return_billing_country_count_for_us_service",
      "should_not_return_billing_country_count_for_service_not_us"
    ],
    "Children": []
  },
  {
    "$id": "84",
    "FileName": "when_update_centralized_engagement_fee_settings.cs",
    "Description": "when_update_centralized_engagement_fee_settings",
    "WhenList": [],
    "ThenList": [
      "should_update_all_engagement_services_currency_and_reset_amount_to_null_for_external_fee",
      "should_able_to_update_engagement_internal_fee_currency_mode",
      "should_reset_internal_fee_currency_when_update_engagement_internal_fee_currency_mode_from_AsExternal_to_Local",
      "should_reset_internal_fee_amount_when_update_engagement_internal_fee_currency_mode_from_AsExternal_to_Local",
      "should_reset_internal_fee_currency_when_update_engagement_internal_fee_currency_mode_from_Local_to_AsExternal",
      "should_reset_internal_fee_amount_when_update_engagement_internal_fee_currency_mode_from_Local_to_AsExternal",
      "should_not_reset_internal_fee_amount_in_local_mode_when_only_update_engagement_external_fee_currency",
      "should_not_reset_internal_fee_currency_in_local_mode_when_only_update_engagement_external_fee_currency",
      "should_reset_internal_fee_amount_in_as_external_mode_when_only_update_engagement_external_fee_currency",
      "should_reset_internal_fee_currency_in_as_external_mode_when_only_update_engagement_external_fee_currency",
      "should_not_reset_external_fee_amount_when_only_update_internal_fee_currency_mode",
      "should_not_reset_external_fee_currency_when_only_update_internal_fee_currency_mode",
      "should_clear_all_billing_country_fees_of_engagement_type_of_services_in_the_engagement_when_update_internal_fee_currency_mode_to_AsExternal_and_change_back"
    ],
    "Children": []
  },
  {
    "$id": "85",
    "FileName": "when_get_country_currencies.cs",
    "Description": "when_get_country_currencies",
    "WhenList": [],
    "ThenList": [
      "should_get_country_currencies"
    ],
    "Children": []
  },
  {
    "$id": "86",
    "FileName": "when_create_delete_and_update_country_type_of_service_fees.cs",
    "Description": "when_create_delete_and_update_country_type_of_service_fees",
    "WhenList": [],
    "ThenList": [
      "should_update_country_type_of_service_fee",
      "should_create_country_type_of_service_fee"
    ],
    "Children": []
  },
  {
    "$id": "87",
    "FileName": "when_get_country_type_of_service_fees.cs",
    "Description": "when_get_country_type_of_service_fees",
    "WhenList": [],
    "ThenList": [
      "should_get_country_type_of_service_fee_by_ids"
    ],
    "Children": []
  },
  {
    "$id": "88",
    "FileName": "when_create_delete_or_update_decentralized_engagement_type_of_service_fee.cs",
    "Description": "when_create_delete_or_update_decentralized_engagement_type_of_service_fee",
    "WhenList": [],
    "ThenList": [
      "should_update_engagement_type_of_service_fee",
      "should_not_update_engagement_type_of_service_fee_if_its_billing_model_is_not_found",
      "should_not_update_engagement_type_of_service_fee_if_its_billing_model_is_not_matched",
      "should_create_engagement_type_of_service_fee",
      "should_create_engagement_type_of_service_fees_for_same_type_of_service_but_different_engagements",
      "should_create_engagement_type_of_service_fees_for_same_engagement_but_different_type_of_services",
      "should_not_create_engagement_type_of_service_fees_for_same_engagements_and_same_type_of_services",
      "should_not_create_engagement_type_of_service_fee_if_billing_model_is_not_decentralized",
      "should_delete_engagement_type_of_service_fee"
    ],
    "Children": []
  },
  {
    "$id": "89",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee.cs",
    "Description": "when_get_decentralized_engagement_type_of_service_fee",
    "WhenList": [],
    "ThenList": [
      "should_not_get_fee_if_billing_model_is_not_match",
      "should_get_fee_if_billing_model_is_decentralized"
    ],
    "Children": []
  },
  {
    "$id": "90",
    "FileName": "when_engagement_created.cs",
    "Description": "when_engagement_created",
    "WhenList": [],
    "ThenList": [
      "should_create_billing_model",
      "should_create_billing_feature"
    ],
    "Children": []
  },
  {
    "$id": "91",
    "FileName": "CreateAccountFacts.cs",
    "Description": "CreateAccountFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_account",
      "should_return_null_when_create_failed"
    ],
    "Children": []
  },
  {
    "$id": "92",
    "FileName": "CreateSubscriptionFacts.cs",
    "Description": "CreateSubscriptionFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_subscription",
      "should_create_myTravel_subscription",
      "should_return_null_when_create_error"
    ],
    "Children": []
  },
  {
    "$id": "93",
    "FileName": "FeedFacts.cs",
    "Description": "FeedFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_feed_since_account_setting_changed"
    ],
    "Children": []
  },
  {
    "$id": "94",
    "FileName": "GetAccountFacts.cs",
    "Description": "GetAccountFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_account",
      "should_get_null_when_account_does_not_exist"
    ],
    "Children": []
  },
  {
    "$id": "95",
    "FileName": "GetSubscriptionFacts.cs",
    "Description": "GetSubscriptionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_assignee_with_subscriptions"
    ],
    "Children": []
  },
  {
    "$id": "96",
    "FileName": "ResetAccountFacts.cs",
    "Description": "ResetAccountFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_subscription"
    ],
    "Children": []
  },
  {
    "$id": "97",
    "FileName": "UpdateAccountFacts.cs",
    "Description": "UpdateAccountFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_updated_account_when_update_account_success",
      "should_return_null_when_update_failed"
    ],
    "Children": []
  },
  {
    "$id": "98",
    "FileName": "DeleteFacts.cs",
    "Description": "DeleteFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_able_to_delete_file"
    ],
    "Children": []
  },
  {
    "$id": "99",
    "FileName": "DownLoadFacts.cs",
    "Description": "DownLoadFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_able_to_upload_all_kinds_of_files_with_doctype",
      "should_be_able_to_download_multiple_files"
    ],
    "Children": []
  },
  {
    "$id": "100",
    "FileName": "GetFacts.cs",
    "Description": "GetFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_able_to_get_file_info",
      "should_not_be_able_to_get_file_info"
    ],
    "Children": []
  },
  {
    "$id": "101",
    "FileName": "UploadFacts.cs",
    "Description": "UploadFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_able_to_upload_one_file",
      "should_be_able_to_upload_multiple_files"
    ],
    "Children": []
  },
  {
    "$id": "102",
    "FileName": "FileSharingFacts.cs",
    "Description": "FileSharingFacts",
    "WhenList": [],
    "ThenList": [
      "should_list_box_engagement_folders",
      "should_list_folders_and_accesses",
      "should_create_new_collaborator_with_given_folder_access",
      "should_get_correct_new_client_file_sharing_toggle"
    ],
    "Children": []
  },
  {
    "$id": "103",
    "FileName": "MyMobilityAuthorizationListFacts.cs",
    "Description": "MyMobilityAuthorizationListFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_mymobility_user_access_by_authorization_id",
      "should_get_mymobility_user_access_by_email",
      "should_update_mymobility_user_access_by_authorization_id"
    ],
    "Children": []
  },
  {
    "$id": "104",
    "FileName": "MyMobilityServiceInitiationFacts.cs",
    "Description": "MyMobilityServiceInitiationFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_service_initiation_settings",
      "should_save_service_initiation_settings"
    ],
    "Children": []
  },
  {
    "$id": "105",
    "FileName": "MyMobilityUserFacts.cs",
    "Description": "MyMobilityUserFacts",
    "WhenList": [],
    "ThenList": [
      "should_validate_email_domain",
      "should_update_user_base_info",
      "should_update_user_subscriptions_tiles",
      "should_update_folder_access",
      "should_update_user_custom_field_filters"
    ],
    "Children": []
  },
  {
    "$id": "106",
    "FileName": "NotificationServiceFacts.cs",
    "Description": "NotificationServiceFacts",
    "WhenList": [],
    "ThenList": [
      "should_send_email_through_old_api",
      "should_send_email_through_new_api"
    ],
    "Children": []
  },
  {
    "$id": "107",
    "FileName": "SendFacts.cs",
    "Description": "SendFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_throw_exception_when_sending_correct_request_to_notification_service"
    ],
    "Children": []
  },
  {
    "$id": "108",
    "FileName": "GetAssigneeApiFacts.cs",
    "Description": "GetAssigneeApiFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_assignee_by_go_id",
      "should_get_assignee_by_tiger_id",
      "should_get_assignees_events"
    ],
    "Children": []
  },
  {
    "$id": "109",
    "FileName": "WorkRecordApiFacts.cs",
    "Description": "WorkRecordApiFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_tax_work_record",
      "should_get_immigration_work_record",
      "should_get_social_security_work_record",
      "should_get_assignees_work_records",
      "should_get_workrecords_events",
      "should_update_tax_work_record_milestone_when_moving_forward",
      "should_update_immigration_work_record_milestone_when_moving_forward",
      "should_update_social_work_record_milestone_when_moving_forward",
      "should_update_tax_work_record_milestone_when_moving_backward",
      "should_update_immigration_work_record_milestone_when_moving_backward",
      "should_update_social_work_record_milestone_when_moving_backward",
      "should_update_manually_briefing_work_record_milestone_when_moving_backward",
      "should_return_forbidden_when_moving_online_briefing_work_record_forward_if_current_mile_stone_is_notify",
      "should_return_forbidden_when_moving_milestone_backward_and_current_milestone_is_completed",
      "should_update_tax_work_record_milestone_when_moving_multiple_milestones_backward",
      "should_return_forbidden_when_milestone_is_standing_still",
      "should_return_not_found_when_work_record_does_not_exist",
      "should_return_forbidden_when_country_not_match_work_record",
      "should_return_forbidden_when_questionnaire_is_not_submitted"
    ],
    "Children": []
  },
  {
    "$id": "110",
    "FileName": "EmployeeRelatedApiFacts.cs",
    "Description": "EmployeeRelatedApiFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_count_by_assignee_ids",
      "should_get_employee_info_by_id"
    ],
    "Children": []
  },
  {
    "$id": "111",
    "FileName": "GetEmployeePopulationApiFacts.cs",
    "Description": "GetEmployeePopulationApiFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_employee_population"
    ],
    "Children": []
  },
  {
    "$id": "112",
    "FileName": "GetSocialSecurityStatusByEngagementsFact.cs",
    "Description": "GetSocialSecurityStatusByEngagementsFact",
    "WhenList": [],
    "ThenList": [
      "should_get_social_security_status_by_engagements"
    ],
    "Children": []
  },
  {
    "$id": "113",
    "FileName": "FileSharingFact.cs",
    "Description": "FileSharingFact",
    "WhenList": [],
    "ThenList": [
      "should_return_staff_by_pwc_guid",
      "should_return_engagement",
      "should_return_true_when_staff_access_engagement_shared_folder"
    ],
    "Children": []
  },
  {
    "$id": "114",
    "FileName": "GetPrimaryContactOfAssociatedEngagementsFacts.cs",
    "Description": "GetPrimaryContactOfAssociatedEngagementsFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_primary_contact_of_nancy_associated_engagements"
    ],
    "Children": []
  },
  {
    "$id": "115",
    "FileName": "GetStaffByEmployeeId.cs",
    "Description": "GetStaffByEmployeeId",
    "WhenList": [],
    "ThenList": [
      "should_get_staff_by_employeeId"
    ],
    "Children": []
  },
  {
    "$id": "116",
    "FileName": "AuthorizationListFacts.cs",
    "Description": "AuthorizationListFacts",
    "WhenList": [],
    "ThenList": [
      "should_verify_contract_with_authorization_list_tile"
    ],
    "Children": []
  },
  {
    "$id": "117",
    "FileName": "BriefingStatusFacts.cs",
    "Description": "BriefingStatusFacts",
    "WhenList": [],
    "ThenList": [
      "should_verify_contract_with_briefing_status_tile"
    ],
    "Children": []
  },
  {
    "$id": "118",
    "FileName": "CertificateOfCoverageFacts.cs",
    "Description": "CertificateOfCoverageFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_all_summaries"
    ],
    "Children": []
  },
  {
    "$id": "119",
    "FileName": "EmployeeListFacts.cs",
    "Description": "EmployeeListFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_employee_overviews"
    ],
    "Children": []
  },
  {
    "$id": "120",
    "FileName": "EmployerReturnFacts.cs",
    "Description": "EmployerReturnFacts",
    "WhenList": [],
    "ThenList": [
      "should_verify_employer_return_list_consumered_by_apps"
    ],
    "Children": []
  },
  {
    "$id": "121",
    "FileName": "ImmigrationServicesFacts.cs",
    "Description": "ImmigrationServicesFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_immigration_work_records"
    ],
    "Children": []
  },
  {
    "$id": "122",
    "FileName": "ImmigrationTrackingFacts.cs",
    "Description": "ImmigrationTrackingFacts",
    "WhenList": [],
    "ThenList": [
      "should_verify_contract_with_immigration_tracking_tile"
    ],
    "Children": []
  },
  {
    "$id": "123",
    "FileName": "MissingInfoFacts.cs",
    "Description": "MissingInfoFacts",
    "WhenList": [],
    "ThenList": [
      "should_verify_the_pact_with_myMobility_apps"
    ],
    "Children": []
  },
  {
    "$id": "124",
    "FileName": "MyPopulationFacts.cs",
    "Description": "MyPopulationFacts",
    "WhenList": [],
    "ThenList": [
      "should_verify_the_pact_with_myMobility_apps"
    ],
    "Children": []
  },
  {
    "$id": "125",
    "FileName": "QuestionnaireStatusFacts.cs",
    "Description": "QuestionnaireStatusFacts",
    "WhenList": [],
    "ThenList": [
      "should_verify_contract_with_questionnaire_status_tile"
    ],
    "Children": []
  },
  {
    "$id": "126",
    "FileName": "ServiceEvaluationFacts.cs",
    "Description": "ServiceEvaluationFacts",
    "WhenList": [],
    "ThenList": [
      "should_match_contract_with_service_evaluation_tile_in_mymobility"
    ],
    "Children": []
  },
  {
    "$id": "127",
    "FileName": "ServiceInitiationFacts.cs",
    "Description": "ServiceInitiationFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_engagement_name_by_custom_fields_id"
    ],
    "Children": []
  },
  {
    "$id": "128",
    "FileName": "TaxEqualizationFacts.cs",
    "Description": "TaxEqualizationFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_tax_equalizations"
    ],
    "Children": []
  },
  {
    "$id": "129",
    "FileName": "TaxReturnFacts.cs",
    "Description": "TaxReturnFacts",
    "WhenList": [],
    "ThenList": [
      "should_verify_contract_with_tax_return_tile"
    ],
    "Children": []
  },
  {
    "$id": "130",
    "FileName": "TeqSettlementFacts.cs",
    "Description": "TeqSettlementFacts",
    "WhenList": [],
    "ThenList": [
      "should_match_contract_with_teq_settlement_tile_in_mymobility",
      "should_match_contract_with_teq_settlement_tile_email_in_mymobility"
    ],
    "Children": []
  },
  {
    "$id": "131",
    "FileName": "GetEngagementUniqueNameFacts.cs",
    "Description": "GetEngagementUniqueNameFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_client_short_name_and_engagement_name_as_engagement_unique_name"
    ],
    "Children": []
  },
  {
    "$id": "132",
    "FileName": "TaxReturnWorkRecordFact.cs",
    "Description": "TaxReturnWorkRecordFact",
    "WhenList": [],
    "ThenList": [
      "should_have_empty_irmark_from_tax_return_work_record_when_no_irmark_is_signing",
      "should_have_irmark_from_tax_return_work_record_when_irmark_is_signing",
      "should_update_irmark_from_tax_return_work_record_when_irmark_is_changed",
      "should_claim_true_for_is_efiling_with_efile_group",
      "should_claim_false_for_is_efiling_without_efile_group",
      "should_claim_true_for_default_isEfileConsentOn",
      "should_claim_false_for_isEfileConsentOn"
    ],
    "Children": []
  },
  {
    "$id": "133",
    "FileName": "StaffHandoverRequestValidatorFacts.cs",
    "Description": "StaffHandoverRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_invalid_when_both_teamId_engagementId_are_zero",
      "should_return_invalid_when_both_teamId_engagementId_are_non_zero",
      "should_return_invalid_when_assign_to_is_zero",
      "should_return_valid_when_teamId_is_not_zero",
      "should_return_valid_when_engagementId_is_not_zero"
    ],
    "Children": []
  },
  {
    "$id": "134",
    "FileName": "DateJsonConverterFacts.cs",
    "Description": "DateJsonConverterFacts",
    "WhenList": [],
    "ThenList": [
      "should_convert_datetime_to_string",
      "should_convert_string_to_datetime",
      "should_convert_empty_string_to_null",
      "should_convert_empty_string_to_min_date"
    ],
    "Children": []
  },
  {
    "$id": "135",
    "FileName": "EnumerableExtensionFacts.cs",
    "Description": "EnumerableExtensionFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_empty_list_if_source_is_empty",
      "Split_should_keep_all_elements",
      "Split_the_count_of_last_collection_is_the_mod"
    ],
    "Children": []
  },
  {
    "$id": "136",
    "FileName": "OptionalFieldJsonConverterFacts.cs",
    "Description": "OptionalFieldJsonConverterFacts",
    "WhenList": [],
    "ThenList": [
      "should_convert_when_properties_in_json",
      "should_convert_and_hasvalue_is_false_when_properties_not_in_json",
      "should_serialize_as_original_value"
    ],
    "Children": [
      {
        "$id": "137",
        "FileName": "OptionalFieldJsonConverterFacts.cs",
        "Description": "Class1",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "138",
    "FileName": "QueryableExtensionsFacts.cs",
    "Description": "QueryableExtensionsFacts",
    "WhenList": [],
    "ThenList": [
      "should_throw_exception_when_properties_of_source_element_with_different_type",
      "should_self_union_in_memory"
    ],
    "Children": []
  },
  {
    "$id": "139",
    "FileName": "StatisticsUtilFacts.cs",
    "Description": "StatisticsUtilFacts",
    "WhenList": [],
    "ThenList": [
      "should_trucate_tail",
      "should_handle_zero_count"
    ],
    "Children": []
  },
  {
    "$id": "140",
    "FileName": "AssingeeInfoAccessManagerFacts.cs",
    "Description": "AssingeeInfoAccessManagerFacts",
    "WhenList": [],
    "ThenList": [
      "should_can_not_view_PII_if_staff_not_self_nominate",
      "should_can_view_PII_after_self_nomination"
    ],
    "Children": []
  },
  {
    "$id": "141",
    "FileName": "FileCabinetFacts.cs",
    "Description": "FileCabinetFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_assignee_PII_for_consent"
    ],
    "Children": []
  },
  {
    "$id": "142",
    "FileName": "AuthorizationListManageControlFacts.cs",
    "Description": "AuthorizationListManageControlFacts",
    "WhenList": [],
    "ThenList": [
      "should_can_manage_authorization_list_when_login_with_coordinating_primary_contact",
      "should_can_manage_authorization_list_when_login_with_coordinating_secondry_contact",
      "should_can_manage_authorization_list_when_login_with_delegated_primary_contact",
      "should_can_manage_authorization_list_when_login_with_delegated_secondary_contact",
      "should_can_not_manage_authorization_list_when_login_with_subscribe_office_contact"
    ],
    "Children": []
  },
  {
    "$id": "143",
    "FileName": "AuthorizationListUpdateControlFacts.cs",
    "Description": "AuthorizationListUpdateControlFacts",
    "WhenList": [],
    "ThenList": [
      "should_can_update_authorization_list_when_login_with_coordinating_primary_contact",
      "should_can_update_authorization_list_when_login_with_coordinating_secondry_contact",
      "should_can_update_authorization_list_when_login_with_delegated_primary_contact",
      "should_can_update_authorization_list_when_login_with_delegated_secondary_contact",
      "should_can_not_update_authorization_list_when_login_with_user_not_in_work_offices"
    ],
    "Children": []
  },
  {
    "$id": "144",
    "FileName": "AccountSynchronizerFacts.cs",
    "Description": "AccountSynchronizerFacts",
    "WhenList": [],
    "ThenList": [
      "should_sync_assignee_account_to_tiger",
      "should_sync_account_if_contact_is_not_belongs_subscribed_offices"
    ],
    "Children": []
  },
  {
    "$id": "145",
    "FileName": "AccountSyncProviderFacts.cs",
    "Description": "AccountSyncProviderFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_account_sync_when_status_is_false",
      "should_get_null_when_status_is_false_and_last_modified_at_less_than_interval",
      "should_get_null_when_status_is_true",
      "should_get_null_when_status_is_false_and_update_by_another_process",
      "should_get_account_sync_when_status_is_true_and_less_than_ten_times_interval"
    ],
    "Children": []
  },
  {
    "$id": "146",
    "FileName": "AssigneeUpdaterFacts.cs",
    "Description": "AssigneeUpdaterFacts",
    "WhenList": [],
    "ThenList": [
      "should_merge_account_info_to_assignee"
    ],
    "Children": []
  },
  {
    "$id": "147",
    "FileName": "EntityTimestampWatcherFacts.cs",
    "Description": "EntityTimestampWatcherFacts",
    "WhenList": [],
    "ThenList": [
      "should_invalidate_cache_when_updated"
    ],
    "Children": []
  },
  {
    "$id": "148",
    "FileName": "FeedLoaderFacts.cs",
    "Description": "FeedLoaderFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_modified_user_ids"
    ],
    "Children": []
  },
  {
    "$id": "149",
    "FileName": "AppointmentAttachmentFacts.cs",
    "Description": "AppointmentAttachmentFacts",
    "WhenList": [],
    "ThenList": [
      "Should_upload_iCalendar_attachment_to_notification_send_to_assignee",
      "Should_upload_iCalendar_attachment_with_correct_scheduled_date_period",
      "Should_upload_iCalendar_attachment_with_correct_description",
      "should_generate_icalendar_event_description_with_i18n_support",
      "should_generate_icalendar_event_description_with_other_method_and_i18n_support",
      "should_generate_icalendar_event_description_with_pwc_office_address_and_i18n_support",
      "should_generate_icalendar_event_description_with_assignee_office_address_and_i18n_support",
      "Should_upload_iCalendar_attachment_with_correct_from",
      "Should_upload_cancel_iCalendar_attachment_to_notification_service",
      "Should_upload_iCalendar_attachment_to_notification_send_to_staff",
      "Should_upload_iCalendar_attachment_to_notification_send_to_staff_and_sanitize_filename_when_assignee_name_contains_special_chars",
      "Should_upload_iCalendar_attachment_with_correct_scheduled_date_period_when_send_email_to_staff",
      "Should_upload_iCalendar_attachment_with_correct_description_when_send_email_to_staff",
      "should_generate_icalendar_event_description_with_other_method_when_send_email_to_staff",
      "should_generate_icalendar_event_description_with_pwc_office_address_when_send_email_to_staff",
      "should_generate_icalendar_event_description_with_assignee_office_address_when_send_email_to_staff"
    ],
    "Children": []
  },
  {
    "$id": "150",
    "FileName": "BriefingWorkRecordReminderToAssigneeFacts.cs",
    "Description": "BriefingWorkRecordReminderToAssigneeFacts",
    "WhenList": [],
    "ThenList": [
      "should_send_reminder_email_when_appointment_date_is_two_days_after",
      "should_send_with_correct_method_info_in_reminder_email_when_method_is_other",
      "should_send_with_correct_other_method_detail_info_in_reminder_email_when_method_is_other",
      "should_send_with_link_if_other_method_detail_contains_link",
      "should_send_more_info_via_next_email_prompt_if_other_briefing_method_detail_is_empty",
      "should_not_send_address_parameter_if_briefing_method_is_not_address_related",
      "should_send_other_briefing_method_details_with_line_break",
      "should_send_reminder_email_when_assignee_not_register",
      "should_send_reminder_email_given_team_mailbox"
    ],
    "Children": []
  },
  {
    "$id": "151",
    "FileName": "BriefingWorkRecordRescheduleNotificationToStaffFacts.cs",
    "Description": "BriefingWorkRecordRescheduleNotificationToStaffFacts",
    "WhenList": [],
    "ThenList": [
      "When_rescheduled_by_normal_staff_and_engagement_has_team_mailbox_It_should_staff_email_normal_staff_and_team",
      "When_rescheduled_by_normal_staff_and_engagement_has_team_mailbox_It_should_email_staff_different_briefing_addresses_according_to_request",
      "It_should_email_staff_with_other_briefing_method_name",
      "It_should_email_staff_with_current_other_briefing_method_details",
      "When_rescheduled_with_other_briefing_method_and_detail_has_url_It_should_send_with_link",
      "When_briefing_method_is_changed_to_non_other_It_should_not_send_current_briefing_method_details",
      "When_briefing_method_is_changed_to_other_from_non_other_It_shoud_not_send_previous_briefing_method_details",
      "It_should_email_staff_with_previous_other_briefing_method_details",
      "It_should_email_staff_with_previous_other_briefing_method_with_link_if_detail_contains_url",
      "It_should_not_email_with_previous_other_briefing_method_details_if_previous_method_is_non_other",
      "It_should_not_send_address_parameters_if_briefing_method_is_not_address_related",
      "It_should_send_via_other_email_prompt_if_other_briefing_method_detail_is_empty",
      "When_rescheduled_by_assignee_It_should_email_briefing_coordinator",
      "When_rescheduled_by_office_staff_and_engagement_has_team_mailbox_It_should_send_email_by_office_staff",
      "When_rescheduled_by_assignee_and_engagement_has_team_mailbox_It_should_email_correct_info_to_team_by_assignee",
      "When_rescheduled_by_Sophia_It_should_email_Sophia_and_briefing_coordinator",
      "When_rescheduled_and_both_previous_and_current_method_are_Other_It_should_email_staff_both_other_method_details_with_line_break"
    ],
    "Children": []
  },
  {
    "$id": "152",
    "FileName": "BriefingWorkRecordScheduledConfirmationToAssigneeFacts.cs",
    "Description": "BriefingWorkRecordScheduledConfirmationToAssigneeFacts",
    "WhenList": [],
    "ThenList": [
      "When_scheduled_by_normal_staff_It_should_email_assignee_correct_basic_info",
      "When_scheduled_by_assignee_It_should_email_assignee_correct_basic_info",
      "When_scheduled_by_office_staff_and_engagement_has_team_mailbox_It_should_email_assignee_by_team",
      "When_scheduled_by_assignee_and_engagement_has_team_mailbox_It_should_email_assignee_by_noreply",
      "When_scheduled_by_Sofia_It_should_email_assignee_by_Sofia",
      "When_scheduled_by_staff_It_should_email_assignee_different_briefing_addresses_according_to_request",
      "When_scheduled_by_assignee_It_should_email_assignee_different_briefing_addresses_according_to_request",
      "When_scheduled_by_assignee_It_should_email_assignee_different_briefing_methods_according_to_request",
      "When_scheduled_by_staff_It_should_email_assignee_different_briefing_methods_according_to_request",
      "When_scheduled_by_staff_and_assignee_It_should_email_assignee_for_WR_which_uses_other_briefing_method_by_RichI18nParameters",
      "When_scheduled_by_staff_or_assignee_and_WR_uses_other_briefing_method_It_should_email_assignee_with_correct_other_method_details",
      "When_scheduled_with_other_briefing_method_and_detail_contains_URL_It_should_email_assignee_with_link",
      "When_scheduled_with_other_briefing_method_but_detail_is_empty_It_should_email_assignee_with_more_info_via_next_email_prompt",
      "When_scheduled_with_non_address_related_method_It_should_not_send_address_parameter",
      "When_scheduled_with_other_briefing_method_It_should_send_assignee_other_method_details_with_line_breaks"
    ],
    "Children": []
  },
  {
    "$id": "153",
    "FileName": "BriefingWorkRecordScheduledNotificationToStaffFacts.cs",
    "Description": "BriefingWorkRecordScheduledNotificationToStaffFacts",
    "WhenList": [],
    "ThenList": [
      "When_scheduled_by_normal_staff_and_engagement_has_team_mailbox_It_should_email_to_normal_staff_and_team",
      "When_scheduled_by_normal_staff_It_should_email_staff_with_different_briefing_addresses_and_methods_according_to_request",
      "When_scheduled_briefing_method_is_non_other_It_should_not_send_with_briefing_method_details_parameter",
      "When_scheduled_with_other_briefing_method_and_detail_contains_url_It_should_send_with_link",
      "When_scheduled_with_non_address_related_method_It_should_not_send_address_parameter",
      "Should_email_staff_with_other_briefing_method",
      "Should_email_staff_with_other_briefing_method_details",
      "It_should_email_more_info_prompt_When_other_briefing_detail_is_empty",
      "When_scheduled_by_assignee_It_should_email_staff_with_different_briefing_addresses_and_method_according_to_request",
      "When_scheduled_by_assignee_and_engagement_has_team_mailbox_It_should_email_team",
      "When_scheduled_as_other_briefing_method_It_should_email_staff_other_briefing_details_with_line_break"
    ],
    "Children": []
  },
  {
    "$id": "154",
    "FileName": "ApplyToWorkRecordFacts.cs",
    "Description": "ApplyToWorkRecordFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_patch_custom_field_link_for_immi_work_record",
      "should_get_patch_custom_field_link_for_ss_work_record"
    ],
    "Children": []
  },
  {
    "$id": "155",
    "FileName": "CountryCustomFieldValidatorFacts.cs",
    "Description": "CountryCustomFieldValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid",
      "should_return_error_when_custom_field_name_is_empty",
      "should_return_error_when_name_is_longer_than_255_characters",
      "should_return_error_when_create_by_is_null",
      "should_return_error_when_name_is_not_unique_with_same_country_and_location",
      "should_be_invalid_when_practice_type_is_empty",
      "should_be_invalid_when_list_type_custom_field_has_not_contents",
      "should_be_invalid_when_list_type_custom_field_list_content_length_exceed_50",
      "should_be_invalid_when_list_type_custom_field_list_content_length_is_0",
      "should_be_invalid_when_list_type_contents_duplicated"
    ],
    "Children": []
  },
  {
    "$id": "156",
    "FileName": "CustomFieldsValueValidatorFacts.cs",
    "Description": "CustomFieldsValueValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_valid_when_custom_field_type_is_number_and_value_is_null",
      "should_valid_when_custom_field_type_is_number_and_the_value_is_valid",
      "should_return_error_when_custom_field_type_is_number_but_the_value_exceed_the_range_or_not_number",
      "should_fail_validation_when_custom_field_value_value_length_more_than_255",
      "should_pass_validation_when_length_is_Less_than_255",
      "should_success_validation_when_custom_field_value_value_null",
      "should_be_invalid_when_custom_field_value_is_longer_than_255_characters",
      "should_be_invalid_when_list_type_custom_field_value_is_not_exist"
    ],
    "Children": []
  },
  {
    "$id": "157",
    "FileName": "EngagementCustomFieldValidatorFacts.cs",
    "Description": "EngagementCustomFieldValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_success_for_validate_correct_cf",
      "should_return_error_when_custom_field_name_is_empty",
      "should_return_error_when_name_is_longer_than_255_characters",
      "should_return_error_when_engagement_is_null",
      "should_return_error_when_create_by_is_null",
      "should_return_error_when_name_is_not_unique_with_same_engagement_and_location",
      "should_return_error_when_name_is_not_unique_with_same_engagement_and_location_type",
      "should_invalid_for_validate_correct_when_custom_field_with_same_name_and_same_id",
      "should_be_invalid_when_custom_field_with_same_name_location_and_engagement",
      "should_be_invalid_when_list_type_custom_field_has_not_contents",
      "should_be_invalid_when_list_type_custom_field_list_content_length_exceed_50",
      "should_be_invalid_when_list_type_custom_field_list_content_length_is_0",
      "should_be_invalid_when_list_type_contents_duplicated",
      "should_be_invalid_when_segmentation_more_than_limit",
      "should_be_valid_when_segmentation_less_than_limit",
      "should_be_valid_when_publish_to_mymobility_and_engagement_custom_field_is_open_and_displayed_on_assignee",
      "should_be_invalid_when_published_to_mymobility_and_engagement_custom_field_is_restricted",
      "should_be_invalid_when_published_to_mymobility_and_engagement_custom_field_is_displayed_on_workrecord"
    ],
    "Children": []
  },
  {
    "$id": "158",
    "FileName": "WorkRecordCustomFieldValueUpdateRequestFacts.cs",
    "Description": "WorkRecordCustomFieldValueUpdateRequestFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_work_record_not_existed",
      "should_be_invalid_when_the_work_record_does_not_have_the_custom_field",
      "should_be_invalid_when_custom_field_type_is_date_with_invalid_date"
    ],
    "Children": []
  },
  {
    "$id": "159",
    "FileName": "ImmigrationWorkRecordResourceLinkFacts.cs",
    "Description": "ImmigrationWorkRecordResourceLinkFacts",
    "WhenList": [],
    "ThenList": [
      "should_include_start_questionnaire_link_for_notified_immigration_work_record",
      "should_include_activate_link_for_created_immigartion_work_record",
      "should_include_submit_link_for_in_process_work_record"
    ],
    "Children": []
  },
  {
    "$id": "160",
    "FileName": "NumberFormatterFacts.cs",
    "Description": "NumberFormatterFacts",
    "WhenList": [],
    "ThenList": [
      "should_test_number_convert"
    ],
    "Children": []
  },
  {
    "$id": "161",
    "FileName": "TaxWorkRecordResourceLinkFacts.cs",
    "Description": "TaxWorkRecordResourceLinkFacts",
    "WhenList": [],
    "ThenList": [
      "should_include_ACTIVATION_link_when_work_record_is_tax_return_and_current_status_is_RECORD_CREATED",
      "should_include_DECIDE_link_when_work_record_is_CPQ_tax_return_and_current_status_is_IN_PROCESS",
      "should_not_include_DECIDE_link_when_work_record_is_NOT_CPQ_tax_return",
      "should_not_include_DECIDE_link_when_work_record_is_NOT_IN_PROCESS",
      "should_not_include_ACTIVATION_link_for_activated_tax_return_work_record",
      "should_include_restart_link_for_move_to_in_process"
    ],
    "Children": []
  },
  {
    "$id": "162",
    "FileName": "EngagementAclFacts.cs",
    "Description": "EngagementAclFacts",
    "WhenList": [],
    "ThenList": [
      "should_can_access_engagement_given_staff_is_null_for_query",
      "should_can_access_engagement_given_staff_is_null",
      "should_not_access_engagement_given_staff_is_not_in_acl_for_query",
      "should_not_access_engagement_given_staff_is_not_in_acl",
      "should_can_access_engagement_given_engagement_is_not_restricted_for_query",
      "should_can_access_engagement_given_engagement_is_not_restricted",
      "should_can_access_engagement_given_staff_is_global_admin_for_query",
      "should_can_access_engagement_given_staff_is_global_admin",
      "should_can_access_engagement_given_staff_is_in_acl_for_query",
      "should_can_access_engagement_given_staff_is_in_acl",
      "should_can_access_engagement_given_staff_is_engagement_admin_for_query",
      "should_can_access_engagement_given_staff_is_engagement_admin",
      "should_can_access_engagement_given_staff_is_primary_contact_for_query",
      "should_can_access_engagement_given_staff_is_primary_contact",
      "should_can_access_engagement_given_staff_is_secondary_contact_for_query",
      "should_can_access_engagement_given_staff_is_secondary_contact",
      "should_can_access_engagement_given_staff_is_primary_contact_in_delegated_coordinating_office_for_query",
      "should_can_access_engagement_given_staff_is_primary_contact_in_delegated_coordinating_office",
      "should_can_access_engagement_given_staff_is_secondry_contact_in_delegated_coordinating_office_for_query",
      "should_can_access_engagement_given_staff_is_secondry_contact_in_delegated_coordinating_office",
      "should_can_access_engagement_given_staff_is_primary_contact_in_working_office_for_query",
      "should_can_access_engagement_given_staff_is_primary_contact_in_working_office",
      "should_can_access_engagement_given_staff_is_secondry_contact_in_working_office_for_query",
      "should_can_access_engagement_given_staff_is_secondry_contact_in_working_office"
    ],
    "Children": []
  },
  {
    "$id": "163",
    "FileName": "QueryableAssigneeAclFacts.cs",
    "Description": "QueryableAssigneeAclFacts",
    "WhenList": [],
    "ThenList": [
      "should_can_view_assignee_info_given_staff_is_null",
      "should_can_view_queryable_assignee_info_given_staff_is_null",
      "should_can_view_assignee_info_given_staff_is_global_admin",
      "should_can_view_queryable_assignee_info_given_staff_is_global_admin",
      "should_can_view_assignee_info_given_assignee_is_not_restricted",
      "should_can_view_queryable_assignee_info_given_assignee_is_not_restricted",
      "should_can_view_assignee_info_given_staff_is_contact",
      "should_can_view_queryable_assignee_info_given_staff_is_contact",
      "should_not_can_view_assignee_info_given_staff_not_in_acl",
      "should_not_can_view_queryable_assignee_info_given_staff_not_in_acl",
      "should_can_view_assignee_info_given_staff_in_acl",
      "should_can_view_queryable_assignee_info_given_staff_in_acl",
      "should_not_can_view_assignee_info_given_all_engagement_is_restricted",
      "should_not_can_view_queryable_assignee_info_given_all_engagement_is_restricted",
      "should_can_view_assignee_info_given_have_at_least_one_engagement_is_not_restricted",
      "should_can_view_queryable_assignee_info_given_have_at_least_one_engagement_is_not_restricted",
      "should_can_view_assignee_info_given_staff_is_in_engagement_acl_by_second_contact",
      "should_can_view_queryable_assignee_info_given_staff_is_in_engagement_acl_by_second_contact",
      "should_can_view_assignee_info_given_staff_is_in_engagement_acl_by_delegated_coordinating_office_second_contact",
      "should_can_view_queryable_assignee_info_given_staff_is_in_engagement_acl_by_delegated_coordinating_office_second_contact"
    ],
    "Children": []
  },
  {
    "$id": "164",
    "FileName": "GetClientAssociationByDateFacts.cs",
    "Description": "GetClientAssociationByDateFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_client_association_when_assignee_has_only_one_client",
      "should_get_first_client_association_when_assignee_has_multiple_clients_and_given_date_belongs_to_first_client",
      "should_get_last_client_association_when_assignee_has_multiple_clients_and_given_date_belongs_to_last_client",
      "should_get_middle_client_association_when_assignee_has_multiple_clients_and_given_date_belongs_to_one_client_in_the_middle"
    ],
    "Children": []
  },
  {
    "$id": "165",
    "FileName": "when_Assignee_exist.cs",
    "Description": "AssigneeFacts",
    "WhenList": [],
    "ThenList": [
      "should_assignee_exist"
    ],
    "Children": []
  },
  {
    "$id": "166",
    "FileName": "AssignmentClientMatchServiceFacts.cs",
    "Description": "AssignmentClientMatchServiceFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_matchable_if_assignment_has_no_start_date",
      "should_be_matchable_if_start_date_of_assignment_fall_within_the_client_association_effective_date"
    ],
    "Children": []
  },
  {
    "$id": "167",
    "FileName": "CreateAuthorizationItemByAuthorizationRuleAllYearsFacts.cs",
    "Description": "CreateAuthorizationItemByAuthorizationRuleAllYearsFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_authorization_item_when_authorization_rule_for_is_all_years_and_assignment_date_overlaps_with_tax_year",
      "should_not_create_authorization_item_when_authorization_rule_for_is_all_years_and_assignment_date_does_not_overlap_with_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_all_years_and_assignment_start_date_is_null_and_end_date_is_after_the_beginning_of_tax_year",
      "should_not_create_authorization_item_when_authorization_rule_for_is_all_years_and_assignment_start_date_is_null_and_end_date_is_before_the_beginning_of_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_all_years_and_assignment_end_date_is_null_and_start_date_is_before_the_end_of_tax_year",
      "should_not_create_authorization_item_when_authorization_rule_for_is_all_years_and_assignment_end_date_is_null_and_start_date_is_after_the_end_of_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_all_years_and_assignment_start_and_end_date_is_null"
    ],
    "Children": []
  },
  {
    "$id": "168",
    "FileName": "CreateAuthorizationItemByAuthorizationRuleAllYearsPlusOneFacts.cs",
    "Description": "CreateAuthorizationItemByAuthorizationRuleAllYearsPlusOneFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_authorization_item_when_authorization_rule_for_is_all_years_plus_one_and_assignment_date_extending_one_year_overlaps_with_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_all_years_plus_one_and_assignment_date_extending_one_year_does_not_overlap_with_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_all_years_plus_one_and_assignment_start_date_is_null_and_end_date_plus_one_year_is_after_the_beginning_of_tax_year",
      "should_not_create_authorization_item_when_authorization_rule_for_is_all_years_plus_one_and_assignment_start_date_is_null_and_end_date_plus_one_year_is_before_the_beginning_of_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_all_years_and_assignment_end_date_is_null_and_start_date_is_before_the_end_of_tax_year",
      "should_not_create_authorization_item_when_authorization_rule_for_is_all_years_and_assignment_end_date_is_null_and_start_date_is_after_the_end_of_tax_year"
    ],
    "Children": []
  },
  {
    "$id": "169",
    "FileName": "CreateAuthorizationItemByAuthorizationRuleFirstThreeYearsFacts.cs",
    "Description": "CreateAuthorizationItemByAuthorizationRuleFirstThreeYearsFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_authorization_item_only_for_the_first_three_years_when_assignment_lasts_more_than_2_years",
      "should_create_authorization_item_only_for_the_first_year_when_assignment_does_not_cross_year",
      "should_create_authorization_item_only_for_the_first_2_years_when_assignment_only_cross_2_years",
      "should_create_authorization_item_when_authorization_rule_for_is_first_two_years_only_and_assignment_start_date_is_null_and_end_date_is_after_the_beginning_of_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_first_two_years_only_and_assignment_start_date_and_end_date_is_null"
    ],
    "Children": []
  },
  {
    "$id": "170",
    "FileName": "CreateAuthorizationItemByAuthorizationRuleFirstTwoYearsFacts.cs",
    "Description": "CreateAuthorizationItemByAuthorizationRuleFirstTwoYearsFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_authorization_item_only_for_the_first_two_years_when_assignment_lasts_more_than_2_years",
      "should_create_authorization_item_only_for_the_first_year_when_assignment_does_not_cross_year",
      "should_create_authorization_item_when_authorization_rule_for_is_first_two_years_only_and_assignment_start_date_is_null_and_end_date_is_after_the_beginning_of_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_first_two_years_only_and_assignment_start_date_and_end_date_is_null",
      "should_create_authorization_item_when_assignment_only_have_one_date"
    ],
    "Children": []
  },
  {
    "$id": "171",
    "FileName": "CreateAuthorizationItemByAuthorizationRuleFirstYearFacts.cs",
    "Description": "CreateAuthorizationItemByAuthorizationRuleFirstYearFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_authorization_item_when_authorization_rule_for_is_first_year_only_and_assignment_start_date_is_in_tax_year",
      "should_not_create_authorization_item_when_authorization_rule_for_is_first_year_only_and_assignment_start_date_is_not_in_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_first_year_only_and_assignment_start_date_is_null_and_end_date_is_after_the_beginning_of_tax_year",
      "should_not_create_authorization_item_when_authorization_rule_for_is_first_year_only_and_assignment_start_date_is_null_and_end_date_is_before_the_beginning_of_tax_year",
      "should_create_authorization_item_when_authorization_rule_for_is_first_year_only_and_assignment_start_date_and_end_date_is_null"
    ],
    "Children": []
  },
  {
    "$id": "172",
    "FileName": "CreateAuthorizationItemByAuthorizationRuleFirstYearFactsAndLastYear.cs",
    "Description": "CreateAuthorizationItemByAuthorizationRuleFirstYearAndLastYearFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_authorization_item_for_host_country_when_assignment_start_date_is_in_tax_year",
      "should_create_authorization_item_for_host_country_when_assignment_end_date_is_in_tax_year",
      "should_not_create_authorization_item_for_host_country_when_assignment_start_and_end_date_is_not_in_tax_year",
      "should_create_authorization_item_for_host_country_when_assignment_end_date_is_null_and_start_date_is_before_the_end_of_tax_year",
      "should_create_authorization_item_for_host_country_when_assignment_start_and_end_date_is_null",
      "should_create_authorization_item_when_assignment_start_date_is_null",
      "should_not_create_authorization_item_after_end_date_when_assignment_start_date_is_null",
      "should_not_create_authorization_item_in_next_following_years_when_assignment_has_no_end_date"
    ],
    "Children": []
  },
  {
    "$id": "173",
    "FileName": "CreateAuthorizationItemByAuthorizationRuleMiscFacts.cs",
    "Description": "CreateAuthorizationItemByAuthorizationRuleMiscFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_specified_authorization_item_when_engagement_authorization_rule_is_first_year_only_for_home_and_all_years_plus_one_for_host",
      "should_create_specified_authorization_item_when_engagement_authorization_rule_is_all_years_for_home_and_first_year_and_last_year_for_host"
    ],
    "Children": []
  },
  {
    "$id": "174",
    "FileName": "CreateAuthorizationItemByAuthorizationRuleNoneFacts.cs",
    "Description": "CreateAuthorizationItemByAuthorizationRuleNoneFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_create_authorization_item_when_engagement_authorization_rule_is_none",
      "should_not_create_authorization_item_when_engagement_authorization_rule_is_none_and_assignment_date_is_null"
    ],
    "Children": []
  },
  {
    "$id": "175",
    "FileName": "CreateAuthorizationItemForFiscalYearCountriesByAuthorizationRuleFacts.cs",
    "Description": "CreateAuthorizationItemForFiscalYearCountriesByAuthorizationRuleFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_both_home_and_host_authorization_items_when_apply_authorization_rule_first_year_only_for_fiscal_year_countries",
      "should_create_only_home_authorization_item_when_apply_authorization_rule_first_year_only_for_fiscal_year_countries",
      "should_create_only_host_authorization_item_when_apply_authorization_rule_first_year_only_for_fiscal_year_countries",
      "should_not_create_both_home_and_host_authorization_items_when_apply_authorization_rule_first_year_only_for_fiscal_year_countries"
    ],
    "Children": []
  },
  {
    "$id": "176",
    "FileName": "CreateAuthorizationItemByMultipleClientsRuleFacts.cs",
    "Description": "CreateAuthorizationItemByMultipleClientsRuleFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_authorization_item_and_determine_client_by_assignment_start_date_and_client_effective_date",
      "should_create_authorization_item_for_any_client_if_assignment_does_not_have_start_date"
    ],
    "Children": []
  },
  {
    "$id": "177",
    "FileName": "CreateAuthorizationItemByMultipleEngagementsRuleFacts.cs",
    "Description": "CreateAuthorizationItemByMultipleEngagementsRuleFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_authorization_item_by_assignment_that_assignment_could_match_engagement",
      "should_create_authorization_item_by_assignment_without_assignment_type"
    ],
    "Children": []
  },
  {
    "$id": "178",
    "FileName": "CreateAuthorizationItemByTimeRuleFacts.cs",
    "Description": "CreateAuthorizationItemByTimeRuleFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_host_authorization_item_when_assignment_has_no_start_and_end_date",
      "should_create_host_authorization_item_when_assignment_has_no_start_date_and_end_date_is_after_first_day_of_year",
      "should_not_create_host_authorization_item_by_all_year_plus_one_rule_when_assignment_has_no_start_date_but_end_date_is_before_first_day_of_previous_year",
      "should_create_host_authorization_item_when_assignment_has_no_end_date_and_start_date_is_before_last_day_of_year",
      "should_not_create_host_authorization_item_when_assignment_has_no_end_date_but_start_date_is_after_last_day_of_year",
      "should_create_host_authorization_item_when_assignment_has_both_dates_and_start_date_is_before_last_day_of_year_and_end_date_is_after_first_day_of_year",
      "should_not_create_host_authorization_item_when_assignment_has_both_dates_and_start_date_is_after_last_day_of_year",
      "should_not_create_host_authorization_item_by_all_year_plus_one_rule_when_assignment_has_both_dates_and_end_date_is_before_first_day_of_previous_year",
      "should_create_host_authorization_item_by_all_year_plus_one_rule_when_assignment_has_no_start_date_and_end_date_is_after_first_day_of_previous_year",
      "should_create_host_authorization_item_by_all_year_plus_one_rule_when_assignment_has_both_dates_and_start_date_is_before_last_day_of_previous_year_and_end_date_is_after_first_day_of_previous_year",
      "should_create_host_authorization_item_when_assignment_in_the_fiscal_year",
      "should_create_home_authorization_item_when_assignment_in_the_fiscal_year"
    ],
    "Children": []
  },
  {
    "$id": "179",
    "FileName": "CreateAuthorizationItemFromInvalidAssigneeFacts.cs",
    "Description": "CreateAuthorizationItemFromInvalidAssigneeFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_create_authorization_item_when_assignee_is_invalid"
    ],
    "Children": []
  },
  {
    "$id": "180",
    "FileName": "CreateAuthorizationItemWithCorrectEmployeeIdFacts.cs",
    "Description": "CreateAuthorizationItemWithCorrectEmployeeIdFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_authorization_item_when_assignment_has_assignment_type",
      "should_create_authorization_item_and_determine_employee_id_by_client_when_assignment_does_not_have_assignment_type"
    ],
    "Children": []
  },
  {
    "$id": "181",
    "FileName": "CreateHomeAuthorizationItemFacts.cs",
    "Description": "CreateHomeAuthorizationItemFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_only_one_home_authorization_item_when_assignee_has_multiple_assignment_for_this_year",
      "should_not_create_home_authorization_item_when_assignee_has_no_assignement_for_this_year"
    ],
    "Children": []
  },
  {
    "$id": "182",
    "FileName": "GenericCacheFacts.cs",
    "Description": "GenericCacheFacts",
    "WhenList": [],
    "ThenList": [
      "should_load_once",
      "should_invalidate_cache"
    ],
    "Children": []
  },
  {
    "$id": "183",
    "FileName": "CanEditEngagementKpiSettingsFacts.cs",
    "Description": "CanEditEngagementKpiSettingsFacts",
    "WhenList": [],
    "ThenList": [
      "EngagementAdminCanEditEngagementKpiSettings",
      "GlobalAdminCanEditEngagementKpiSettings",
      "StaffInCoordinatingOfficeAndAsPrimaryContactCanEditEngagementKpiSettings",
      "StaffInCoordinatingOfficeAndAsSecondaryContactCanEditEngagementKpiSettings",
      "StaffNotInCoordinatingOfficeButAsPrimaryContactCanEditEngagementKpiSettings",
      "StaffNotInCoordinatingOfficeButAsSecondaryContactCanEditEngagementKpiSettings",
      "StaffInDelegatedCoordinatingOfficeAsPrimaryContactCanEditEngagementKpiSettings",
      "StaffInDelegatedCoordinatingOfficeAsSecondaryContactCanEditEngagementKpiSettings",
      "StaffInSubscribedOfficeAsPrimaryContactCanNotEditEngagementKpiSettings",
      "StaffInSubscribedOfficeAsSecondaryContactCanNotEditEngagementKpiSettings",
      "OfficeEngagementAdminCanNotEditEngagementKpiSettings",
      "StaffInCoordinatingOfficeButNotContactCanNotEditEngagementKpiSettings",
      "StaffInDelegatedOfficeButNotContactCanNotEditEngagementKpiSettings",
      "StaffInSubscribedOfficeButNotContactCanNotEditEngagementKpiSettings",
      "StaffOnEngagementAclButNotContactCanNotEditEngagementKpiSettings",
      "StaffNotInAnyWorkingOfficeCanNotEditEngagementKpiSettings"
    ],
    "Children": []
  },
  {
    "$id": "184",
    "FileName": "CanEditEngagementTypeOfServiceExternalCurrencyFacts.cs",
    "Description": "CanEditEngagementTypeOfServiceExternalCurrencyFacts",
    "WhenList": [],
    "ThenList": [
      "EngagementAdminCanEditEngagementExternalCurrency",
      "GlobalAdminCanEditEngagementExternalCurrency",
      "StaffInCoordinatingOfficeAndAsPrimaryContactCanEditEngagementExternalCurrency",
      "StaffInCoordinatingOfficeAndAsSecondaryContactCanEditEngagementExternalCurrency",
      "StaffNotInCoordinatingOfficeButAsPrimaryContactCanEditEngagementExternalCurrency",
      "StaffNotInCoordinatingOfficeButAsSecondaryContactCanEditEngagementExternalCurrency",
      "StaffInDelegatedCoordinatingOfficeAsPrimaryContactCanEditEngagementExternalCurrency",
      "StaffInDelegatedCoordinatingOfficeAsSecondaryContactCanEditEngagementExternalCurrency",
      "StaffInSubscribedOfficeAsPrimaryContactCanNotEditEngagementTypeOfService",
      "StaffInSubscribedOfficeAsSecondaryContactCanEditNotEngagementTypeOfService",
      "OfficeEngagementAdminCanNotEditEngagementExternalCurrency",
      "StaffInCoordinatingOfficeButNotContactCanNotEditEngagementTypeOfService",
      "StaffInDelegatedOfficeButNotContactCanNotEditEngagementTypeOfService",
      "StaffInSubscribedOfficeButNotContactCanNotEditEngagementTypeOfService",
      "StaffOnEngagementAclButNotContactCanNotEditEngagementTypeOfService",
      "StaffNotInAnyWorkingOfficeCanNotEditEngagementTypeOfService"
    ],
    "Children": []
  },
  {
    "$id": "185",
    "FileName": "CanEditEngagementTypeOfServiceFacts.cs",
    "Description": "CanEditEngagementTypeOfServiceFacts",
    "WhenList": [],
    "ThenList": [
      "EngagementAdminCanEditEngagementTypeOfService",
      "GlobalAdminCanEditEngagementTypeOfService",
      "StaffInCoordinatingOfficeAndAsPrimaryContactCanEditEngagementTypeOfService",
      "StaffInCoordinatingOfficeAndAsSecondaryContactCanEditEngagementTypeOfService",
      "StaffNotInCoordinatingOfficeButAsPrimaryContactCanEditEngagementTypeOfService",
      "StaffNotInCoordinatingOfficeButAsSecondaryContactCanEditEngagementTypeOfService",
      "StaffInDelegatedCoordinatingOfficeAsPrimaryContactCanEditEngagementTypeOfService",
      "StaffInDelegatedCoordinatingOfficeAsSecondaryContactCanEditEngagementTypeOfService",
      "StaffInSubscribedOfficeAsPrimaryContactCanEditEngagementTypeOfService",
      "StaffInSubscribedOfficeAsSecondaryContactCanEditEngagementTypeOfService",
      "OfficeEngagementAdminCanEditEngagementTypeOfService",
      "StaffInCoordinatingOfficeButNotContactCanNotEditEngagementTypeOfService",
      "StaffInDelegatedOfficeButNotContactCanNotEditEngagementTypeOfService",
      "StaffInSubscribedOfficeButNotContactCanNotEditEngagementTypeOfService",
      "StaffOnEngagementAclButNotContactCanNotEditEngagementTypeOfService",
      "StaffNotInAnyWorkingOfficeCanNotEditEngagementTypeOfService"
    ],
    "Children": []
  },
  {
    "$id": "186",
    "FileName": "CanViewEngagementInternalKpiFacts.cs",
    "Description": "CanViewEngagementInternalKpiFacts",
    "WhenList": [],
    "ThenList": [
      "EngagementAdminCanViewEngagementInternalKpi",
      "GlobalAdminCanViewEngagementInternalKpi",
      "StaffInCoordinatingOfficeAndAsPrimaryContactCanViewEngagementInternalKpi",
      "StaffInCoordinatingOfficeAndAsSecondaryContactCanViewEngagementInternalKpi",
      "StaffNotInCoordinatingOfficeButAsPrimaryContactCanViewEngagementInternalKpi",
      "StaffNotInCoordinatingOfficeButAsSecondaryContactCanViewEngagementInternalKpi",
      "StaffInDelegatedCoordinatingOfficeAsPrimaryContactCanViewEngagementInternalKpi",
      "StaffInDelegatedCoordinatingOfficeAsSecondaryContactCanViewEngagementInternalKpi",
      "StaffInSubscribedOfficeAsPrimaryContactCanNotViewEngagementInternalKpi",
      "StaffInSubscribedOfficeAsSecondaryContactCanNotViewEngagementInternalKpi",
      "OfficeEngagementAdminCanNotViewEngagementInternalKpi",
      "StaffInCoordinatingOfficeButNotContactCanViewEngagementInternalKpi",
      "StaffInDelegatedOfficeButNotContactCanViewEngagementInternalKpi",
      "StaffInSubscribedOfficeButNotContactCanNotViewEngagementInternalKpi",
      "StaffOnEngagementAclInCoordinateOfficeButNotContactCanViewEngagementInternalKpi",
      "StaffOnEngagementAclInDelegateCoordinateOfficeButNotContactCanViewEngagementInternalKpi",
      "StaffOnEngagementAclInSubscribeOfficeButNotContactCanNotViewEngagementInternalKpi",
      "StaffNotOnEngagementAclAndNotContactButInWorkOfficeCanNotViewEngagementInternalKpi",
      "StaffNotInAnyWorkingOfficeCanNotViewEngagementInternalKpi"
    ],
    "Children": []
  },
  {
    "$id": "187",
    "FileName": "CanViewEngagementKpiFacts.cs",
    "Description": "CanViewEngagementKpiFacts",
    "WhenList": [],
    "ThenList": [
      "EngagementAdminCanViewEngagementKpi",
      "GlobalAdminCanViewEngagementKpi",
      "StaffInCoordinatingOfficeAndAsPrimaryContactCanViewEngagementKpi",
      "StaffInCoordinatingOfficeAndAsSecondaryContactCanViewEngagementKpi",
      "StaffNotInCoordinatingOfficeButAsPrimaryContactCanViewEngagementKpi",
      "StaffNotInCoordinatingOfficeButAsSecondaryContactCanViewEngagementKpi",
      "StaffInDelegatedCoordinatingOfficeAsPrimaryContactCanViewEngagementKpi",
      "StaffInDelegatedCoordinatingOfficeAsSecondaryContactCanViewEngagementKpi",
      "StaffInSubscribedOfficeAsPrimaryContactCanViewEngagementKpi",
      "StaffInSubscribedOfficeAsSecondaryContactCanViewEngagementKpi",
      "OfficeEngagementAdminCanViewEngagementKpi",
      "StaffInCoordinatingOfficeButNotContactCanViewEngagementKpi",
      "StaffInDelegatedOfficeButNotContactCanViewEngagementKpi",
      "StaffInSubscribedOfficeButNotContactCanViewEngagementKpi",
      "StaffOnEngagementAclButNotContactCanViewEngagementKpi",
      "StaffNotOnEngagementAclAndNotContactButInWorkOfficeCanNotViewEngagementKpi",
      "StaffNotInAnyWorkingOfficeCanNotViewEngagementKpi"
    ],
    "Children": []
  },
  {
    "$id": "188",
    "FileName": "CanViewEngagementTypeOfServiceFacts.cs",
    "Description": "CanViewEngagementTypeOfServiceFacts",
    "WhenList": [],
    "ThenList": [
      "EngagementAdminCanViewEngagementTypeOfService",
      "GlobalAdminCanViewEngagementTypeOfService",
      "StaffInCoordinatingOfficeAndAsPrimaryContactCanViewEngagementTypeOfService",
      "StaffInCoordinatingOfficeAndAsSecondaryContactCanViewEngagementTypeOfService",
      "StaffNotInCoordinatingOfficeButAsPrimaryContactCanViewEngagementTypeOfService",
      "StaffNotInCoordinatingOfficeButAsSecondaryContactCanViewEngagementTypeOfService",
      "StaffInDelegatedCoordinatingOfficeAsPrimaryContactCanViewEngagementTypeOfService",
      "StaffInDelegatedCoordinatingOfficeAsSecondaryContactCanViewEngagementTypeOfService",
      "StaffInSubscribedOfficeAsPrimaryContactCanViewEngagementTypeOfService",
      "StaffInSubscribedOfficeAsSecondaryContactCanViewEngagementTypeOfService",
      "OfficeEngagementAdminCanViewEngagementTypeOfService",
      "StaffInCoordinatingOfficeButNotContactCanViewEngagementTypeOfService",
      "StaffInDelegatedOfficeButNotContactCanViewEngagementTypeOfService",
      "StaffInSubscribedOfficeButNotContactCanViewEngagementTypeOfService",
      "StaffOnEngagementAclButNotContactCanViewEngagementTypeOfService",
      "StaffNotInAnyWorkingOfficeCanNotViewEngagementTypeOfService",
      "StaffInAnyWorkingOfficeButNotInAclCanNotViewEngagementTypeOfService"
    ],
    "Children": []
  },
  {
    "$id": "189",
    "FileName": "EngagementTypeOfServiceAccessManagerFacts.cs",
    "Description": "EngagementTypeOfServiceAccessManagerFacts",
    "WhenList": [],
    "ThenList": [
      "StaffInSubscribedOfficesCanOnlyViewTheServicesForTheirAssociatedCountry",
      "StaffInCoordinatingOfficeCanViewAllTypeOfServices",
      "StaffInSuscribedOfficeButIsPrimaryContactCanViewAllTypeOfServices",
      "StaffInSuscribedOfficeButIsSecondaryContactCanViewAllTypeOfServices",
      "StaffAsEngagementAdminCanViewAllTypeOfServices",
      "StaffInSubscribedOfficeAndAsGlobalAdminCanViewAllTypeOfServices",
      "StaffInSubscribedOfficesCanOnlyAccessAssociatedCountry",
      "StaffInCoordinatingOfficeCanAccessAllCountries",
      "StaffInSuscribedOfficeButIsPrimaryContactCanAccessAllCountries",
      "StaffInSuscribedOfficeButIsSecondaryContactCanAccessAllCountries",
      "StaffAsEngagementAdminCanAccessAllCountry"
    ],
    "Children": []
  },
  {
    "$id": "190",
    "FileName": "EngagementValidatorFacts.cs",
    "Description": "EngagementValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_error_when_invalid_engagement_admin_practice_type",
      "should_return_error_when_invalid_coordinating_office_primary_contact_practice_type",
      "should_return_error_when_invalid_coordinating_office_secondary_contact_practice_type",
      "should_return_error_when_invalid_delegated_office_contact_practice_type",
      "should_return_error_when_invalid_subscribed_office_contact_practice_type",
      "should_return_error_when_contact_is_different_from_delegated_office",
      "should_return_error_when_contact_is_different_from_subscribed_office",
      "should_return_error_when_engagement_admin_is_same_as_the_other_admin",
      "should_return_error_when_coordinating_office_contact_is_same_as_the_other_contact",
      "should_return_error_when_delegated_office_contact_is_same_as_the_other_contact",
      "should_return_error_when_subscribed_office_contact_is_same_as_the_other_contact"
    ],
    "Children": []
  },
  {
    "$id": "191",
    "FileName": "EngagmentFacts.cs",
    "Description": "EngagmentFacts",
    "WhenList": [],
    "ThenList": [
      "StaffIsOfficeEngagementAdmin"
    ],
    "Children": []
  },
  {
    "$id": "192",
    "FileName": "EntityCacheObserverFacts.cs",
    "Description": "EntityCacheObserverFacts",
    "WhenList": [],
    "ThenList": [
      "should_update_last_modified_at_when_office_be_changed",
      "should_update_last_modified_at_when_type_of_sercie_be_changed",
      "should_update_last_modified_at_when_engagement_be_changed"
    ],
    "Children": []
  },
  {
    "$id": "193",
    "FileName": "EngagementTypeOfServiceAccessManagerFacts.cs",
    "Description": "MasterChartOfServiceAccessManagerFacts",
    "WhenList": [],
    "ThenList": [
      "GlobalAdminCanViewMasterChartOfService",
      "CountryLevelRoleCanViewMasterChartOfService",
      "OfficeLevelRoleCanNotViewMasterChartOfService",
      "GeneralStaffCanNotViewMasterChartOfService"
    ],
    "Children": []
  },
  {
    "$id": "194",
    "FileName": "CountryRoleFacts.cs",
    "Description": "CountryRoleFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_edit_role_from_different_country",
      "should_edit_own_profile",
      "should_edit_role_from_same_country",
      "should_change_own_access_to_general_level_or_office_level",
      "should_change_general_role_access_to_country_level",
      "should_not_change_own_access_to_higher_level",
      "should_not_edit_general_role_access_to_global_admin",
      "should_not_change_global_admin_access_level",
      "should_change_role_level_from_same_country"
    ],
    "Children": []
  },
  {
    "$id": "195",
    "FileName": "GeneralRoleFacts.cs",
    "Description": "GeneralRoleFacts",
    "WhenList": [],
    "ThenList": [
      "should_edit_own_profile_for_general_role",
      "should_not_edit_own_access_for_general",
      "should_not_edit_other_staff_detail_page_for_general_role"
    ],
    "Children": []
  },
  {
    "$id": "196",
    "FileName": "GlobalAdminRoleFacts.cs",
    "Description": "GlobalAdminRoleFacts",
    "WhenList": [],
    "ThenList": [
      "should_edit_role_from_different_country",
      "should_edit_own_profile",
      "should_change_own_access_to_lower_level",
      "should_change_general_role_access_to_higher_level"
    ],
    "Children": []
  },
  {
    "$id": "197",
    "FileName": "OfficeRoleFacts.cs",
    "Description": "OfficeRoleFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_edit_role_from_different_office",
      "should_edit_own_profile",
      "should_edit_role_from_same_office",
      "should_change_own_access_to_general_level",
      "should_change_general_role_access_to_office_level",
      "should_not_change_own_access_to_higher_level",
      "should_not_edit_general_role_access_to_country_level_or_global_admin",
      "should_not_change_global_admin_and_country_role_access_level"
    ],
    "Children": []
  },
  {
    "$id": "198",
    "FileName": "StaffProfileReviewFact.cs",
    "Description": "StaffProfileReviewFact",
    "WhenList": [],
    "ThenList": [
      "should_return_correct_result"
    ],
    "Children": []
  },
  {
    "$id": "199",
    "FileName": "PasswordHashFacts.cs",
    "Description": "PasswordHashFacts",
    "WhenList": [],
    "ThenList": [
      "shold_succeed_when_password_provided_is_equal_to_origin_plain_text_password",
      "shold_be_failed_when_password_provided_is_more_or_less_blank_to_origin_plain_text_password",
      "shold_be_failed_when_password_provided_is_not_equal_to_origin_plain_text_password",
      "shold_be_not_equal_for_2_encryption_even_same_plain_text_password_provided"
    ],
    "Children": []
  },
  {
    "$id": "200",
    "FileName": "MissingItemDatesFacts.cs",
    "Description": "MissingItemDatesFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_when_have_one_missing_item_date",
      "should_return_when_start_and_end_on_same_day",
      "should_return_when_have_multi_missing_item_date",
      "should_return_when_have_multi_same_received_at_missing_item",
      "should_return_when_have_multi_same_start_at_missing_item",
      "should_return_when_have_multi_and_contains_missing_item_date",
      "should_return_when_have_multi_same_start_day_missing_item_date_with_time"
    ],
    "Children": []
  },
  {
    "$id": "201",
    "FileName": "MissingItemDatesForCycleTimeFacts.cs",
    "Description": "MissingItemDatesForCycleTimeFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_when_have_one_missing_item_date_for_cycle_time",
      "should_return_when_start_and_end_on_same_day_for_cycle_time",
      "should_return_when_have_multi_missing_item_date_for_cycle_time",
      "should_return_when_have_multi_same_received_at_missing_item_for_cycle_time",
      "should_return_when_have_multi_same_start_at_missing_item_for_cycle_time",
      "should_return_when_have_multi_and_contains_missing_item_date_for_cycle_time",
      "should_return_when_have_multi_same_start_day_missing_item_date_with_time_for_cycle_time"
    ],
    "Children": []
  },
  {
    "$id": "202",
    "FileName": "MissingItemSectionsFacts.cs",
    "Description": "MissingItemSectionsFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_1_days_if_total_duration_is_less_than_24_hours",
      "should_return_1_days_given_missing_item_starts_before_start_time_while_is_received_after_start_time_and_before_end_time",
      "should_return_1_days_if_missing_item_starts_and_received_before_start_time",
      "should_return_1_days_if_missing_item_starts_after_start_time_and_received_before_end_time"
    ],
    "Children": []
  },
  {
    "$id": "203",
    "FileName": "EngagedOfficeContactCollectionFacts.cs",
    "Description": "EngagedOfficeContactCollectionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_email_address_list",
      "should_throw_exception_if_primary_contact_is_null",
      "should_get_email_address_list_only_contains_primary_email_when_secondary_contact_not_exist"
    ],
    "Children": []
  },
  {
    "$id": "204",
    "FileName": "HistoryItemFacts.cs",
    "Description": "HistoryItemFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_delete_relation_history_of_entity"
    ],
    "Children": []
  },
  {
    "$id": "205",
    "FileName": "MissingItemFacts.cs",
    "Description": "MissingItemFacts",
    "WhenList": [],
    "ThenList": [
      "mark_missing_itmes_date_should_earlier_or_equal_than_today",
      "mark_missing_itmes_date_should_later_or_equal_than_date_identifier"
    ],
    "Children": []
  },
  {
    "$id": "206",
    "FileName": "MissingItemToDtoFacts.cs",
    "Description": "MissingItemToDtoFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_1_for_days_outstanding_when_since_is_after_now",
      "should_return_1_for_days_outstanding_when_since_is_after_received"
    ],
    "Children": []
  },
  {
    "$id": "207",
    "FileName": "QuestionnaireFilesCleanerFacts.cs",
    "Description": "QuestionnaireFilesCleanerFacts",
    "WhenList": [],
    "ThenList": [
      "should_delete_prepare_reports_when_milestone_back_to_in_process_from_submitted",
      "should_delete_prepare_reports_which_generated_by_global_questionnaire_submission",
      "should_delete_prepare_reports_which_generated_by_single_submission",
      "should_delete_supporting_document_when_milestone_back_to_in_process_from_submitted"
    ],
    "Children": []
  },
  {
    "$id": "208",
    "FileName": "QuestionnaireSubmissionServiceFacts.cs",
    "Description": "QuestionnaireSubmissionServiceFacts",
    "WhenList": [],
    "ThenList": [
      "should_generate_prepares_report_and_upload_supporting_doc_when_consent_is_confirmed",
      "should_use_assignee_orgaizer_route_in_submittal_job",
      "should_not_generate_prepares_report_for_tracking_organizer",
      "should_return_exception_when_not_confirmed_to_ignore",
      "should_send_additionnal_notification_to_CA_tax_contact",
      "should_send_notification_to_tax_contact_when_responsible_office_without_team_mailbox",
      "should_send_notification_to_questionnaire_contact_office_team_mailbox",
      "should_not_send_notification_for_paper_questionnaire",
      "should_not_send_additional_notification_to_CA_tax_contact_when_does_not_have_ca_work_record"
    ],
    "Children": [
      {
        "$id": "209",
        "FileName": "QuestionnaireSubmissionServiceFacts.cs",
        "Description": "FakeWorkRecordRepository",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "210",
    "FileName": "WorkRecordExtensionsFacts.cs",
    "Description": "WorkRecordExtensionsFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_tiger_web_uri_for_a_work_record",
      "should_assignment_matched_when_workrecord_country_is_same_with_assignee_home_country",
      "should_assignment_not_matched_when_workrecord_fiscal_endDate_is_ealier_than_assignment_startDate",
      "should_assignment_matched_when_there_is_overlap_between_workrecord_fiscal_date_and_assignment_date",
      "should_assignment_matched_when_immigration_workrecord_and_assignment_country_are_same",
      "should_assignment_matched_when_workrecord_starDate_is_one_year_later_than_assignment_endDate",
      "should_assignment_not_matched_when_workrecord_starDate_is_one_year_later_than_assignment_expectEndDate"
    ],
    "Children": []
  },
  {
    "$id": "211",
    "FileName": "WorkRecordFacts.cs",
    "Description": "WorkRecordFacts",
    "WhenList": [],
    "ThenList": [
      "should_only_filter_unreceived_missing_item_from_assignee",
      "should_return_null_when_workrecord_has_no_organizer",
      "should_return_null_when_workrecord_not_submitted",
      "should_return_empty_when_no_missing_items_from_assignee",
      "should_get_contacts_from_responsible_office_if_responsible_office_is_coordinating_office",
      "should_get_contacts_from_responsible_office_if_responsible_office_is_working_office",
      "should_get_contacts_from_responsible_office_if_responsible_office_has_no_secondary_contact",
      "should_get_contacts_from_engagement_coordinating_office",
      "should_get_year_for_work_record"
    ],
    "Children": []
  },
  {
    "$id": "212",
    "FileName": "DeliveredMilestoneMovementConditionFacts.cs",
    "Description": "DeliveredMilestoneMovementConditionFacts",
    "WhenList": [],
    "ThenList": [
      "should_pass_given_it_is_NON_UK_work_record",
      "should_pass_given_IR_Mark_NOT_provided_for_UK_work_record",
      "should_pass_given_IR_Mark_provided_for_UK_work_record"
    ],
    "Children": []
  },
  {
    "$id": "213",
    "FileName": "FeatureToggleFacts.cs",
    "Description": "FeatureToggleFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_feature_toggles"
    ],
    "Children": []
  },
  {
    "$id": "214",
    "FileName": "EngagementTypeOfServiceDtoFacts.cs",
    "Description": "EngagementTypeOfServiceDtoFacts",
    "WhenList": [],
    "ThenList": [
      "should_convert_EngagementTypeOfServiceDto_to_EngagementTypeOfService"
    ],
    "Children": []
  },
  {
    "$id": "215",
    "FileName": "OutOfScopeWorksExtensionFacts.cs",
    "Description": "OutOfScopeWorksExtensionFacts",
    "WhenList": [],
    "ThenList": [
      "should_convert_outOfScopeWork_to_outOfScopeWorkDto"
    ],
    "Children": []
  },
  {
    "$id": "216",
    "FileName": "QueryableWorkRecordToDtoExtensionsFacts.cs",
    "Description": "QueryableWorkRecordToDtoExtensionsFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_get_milestones_info_if_media_type_not_contains_withStatusInfo",
      "should_not_get_milestones_info_if_media_type_contains_withStatusInfo_and_value_is_false",
      "should_get_milestones_info_if_media_type_contains_withStatusInfo",
      "should_get_questionnaire_due_date_in_iso_8601_date_time_format",
      "should_get_service_status",
      "should_get_isEfileConsentOn_field_as_false",
      "should_get_isEfileConsentOn_field_as_true",
      "should_get_create_work_record_note_link",
      "should_get_patch_custom_field_link_for_tax_work_record",
      "should_not_get_patch_custom_field_link_when_engagement_have_not_any_custom_fields",
      "should_return_immigration_work_record_info"
    ],
    "Children": []
  },
  {
    "$id": "217",
    "FileName": "WorkRecordNoteToDtoExtensionsFacts.cs",
    "Description": "WorkRecordNoteToDtoExtensionsFacts",
    "WhenList": [],
    "ThenList": [
      "should_convert_workRecordNote_to_dto_when_workRecordNote_has_everything",
      "should_convert_workRecordNote_to_dto_when_there_is_no_account_or_createDate"
    ],
    "Children": []
  },
  {
    "$id": "218",
    "FileName": "AssigneeEventsRepresentationFacts.cs",
    "Description": "AssigneeEventsRepresentationFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_event_modifier_guid_as_stored_employeeId_when_employeeId_is_not_null",
      "should_return_event_modifier_guid_as_staff_first_employeeId_when_employeeId_is_null"
    ],
    "Children": []
  },
  {
    "$id": "219",
    "FileName": "EngagementEventsRepresentationFacts.cs",
    "Description": "StaffEventsRepresentationFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_event_modifier_guid_as_stored_employeeId_when_employeeId_is_not_null",
      "should_return_event_modifier_guid_as_staff_first_employeeId_when_employeeId_is_null"
    ],
    "Children": []
  },
  {
    "$id": "220",
    "FileName": "EngagementEventsRepresentationFacts.cs",
    "Description": "EngagementEventsRepresentationFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_event_modifier_guid_as_stored_employeeId_when_employeeId_is_not_null",
      "should_return_event_modifier_guid_as_staff_first_employeeId_when_employeeId_is_null"
    ],
    "Children": []
  },
  {
    "$id": "221",
    "FileName": "WorkRecordEventsRepresentationFacts.cs",
    "Description": "WorkRecordEventsRepresentationFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_event_modifier_guid_as_stored_employeeId_when_employeeId_is_not_null",
      "should_return_event_modifier_guid_as_staff_first_employeeId_when_employeeId_is_null"
    ],
    "Children": []
  },
  {
    "$id": "222",
    "FileName": "HttpRequestMessageExtensionFacts.cs",
    "Description": "HttpRequestMessageExtensionFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_content_type_parameters_from_request"
    ],
    "Children": []
  },
  {
    "$id": "223",
    "FileName": "FileResourceProviderFacts.cs",
    "Description": "FileResourceProviderFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_audience_equal_to_pwc_and_all_files_given_list_of_files"
    ],
    "Children": []
  },
  {
    "$id": "224",
    "FileName": "ImmigrationWorkRecordToDtoExtensionsFacts.cs",
    "Description": "ImmigrationWorkRecordToDtoExtensionsFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_immigration_work_record_info",
      "should_return_organizer_without_questionnaire_links_when_immigration_work_record_has_issues",
      "should_not_return_consents_status_link"
    ],
    "Children": []
  },
  {
    "$id": "225",
    "FileName": "KpiOverviewAccessControlFacts.cs",
    "Description": "KpiOverviewAccessControlFacts",
    "WhenList": [],
    "ThenList": [
      "should_can_view_engagement_kpi_overview_when_login_with_global_admin",
      "should_can_view_engagement_kpi_overview_when_login_with_engagement_admin",
      "should_can_view_engagement_kpi_overview_when_login_with_coordinating_office_primary_contact_not_in_the_office",
      "should_can_view_engagement_kpi_overview_when_login_with_coordinating_office_secondary_contact",
      "should_can_view_engagement_kpi_overview_when_login_with_coordinating_office_staff",
      "should_can_view_engagement_kpi_overview_when_login_with_delegated_coordinating_office_secondary_contact",
      "should_can_view_engagement_kpi_overview_when_login_with_subscribed_office_secondary_contact",
      "should_can_view_engagement_kpi_overview_when_login_with_subscribed_office_who_is_social_security",
      "should_can_view_engagement_kpi_overview_when_login_with_subscribed_office_engagement_admin",
      "should_can_view_engagement_kpi_overview_when_login_with_subscribed_offce_staff",
      "should_can_not_view_engagement_kpi_overview_when_staff_not_related_to_engaement"
    ],
    "Children": []
  },
  {
    "$id": "226",
    "FileName": "AssigeeMapperFacts.cs",
    "Description": "AssigeeMapperFacts",
    "WhenList": [],
    "ThenList": [
      "should_convert_confirmed_fror_consent_to_assignee_dto",
      "should_return_empty_array_if_assignee_does_not_have_confirmed_consents",
      "should_return_assignee_basic_information",
      "should_get_primary_general_contact_whoes_office_located_in_home_country_of_assignee",
      "should_get_primary_general_contact_whoes_office_located_in_host_country_of_assignee",
      "should_get_primary_general_contact_according_alphabetical_order",
      "should_set_primary_general_contact_as_null_when_no_general_contacts",
      "should_get_team_mailbox_when_engagement_teambox_is_not_null",
      "should_get_team_phone_number_when_engagement_phone_number_is_not_null",
      "should_get_team_display_name_when_engagement_display_name_is_not_null",
      "FilterDuplicateOfficesWhenMappingAssigneeToDto",
      "should_not_return_invitation_link_when_assignee_has_no_contact"
    ],
    "Children": []
  },
  {
    "$id": "227",
    "FileName": "EngagementAuthorizationListReportBuilderFacts.cs",
    "Description": "EngagementAuthorizationListReportBuilderFacts",
    "WhenList": [],
    "ThenList": [
      "should_generate_report_right_format_by_assingeeId_and_category",
      "should_filter_authorization_list_by_country",
      "should_filter_authorization_list_only_with_authorized_only_filter",
      "should_filter_authorization_list_by_assingee_query",
      "should_generate_time_data_in_report_format",
      "should_filter_by_calander_year",
      "should_show_authorization_list_finalization_status_for_one_country",
      "should_show_authorization_list_finalization_status_for_global",
      "should_show_authorization_list_finalization_status_for_all_calendar_years",
      "should_show_finalization_status_for_authorization_items"
    ],
    "Children": []
  },
  {
    "$id": "228",
    "FileName": "ReportHelperFacts.cs",
    "Description": "ReportHelperFacts",
    "WhenList": [],
    "ThenList": [
      "should_set_report_generated_time_in_specified_timezone"
    ],
    "Children": []
  },
  {
    "$id": "229",
    "FileName": "AccountSyncRepositoryFacts.cs",
    "Description": "AccountSyncRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_update_concurrentcy"
    ],
    "Children": []
  },
  {
    "$id": "230",
    "FileName": "EFileStatusRepositoryFacts.cs",
    "Description": "EFileStatusRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_new_efilestatus"
    ],
    "Children": []
  },
  {
    "$id": "231",
    "FileName": "EngagementRepositoryFacts.cs",
    "Description": "EngagementRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_save_tax_if_not_set_practice_type",
      "should_eager_load_engagement_assignment_types",
      "should_save_practice_type"
    ],
    "Children": []
  },
  {
    "$id": "232",
    "FileName": "FeatureListRepositoryFacts.cs",
    "Description": "FeatureListRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_latest_feature_list"
    ],
    "Children": []
  },
  {
    "$id": "233",
    "FileName": "OutOfScopeWorkRepositoryFacts.cs",
    "Description": "OutOfScopeWorkRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_out_of_scope_work"
    ],
    "Children": []
  },
  {
    "$id": "234",
    "FileName": "QuerableAssigneeRepositoryFacts.cs",
    "Description": "QuerableAssigneeRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_have_all_result_when_search_top_is_minus_one",
      "should_not_have_assignee_whose_engagements_are_all_inactive",
      "should_have_assignee_who_has_any_active_engagement"
    ],
    "Children": []
  },
  {
    "$id": "235",
    "FileName": "StaffRepositoryFacts.cs",
    "Description": "StaffRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_find_all_staffs_with_only_active_status",
      "should_not_find_inactive_staff_when_get_all_with_pending",
      "should_find_staff_with_active_status_by_id",
      "should_not_find_staff_with_pending_status_by_id",
      "should_not_find_staff_with_inactive_status_by_id",
      "should_not_get_active_staff_when_find_by_id_with_pending",
      "should_find_staffs_with_active_status_by_ids",
      "should_veriry_staff_with_active_status_existed"
    ],
    "Children": []
  },
  {
    "$id": "236",
    "FileName": "TaskTemplateRepositoryFacts.cs",
    "Description": "TaskTemplateRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_save_task_template"
    ],
    "Children": []
  },
  {
    "$id": "237",
    "FileName": "TaxReturnWorkRecordRepositoryFacts.cs",
    "Description": "TaxReturnWorkRecordRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_actived_tax_work_record_with_default",
      "should_filter_actived_tax_work_record_by_service_status",
      "should_filter_actived_tax_work_record_by_assignee_status",
      "should_filter_actived_tax_work_record_by_year_after",
      "should_filter_actived_tax_work_record_by_foreign_bank_question_set_id",
      "should_filter_actived_tax_work_record_by_engagements",
      "should_filter_actived_tax_work_record_by_organizer",
      "should_filter_actived_tax_work_record_by_having_missing_item"
    ],
    "Children": []
  },
  {
    "$id": "238",
    "FileName": "ConsentRequestBuilderFacts.cs",
    "Description": "ConsentRequestBuilderFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_valid_consent_request_given_assignee_subsribes_mytaxes",
      "should_return_valid_consent_request_given_assignee_no_questionset",
      "should_return_fror_consent_request_given_assignee_has_tax_workrecord"
    ],
    "Children": []
  },
  {
    "$id": "239",
    "FileName": "UpdateAssigneeRequestTransformerFacts.cs",
    "Description": "UpdateAssigneeRequestTransformerFacts",
    "WhenList": [],
    "ThenList": [
      "should_merge_data_from_request_to_assigne",
      "should_throw_exception_when_trying_to_remove_all_general_contacts"
    ],
    "Children": []
  },
  {
    "$id": "240",
    "FileName": "AccountNotificationSenderFacts.cs",
    "Description": "AccountNotificationSenderFacts",
    "WhenList": [],
    "ThenList": [
      "should_send_email_when_unlock_kayla",
      "should_send_email_when_unlock_vincent",
      "should_send_invitation_email_to_assignee_and_email_history",
      "should_send_invitation_email_to_myVisas",
      "should_send_invitation_email_with_culture_by_engagement",
      "should_send_invitation_email_to_assignee_with_team_mailbox",
      "should_send_invitation_email_to_assignee_with_team_mailbox_and_without_display_name"
    ],
    "Children": []
  },
  {
    "$id": "241",
    "FileName": "AssigneeServiceCreateAsyncFacts.cs",
    "Description": "AssigneeServiceCreateAsyncFacts",
    "WhenList": [],
    "ThenList": [
      "should_create_assignee_with_account_Id",
      "should_return_null_and_not_create_assignee_when_account_creation_fails"
    ],
    "Children": []
  },
  {
    "$id": "242",
    "FileName": "AssigneeServiceUpdateAsyncFacts.cs",
    "Description": "AssigneeServiceUpdateAsyncFacts",
    "WhenList": [],
    "ThenList": [
      "should_update_assignee_with_account_info",
      "should_return_null_and_not_update_assignee_when_updaing_account_fails"
    ],
    "Children": []
  },
  {
    "$id": "243",
    "FileName": "BriefingScheduleServiceFacts.cs",
    "Description": "BriefingScheduleServiceFacts",
    "WhenList": [],
    "ThenList": [
      "should_update_corresponding_address_field",
      "should_record_history_for_selected_briefing_address_changing",
      "should_not_record_history_for_selected_briefing_address_when_address_not_changed",
      "should_record_history_for_selected_briefing_address_when_only_change_briefing_method",
      "should_not_record_history_for_selected_briefing_address_firstly_scheduled_as_by_phone",
      "should_record_history_for_selected_briefing_address_when_change_briefing_method_and_target_address",
      "should_not_record_history_for_selected_briefing_address_when_change_briefing_method_to_by_phone"
    ],
    "Children": []
  },
  {
    "$id": "244",
    "FileName": "BriefingWorkRecordNotificationSenderFacts.cs",
    "Description": "BriefingWorkRecordNotificationSenderFacts",
    "WhenList": [],
    "ThenList": [
      "should_send_briefing_work_record_notification_email_to_uninvited_assignee",
      "should_send_briefing_work_record_notification_email_to_assignee_with_team_mailbox",
      "should_only_overwrite_mail_from_when_engagement_with_team_mail_box_but_not_display_name",
      "should_only_overwrite_mail_from_when_engagement_with_team_mail_box_but_no_phoneNumber",
      "should_send_email_with_correct_client_name_when_send_notification_to_assignee"
    ],
    "Children": []
  },
  {
    "$id": "245",
    "FileName": "ConsentServiceFacts.cs",
    "Description": "ConsentServiceFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_load_unsigned_consent_for_paper_questionnaire",
      "unsigned_consent_without_confirm",
      "unsigned_consent_has_confirm",
      "should_return_unsigned_consent",
      "should_get_need_warn_consents_when_all_consents_needed",
      "should_get_need_warn_consents_when_fror_need_warn",
      "should_get_need_warn_consents_according_to_required_consents",
      "should_get_need_warn_consents_regardless_of_confirmed_unsigned_consents",
      "should_get_need_warn_consents_when_partII_not_sign",
      "should_get_need_warn_consents_according_to_partII"
    ],
    "Children": []
  },
  {
    "$id": "246",
    "FileName": "CustomizedEmailFormatServiceFacts.cs",
    "Description": "CustomizedEmailFormatServiceFacts",
    "WhenList": [],
    "ThenList": [
      "should_forbidden_other_not_allowed_html_tag",
      "should_allow_supported_html_tag"
    ],
    "Children": []
  },
  {
    "$id": "247",
    "FileName": "EngagementGlobalComplianceKpiServiceFacts.cs",
    "Description": "EngagementGlobalComplianceKpiServiceFacts",
    "WhenList": [],
    "ThenList": [
      "should_calculate_global_compliance_in_current_quartar_given_no_work_record_available",
      "should_get_global_compliance_of_0_in_current_quartar_given_one_work_record_of_not_delivered",
      "should_calculate_global_compliance_in_q1_as_current_quartar_given_work_record_delivered",
      "should_include_work_record_whose_responsible_office_is_unsubscribed_from_engagement",
      "should_include_not_delivered_work_record_whose_responsible_office_is_unsubscribed_from_engagement",
      "should_calculate_global_compliance_in_q1_as_current_quartar_given_work_records_delivered_among_multiple_engagements",
      "should_calculate_global_compliance_engagement_average_given_work_records_among_multiple_engagements",
      "should_calculate_global_compliance_in_Q2_as_current_quartar_given_work_record_delivered",
      "should_calculate_global_compliance_in_Q3_as_current_quartar_given_work_record_delivered",
      "should_calculate_global_compliance_in_Q4_as_current_quartar_given_work_record_delivered",
      "should_calculate_global_compliance_in_specific_year_given_work_record_delivered_in_different_years",
      "should_calculate_global_compliance_in_the_year_before_last_year_given_work_record_delivered_in_different_years",
      "should_calculate_global_compliance_in_current_quartar_given_one_work_record_delivered_and_one_not_deliverd",
      "should_calculate_global_compliance_in_current_quartar_given_one_work_record_of_being_cancelled",
      "should_calculate_global_compliance_in_current_quartar_given_one_work_record_of_being_declined",
      "should_treat_non_complier_as_not_completed_when_calculating_global_compliance",
      "should_treat_no_filing_requirement_as_completed_when_calculating_global_compliance",
      "should_calculate_global_compliance_in_current_quartar_given_2_delivered_work_record_in_different_offices",
      "should_not_calculate_global_compliance_for_315_office",
      "should_get_1_as_current_global_compliance_when_all_the_work_records_in_the_office_are_delivered",
      "should_get_current_global_compliance_when_part_of_the_workrecords_in_the_office_are_delivered",
      "should_get_current_global_compliance_when_part_of_the_workrecords_in_different_offices_are_delivered_in_Q3"
    ],
    "Children": []
  },
  {
    "$id": "248",
    "FileName": "EngagementInternalKpiCalculatorFacts.cs",
    "Description": "EngagementInternalKpiCalculatorFacts",
    "WhenList": [],
    "ThenList": [
      "given_one_office_with_no_wokrecord",
      "given_one_office_with_one_workrecod_with_kpi",
      "given_one_office_with_two_workrecod_with_kpi",
      "given_two_office_and_one_workrecod_with_kpi_in_first_office_and_no_workrecord_in_another_office",
      "given_two_office_and_one_workrecod_with_kpi_in_each_office",
      "given_two_office_with_workrecod_and_third_workrecod_with_office_not_in_workoffices",
      "should_ranking_be_1_1_3",
      "should_ranking_be_1_2_2_4"
    ],
    "Children": []
  },
  {
    "$id": "249",
    "FileName": "KpiOverviewExtensionFacts.cs",
    "Description": "KpiOverviewExtensionFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_100_overview_percentage_value_for_1m",
      "should_return_null_overview_percentage_value_for_null_value",
      "should_return_overview_percentage_value_for_0m",
      "should_return_overview_percentage_value_for_value_greater_than_1m",
      "should_return_overview_percentage_value_for_value_less_than_1m"
    ],
    "Children": []
  },
  {
    "$id": "250",
    "FileName": "MissingItemNotifyServiceFacts.cs",
    "Description": "MissingItemNotifyServiceFacts",
    "WhenList": [],
    "ThenList": [
      "should_send_missing_items_reminder"
    ],
    "Children": []
  },
  {
    "$id": "251",
    "FileName": "NewAccountResourceProviderFacts.cs",
    "Description": "NewAccountResourceProviderFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_null_when_getting_account_and_new_account_service_is_not_available",
      "should_return_null_when_creating_account_and_new_account_service_is_not_available",
      "should_return_null_when_creating_subscription_and_new_account_service_is_not_available"
    ],
    "Children": []
  },
  {
    "$id": "252",
    "FileName": "NotificationServiceProviderFacts.cs",
    "Description": "NotificationServiceProviderFacts",
    "WhenList": [],
    "ThenList": [
      "should_save_send_email_record_when_notify",
      "should_save_send_client_contacts_email_record_when_notify"
    ],
    "Children": []
  },
  {
    "$id": "253",
    "FileName": "QuestionnaireActivatorFacts.cs",
    "Description": "QuestionnaireActivatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_throw_conflict_exception_when_questionnaire_is_already_activated",
      "should_throw_forbidden_exception_when_due_date_is_earlier_than_now",
      "should_activated_tax_return_successful",
      "should_change_myTaxes_account_status_to_inactivate",
      "should_activate_immigration_questionnaire"
    ],
    "Children": []
  },
  {
    "$id": "254",
    "FileName": "TaxReturnFileServiceDeleteEventFact.cs",
    "Description": "TaxReturnFileServiceDeleteEventFact",
    "WhenList": [],
    "ThenList": [
      "should_delete_tax_return_file_when_delete_file"
    ],
    "Children": []
  },
  {
    "$id": "255",
    "FileName": "TaxReturnFileServicePublishEventFact.cs",
    "Description": "TaxReturnFileServicePublishEventFact",
    "WhenList": [],
    "ThenList": [
      "should_save_tax_return_file_when_publish_file",
      "should_not_save_tax_return_file_when_document_type_is_not_tax_return",
      "should_not_save_tax_return_file_when_related_resource_is_not_match_rule"
    ],
    "Children": []
  },
  {
    "$id": "256",
    "FileName": "TaxReturnFileServiceUploadEventFact.cs",
    "Description": "TaxReturnFileServiceUploadEventFact",
    "WhenList": [],
    "ThenList": [
      "should_save_tax_return_file_when_upload_file",
      "should_not_save_tax_return_file_when_document_type_is_not_tax_return",
      "should_not_save_tax_return_file_when_related_resource_is_not_match_rule",
      "should_not_save_tax_return_file_when_audience_is_PwC"
    ],
    "Children": []
  },
  {
    "$id": "257",
    "FileName": "DateRangeFacts.cs",
    "Description": "DateRangeFacts",
    "WhenList": [],
    "ThenList": [
      "should_throw_exception_when_start_date_after_end_date",
      "should_be_able_to_create_date_range_if_start_date_and_end_date_are_the_same",
      "should_has_overlap_if_this_range_contains_another_range",
      "should_has_overlap_if_another_range_contains_this_range",
      "should_has_overlap_if_this_range_start_date_in_another_range_and_end_date_not",
      "should_has_overlap_if_this_range_end_date_in_another_range_and_start_date_not",
      "should_has_overlap_if_this_range_start_date_is_the_same_day_with_another_range_end_date",
      "should_has_overlap_if_this_range_end_date_is_the_same_day_with_another_range_start_date",
      "should_not_has_overlap_if_this_range_before_another_range",
      "should_not_has_overlap_if_this_range_after_another_range",
      "should_ignore_time_when_calculate_overlap"
    ],
    "Children": []
  },
  {
    "$id": "258",
    "FileName": "ExpressionExtensionFacts.cs",
    "Description": "ExpressionExtensionFacts",
    "WhenList": [],
    "ThenList": [
      "ConditionalWhereFact",
      "WhereIfFact"
    ],
    "Children": []
  },
  {
    "$id": "259",
    "FileName": "ICalendarFacts.cs",
    "Description": "ICalendarFacts",
    "WhenList": [],
    "ThenList": [
      "should_generate_simple_icalendar_content",
      "should_generate_icalendar_content_with_some_default_value_when_first_time_create",
      "should_generate_icalendar_content_with_event_start_and_end_time",
      "should_generate_icalendar_content_with_event_start_and_end_time_when_start_time_is_midnight",
      "should_generate_icalendar_content_with_event_title_and_description",
      "should_generate_icalendar_content_with_alternative_rich_formated_description",
      "should_generate_icalendar_content_with_location",
      "should_generate_icalendar_content_with_organizer",
      "should_generate_icalendar_content_with_attendees",
      "should_generate_icalendar_content_with_unique_id"
    ],
    "Children": []
  },
  {
    "$id": "260",
    "FileName": "BasicInfoFacts.cs",
    "Description": "BasicInfoFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_PrimaryServiceUri_is_null",
      "should_be_invalid_when_primary_services_type_does_not_match_to_task_template_practice_type",
      "should_be_invalid_when_Engagement_is_not_belongs_to_assignee_client",
      "should_be_invalid_when_ServiceUris_not_all_exist",
      "should_be_invalid_if_engagement_template_uri_is_invalid",
      "should_be_invalid_if_task_template_uri_is_invalid",
      "should_be_invalid_when_checklist_template_uri_is_not_correct",
      "should_be_invalid_when_engagement_checklist_template_uri_is_not_correct",
      "should_be_invalid_when_set_engagement_task_template_as_engagement_checklist_template",
      "should_be_invalid_when_set_engagement_task_template_as_task_template",
      "should_be_invalid_when_set_task_template_as_engagement_task_template",
      "should_be_invalid_when_set_engagement_checklist_template_as_checklist_template",
      "should_be_invalid_when_set_checklist_template_as_engagement_checklist_template",
      "should_be_invalid_when_miss_task_assignment_for_applied_template",
      "should_be_invalid_when_rsponsibility_does_not_belong_responsible_office"
    ],
    "Children": [
      {
        "$id": "261",
        "FileName": "BasicInfoFacts.cs",
        "Description": "DummyBatchCreateAssingeeWorkRecordRequestValidator",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "262",
    "FileName": "ChecklistFacts.cs",
    "Description": "ChecklistFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_checklist_template_uri_is_not_correct",
      "should_be_invalid_when_engagement_checklist_template_uri_is_not_correct",
      "should_be_invalid_when_work_record_responsible_office_not_subscribed",
      "should_be_invalid_when_with_invalid_definition_id",
      "should_be_invalid_when_with_duplicate_Definition_id",
      "should_be_invalid_when_with_responsible_office_not_belong_subscribed"
    ],
    "Children": [
      {
        "$id": "263",
        "FileName": "ChecklistFacts.cs",
        "Description": "DummyBatchCreateAssingeeWorkRecordRequestValidator",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "264",
    "FileName": "ImmigrationFacts.cs",
    "Description": "ImmigrationFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_if_initiation_date_is_invalid",
      "should_be_invalid_if_clear_for_travel_project_date_is_invalid",
      "should_be_invalid_if_clear_for_work_project_date_is_invalid",
      "should_be_invalid_if_completion_project_date_is_invalid",
      "should_be_invalid_organizer_request",
      "should_be_valid_organizer_request",
      "should_be_valid_additional_service_task_assignments_request"
    ],
    "Children": []
  },
  {
    "$id": "265",
    "FileName": "TaxOrganizerFacts.cs",
    "Description": "TaxOrganizerFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_if_questionnaire_is_empty_when_create_tax_return_work_record",
      "should_be_invalid_if_due_date_is_empty_when_create_tax_return_work_record"
    ],
    "Children": []
  },
  {
    "$id": "266",
    "FileName": "TeqSettlementBatchUpdateStatusRequestValidatorFacts.cs",
    "Description": "TeqSettlementBatchUpdateStatusRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_error_when_status_is_unknown",
      "should_return_error_when_status_is_settled_and_date_is_null",
      "should_return_error_when_status_is_waiting_for_refund_and_date_is_null",
      "should_return_error_when_status_is_waiting_for_refund_and_date_is_a_past_date",
      "should_return_error_when_status_is_new",
      "should_return_error_when_status_is_partial_payment"
    ],
    "Children": []
  },
  {
    "$id": "267",
    "FileName": "TeqSettlementDeletePaymentRequestValidatorFacts.cs",
    "Description": "TeqSettlementDeletePaymentRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_error_when_status_is_unknown",
      "should_return_error_when_next_payment_date_is_not_a_future_date",
      "should_return_error_when_comment_has_more_than_2000_characters",
      "should_return_error_when_has_comment_and_delete_by_is_null",
      "should_be_valid_if_comment_is_null_or_empty"
    ],
    "Children": []
  },
  {
    "$id": "268",
    "FileName": "AssigneeMailRequestValidatorFacts.cs",
    "Description": "AssigneeMailRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_error_when_exceed_max_length",
      "should_return_error_when_mail_has_double_quote_character_within_send_from",
      "should_not_return_error_when_mail_has_following_sepecial_chars",
      "should_return_error_when_mail_has_double_quote_character_within_cc"
    ],
    "Children": []
  },
  {
    "$id": "269",
    "FileName": "AssigneeStatusMapperFacts.cs",
    "Description": "AssigneeStatusMapperFacts",
    "WhenList": [],
    "ThenList": [
      "should_map_go_assigneeStatus_to_tiger_assignee_status"
    ],
    "Children": []
  },
  {
    "$id": "270",
    "FileName": "AssigneeValidatorFacts.cs",
    "Description": "AssigneeValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_family_member_firstname_is_null_or_empty",
      "should_be_invalid_when_family_member_firstname_is_longer_than_255_characters",
      "should_be_invalid_when_family_member_lastname_is_null_or_empty",
      "should_be_invalid_when_family_member_lastname_is_longer_than_255_characters",
      "should_be_invalid_when_assignment_start_date_is_after_expected_end_date",
      "should_be_invalid_when_assignment_start_date_is_after_actual_end_date",
      "should_be_invalid_when_passport_country_is_empty",
      "should_be_valid_when_passport_number_is_empty",
      "should_be_valid_when_engagements_has_different_clients_with_assignee",
      "should_be_invalid_when_contact_engagement_not_in_assignee_engagements"
    ],
    "Children": []
  },
  {
    "$id": "271",
    "FileName": "BatchCreateBriefingWorkRecordRequestValidatorFacts.cs",
    "Description": "BatchCreateBriefingWorkRecordRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_if_scheduling_method_does_not_exist",
      "should_be_invalid_if_work_record_type_is_not_briefing",
      "should_be_invalid_if_scheduling_method_is_empty",
      "should_be_invalid_if_scheduling_method_is_online_and_available_briefing_methods_is_empty",
      "should_be_invalid_if_scheduling_method_is_online_and_any_of_available_briefing_methods_does_not_exist",
      "should_be_invalid_if_scheduling_method_is_online_and_available_briefing_methods_duplicated",
      "should_be_valid_if_available_scheduling_method_is_manually_and_briefing_method_is_empty",
      "should_be_invalid_if_briefing_coordinator_is_missing_when_scheduling_method_is_online",
      "should_be_valid_if_briefing_coordinator_is_provided_when_scheduling_method_is_online",
      "should_be_invalid_if_online_wr_use_other_briefing_method_and_name_of_other_briefing_method_is_empty",
      "should_not_complain_about_briefing_coordinator_if_briefing_coordinator_is_empty_when_scheduling_method_is_Manually",
      "should_be_invalid_if_briefing_work_record_is_manually"
    ],
    "Children": []
  },
  {
    "$id": "272",
    "FileName": "BatchUpdateCountryTypeOfServiceRequestValidatorFacts.cs",
    "Description": "BatchUpdateCountryTypeOfServiceRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_updating_jurisdiction_of_used_service",
      "should_be_invalid_when_updating_practice_type_of_used_service",
      "should_be_invalid_when_updating_without_master_chart_of_service"
    ],
    "Children": []
  },
  {
    "$id": "273",
    "FileName": "BatchUpdateTaxReturnWorkRecordRequestValidatorFacts.cs",
    "Description": "BatchUpdateTaxReturnWorkRecordRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid_when_questionnaire_due_date_is_valid_future_date",
      "should_be_invalid_when_questionnaire_due_date_is_incorrect",
      "should_be_invalid_when_questionnaire_due_date_is_past",
      "should_be_invalid_when_tax_contact_uri_is_incorrect",
      "should_be_valid_when_tax_contact_uri_is_correct"
    ],
    "Children": []
  },
  {
    "$id": "274",
    "FileName": "BatchUpdateWorkRecordAssignmentRequestValidatorFacts.cs",
    "Description": "BatchUpdateWorkRecordAssignmentRequestValidatorFact",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_assginment_is_no_in_work_record_assigneeAssignments",
      "should_be_invalid_when_work_record_is_not_exist"
    ],
    "Children": []
  },
  {
    "$id": "275",
    "FileName": "BatchUpdateWorkRecordRequestValidatorFacts.cs",
    "Description": "BatchUpdateWorkRecordRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid_when_request_estimated_completion_date_is_valid_future_date",
      "should_be_valid_when_request_estimated_completion_date_is_null_or_empty",
      "should_be_invalid_when_request_estimated_completion_date_is_incorrect",
      "should_be_invalid_when_team_is_not_existed"
    ],
    "Children": []
  },
  {
    "$id": "276",
    "FileName": "BriefingWorkRecordValidatorFacts.cs",
    "Description": "BriefingWorkRecordValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_fail_validation_when_online_briefing_coordinator_is_empty",
      "should_fail_validation_when_online_briefing_coordinator_is_not_acl_for_restricted_engagement",
      "should_be_valid_when_online_briefing_coordinator_is_acl_for_restricted_engagement",
      "should_fail_validation_when_online_briefing_coordinator_is_not_acl_for_restricted_assignee",
      "should_be_valid_when_online_briefing_coordinator_is_acl_for_restricted_assignee",
      "should_fail_validation_when_online_briefing_coordinator_practice_type_differs_from_work_record_practice_type",
      "should_not_complain_about_online_briefing_coordinator_if_belongs_to_coordinating_office",
      "should_not_complain_about_online_briefing_coordinator_if_belongs_to_delegated_office",
      "should_not_complain_about_online_briefing_coordinator_if_belongs_to_subscribed_office",
      "should_fail_validation_when_online_briefing_coordinator_is_not_in_any_of_coordinating_or_delegated_or_subscribed_offices",
      "should_fail_validation_if_briefing_coordinator_is_present_for_mannually_briefing_work_record"
    ],
    "Children": []
  },
  {
    "$id": "277",
    "FileName": "ChecklistTemplateValidatorFacts.cs",
    "Description": "ChecklistTemplateValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_name_is_invalid",
      "should_be_invalid_when_name_exceeds_max_length_limit_255",
      "should_be_invalid_when_owned_by_is_null",
      "should_be_invalid_when_task_definitions_is_empty",
      "should_be_invalid_when_task_name_is_invalid",
      "should_be_invalid_when_task_name_exceeds_max_length_limit_255",
      "should_be_invalid_when_office_subscription_is_duplicated",
      "should_be_invalid_when_country_subscription_is_duplicated",
      "should_be_invalid_when_country_subscription_includes_office_subscription"
    ],
    "Children": []
  },
  {
    "$id": "278",
    "FileName": "ClientRequestValidatorFacts.cs",
    "Description": "ClientRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_general_user_approve_or_reject_a_client_request",
      "should_be_invalid_when_status_is_unknown",
      "should_be_valid_when_evelyn_approve_or_reject"
    ],
    "Children": []
  },
  {
    "$id": "279",
    "FileName": "ConsentSignConfirmRequestValidatorFacts.cs",
    "Description": "ConsentSignConfirmRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid_when_confirm_fror_was_signed_before_today",
      "should_be_invalid_when_confirm_fror_was_signed_more_than_90_days_ago",
      "should_be_valid_when_confirm_7216_was_signed_before_today"
    ],
    "Children": []
  },
  {
    "$id": "280",
    "FileName": "CreateAssigneeCsvRequestValidatorFacts.cs",
    "Description": "CreateAssigneeCsvRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid_when_all_fields_are_correct",
      "should_be_valid_when_family_relationship_is_correct",
      "should_be_invalid_when_gender_is_incorrect",
      "should_be_valid_when_gender_is_correct",
      "should_be_valid_when_gender_is_empty",
      "should_be_valid_when_no_family_member",
      "should_be_invalid_when_has_FamilyDateOfBirth_and_FamilyRelationship_is_empty",
      "should_be_invalid_when_has_FamilyCountry_and_FamilyRelationship_is_empty",
      "should_be_invalid_when_has_FamilyFirstName_and_FamilyRelationship_is_empty",
      "should_be_invalid_when_has_FamilyLastName_and_FamilyRelationship_is_empty",
      "should_be_invalid_when_has_FamilyTaxpayerId_and_FamilyRelationship_is_empty",
      "should_be_invalid_when_FamilyRelationship_is_incorrect",
      "should_be_valid_when_timezone_is_empty",
      "should_be_invalid_when_timezone_is_not_in_repository",
      "should_be_invalid_when_FamilyDateOfBirth_is_incorrect_date",
      "should_be_invalid_when_DateOfBirth_is_incorrect_date",
      "should_be_invalid_when_AssignmentStartDate_is_incorrect_date",
      "should_be_invalid_when_AssignmentActualEndDate_is_incorrect_date",
      "should_be_invalid_when_AssignmentExpectedEndDate_is_incorrect_date",
      "should_be_invalid_when_contact_GUID_is_not_given",
      "should_be_invalid_when_contact_is_not_exist",
      "should_be_invalid_when_FamilyRelationship_and_Gender_is_incorrect",
      "should_be_valid_when_Country_is_null_or_empty",
      "should_be_invalid_when_Country_is_invalid",
      "should_be_valid_when_AssignmentCountry_is_null_or_empty",
      "should_be_invalid_when_AssignmentCountry_is_invalid",
      "should_be_valid_when_FamilyCountry_is_null_or_empty",
      "should_be_invalid_when_FamilyCountry_is_invalid",
      "should_be_valid_when_HomeCountry_is_null_or_empty",
      "should_be_invalid_when_HomeCountry_is_invalid",
      "should_be_valid_when_PassportCountry_is_null_or_empty",
      "should_be_invalid_when_PassportCountry_is_invalid"
    ],
    "Children": []
  },
  {
    "$id": "281",
    "FileName": "CreateAssigneeRequestValidatorFacts.cs",
    "Description": "CreateAssigneeRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_DateOfBirth_is_empty_or_null",
      "should_be_invalid_when_custom_field_value_not_valid",
      "should_be_valid_when_HostCountryUri_is_empty_or_null"
    ],
    "Children": []
  },
  {
    "$id": "282",
    "FileName": "CreateAssingeeRequestValiatorFacts.cs",
    "Description": "CreateAssingeeRequestValiatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid",
      "should_be_invalid_if_date_of_birth_is_null_or_empty",
      "should_be_invalid_if_date_of_birth_is_not_a_correct_date",
      "should_be_invalid_if_first_name_is_null_or_empty",
      "should_be_invalid_if_last_name_is_null_or_empty",
      "should_be_invalid_if_primary_email_is_null_or_empty",
      "should_be_invalid_if_primary_email_is_incorrect",
      "should_be_invalid_if_engagement_uri_is_null_or_empty",
      "should_be_invalid_if_engagement_uri_is_incorrect",
      "should_be_invalid_if_engagement_is_inactive",
      "should_be_invalid_if_home_country_uri_is_null_or_empty",
      "should_be_invalid_if_home_country_uri_is_incorrect",
      "should_be_invalid_if_host_country_uri_is_incorrect",
      "should_be_invalid_when_DateOfBirth_is_empty_or_null",
      "should_be_valid_when_HostCountryUri_is_empty_or_null"
    ],
    "Children": []
  },
  {
    "$id": "283",
    "FileName": "CreateChecklistTemplateRequestValidatorFacts.cs",
    "Description": "CreateChecklistTemplateRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_checklist_task_definitions_is_not_given",
      "should_be_invalid_when_neither_engagement_id_nor_subscriptions_is_provided",
      "should_be_invalid_when_practice_type_is_invalid",
      "should_be_valid"
    ],
    "Children": []
  },
  {
    "$id": "284",
    "FileName": "CreateChecklistTemplateRequestValidatorForRestrictedEngagementFacts.cs",
    "Description": "CreateChecklistTemplateRequestValidatorForRestrictedEngagementFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid_when_user_is_on_restricted_engagement_acl",
      "should_be_invalid_when_user_is_not_on_restricted_engagement_acl"
    ],
    "Children": []
  },
  {
    "$id": "285",
    "FileName": "CreateClientRequestValidatorFacts.cs",
    "Description": "CreateClientRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_given_invalid_data",
      "should_be_invalid_when_note_is_more_than_2000",
      "should_be_invalid_when_request_reason_is_more_than_2000",
      "should_be_valid_given_valid_create_client_request",
      "should_be_invalid_when_request_by_is_not_long"
    ],
    "Children": []
  },
  {
    "$id": "286",
    "FileName": "CreateEmployerWorkRecordRequestValidatorFacts.cs",
    "Description": "CreateEmployerWorkRecordRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_valid_with_correct_request",
      "should_be_invalid_if_employer_work_record_name_or_year_or_primary_service_or_responsible_office_or_engagement_is_empty",
      "should_be_invalid_if_month_is_present_but_not_valid",
      "should_be_invalid_if_employer_work_record_year_is_less_than_min_year"
    ],
    "Children": []
  },
  {
    "$id": "287",
    "FileName": "CreateEngagementRequestValidatorFacts.cs",
    "Description": "CreateEngagementRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_create_engagement_with_invalid_name",
      "should_be_invalid_when_create_engagement_with_invalid_client",
      "should_be_invalid_when_create_engagement_without_contact",
      "should_be_invalid_when_create_engagement_with_invalid_contact",
      "should_be_invalid_when_practice_type_is_invalid",
      "should_be_invalid_when_create_engagement_with_invalid_coordinating_office",
      "should_be_invalid_when_create_engagement_with_invalid_engagement_admins",
      "should_be_invalid_if_engament_admin_is_not_same_practice_type",
      "should_be_invalid_if_there_is_more_than_two_engament_admins",
      "should_be_invalid_when_create_engagement_with_duplicate_engagement_admin",
      "should_be_invalid_if_office_contact_practice_type_is_not_engagement_practice_type",
      "should_be_invalid_when_coordinating_office_mailing_addresses_fields_more_then_50",
      "should_be_valid_when_coordinating_office_mailing_address_is_empty",
      "should_be_invalid_when_coordinating_office_mailing_address_is_not_correct_format",
      "should_be_invalid_when_mailing_address_is_empty_team_display_name_is_not_empty",
      "should_be_invalid_when_mailing_address_is_empty_team_phone_number_is_not_empty"
    ],
    "Children": []
  },
  {
    "$id": "288",
    "FileName": "CreateTagRequestValidatorFacts.cs",
    "Description": "CreateTagRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_true_when_is_valid_request",
      "should_be_false_when_office_is_invalid",
      "should_be_false_when_office_name_is_not_unique"
    ],
    "Children": []
  },
  {
    "$id": "289",
    "FileName": "CreateTaskTemplateRequestValidatorFacts.cs",
    "Description": "CreateTaskTemplateRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_neither_country_nor_office_is_not_provided",
      "should_be_valid_when_at_least_one_of_country_or_office_uri_is_provided",
      "should_be_invalid_when_practice_type_is_invalid"
    ],
    "Children": []
  },
  {
    "$id": "290",
    "FileName": "CreateTaskTemplateRequestValidatorForRestrictedEngagementFacts.cs",
    "Description": "CreateTaskTemplateRequestValidatorForRestrictedEngagementFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid_when_user_is_on_restricted_engagement_acl",
      "should_be_invalid_when_user_is_not_on_restricted_engagement_acl"
    ],
    "Children": []
  },
  {
    "$id": "291",
    "FileName": "CustomFieldEngagementRepositoryFacts.cs",
    "Description": "CreateCustomFieldRequestValidatorFactsBase",
    "WhenList": [],
    "ThenList": [
      "should_pass_validation_when_all_valid",
      "should_fail_when_location_is_emtpy",
      "should_fails_validation_when_name_empty",
      "should_fail_validation_when_custom_field_type_is_not_valid",
      "should_fail_validation_when_custom_field_list_contents_is_not_valid",
      "should_have_at_least_one_list_content_for_list_type_custom_field",
      "should_fail_when_practice_type_is_emtpy"
    ],
    "Children": []
  },
  {
    "$id": "292",
    "FileName": "CustomFieldEngagementRepositoryFacts.cs",
    "Description": "CustomFieldEngagementRepositoryFacts",
    "WhenList": [],
    "ThenList": [
      "should_fail_validation_when_engagement_id_is_null",
      "should_fail_when_engagement_id_not_exist"
    ],
    "Children": []
  },
  {
    "$id": "293",
    "FileName": "EmailFormatValidatorFacts.cs",
    "Description": "EmailFormatValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_succeed_given_an_valid_email_address",
      "should_fail_given_an_malformed_email_address",
      "should_fail_given_a_well_formed_email_address_but_who_exceeds_the_max_lenth_limit"
    ],
    "Children": []
  },
  {
    "$id": "294",
    "FileName": "EmployerReturnFileInfoRequestValidatorFacts.cs",
    "Description": "EmployerReturnFileInfoRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_invalid_when_status_is_not_new_and_decidedByEmail_is_nullOrEmpty",
      "should_invalid_when_status_is_not_new_and_decidedByName_is_nullOrEmpty",
      "should_invalid_when_status_is_not_new_and_decisionDate_is_nullOrEmpty",
      "should_invalid_when_status_is_not_new_and_decisionDate_is_in_future",
      "should_invalid_when_employer_return_type_is_empty",
      "should_invalid_when_employer_return_type_is_not_annual_or_clearance"
    ],
    "Children": []
  },
  {
    "$id": "295",
    "FileName": "EmployerReturnNotificationRequestValidatorFacts.cs",
    "Description": "EmployerReturnNotificationRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_invalid_when_send_from_sofia_email_address_is_nullOrEmpty",
      "should_invalid_when_send_to_nancy_email_address_is_nullOrEmpty",
      "should_invalid_when_to_email_address_is_invalid",
      "should_invalid_when_from_email_address_is_invalid"
    ],
    "Children": []
  },
  {
    "$id": "296",
    "FileName": "EmployerWorkRecordSearchRequestValidatorFacts.cs",
    "Description": "EmployerWorkRecordSearchRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_responsible_office_uri_is_invalid",
      "should_be_invalid_when_engagement_uri_is_invalid",
      "should_be_invalid_when_month_is_invalid",
      "should_be_valid_when_request_is_null"
    ],
    "Children": []
  },
  {
    "$id": "297",
    "FileName": "EmployerWorkRecordValidatorFact.cs",
    "Description": "EmployerWorkRecordValidatorFact",
    "WhenList": [],
    "ThenList": [
      "should_valid_if_work_record_is_valid",
      "should_fail_validation_when_work_record_name_exceeds_255_chars",
      "should_fail_validation_when_work_record_name_is_blank",
      "should_fail_validation_when_primary_service_is_null",
      "should_fail_validation_when_engagement_is_null"
    ],
    "Children": []
  },
  {
    "$id": "298",
    "FileName": "EngagementRoleReassignRequestValidatorFacts.cs",
    "Description": "EngagementRoleReassignRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_invalid_when_assign_to_staff_with_invalid_practice_type",
      "should_return_invalid_when_reassign_subscribed_and_delegated_office_responsibility_to_staff_in_other_office"
    ],
    "Children": []
  },
  {
    "$id": "299",
    "FileName": "EngagementTypeOfServiceUpdateServiceValidatorFacts.cs",
    "Description": "EngagementTypeOfServiceCreateServiceValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_validate_engagment_type_of_service_name_and_status_string",
      "should_be_invalid_if_country_type_of_service_is_invalid_and_engagement_service_is_active"
    ],
    "Children": []
  },
  {
    "$id": "300",
    "FileName": "HistoryItemValidatorFacts.cs",
    "Description": "HistoryItemValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_succeed_when_history_item_is_valid",
      "should_fail_when_property_what_is_empty",
      "should_fail_when_property_when_is_empty",
      "should_allow_pass_when_property_modifier_id_is_zero",
      "should_allow_to_pass_when_property_modifier_type_is_empty"
    ],
    "Children": []
  },
  {
    "$id": "301",
    "FileName": "MilestoneMovementConditionFacts.cs",
    "Description": "MilestoneMovementValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_success_when_move_milestone_from_others_to_delivered",
      "should_be_success_when_move_immigration_work_record_milestone_when_questionnaire_is_not_submitted",
      "should_be_not_allow_when_move_immigration_work_record_milestone_to_done_when_questionnaire_is_not_submmited",
      "should_throw_exception_when_move_milestone_from_others_to_record_created_when_work_record_has_organizer",
      "should_throw_exception_when_move_milestone_from_others_to_in_preparation",
      "should_throw_exception_when_move_milestone_from_record_created_when_work_record_has_outstanding_organizer",
      "should_not_throw_exception_when_move_milestone_to_done_for_uk_workrecord_without_irmark"
    ],
    "Children": []
  },
  {
    "$id": "302",
    "FileName": "OrganizerUpdateRequestValidatorFacts.cs",
    "Description": "OrganizerUpdateRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_for_contact_and_contact_office",
      "should_be_valid_for_contact_and_contact_office"
    ],
    "Children": []
  },
  {
    "$id": "303",
    "FileName": "OrganizerValidatorFacts.cs",
    "Description": "OrganizerValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_if_tax_contact_is_null_and_contact_office_without_display_name",
      "should_be_invalid_if_contact_office_does_not_belong_to_engagement_offices",
      "should_be_invalid_if_contact_office_is_null",
      "should_be_valid_if_contact_is_null_and_contact_office_has_team_display_name",
      "should_be_valid_if_tax_contact_exist_and_contact_office_without_display_name"
    ],
    "Children": []
  },
  {
    "$id": "304",
    "FileName": "OutOfScopeWorkRequestValidatorFacts.cs",
    "Description": "OutOfScopeWorkRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_add_out_of_scope_work_with_invalid_data",
      "should_be_valid_when_add_out_of_scope_work_with_valid_data"
    ],
    "Children": []
  },
  {
    "$id": "305",
    "FileName": "SocialSecurityWorkRecordValidatorFacts.cs",
    "Description": "SocialSecurityWorkRecordValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_pass_when_start_date_earlier_than_expiry_date",
      "should_pass_when_start_date_equal_than_expiry_date",
      "should_fail_when_start_date_later_than_expiry_date",
      "should_pass_when_have_both_start_date_and_expiry_date_and_mark_work_record_to_complete",
      "should_fail_when_only_have_start_date_and_mark_work_record_to_complete",
      "should_fail_when_only_have_expiry_date_and_mark_work_record_to_complete"
    ],
    "Children": []
  },
  {
    "$id": "306",
    "FileName": "StaffApprovementRequestValidatorFacts.cs",
    "Description": "StaffApprovementRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_practice_type_is_not_in_pending_practice_type",
      "should_be_valid_when_practice_type_is_in_pending_practice_type"
    ],
    "Children": []
  },
  {
    "$id": "307",
    "FileName": "StaffRequestValidatorFacts.cs",
    "Description": "StaffRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_staff_request_validator_fails_when_the_count_of_office_level_role_has_reached_threshold",
      "should_immi_staff_request_validator_success_when_the_count_of_office_level_role_with_tax_practice_type_has_reached_threshold",
      "should_origin_staff_request_validator_success_when_the_count_of_office_level_role_has_reached_threshold_and_not_changing_access_or_office",
      "should_stafff_request_fails_when_the_count_of_country_level_role_has_reach_threshold",
      "should_staff_request_fails_when_delete_one_or_more_employee_ids"
    ],
    "Children": []
  },
  {
    "$id": "308",
    "FileName": "StaffValidatorFacts.cs",
    "Description": "StaffValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_staff_has_duplicate_guids",
      "should_be_invalid_when_staff_guid_same_as_other_staff",
      "should_be_invalid_when_staff_guid_same_as_pending_staff",
      "should_be_invalid_when_staff_guid_same_as_inactive_staff",
      "should_be_invalid_when_one_of_staff_guids_is_empty",
      "should_be_invalid_when_staff_guid_is_empty",
      "should_be_invalid_when_staff_guid_exceeds_20"
    ],
    "Children": []
  },
  {
    "$id": "309",
    "FileName": "TaskTemplateValidatorFacts.cs",
    "Description": "TaskTemplateValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_office_subscription_is_duplicated",
      "should_be_invalid_when_country_subscription_is_duplicated",
      "should_be_invalid_when_country_subscription_includes_office_subscription",
      "should_be_valid_when_two_different_countries_subscribed"
    ],
    "Children": []
  },
  {
    "$id": "310",
    "FileName": "TaxEqualizationRequestValidatorFacts.cs",
    "Description": "TaxEqualizationRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid_when_tax_equalization_amount_equals_0",
      "should_be_invalid_if_currency_is_empty_or_unknown",
      "should_be_invalid_if_date_finalized_is_empty_or_null",
      "should_be_invalid_if_date_finalized_is_in_the_future"
    ],
    "Children": []
  },
  {
    "$id": "311",
    "FileName": "TigerValidatorFacts.cs",
    "Description": "TigerValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_throw_validation_error_exception_when_validation_fails",
      "should_throw_conflict_exception_when_validation_fails",
      "should_throw_conflict_exception_when_multi_exception_coexisting"
    ],
    "Children": [
      {
        "$id": "312",
        "FileName": "TigerValidatorFacts.cs",
        "Description": "FakeIIndex",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      },
      {
        "$id": "313",
        "FileName": "TigerValidatorFacts.cs",
        "Description": "FakeValidator",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      },
      {
        "$id": "314",
        "FileName": "TigerValidatorFacts.cs",
        "Description": "FakeEntity",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "315",
    "FileName": "UpdateAssigneeClientEngagementRequestValidatorFacts.cs",
    "Description": "UpdateAssigneeClientEngagementRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_valid_given_engagement_uri_is_valid_when_association_empty",
      "should_valid_given_update_association_only",
      "should_valid_given_update_association_and_engagement",
      "should_invalid_given_engagement_uri_is_invalid",
      "should_invalid_given_association",
      "should_valid_when_one_effective_date_null",
      "should_invalid_when_all_effective_dates_null"
    ],
    "Children": []
  },
  {
    "$id": "316",
    "FileName": "UpdateAssigneeRequestValidatorFacts.cs",
    "Description": "UpdateAssigneeRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_gender_is_invalid",
      "should_be_invalid_when_status_is_invalid",
      "should_be_invalid_when_contact_is_not_responsible_for_engagement",
      "should_be_invalid_when_contact_staff_practice_type_does_not_match_engagement_practice_type"
    ],
    "Children": []
  },
  {
    "$id": "317",
    "FileName": "UpdateEngagementCoordinatingOfficeRequestValidatorFacts.cs",
    "Description": "UpdateEngagementCoordinatingOfficeRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_correct_request",
      "should_invalidate_when_contacts_duplicate",
      "should_correct_when_director_when_contacts_but_no_director_or_manager",
      "should_invalidate_when_contacts_in_coordinating_office_is_empty",
      "should_invalidate_when_contacts_and_engagement_have_different_practice_types",
      "should_invalidate_when_contacts_not_exist",
      "should_be_invalid_when_coordinating_office_mailing_addresses_fields_more_then_50",
      "should_be_valid_when_coordinating_office_mailing_address_is_empty",
      "should_be_invalid_when_coordinating_office_mailing_address_is_not_correct_format",
      "should_be_invalid_when_mailing_address_is_empty_team_display_name_is_not_empty",
      "should_be_invalid_when_mailing_address_is_empty_team_phone_number_is_not_empty",
      "should_be_invalid_when_delegated_offices_dup"
    ],
    "Children": []
  },
  {
    "$id": "318",
    "FileName": "UpdateEngagementRequestValidatorFacts.cs",
    "Description": "UpdateEngagementRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_correct_request",
      "should_invalid_when_engagement_name_is_duplicate_in_same_client",
      "should_valid_when_engagement_name_is_duplicate_in_different_client"
    ],
    "Children": []
  },
  {
    "$id": "319",
    "FileName": "UpdateEngagementRoleRequestValidatorFacts.cs",
    "Description": "UpdateEngagementRoleRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid_when_request_is_correct",
      "should_be_invalid_when_engagement_role_not_exist",
      "should_be_invalid_when_engagement_role_has_mismatched_practice_type",
      "should_be_invalid_when_engagement_role_2_has_mismatched_practice_type"
    ],
    "Children": []
  },
  {
    "$id": "320",
    "FileName": "UpdateEngagementTypeOfServiceFeesCurrencyRequestValidatorFacts.cs",
    "Description": "UpdateEngagementTypeOfServiceFeesCurrencyRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_request_currency_is_null",
      "should_be_invalid_when_request_currency_is_not_existing"
    ],
    "Children": []
  },
  {
    "$id": "321",
    "FileName": "UpdateEngagementWorkOfficeRequestValidatorFacts.cs",
    "Description": "UpdateEngagementWorkOfficeRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_correct_request",
      "should_correct_when_working_office_contact_duplicated",
      "should_correct_when_working_office_engagedStaffs_only_with_contacts",
      "should_invalid_when_working_office_not_exist",
      "should_invalid_when_working_office_engagedStaffs_empty",
      "should_be_invalid_when_working_office_contacts_not_exist",
      "should_be_invalid_when_working_office_duplicated",
      "should_invalid_when_working_office_same_as_coordinating_office",
      "should_invalid_when_working_office_same_as_delegated_coordinating_office",
      "should_be_true_when_subscribed_office_team_mail_box_is_empty",
      "should_be_true_when_subscribed_office_team_mail_box_is_in_white_list",
      "should_be_false_when_subscribed_office_team_mail_box_is_not_in_white_list",
      "should_invalid_if_WorkOffices_is_null"
    ],
    "Children": []
  },
  {
    "$id": "322",
    "FileName": "UpdateEngagementWorkOfficeRequestValidatorFacts.cs",
    "Description": "UpdateEngagementWorkOfficeRequestValidatorFactsWithEngagementRoleFeatureToggleOn",
    "WhenList": [],
    "ThenList": [
      "should_invalid_when_remove_work_office_belonging_to_engagement_role"
    ],
    "Children": []
  },
  {
    "$id": "323",
    "FileName": "UpdateExternalLinksRequestValidatorFacts.cs",
    "Description": "UpdateExternalLinksRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "display_name_should_less_than_255",
      "system_name_should_not_empty",
      "url_should_not_empty",
      "url_should_be_valid",
      "should_create_less_than_5_links_for_single_work_record"
    ],
    "Children": []
  },
  {
    "$id": "324",
    "FileName": "UpdateKpiSettingRequestValidatorFacts.cs",
    "Description": "UpdateKpiSettingRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_invalid_when_item_is_not_in_item_list",
      "should_invalid_when_type_is_not_in_type_list",
      "should_invalid_when_type_is_not_match_with_item"
    ],
    "Children": []
  },
  {
    "$id": "325",
    "FileName": "UpdateTaskTemplateRequestValidatorFacts.cs",
    "Description": "UpdateTaskTemplateRequestValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_invalid_when_neither_country_nor_office_is_not_provided",
      "should_be_valid_when_at_least_one_of_country_or_office_uri_is_provided"
    ],
    "Children": []
  },
  {
    "$id": "326",
    "FileName": "WorkRecordTaskValidatorFacts.cs",
    "Description": "WorkRecordTaskValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_be_valid_when_complete_first_miletone_with_date_earlier_than_work_record_creation_date",
      "should_be_invalid_when_complete_miletone_with_date_earlier_than_last_milestone_completion_date"
    ],
    "Children": []
  },
  {
    "$id": "327",
    "FileName": "WorkRecordValidatorFacts.cs",
    "Description": "WorkRecordValidatorFacts",
    "WhenList": [],
    "ThenList": [
      "should_pass_validation_when_work_record_is_valid",
      "should_fail_validation_when_work_record_name_is_invalid",
      "should_fail_validation_when_work_record_name_exceeds_255_chars",
      "should_fail_validation_when_primary_service_is_null",
      "should_fail_validation_when_assignee_is_null",
      "should_fail_validation_when_engagement_is_null",
      "should_fail_validation_when_responsible_office_is_null",
      "should_fail_validation_when_responsible_office_is_not_responsible_for_engagement",
      "should_fail_validation_when_unstarted_milestones_have_dates",
      "should_fail_validation_when_finished_milestones_do_not_have_dates",
      "should_fail_validation_when_milestone_date_in_disorder",
      "should_pass_validation_when_only_first_milestone_date_earlier_than_creation_date",
      "should_fail_validation_when_task_assignment_responsible_office_invalid",
      "should_fail_validation_when_task_assignment_responsibility_invalid",
      "should_fail_validation_when_task_assignment_responsibility_practice_type_does_not_match_work_record_practice_type",
      "should_fail_validation_when_checklist_item_responsible_office_invalid",
      "should_fail_validation_when_checklist_item_responsibility_invalid",
      "should_fail_validation_when_checklist_item_responsibility_practice_type_does_not_match_work_record_practice_type",
      "should_success_validation_when_organizer_contact_is_null_and_contact_office_has_team_name",
      "should_success_validation_when_organizer_contact_is_not_null_and_contact_office_not_has_team_name",
      "should_fail_validation_when_organizer_question_set_id_is_empty"
    ],
    "Children": []
  },
  {
    "$id": "328",
    "FileName": "WorkRecordInfoAccessManagerFacts.cs",
    "Description": "WorkRecordInfoAccessManagerCanViewPrivateInfoFacts",
    "WhenList": [],
    "ThenList": [
      "should_can_view_work_record_PCN_when_staff_assigned_tasks",
      "should_can_view_work_record_PCN_when_staff_assigned_checklist",
      "should_can_view_work_record_PCN_when_staff_is_assignee_pwc_contact",
      "should_can_view_work_record_PCN_when_staff_is_in_responsible_office",
      "should_can_view_work_record_PCN_when_staff_is_in_work_record_team",
      "should_can_not_view_work_record_PCN_when_staff_not_assigned_tasks",
      "should_can_edit_work_record_billing_status_when_staff_in_work_record_responsible_office",
      "should_can_not_edit_work_record_billing_status_when_staff_not_in_work_record_responsible_office_and_coordinating_office"
    ],
    "Children": []
  },
  {
    "$id": "329",
    "FileName": "WorkRecordInfoAccessManagerFacts.cs",
    "Description": "WorkRecordInfoAccessManagerCanViewPrivateInfo2Facts",
    "WhenList": [],
    "ThenList": [
      "should_can_view_work_record_PCN_when_staff_is_assignee_pwc_contact",
      "should_can_not_view_work_record_PCN_when_staff_not_assigned_tasks",
      "should_can_view_work_record_PCN_when_staff_is_in_responsible_office",
      "should_can_view_work_record_PCN_when_staff_is_in_work_record_team"
    ],
    "Children": []
  },
  {
    "$id": "330",
    "FileName": "CryptographyFacts.cs",
    "Description": "CryptographyFacts",
    "WhenList": [],
    "ThenList": [
      "should_encrypt_text",
      "encrypted_text_should_not_be_same_among_multiple_encryption",
      "encrypted_text_can_be_decrypted"
    ],
    "Children": []
  },
  {
    "$id": "331",
    "FileName": "CurrentUserFacts.cs",
    "Description": "CurrentUserFacts",
    "WhenList": [],
    "ThenList": [
      "should_skip_UAC_when_request_from_trusted_clients",
      "should_return_false_if_it_is_not_tiger_general_role",
      "should_return_true_if_it_is_general_role_from_tiger"
    ],
    "Children": []
  },
  {
    "$id": "332",
    "FileName": "DictionnaryExtensionsFacts.cs",
    "Description": "DictionnaryExtensionsFacts",
    "WhenList": [],
    "ThenList": [
      "should_add_two_uniq_dictionaries",
      "should_throw_argument_exception_when_add_dictionaries_with_duplicate_key"
    ],
    "Children": []
  },
  {
    "$id": "333",
    "FileName": "EnumExtensionsFacts.cs",
    "Description": "EnumExtensionsFacts",
    "WhenList": [],
    "ThenList": [
      "should_throw_argument_null_exception_when_value_null_or_empty",
      "should_throw_argument_exception_when_value_is_invalid_enum",
      "should_return_different_descriptions_when_enum_types_have_same_name"
    ],
    "Children": []
  },
  {
    "$id": "334",
    "FileName": "StringExtensionFacts.cs",
    "Description": "StringExtensionFacts",
    "WhenList": [],
    "ThenList": [
      "should_convert_to_link_for_valid_simple_url",
      "should_convert_to_link_inside_other_text",
      "should_insert_http_as_part_of_link_if_it_is_not_already_included"
    ],
    "Children": []
  },
  {
    "$id": "335",
    "FileName": "Facts.cs",
    "Description": "Facts",
    "WhenList": [],
    "ThenList": [
      "FactMethodName"
    ],
    "Children": []
  },
  {
    "$id": "336",
    "FileName": "ResourceUriHelperFacts.cs",
    "Description": "ResourceUriHelperFacts",
    "WhenList": [],
    "ThenList": [
      "should_transfer_tax_workrecord_to_uri",
      "should_transfer_country_to_uri",
      "should_get_tax_work_record_id_given_a_resource_uri",
      "should_get_work_record_id_given_a_resource_uri",
      "should_build_work_record_resource_uri1",
      "should_build_work_record_resource_uri"
    ],
    "Children": []
  },
  {
    "$id": "337",
    "FileName": "BriefingAppointmentReminderJobFacts.cs",
    "Description": "BriefingAppointmentReminderJobFacts",
    "WhenList": [],
    "ThenList": [
      "should_invoke_tiger_api_to_send_reminder_eamils",
      "should_not_send_upcoming_notify_email_when_current_milestone_is_not_complete",
      "should_not_send_upcoming_notify_email_when_work_record_type_is_not_briefing",
      "should_not_send_upcoming_notify_email_when_work_record_type_is_not_online",
      "should_not_send_upcoming_notify_email_when_work_had_send",
      "should_not_send_upcoming_notify_email_when_work_status_is_not_noissue",
      "should_not_send_upcoming_notify_email_when_more_than_48h",
      "should_not_send_upcoming_notify_email_when_appointment_time_before_today"
    ],
    "Children": []
  },
  {
    "$id": "338",
    "FileName": "BriefingWorkRecordKPIJobFacts.cs",
    "Description": "BriefingWorkRecordKPIJobFacts",
    "WhenList": [],
    "ThenList": [
      "should_call_tiger_api_to_calculate_tax_return_frontload"
    ],
    "Children": []
  },
  {
    "$id": "339",
    "FileName": "DaysCalculatorFact.cs",
    "Description": "DaysCalculatorFact",
    "WhenList": [],
    "ThenList": [
      "should_calc_daysinhouse_correctly_when_mi_in_one_day",
      "should_calc_daysinhouse_correctly_when_mis_in_one_day",
      "should_calc_daysinhouse_correctly_when_mis_not_in_one_day",
      "should_calc_daysinhouse_correctly_when_mis_all_in_last_day",
      "should_calc_daysinhouse_correctly_when_each_day_have_one",
      "should_calc_daysinhouse_correctly_when_mis_dup_in_one_day"
    ],
    "Children": []
  },
  {
    "$id": "340",
    "FileName": "DaysCalculatorRegressionCaseInRSFact.cs",
    "Description": "DaysCalculatorRegressionCaseInRSFact",
    "WhenList": [],
    "ThenList": [
      "should_clac_daysinhouse_correctly1",
      "should_clac_daysinhouse_correctly2",
      "should_clac_daysinhouse_correctly3",
      "should_clac_daysinhouse_correctly4",
      "should_clac_daysinhouse_correctly5",
      "should_clac_daysinhouse_correctly6",
      "should_clac_daysinhouse_correctly8",
      "should_clac_daysinhouse_correctly9",
      "should_clac_daysinhouse_correctly10",
      "should_clac_daysinhouse_correctly11",
      "should_clac_daysinhouse_correctly12",
      "should_clac_daysinhouse_correctly13",
      "should_clac_daysinhouse_correctly14",
      "should_clac_daysinhouse_correctly15",
      "should_clac_daysinhouse_correctly7"
    ],
    "Children": []
  },
  {
    "$id": "341",
    "FileName": "DaysInHouseCalcFact.cs",
    "Description": "DaysInHouseCalcFact",
    "WhenList": [],
    "ThenList": [
      "should_calc_daysinhouse_correctly",
      "should_calc_immigration_wr_daysinhouse_correctly",
      "should_calc_socialsecurity_wr_daysinhouse_correctly",
      "should_calc_briefing_wr_daysinhouse_correctly_when_not_notified",
      "should_calc_briefing_wr_daysinhouse_correctly_when_notified",
      "given_completed_wr_and_some_missing_item_when_all_missing_items_has_received_and_since_and_received_both_after_postwork_then_calc_daysinhouse_and_midays_correctly",
      "given_completed_wr_and_some_missing_item_when_some_missing_items_is_not_receive_and_since_and_received_both_after_postwork_then_calc_daysinhouse_and_midays_correctly",
      "given_completed_wr_and_a_missing_item_when_missing_item_has_received_and_since_between_created_and_postwork_and_received_after_postwork",
      "given_completed_wr_and_a_missing_item_when_missing_item_has_not_received_and_since_between_craeted_and_postwork_and_received_after_postwork",
      "given_completed_wr_and_a_missing_item_when_missing_item_has_received_and_since_before_created_and_received_between_created_and_postwork",
      "given_completed_wr_and_a_missing_item_when_missing_item_has_not_received_and_since_before_created",
      "given_completed_wr_and_a_missing_item_when_missing_item_has_received_and_since_and_received_both_between_created_and_postwork",
      "given_wr_and_a_missing_item_when_missing_item_has_received_and_since_and_received_both_between_created_and_postwork",
      "given_wr_and_a_missing_item_when_missing_item_has_not_received_and_since_before_craeted",
      "given_wr_while_it_has_organizer_when_questionniar_submitted_after_created",
      "given_wr_while_it_has_organizer_and_a_missing_item_when_questionniar_submitted_after_created_and_mi_since_before_submitted",
      "given_wr_while_it_has_organizer_and_a_missing_item_when_questionniar_submitted_after_created_and_mi_received_before_submitted",
      "given_wr_with_organizer_and_a_missing_item_when_organzier_submit_date_mort_than_createAt"
    ],
    "Children": []
  },
  {
    "$id": "342",
    "FileName": "EfileReminderFacts.cs",
    "Description": "EfileReminderFacts",
    "WhenList": [],
    "ThenList": [
      "should_send_first_reminder_email_when_download_date_is_two_days_ago",
      "should_send_reminder_email_when_is_efile_consent_on_switch_off_to_on",
      "should_not_send_reminder_email_when_download_date_is_17_days_ago",
      "should_send_second_reminder_email_when_first_reminder_date_is_seven_days_ago",
      "should_send_third_reminder_email_when_second_reminder_is_seven_days_ago",
      "should_not_send_reminder_email_when_delivery_date_is_null",
      "should_not_send_reminder_email_when_latest_tax_return_file_is_null",
      "should_not_send_reminder_email_when_first_downloaded_date_is_null",
      "should_not_send_reminder_email_when_signed_date_is_not_null",
      "should_not_send_reminder_email_when_refused_date_is_not_null",
      "should_not_send_reminder_email_when_signed_date_is_not_null_but_earlier_than_dowloaded_date_base_on_clean_sign_date_when_republish_tax_return",
      "should_not_send_reminder_email_when_refused_date_is_not_null_but_earlier_than_dowloaded_date_base_on_clean_sign_date_when_republish_tax_return",
      "should_load_assignee_first_and_last_name_in_status",
      "should_load_responsible_office_team_mail_box_as_from"
    ],
    "Children": []
  },
  {
    "$id": "343",
    "FileName": "EventStoreConsumerJobFacts.cs",
    "Description": "EventStoreConsumerJobFacts",
    "WhenList": [],
    "ThenList": [
      "should_consume_engagement_created_event_and_send_it_to_event_store",
      "should_remove_messages_after_consume",
      "should_end_job_and_save_queue_message_in_msmq_when_event_store_throw_exception",
      "should_not_work_when_enable_msmq_feature_toggle_close",
      "should_consume_messages_by_order"
    ],
    "Children": []
  },
  {
    "$id": "344",
    "FileName": "GlobalComplianceWorkRecordKPIJobFacts.cs",
    "Description": "GlobalComplianceWorkRecordKPIJobFacts",
    "WhenList": [],
    "ThenList": [
      "should_call_tiger_api_to_calculate_global_compliance_kpi"
    ],
    "Children": []
  },
  {
    "$id": "345",
    "FileName": "MonitorUserLastLoginFacts.cs",
    "Description": "MonitorUserLastLoginFacts",
    "WhenList": [],
    "ThenList": [
      "should_send_email_when_general_staff_last_login_date_more_than_configured_days",
      "should_send_email_when_general_staff_not_login_until_reminder_date",
      "should_send_email_when_general_staff_not_login_before_reminder_date"
    ],
    "Children": []
  },
  {
    "$id": "346",
    "FileName": "OrganizerFacts.cs",
    "Description": "OrganizerFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_team_mailbox_display_name"
    ],
    "Children": []
  },
  {
    "$id": "347",
    "FileName": "ServiceEvaluationFacts.cs",
    "Description": "ServiceEvaluationFacts",
    "WhenList": [],
    "ThenList": [
      "should_sync_date_from_lime_survey"
    ],
    "Children": []
  },
  {
    "$id": "348",
    "FileName": "TaxReturnReportDownloadReminderJobFacts.cs",
    "Description": "TaxReturnReportDownloadReminderJobFacts",
    "WhenList": [],
    "ThenList": [
      "should_send_request_to_Tiger_API_when_job_execute"
    ],
    "Children": []
  },
  {
    "$id": "349",
    "FileName": "TaxReturnWorkRecordKPIFacts.cs",
    "Description": "TaxReturnWorkRecordKPIFacts",
    "WhenList": [],
    "ThenList": [
      "should_call_tiger_api_to_calculate_tax_return_frontload"
    ],
    "Children": []
  },
  {
    "$id": "350",
    "FileName": "DayInWeekToBitwiseValueConverterFact.cs",
    "Description": "DayInWeekToBitwiseValueConverterFact",
    "WhenList": [],
    "ThenList": [
      "should_convert_one_day_in_week_to_bitwise",
      "should_convert_bitwise_value_to_one_day_in_week",
      "should_convert_bitwise_value_to_multiple_days_in_week",
      "should_convert_multiple_days_in_week_to_bitwise_value"
    ],
    "Children": []
  },
  {
    "$id": "351",
    "FileName": "PeriodAndTimeSlotFact.cs",
    "Description": "PeriodAndTimeSlotFact",
    "WhenList": [],
    "ThenList": [
      "should_be_equal_if_two_period_have_same_start_time_and_end_time",
      "should_create_time_slot",
      "should_be_equal_if_two_time_slot_have_same_start_time_and_end_time",
      "should_throw_exception_if_start_time_is_greater_than_end_time",
      "should_be_equal_if_two_period_have_same_start_time_and_end_time_and_time_zone",
      "should_not_equal_if_two_period_have_same_start_time_and_end_time_but_different_time_zone",
      "should_equal_if_two_period_have_same_start_time_and_end_time_based_on_timezone_converting",
      "should_convert_peroid_to_specified_timezone",
      "should_return_null_if_converting_failed"
    ],
    "Children": []
  },
  {
    "$id": "352",
    "FileName": "SchedulerFacts.cs",
    "Description": "SchedulerFacts",
    "WhenList": [],
    "ThenList": [
      "should_reject_invalid_time_zone",
      "should_ignore_slots_not_in_timezone",
      "should_split_time_into_slots",
      "should_get_slots_which_hourly_resource_number_greater_or_equal_than_1",
      "should_get_the_slots_which_EffectiveDate_is_the_latest_one_and_earlier_than_startTime",
      "should_make_up_hourly_when_given_time_range_is_not_falling_on_the_hour",
      "should_return_0_slots_when_given_time_range_is_out_of_available_resource",
      "should_only_get_time_slots_from_single_defined_work_day",
      "should_only_get_time_slots_from_defined_work_hour",
      "should_only_get_time_slots_from_defined_work_hour_for_two_days",
      "should_get_time_slots_across_weeks_from_single_defined_work_day",
      "should_reject_if_define_duplicate_hourly_resource",
      "should_reject_if_define_work_hours_not_in_24_hours",
      "should_reject_if_define_duplicate_work_days",
      "should_get_time_slots_according_to_scheduler_time_zone_without_dst",
      "should_get_time_slots_according_to_scheduler_time_zone_with_dst_in_summer_time",
      "should_get_time_slots_according_to_scheduler_time_zone_with_dst_in_winter_time",
      "should_make_a_time_slot_unavailable_if_schedule_an_appointment_at_this_time_slot_and_resource_number_is_one",
      "should_make_an_time_slot_available_if_scheduled_appointments_at_this_time_slot_less_than_resource_number",
      "should_make_an_time_slot_unavailable_if_scheduled_appointments_at_this_time_slot_greater_or_equal_than_resource_number",
      "should_not_available_if_scheduled_appointment_is_not_at_work_day",
      "should_not_available_if_scheduled_appointment_is_not_at_work_hour",
      "should_not_available_if_scheduled_appointment_not_have_resource_number",
      "should_not_available_if_scheduled_appointment_time_is_occupied_by_others_and_not_have_resource_number"
    ],
    "Children": []
  },
  {
    "$id": "353",
    "FileName": "SchedulerUnavailableDaysFacts.cs",
    "Description": "SchedulerUnavailableDaysFacts",
    "WhenList": [],
    "ThenList": [
      "should_check_can_schedule_appointment_when_in_same_time_zone",
      "should_check_can_schedule_appointment_when_in_different_time_zone_and_without_daylight_saving",
      "should_check_can_schedule_appointment_when_in_different_time_zone_and_with_daylight_saving"
    ],
    "Children": []
  },
  {
    "$id": "354",
    "FileName": "SchedulerWorkHoursFacts.cs",
    "Description": "SchedulerWorkHoursFacts",
    "WhenList": [],
    "ThenList": [
      "should_only_get_time_slots_from_hourly_resources",
      "should_not_get_time_slots_when_it_is_from_hourly_resources_but_not_on_work_day",
      "should_get_time_slots_in_user_time_zone_when_office_in_UTC",
      "should_get_time_slots_in_user_time_zone_when_office_in_CST",
      "should_get_time_slots_from_hourly_resources_of_current_weekly_availability"
    ],
    "Children": []
  },
  {
    "$id": "355",
    "FileName": "Test1.cs",
    "Description": "Test1",
    "WhenList": [],
    "ThenList": [
      "test"
    ],
    "Children": []
  },
  {
    "$id": "356",
    "FileName": "UtilitiesUnitTests.cs",
    "Description": "UtilitiesUnitTests",
    "WhenList": [],
    "ThenList": [
      "should_remove_service_name_from_uri"
    ],
    "Children": []
  },
  {
    "$id": "357",
    "FileName": "AssigneeViewModelControllerGetDetailsFacts.cs",
    "Description": "AssigneeViewModelControllerGetDetailsFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_200_OK_as_status_code"
    ],
    "Children": []
  },
  {
    "$id": "358",
    "FileName": "FileUploadResourceControllerUnitTests.cs",
    "Description": "FileUploadResourceControllerUnitTests",
    "WhenList": [],
    "ThenList": [
      "should_add_meaningless_content_for_suppressing_ie_friendly_error_message_feature",
      "should_change_media_type_to_text_when_success",
      "should_not_add_meaningless_content"
    ],
    "Children": []
  },
  {
    "$id": "359",
    "FileName": "FrontDoorResourceControllerUnitTests.cs",
    "Description": "FrontDoorResourceControllerUnitTests",
    "WhenList": [],
    "ThenList": [
      "should_get_resource_in_white_list_from_tiger_api",
      "should_return_forbidden_status_when_get_resource_not_in_white_list_from_tiger_api",
      "should_return_Forbidden_for_unknown_resource_uri",
      "should_post_staff_register_request_to_tiger_api",
      "should_return_forbidden_for_post_requests_except_staff"
    ],
    "Children": []
  },
  {
    "$id": "360",
    "FileName": "HealthControllerUnitTests.cs",
    "Description": "HealthControllerUnitTests",
    "WhenList": [],
    "ThenList": [
      "should_return_health_status",
      "should_return_health_status_with_invalid_dependency_name"
    ],
    "Children": []
  },
  {
    "$id": "361",
    "FileName": "ResourceControllerSensitiveOperationFacts.cs",
    "Description": "ResourceControllerSensitiveOperationFacts",
    "WhenList": [],
    "ThenList": [
      "should_not_forward_impersonation_ticket_request",
      "should_filter_request_according_to_white_list"
    ],
    "Children": []
  },
  {
    "$id": "362",
    "FileName": "ResourceControllerUnitTests.cs",
    "Description": "ResourceControllerUnitTests",
    "WhenList": [],
    "ThenList": [
      "should_get_resource_from_tiger_api",
      "should_post_resource_to_tiger_api",
      "should_get_resource_from_gde_service",
      "should_get_resource_when_uri_is_full_URL",
      "should_return_NotFound_for_unknown_resource_uri",
      "should_return_bad_request_if_uri_is_not_specified",
      "should_get_resource_from_safe_tiger_api",
      "should_not_get_resource_from_safe_tiger_api"
    ],
    "Children": []
  },
  {
    "$id": "363",
    "FileName": "UriPrefixExtractorUnitTests.cs",
    "Description": "UriPrefixExtractorUnitTests",
    "WhenList": [],
    "ThenList": [
      "should_get_resource_from_tiger_api",
      "should_throw_bad_request_exception_when_get_incorrect_url"
    ],
    "Children": []
  },
  {
    "$id": "364",
    "FileName": "FilePreviewResourceControllerUnitTests.cs",
    "Description": "FilePreviewResourceControllerUnitTests",
    "WhenList": [],
    "ThenList": [
      "should_return_forbidden_when_request_is_not_correct",
      "should_return_preview_when_request_is_sent_to_filecabinet_preview_url"
    ],
    "Children": []
  },
  {
    "$id": "365",
    "FileName": "HashResourceControllerFacts.cs",
    "Description": "HashResourceControllerFacts",
    "WhenList": [],
    "ThenList": [
      "should_get_myfiles_entry_point",
      "should_decrypt_and_forward_hashed_uri",
      "should_deny_incorrect_encrypted_url",
      "should_deny_when_user_office_not_belongs_to_engagement",
      "should_encrypt_response",
      "should_set_content_type_to_text_html_for_uploading_in_ie9"
    ],
    "Children": []
  },
  {
    "$id": "366",
    "FileName": "HealthControllerFacts.cs",
    "Description": "HealthControllerFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_health_status_when_checking_all_given_all_dependencies_are_OK"
    ],
    "Children": []
  },
  {
    "$id": "367",
    "FileName": "LinkedInResourceControllerUnitTests.cs",
    "Description": "LinkedInResourceControllerUnitTests",
    "WhenList": [],
    "ThenList": [
      "should_request_authorize_url_from_tiger_api_with_state_parameter",
      "should_redirect_to_linkedin_authorize_url_generated_from_tiger_api",
      "should_forward_linkedin_callback_request_to_tiger_api",
      "should_redirect_to_my_staff_if_tiger_api_returns_non_success_code",
      "should_return_bad_request_when_state_in_uri_does_not_match_from_authorize_request",
      "should_return_bad_request_when_client_does_not_request_authorize_url",
      "should_redirect_to_my_profile_when_client_does_not_provide_state",
      "should_redirect_to_my_profile_when_cancel_authorization"
    ],
    "Children": []
  },
  {
    "$id": "368",
    "FileName": "ResourceControllerFacts.cs",
    "Description": "ResourceControllerFacts",
    "WhenList": [],
    "ThenList": [
      "should_forward_get_request",
      "should_return_not_found_when_resource_not_exist",
      "should_return_bad_request_when_resource_para_is_illegal",
      "should_return_bad_request_when_resource",
      "should_forward_post_request",
      "should_forward_put_request",
      "should_forward_delete_request",
      "should_include_specific_reason_phrase_when_error_occured"
    ],
    "Children": [
      {
        "$id": "369",
        "FileName": "ResourceControllerFacts.cs",
        "Description": "StubResourceModel",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "370",
    "FileName": "SessionControllerFacts.cs",
    "Description": "SessionControllerFacts",
    "WhenList": [],
    "ThenList": [
      "should_hear_heart_beat"
    ],
    "Children": []
  },
  {
    "$id": "371",
    "FileName": "AuthenticationHandlerFacts.cs",
    "Description": "AuthenticationHandlerFacts",
    "WhenList": [],
    "ThenList": [
      "should_redirect_to_login_page_when_user_is_not_authenticated",
      "should_not_forbidden_when_user_is_authenticated",
      "should_not_forbidden_when_login",
      "should_not_forbidden_when_try_logout_with_login",
      "should_not_forbidden_when_try_logout_when_timeout",
      "should_not_forbidden_request_to_front_door_when_user_is_wif_authenticated_but_with_no_tiger_user_in_session"
    ],
    "Children": []
  },
  {
    "$id": "372",
    "FileName": "CustomJsonResponseHandlerFacts.cs",
    "Description": "CustomJsonResponseHandlerFacts",
    "WhenList": [],
    "ThenList": [
      "should_prefix_special_characters_when_response_is_json_format",
      "should_not_prefix_special_characters_when_response_is_not_json_format",
      "should_not_prefix_special_characters_when_response_has_no_content"
    ],
    "Children": []
  },
  {
    "$id": "373",
    "FileName": "HttpMethodOverrideHandlerFacts.cs",
    "Description": "HttpMethodOverrideHandlerFacts",
    "WhenList": [],
    "ThenList": [
      "should_override_http_method_when_specific_header_is_provided_with_correct_value",
      "should_not_override_http_method_when_specific_header_is_provided_with_incorrect_value",
      "should_not_override_http_method_when_specific_header_is_not_provided"
    ],
    "Children": []
  },
  {
    "$id": "374",
    "FileName": "LogHandlerFacts.cs",
    "Description": "LogHandlerFacts",
    "WhenList": [],
    "ThenList": [
      "should_log_request"
    ],
    "Children": []
  },
  {
    "$id": "375",
    "FileName": "UriHashEncryptorFacts.cs",
    "Description": "UriHashEncryptorFacts",
    "WhenList": [],
    "ThenList": [
      "should_pass_validation_if_hash_is_correct",
      "should_pass_validation_for_case_insensitive_authenticatedUri",
      "should_get_null_if_uri_or_hash_is_missing",
      "should_get_null_if_hash_is_incorrect",
      "should_get_null_if_authenticated_uri_is_empty_on_encryption",
      "should_get_null_if_authenticated_uri_is_empty_on_decryption",
      "should_contains_hashed_resource",
      "should_encrypt_href_in_links",
      "should_decrypt_encrypted_json"
    ],
    "Children": []
  },
  {
    "$id": "376",
    "FileName": "ErrorHandlingFacts.cs",
    "Description": "ErrorHandlingFacts",
    "WhenList": [],
    "ThenList": [
      "should_return_not_found_response_when_destination_host_is_not_reachable"
    ],
    "Children": []
  }
]