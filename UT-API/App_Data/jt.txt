[
  {
    "$id": "1",
    "FileName": "current-time-component-spec.es6",
    "Description": "current time component",
    "WhenList": [],
    "ThenList": [
      "should show current time in component"
    ],
    "Children": []
  },
  {
    "$id": "2",
    "FileName": "fancy-toggle-component-spec.js",
    "Description": "fancyToggle component",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3",
        "FileName": "fancy-toggle-component-spec.js",
        "Description": "initialize",
        "WhenList": [],
        "ThenList": [
          "should by default be checked"
        ],
        "Children": []
      },
      {
        "$id": "4",
        "FileName": "fancy-toggle-component-spec.js",
        "Description": "when ngModel change as delayed process",
        "WhenList": [],
        "ThenList": [
          "should change checkbox status"
        ],
        "Children": []
      },
      {
        "$id": "5",
        "FileName": "fancy-toggle-component-spec.js",
        "Description": "when ngModel change very fast as delayed process",
        "WhenList": [],
        "ThenList": [
          "should change checkbox status correctly",
          "should change checkbox status correctly even if manually toggled in-between",
          "should change checkbox status correctly even if manually toggled in-between 2"
        ],
        "Children": []
      },
      {
        "$id": "6",
        "FileName": "fancy-toggle-component-spec.js",
        "Description": "when checkbox status change",
        "WhenList": [],
        "ThenList": [
          "should change ngModel value",
          "should call onToggled function"
        ],
        "Children": []
      },
      {
        "$id": "7",
        "FileName": "fancy-toggle-component-spec.js",
        "Description": "checkbox toggle permission",
        "WhenList": [],
        "ThenList": [
          "should not allow more than one click during one second"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8",
    "FileName": "flexible-appointment-time-component-spec.js",
    "Description": "flexibleAppointmentTime component",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "9",
        "FileName": "flexible-appointment-time-component-spec.js",
        "Description": "when initialize with default date",
        "WhenList": [],
        "ThenList": [
          "should display default date",
          "should not change displayed date if default date is changed",
          "should display all time options"
        ],
        "Children": []
      },
      {
        "$id": "10",
        "FileName": "flexible-appointment-time-component-spec.js",
        "Description": "when initialize with default time & part of day",
        "WhenList": [],
        "ThenList": [
          "should initialize successfully"
        ],
        "Children": []
      },
      {
        "$id": "11",
        "FileName": "flexible-appointment-time-component-spec.js",
        "Description": "when initialize with default date different from staff format",
        "WhenList": [],
        "ThenList": [
          "should display correct default date in staff time format"
        ],
        "Children": []
      },
      {
        "$id": "12",
        "FileName": "flexible-appointment-time-component-spec.js",
        "Description": "am/pm switch",
        "WhenList": [],
        "ThenList": [
          "should initialize as am",
          "should set time slot options to am when is on am",
          "should set time slot options to pm when switch to pm"
        ],
        "Children": []
      },
      {
        "$id": "13",
        "FileName": "flexible-appointment-time-component-spec.js",
        "Description": "date input field change",
        "WhenList": [],
        "ThenList": [
          "should auto update current options to those of the new input date"
        ],
        "Children": []
      },
      {
        "$id": "14",
        "FileName": "flexible-appointment-time-component-spec.js",
        "Description": "appointment time zone change",
        "WhenList": [],
        "ThenList": [
          "should clear date input field when time zone is changed"
        ],
        "Children": []
      },
      {
        "$id": "15",
        "FileName": "flexible-appointment-time-component-spec.js",
        "Description": "prompt message",
        "WhenList": [],
        "ThenList": [
          "should initialize with correct prompt message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "16",
    "FileName": "file-preview-password-prompt-controller-spec.es6",
    "Description": "file preview password prompt controller",
    "WhenList": [],
    "ThenList": [
      "should setup necessary properties on scope",
      "should verify password on model and close dialog"
    ],
    "Children": []
  },
  {
    "$id": "17",
    "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
    "Description": "tax file cabinet controller of send notification",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "18",
        "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
        "Description": "initialize when send email to assignee",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "19",
            "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
            "Description": "when a work record is selected and its responsible office has team mailbox information",
            "WhenList": [],
            "ThenList": [
              "should set the sender office as the work record responsible office",
              "should set the sender email with team mailbox",
              "should not be able to change the sender office and to choose the sender contact"
            ],
            "Children": []
          },
          {
            "$id": "20",
            "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
            "Description": "when a work record is selected and its responsible office does not have team mailbox information",
            "WhenList": [],
            "ThenList": [
              "should set the sender office options and activate the dropdown menu",
              "should be able to choose the sender contact if the chosen office has no team mailbox information",
              "should be able to choose the sender contact even if the chosen office has team mailbox information"
            ],
            "Children": []
          },
          {
            "$id": "21",
            "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
            "Description": "when no work record is selected",
            "WhenList": [],
            "ThenList": [
              "should load all the offices for the sender office",
              "should not set sender office and contact",
              "should set team mailbox as sender contact after choosing an office with team mailbox information",
              "should be able to choose the sender contact after choosing an office without team mailbox information"
            ],
            "Children": []
          },
          {
            "$id": "22",
            "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
            "Description": "fromOffice and fromContact will impact each other",
            "WhenList": [],
            "ThenList": [
              "should clear fromOffice and fromContact when reset email notification",
              "should reset fromContact when reset fromOffice",
              "should not reset fromOffice when fromContact is cleared"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "23",
        "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
        "Description": "initialize when send teq email to company",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "24",
            "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
            "Description": "when a work record is selected and its responsible office has team mailbox information",
            "WhenList": [],
            "ThenList": [
              "should set the sender office as the work record responsible office",
              "should set the sender email with team mailbox",
              "should not be able to change the sender office and to choose the sender contact"
            ],
            "Children": []
          },
          {
            "$id": "25",
            "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
            "Description": "when a work record is selected and its responsible office does not have team mailbox information",
            "WhenList": [],
            "ThenList": [
              "should set the sender office options and activate the dropdown menu",
              "should be able to choose the sender contact if the chosen office has no team mailbox information",
              "should be able to choose the sender contact even if the chosen office has team mailbox information"
            ],
            "Children": []
          },
          {
            "$id": "26",
            "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
            "Description": "fromOffice and fromContact will impact each other",
            "WhenList": [],
            "ThenList": [
              "should clear fromOffice fromContact and sendTo when reset email notification",
              "should reset fromContact and keep sendTo when reset fromOffice",
              "should keep fromOffice and sendTo when fromContact is cleared"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "27",
        "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
        "Description": "send email to assignee",
        "WhenList": [],
        "ThenList": [
          "should send email to notify assignee when upload tax return success",
          "should send email to notify assignee when upload tax equalization documents success",
          "should send email to notify assignee when upload other documents success",
          "should send email to notify assignee when upload other documents without jurisdiction success",
          "should go to assignee file cabinet tab page after finish uploading if upload file from assignee detail page",
          "should go to work record detail page after finish uploading if upload file from work record detail page",
          "should go to work record detail page after finish uploading if upload file from work record detail page event if no sending email"
        ],
        "Children": []
      },
      {
        "$id": "28",
        "FileName": "new-tax-file-cabinet-upload-controller-notification-spec.es6",
        "Description": "send email to nancy",
        "WhenList": [],
        "ThenList": [
          "initialize when require sending email",
          "reset when not require sending email",
          "should send a notification email when send company email is required"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "29",
    "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
    "Description": "new tax file cabinet controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "30",
        "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
        "Description": "after NewTaxFileCabinetUploadController initialized",
        "WhenList": [],
        "ThenList": [
          "should set initial value on view model",
          "should set default value when upload file in workrecord detail page",
          "should can upload file when the current user has one of WRs link",
          "should only use work records with non-empty urls"
        ],
        "Children": [
          {
            "$id": "31",
            "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
            "Description": "when the current user is not authorized to upload files for the assignee",
            "WhenList": [],
            "ThenList": [
              "should redirect to the home page",
              "should display an error message"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "32",
        "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
        "Description": "when changing jurisdiction",
        "WhenList": [],
        "ThenList": [
          "should set work records options to all and clear work record when jurisdiction set to 'Please select'",
          "should reset work record to null and work record options when change jurisdiction"
        ],
        "Children": []
      },
      {
        "$id": "33",
        "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
        "Description": "when changing work record",
        "WhenList": [],
        "ThenList": [
          "should reset when selected work record changed",
          "should only have file type others when workRecord is null",
          "should include tax return from document type when workRecord is tax return",
          "should include tax equalization from document type when workRecord is not briefing",
          "should only have other document type when workRecord is briefing",
          "should set selected file type to be null when work record changed to tax other",
          "should set file type to be other when work record changed to briefing"
        ],
        "Children": []
      },
      {
        "$id": "34",
        "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
        "Description": "when changing file type",
        "WhenList": [],
        "ThenList": [
          "should reset tax equalization",
          "should retrieve new file sharing subscription when changing to tax equalization for client type"
        ],
        "Children": [
          {
            "$id": "35",
            "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
            "Description": "should update file constraint by file type",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "36",
                "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
                "Description": "when doc type is Tax Return",
                "WhenList": [],
                "ThenList": [
                  "should only accept pdf"
                ],
                "Children": []
              },
              {
                "$id": "37",
                "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
                "Description": "when doc type is Tax Equalization",
                "WhenList": [],
                "ThenList": [
                  "should only accept pdf"
                ],
                "Children": []
              },
              {
                "$id": "38",
                "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
                "Description": "when doc type is Other",
                "WhenList": [],
                "ThenList": [
                  "should not accept file types listed in forbidden document types"
                ],
                "Children": []
              },
              {
                "$id": "39",
                "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
                "Description": "when doc type is un specified",
                "WhenList": [],
                "ThenList": [
                  "should not accept file types listed in forbidden document types"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "40",
        "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
        "Description": "upload",
        "WhenList": [],
        "ThenList": [
          "should include X-XSRF-TOKEN for file uploading in ie.",
          "should send correct request when uploading file(s) to kayla and file type is other document",
          "should upload employer return to client file sharing",
          "should show assignee email notification box when has uploaded files",
          "should not show finish btn and not add new file when there is file not uploaded",
          "should not show finish btn and not add new file when there is file uploading",
          "should show finish btn and add new file when all files are uploaded",
          "should not change work record any more when file is uploaded from assignee upload page",
          "should not change work record any more when file is uploading from assignee upload page",
          "can change work record when no files has been uploaded or uploading from assignee upload page",
          "should show send assignee email section when there is file which type is not employer return",
          "should hide send assignee email section when there is only employer return file",
          "should hide send assignee email section when there is no file type selected",
          "should hide options when four eye review is turned on",
          "should hide options when there is only teq file for client uploaded"
        ],
        "Children": [
          {
            "$id": "41",
            "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
            "Description": "should send correct request when uploading file(s) to kayla and file type is tax return document with 4-eye-review",
            "WhenList": [],
            "ThenList": [
              "should set audience to be PwC when office four eyes review status is on",
              "should set audience to be All when office four eyes review status is off"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "42",
        "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
        "Description": "add file",
        "WhenList": [],
        "ThenList": [
          "should set new file type to work record other if work reord is briefing"
        ],
        "Children": []
      },
      {
        "$id": "43",
        "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
        "Description": "preview file to assignee",
        "WhenList": [],
        "ThenList": [
          "should call preview when select file to send to assignee"
        ],
        "Children": []
      },
      {
        "$id": "44",
        "FileName": "new-tax-file-cabinet-upload-controller-spec.es6",
        "Description": "redirect",
        "WhenList": [],
        "ThenList": [
          "should go to assignee page when click view assignee profile",
          "should go to work record detail page when click view work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "45",
    "FileName": "new-tax-file-cabinet-upload-controller-teq-spec.es6",
    "Description": "new tax file cabinet controller of teq",
    "WhenList": [],
    "ThenList": [
      "should not reset tax equalization if has uploaded",
      "should remove tax equalization file from files when cancel"
    ],
    "Children": [
      {
        "$id": "46",
        "FileName": "new-tax-file-cabinet-upload-controller-teq-spec.es6",
        "Description": "upload tax equalization",
        "WhenList": [],
        "ThenList": [
          "should post upload request to mymobility when upload tax equalization file",
          "fail to upload tax equalization"
        ],
        "Children": []
      },
      {
        "$id": "47",
        "FileName": "new-tax-file-cabinet-upload-controller-teq-spec.es6",
        "Description": "preview teq file",
        "WhenList": [],
        "ThenList": [
          "should call priview of file-cabinet-uploader-service when choose an file"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "48",
    "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
    "Description": "tax file cabinet controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "49",
        "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
        "Description": "email notification",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "50",
            "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
            "Description": "when a work record is selected and its responsible office has team mailbox information",
            "WhenList": [],
            "ThenList": [
              "should set the sender office as the work record responsible office",
              "should set the sender email with team mailbox",
              "should not be able to change the sender office and to choose the sender contact"
            ],
            "Children": []
          },
          {
            "$id": "51",
            "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
            "Description": "when a work record is selected and its responsible office does not have team mailbox information",
            "WhenList": [],
            "ThenList": [
              "should set the sender office options and activate the dropdown menu",
              "should be able to choose the sender contact if the chosen office has no team mailbox information",
              "should be able to choose the sender contact even if the chosen office has team mailbox information"
            ],
            "Children": []
          },
          {
            "$id": "52",
            "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
            "Description": "when no work record is selected",
            "WhenList": [],
            "ThenList": [
              "should load all the offices for the sender office",
              "should not set sender office and contact",
              "should set team mailbox as sender contact after choosing an office with team mailbox information",
              "should be able to choose the sender contact after choosing an office without team mailbox information"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "53",
        "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
        "Description": "email notification to company",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "54",
            "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
            "Description": "when a work record is selected and its responsible office has team mailbox information",
            "WhenList": [],
            "ThenList": [
              "should set the sender office as the work record responsible office",
              "should set the sender email with team mailbox",
              "should not be able to change the sender office and to choose the sender contact"
            ],
            "Children": []
          },
          {
            "$id": "55",
            "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
            "Description": "when a work record is selected and its responsible office does not have team mailbox information",
            "WhenList": [],
            "ThenList": [
              "should set the sender office options and activate the dropdown menu",
              "should be able to choose the sender contact if the chosen office has no team mailbox information",
              "should be able to choose the sender contact even if the chosen office has team mailbox information"
            ],
            "Children": []
          },
          {
            "$id": "56",
            "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
            "Description": "fromOffice and fromContact will impact each other",
            "WhenList": [],
            "ThenList": [
              "should clear fromOffice fromContact and sendTo when reset email notification",
              "should reset fromContact and keep sendTo when reset fromOffice",
              "should keep fromOffice and sendTo when fromContact is cleared"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "57",
        "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
        "Description": "fromOffice and fromContact will impact each other",
        "WhenList": [],
        "ThenList": [
          "should clear fromOffice and fromContact when reset email notification",
          "should reset fromContact when reset fromOffice",
          "should not reset fromOffice when fromContact is cleared"
        ],
        "Children": []
      },
      {
        "$id": "58",
        "FileName": "tax-file-cabinet-upload-controller-notification-spec.js",
        "Description": "notification when upload",
        "WhenList": [],
        "ThenList": [
          "should send email to notify assignee when upload tax return success",
          "should send email to notify assignee when upload tax equalization documents success",
          "should send email to notify assignee when upload other documents success",
          "should send email to notify assignee when upload other documents without jurisdiction success"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "59",
    "FileName": "tax-file-cabinet-upload-controller-spec.js",
    "Description": "tax file cabinet controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "60",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "after AssigneeFileCabinetController initialized",
        "WhenList": [],
        "ThenList": [
          "should set initial value on view model",
          "should set default value when upload file in workrecord detail page",
          "should can upload file when the current user has one of WRs link",
          "should only use work records with non-empty urls"
        ],
        "Children": [
          {
            "$id": "61",
            "FileName": "tax-file-cabinet-upload-controller-spec.js",
            "Description": "when the current user is not authorized to upload files for the assignee",
            "WhenList": [],
            "ThenList": [
              "should redirect to the home page",
              "should display an error message"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "62",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "the year ending should not match default year when uploading file",
        "WhenList": [],
        "ThenList": [
          "should set work records options to all and clear work record when jurisdiction set to 'Please select'",
          "should reset work record to null and work record options when change jurisdiction"
        ],
        "Children": []
      },
      {
        "$id": "63",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "change work record and document type options",
        "WhenList": [],
        "ThenList": [
          "should remove tax return from document type when workRecord is null",
          "should include tax return from document type when workRecord is not null",
          "should remove tax equalization from document type when workRecord is null",
          "should include tax equalization from document type when workRecord is not null",
          "should set selected file type to be null when work record changed to tax other",
          "should set file type to be other when work record changed to briefing"
        ],
        "Children": []
      },
      {
        "$id": "64",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "upload",
        "WhenList": [],
        "ThenList": [
          "should send correct request when uploading file(s) to kayla and file type is tax return document with feature toggle off",
          "should send correct request when uploading file(s) to kayla and file type is tax equalization document",
          "should send correct request when uploading file(s) to kayla and file type is other document",
          "should include X-XSRF-TOKEN for file uploading in ie.",
          "should redirect to the work record page if file cabinet accessed from a work record page"
        ],
        "Children": [
          {
            "$id": "65",
            "FileName": "tax-file-cabinet-upload-controller-spec.js",
            "Description": "should send correct request when uploading file(s) to kayla and file type is tax return document with feature toggle on",
            "WhenList": [],
            "ThenList": [
              "should set audience to be PwC when office four eyes review status is on",
              "should set audience to be All when office four eyes review status is off"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "66",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "update efile status when upload",
        "WhenList": [],
        "ThenList": [
          "should send updating efile status request when upload at least one tax-return document",
          "should not send updating efile status request when upload none of documents are tax-return"
        ],
        "Children": []
      },
      {
        "$id": "67",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "cancel",
        "WhenList": [],
        "ThenList": [
          "should go back to file cabinet page when Cancel button clicked",
          "should go back to work record page if coming from the work record",
          "should go back to briefing work record page when is from work record page"
        ],
        "Children": []
      },
      {
        "$id": "68",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "upload button disable",
        "WhenList": [],
        "ThenList": [
          "should disable the upload button when file cabinet form is invalid",
          "should disable the upload button when file cabinet form is valid and the email is sent and notificationForm is invalid",
          "should disable the upload button when email is not sent and tax equalization form is invalid",
          "should disable the upload button when email is not sent and tax equalization form is invalid",
          "should enable the upload button when file cabinet form is valid and the email is not sent",
          "should enable the upload button when file cabinet form is valid and notification form is valid"
        ],
        "Children": []
      },
      {
        "$id": "69",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "updateFileConstraint(file)",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "70",
            "FileName": "tax-file-cabinet-upload-controller-spec.js",
            "Description": "when doc type is Tax Return",
            "WhenList": [],
            "ThenList": [
              "should only accept pdf"
            ],
            "Children": []
          },
          {
            "$id": "71",
            "FileName": "tax-file-cabinet-upload-controller-spec.js",
            "Description": "when doc type is Tax Equalization",
            "WhenList": [],
            "ThenList": [
              "should only accept pdf"
            ],
            "Children": []
          },
          {
            "$id": "72",
            "FileName": "tax-file-cabinet-upload-controller-spec.js",
            "Description": "when doc type is Other",
            "WhenList": [],
            "ThenList": [
              "should not accept file types listed in forbidden document types"
            ],
            "Children": []
          },
          {
            "$id": "73",
            "FileName": "tax-file-cabinet-upload-controller-spec.js",
            "Description": "when doc type is un specified",
            "WhenList": [],
            "ThenList": [
              "should not accept file types listed in forbidden document types"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "74",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "get tax work records which can upload file",
        "WhenList": [],
        "ThenList": [
          "should get work record with upload link",
          "should filter workrecord with unfinished questionnaire",
          "should display workrecord without questionnaire"
        ],
        "Children": []
      },
      {
        "$id": "75",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "error handle when upload file from workrecord",
        "WhenList": [],
        "ThenList": [
          "should redirect to home page when type wrong uri"
        ],
        "Children": []
      },
      {
        "$id": "76",
        "FileName": "tax-file-cabinet-upload-controller-spec.js",
        "Description": "show employer return file type",
        "WhenList": [],
        "ThenList": [
          "should show employer return file type for other compliance work record belongs to Singapore",
          "should show employer return file type for tax return work record belongs to Singapore",
          "should not show employer return file type for other compliance work record belongs to Singapore if has uploaded employer return file"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "77",
    "FileName": "tax-file-cabinet-upload-controller-teq-spec.js",
    "Description": "tax file cabinet controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "78",
        "FileName": "tax-file-cabinet-upload-controller-teq-spec.js",
        "Description": "tax equalization",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "79",
            "FileName": "tax-file-cabinet-upload-controller-teq-spec.js",
            "Description": "display TEQ section",
            "WhenList": [],
            "ThenList": [
              "should display teq section when publish to myMobility",
              "should not display teq section when not publish to myMobility",
              "should not display TEQ section when changing the file type",
              "should not display TEQ section and reset TEQ value when removing the tax equalization file",
              "should reset TEQ value when no teq file",
              "should retrieve correct result whether engagement subscribe new client file sharing"
            ],
            "Children": []
          },
          {
            "$id": "80",
            "FileName": "tax-file-cabinet-upload-controller-teq-spec.js",
            "Description": "when creating tax equalization",
            "WhenList": [],
            "ThenList": [
              "should send a request to create tax equalization when a work record is selected and confirm",
              "should not send any request when a work record is selected and teq cancelled",
              "should not send a request to create tax equalization when a record is not selected",
              "should send a notification email when send company email is required",
              "should not send a request to create tax equalization when the selected work record is not tax",
              "should not send a request to create tax equalization when publish TEQ to myMobility is no"
            ],
            "Children": []
          },
          {
            "$id": "81",
            "FileName": "tax-file-cabinet-upload-controller-teq-spec.js",
            "Description": "display publishing TEQ to myMobility",
            "WhenList": [],
            "ThenList": [
              "should display publish TEQ to mymobility when the selected file type is tax equalization",
              "should not display publish TEQ to mymobility when the selected file type is tax return",
              "should not display publish TEQ to mymobility when the selected file type is other",
              "should not display publish TEQ to mymobility as default value",
              "should not display publish TEQ to mymobility when workrecord has teq info"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "82",
    "FileName": "assignee-access-control-list-controller-spec.js",
    "Description": "assignee access control list controller",
    "WhenList": [],
    "ThenList": [
      "after initialize",
      "should add staff to assignee acl list",
      "should save button valid when selected no staff",
      "should not occur error when selected no staff",
      "should only add staff in his own office if current user is in acl but not contact",
      "should display engagement related office if current user is contact",
      "should get offices from all engagements when current user in assignee contact",
      "should global admin can add any staff in the options to acl",
      "should display office options filtered by selected country",
      "should display office options be empty if no country selected",
      "should remove staff from acl",
      "should go to the home page when the user remove himself from the acl",
      "should stay in current page when the user remove himself failed",
      "should delete acl when press save button",
      "should save all changes when press save button",
      "should stay in administration page when current user is not acl normal staff",
      "should stay same when press cancel button",
      "should cancel when update acl failed"
    ],
    "Children": []
  },
  {
    "$id": "83",
    "FileName": "assignee-add-engagement-controller-spec.js",
    "Description": "AssigneeAddEngagementController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "84",
        "FileName": "assignee-add-engagement-controller-spec.js",
        "Description": "should send request",
        "WhenList": [],
        "ThenList": [
          "should add engagement with existing client",
          "when edit effective date without adding new engagement",
          "when add an engagement of new client with effective date"
        ],
        "Children": []
      },
      {
        "$id": "85",
        "FileName": "assignee-add-engagement-controller-spec.js",
        "Description": "when assignee has engagements in different clients",
        "WhenList": [],
        "ThenList": [
          "should group engagements by clients"
        ],
        "Children": []
      },
      {
        "$id": "86",
        "FileName": "assignee-add-engagement-controller-spec.js",
        "Description": "effective date messages",
        "WhenList": [],
        "ThenList": [
          "when add engagement with existing client",
          "when add engagement with existing client"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "87",
    "FileName": "assignee-administration-controller-spec.js",
    "Description": "assignee administration controller",
    "WhenList": [],
    "ThenList": [
      "after initialize",
      "get dialog"
    ],
    "Children": []
  },
  {
    "$id": "88",
    "FileName": "assignee-assignment-edit-controller-spec.js",
    "Description": "Assignee assignment edit controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "89",
        "FileName": "assignee-assignment-edit-controller-spec.js",
        "Description": "when init assignment type",
        "WhenList": [],
        "ThenList": [
          "set two fields automatically if assignment type is already set",
          "init assignment type prompt as 'Please select' given assignment type does not exist",
          "init assignment type prompt as 'Please select' given assignment already has an engagement with assignment types",
          "init assignment prompt text as 'To be defined' when engagement has no assignment types & it is the only tax engagement",
          "should set engagement if I only have one tax-type engagement",
          "should not set default engagement when have multiple tax engagements",
          "should set two fields correctly when assignment already has assignment type, and I have multiple engagements"
        ],
        "Children": []
      },
      {
        "$id": "90",
        "FileName": "assignee-assignment-edit-controller-spec.js",
        "Description": "when change engagement",
        "WhenList": [],
        "ThenList": [
          "update assignment types options when change engagement",
          "update assignment types options when change engagement to 'please select'",
          "should show correct assignment type prompt"
        ],
        "Children": []
      },
      {
        "$id": "91",
        "FileName": "assignee-assignment-edit-controller-spec.js",
        "Description": "when getValidAssignmentTypeEngagementOptions",
        "WhenList": [],
        "ThenList": [
          "should return all engagement when assignment startDate is empty",
          "should return engagements given only one client.",
          "should return engagements in first client given start date before second client effectiveDate.",
          "should return engagements in second client given start date same with second client effectiveDate.",
          "should return engagements in third client given start date same with third client effectiveDate.",
          "should return engagements in third client given start date after third client effectiveDate.",
          "should return engagements in case of one-to-many client-engagement relations"
        ],
        "Children": []
      },
      {
        "$id": "92",
        "FileName": "assignee-assignment-edit-controller-spec.js",
        "Description": "add new one and save",
        "WhenList": [],
        "ThenList": [
          "should add new assignment custom field value when click add country",
          "should save assignment with customfield when click save assignment"
        ],
        "Children": []
      },
      {
        "$id": "93",
        "FileName": "assignee-assignment-edit-controller-spec.js",
        "Description": "edit assignment custom field",
        "WhenList": [],
        "ThenList": [
          "should remove notification flag after updating an assignment custom field value"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "94",
    "FileName": "assignee-batch-send-email-controller-spec.js",
    "Description": "assignee batch send email controller",
    "WhenList": [],
    "ThenList": [
      "initialize",
      "watch criteria.engagement",
      "search",
      "send"
    ],
    "Children": []
  },
  {
    "$id": "95",
    "FileName": "assignee-consent-status-controller-spec.js",
    "Description": "AssigneeConsentStatusController",
    "WhenList": [],
    "ThenList": [
      "should get consents after initialization",
      "should send reset request and update view if fror has reset link",
      "is efile consent",
      "should can sign Efile Consent"
    ],
    "Children": []
  },
  {
    "$id": "96",
    "FileName": "assignee-deletion-spec.js",
    "Description": "Delete Assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "97",
        "FileName": "assignee-deletion-spec.js",
        "Description": "mark as pending delete",
        "WhenList": [],
        "ThenList": [
          "should show pending delete button if has pending delete link",
          "should not show pending delete button if does not have pending delete link"
        ],
        "Children": []
      },
      {
        "$id": "98",
        "FileName": "assignee-deletion-spec.js",
        "Description": "restore assignee",
        "WhenList": [],
        "ThenList": [
          "should show restore button if has cancel deletion link",
          "should not show restore button if does not have cancel deletion link",
          "should call cancel deletion api if click restore button"
        ],
        "Children": []
      },
      {
        "$id": "99",
        "FileName": "assignee-deletion-spec.js",
        "Description": "delete assignee",
        "WhenList": [],
        "ThenList": [
          "should not show confirm delete link when can not confirm delete assignee",
          "should show confirm delete link when be able to confirm delete assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "100",
    "FileName": "assignee-detail-controller-spec.js",
    "Description": "New Assignee details controller",
    "WhenList": [],
    "ThenList": [
      "should init file upload links and show upload button by assignee id",
      "should get impersonation link of tax subscription",
      "should get impersonation link of tax subscription when no links",
      "should load assignee",
      "should notify child controller that assignee has been loaded",
      "should initiate selected tab",
      "should get selected tab from route parameter",
      "should get assignee private data",
      "should show engagement by index",
      "should go to home page when load assignee info failed",
      "should return whether assignee has tax engagement"
    ],
    "Children": []
  },
  {
    "$id": "101",
    "FileName": "assignee-edit-controller-spec.js",
    "Description": "Assignee edit controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "102",
        "FileName": "assignee-edit-controller-spec.js",
        "Description": "Assignee edit controller when edit public data",
        "WhenList": [],
        "ThenList": [
          "should include pii in request"
        ],
        "Children": [
          {
            "$id": "103",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "after AssigneeEditController initialized",
            "WhenList": [],
            "ThenList": [
              "should expose functions and properties",
              "should hide Japanese culture when no Japanese engagement is available",
              "should show Japanese culture when Japanese engagement is available."
            ],
            "Children": []
          },
          {
            "$id": "104",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "edit assignee status",
            "WhenList": [],
            "ThenList": [
              "should able to update assignee status when current status is Active",
              "should able to update assignee status when current status is Inactive",
              "should not able to update assignee status when current status is Pending Deletion",
              "should not able to update assignee status when current status is null or undefined"
            ],
            "Children": []
          },
          {
            "$id": "105",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "getAvailableEngagementOptions()",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "106",
                "FileName": "assignee-edit-controller-spec.js",
                "Description": "when finding options without consideration of any selected contact",
                "WhenList": [],
                "ThenList": [
                  "should return engagements which have at least one vacant contact country"
                ],
                "Children": []
              },
              {
                "$id": "107",
                "FileName": "assignee-edit-controller-spec.js",
                "Description": "when finding options for a given selected contact",
                "WhenList": [],
                "ThenList": [],
                "Children": [
                  {
                    "$id": "108",
                    "FileName": "assignee-edit-controller-spec.js",
                    "Description": "when selected contact is editable",
                    "WhenList": [],
                    "ThenList": [
                      "should return engagements which have at least one vacant contact country plus the selected engagement"
                    ],
                    "Children": []
                  },
                  {
                    "$id": "109",
                    "FileName": "assignee-edit-controller-spec.js",
                    "Description": "when selected contact is editable",
                    "WhenList": [],
                    "ThenList": [
                      "should return engagements which have at least one vacant contact country plus the selected engagement no duplicate"
                    ],
                    "Children": []
                  },
                  {
                    "$id": "110",
                    "FileName": "assignee-edit-controller-spec.js",
                    "Description": "when selected contact is NOT editable",
                    "WhenList": [],
                    "ThenList": [
                      "should return the selected engagement"
                    ],
                    "Children": []
                  }
                ]
              }
            ]
          },
          {
            "$id": "111",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "getAvailableContactOffices(contact)",
            "WhenList": [],
            "ThenList": [
              "should return offices which do not belong to the countries of other selected contact offices in the same engagement"
            ],
            "Children": []
          },
          {
            "$id": "112",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "edit assignee contact",
            "WhenList": [],
            "ThenList": [
              "should reload assignee when remove current user from general contacts",
              "should reload assignee when add current user to general contacts"
            ],
            "Children": []
          },
          {
            "$id": "113",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "hasVacantContact()",
            "WhenList": [],
            "ThenList": [
              "should return true at least one vacant contact office exists",
              "should return false when a contact office exists for each engagement and country"
            ],
            "Children": []
          },
          {
            "$id": "114",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "email duplications",
            "WhenList": [],
            "ThenList": [
              "should not need to confirm if there is no duplication",
              "should not need to confirm if it is self",
              "should use email if confirmed with true",
              "should not use email if confirmed with false"
            ],
            "Children": []
          },
          {
            "$id": "115",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "contact information validation before save",
            "WhenList": [],
            "ThenList": [
              "should be invalid when primary phone number is invalid",
              "should be valid when primary phone number is empty",
              "should be valid when primary phone number only has region",
              "should be valid when primary phone number is valid",
              "should be valid when primary phone number and secondary phone number are valid",
              "should be invalid when primary phone number is empty and secondary phone number is invalid",
              "should be invalid when phone number is undefined"
            ],
            "Children": []
          },
          {
            "$id": "116",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "validation before save",
            "WhenList": [],
            "ThenList": [
              "should be invalid when required field is empty",
              "should be valid when required fields are complete",
              "should be invalid when primary email only include space",
              "should be valid when passport info is complete",
              "should be invalid when passport country is incomplete",
              "should be valid when passport number is incomplete",
              "should be valid when family info is complete",
              "should be invalid when family first name is incomplete",
              "should be invalid when family last name is incomplete",
              "should be invalid when family relationship is incomplete",
              "should be valid when Assignments info is complete",
              "should be valid when Assignments Start Date is null",
              "should be valid when Assignments Expected End Date is null",
              "should be valid when Assignments Actual End Date is null",
              "should be invalid when home country removed"
            ],
            "Children": []
          },
          {
            "$id": "117",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "edit custom field",
            "WhenList": [],
            "ThenList": [
              "should get latest custom field value in request",
              "should remove notification flag after updating an engagement custom field value",
              "should edit country custom field value"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "118",
        "FileName": "assignee-edit-controller-spec.js",
        "Description": "update assignee's timezone",
        "WhenList": [],
        "ThenList": [
          "should update assignee timeZone and timezoneText when save"
        ],
        "Children": []
      },
      {
        "$id": "119",
        "FileName": "assignee-edit-controller-spec.js",
        "Description": "update assignee's country custom fields",
        "WhenList": [],
        "ThenList": [
          "should update assignee timeZone and timezoneText when save"
        ],
        "Children": []
      },
      {
        "$id": "120",
        "FileName": "assignee-edit-controller-spec.js",
        "Description": "edit assignee when staff can not see assignee pii",
        "WhenList": [],
        "ThenList": [
          "should not send pii when update assignee"
        ],
        "Children": [
          {
            "$id": "121",
            "FileName": "assignee-edit-controller-spec.js",
            "Description": "after AssigneeDetailController initialized and staff can not see assignee private data",
            "WhenList": [],
            "ThenList": [
              "should not load assignee private data"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "122",
        "FileName": "assignee-edit-controller-spec.js",
        "Description": "edit assignee when staff can not see assignee pii",
        "WhenList": [],
        "ThenList": [
          "should update assignee with client association information ",
          "should enable update assignee with multi client associations"
        ],
        "Children": []
      },
      {
        "$id": "123",
        "FileName": "assignee-edit-controller-spec.js",
        "Description": "for restricted assignee",
        "WhenList": [],
        "ThenList": [
          "no need to redirect for the normal assignee",
          "no need to redirect for global admin even for restricted assignee",
          "current user can view the administration tab if he is added into contacts",
          "global admin can always view the administration tab no matter whether he is one of the contacts or not"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "124",
    "FileName": "assignee-edit-restrict-section-controller-spec.js",
    "Description": "assignee edit restrict section controller",
    "WhenList": [],
    "ThenList": [
      "after initialize",
      "changeAssigneePermission"
    ],
    "Children": []
  },
  {
    "$id": "125",
    "FileName": "assignee-email-controller-spec.js",
    "Description": "assignee email controller",
    "WhenList": [],
    "ThenList": [
      "should get assignee when controller initialized",
      "should go back to previous tab on assignee detail page",
      "should post send email request with correct body to assignee",
      "should send from TeamMailBox if staff's office belongs to assignee's responsible offices and TeamMailBox exists",
      "should send from TeamMailBox if staff's office belongs to assignee's responsible offices but TeamMailBox not exists",
      "should send from current user's email if staff's office doesn't belong to assignee's responsible offices"
    ],
    "Children": []
  },
  {
    "$id": "126",
    "FileName": "assignee-email-history--preview-dialog-controller-spec.js",
    "Description": "Assignee email history preview dialog controller",
    "WhenList": [],
    "ThenList": [
      "should init"
    ],
    "Children": []
  },
  {
    "$id": "127",
    "FileName": "assignee-email-history-controller-spec.js",
    "Description": "Assignee email history controller",
    "WhenList": [],
    "ThenList": [
      "should get email history",
      "should not preview given not have history link.",
      "should can preview given history have history link."
    ],
    "Children": []
  },
  {
    "$id": "128",
    "FileName": "assignee-file-cabinet-detail-controller-spec.js",
    "Description": "AssigneeFileCabinetDetailController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "129",
        "FileName": "assignee-file-cabinet-detail-controller-spec.js",
        "Description": "should group files",
        "WhenList": [],
        "ThenList": [
          "should set file to unavailable when there is no apply download link",
          "should group files by work record",
          "should group taxEqualization file by work record country and year",
          "should group different files into five groups depend on their subject"
        ],
        "Children": [
          {
            "$id": "130",
            "FileName": "assignee-file-cabinet-detail-controller-spec.js",
            "Description": "when grouping supporting documents",
            "WhenList": [],
            "ThenList": [
              "should group supporting documents into two classes when there are two work record in same year and country"
            ],
            "Children": []
          },
          {
            "$id": "131",
            "FileName": "assignee-file-cabinet-detail-controller-spec.js",
            "Description": "when grouping prepare reports",
            "WhenList": [],
            "ThenList": [
              "should group prepare report into two classes when there are two work record in same year and country",
              "should group global prepare report to 'CA Questionnaire' group when CA and US share a prepare report"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "132",
        "FileName": "assignee-file-cabinet-detail-controller-spec.js",
        "Description": "files selection status",
        "WhenList": [],
        "ThenList": [
          "should be true when a file selected",
          "should be false when no file selected"
        ],
        "Children": []
      },
      {
        "$id": "133",
        "FileName": "assignee-file-cabinet-detail-controller-spec.js",
        "Description": "files are able to be multiple-published",
        "WhenList": [],
        "ThenList": [
          "should be true when selected files in same subject",
          "should be false when files cross subject",
          "should be true when selected files can be single published",
          "should be false when one of selected files can not be single published"
        ],
        "Children": []
      },
      {
        "$id": "134",
        "FileName": "assignee-file-cabinet-detail-controller-spec.js",
        "Description": "download",
        "WhenList": [],
        "ThenList": [
          "should send request with selected files"
        ],
        "Children": []
      },
      {
        "$id": "135",
        "FileName": "assignee-file-cabinet-detail-controller-spec.js",
        "Description": "myVisas upload file",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "136",
    "FileName": "assignee-file-cabinet-detail-controller-spec.js",
    "Description": "AssigneeFileCabinetDetailController",
    "WhenList": [],
    "ThenList": [
      "should delete file after click confirm",
      "should not delete file after click cancel"
    ],
    "Children": []
  },
  {
    "$id": "137",
    "FileName": "assignee-profile-controller-spec.js",
    "Description": "assignee profile controller",
    "WhenList": [],
    "ThenList": [
      "should disable other edit buttons when editing one section",
      "should enable other edit buttons when cancel editing one section",
      "should return false field when custom fields empty"
    ],
    "Children": [
      {
        "$id": "138",
        "FileName": "assignee-profile-controller-spec.js",
        "Description": "custom field",
        "WhenList": [],
        "ThenList": [
          "should return true when custom fields is not empty",
          "should return false field when country custom fields empty",
          "should return true when custom fields is not empty"
        ],
        "Children": []
      },
      {
        "$id": "139",
        "FileName": "assignee-profile-controller-spec.js",
        "Description": "canEditContact",
        "WhenList": [],
        "ThenList": [
          "should return false when current user are not authorized for all engagements",
          "should return true when current user are authorized for any engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "140",
    "FileName": "assignee-proxy-controller-spec.js",
    "Description": "assignee proxy controller",
    "WhenList": [],
    "ThenList": [
      "should not show invitation button and activation code button if sofia does not have the permission",
      "should send http request to re-send invitation",
      "should distinguish different proxy when sending invitation",
      "should send http request to re-send activation code",
      "should switch to edit mode when click edit",
      "should send http request to update proxy",
      "should send http request to delete proxy",
      "should not display proxy table if assignee has no proxy",
      "should not be able to edit permission when engagement practice type does not contain tax"
    ],
    "Children": []
  },
  {
    "$id": "141",
    "FileName": "assignee-work-records-controller-spec.js",
    "Description": "Assignee work records controller",
    "WhenList": [],
    "ThenList": [
      "should load assignee work records from repository",
      "should popup message box if assignee work records do not have uri when get work record detail",
      "should not allow to create wr when current user's office does not belong to engagement's offices",
      "should allow to create wr if an assignee work record has a uri",
      "should allow to create work records when current user's office belongs to at least one engagement's offices"
    ],
    "Children": [
      {
        "$id": "142",
        "FileName": "assignee-work-records-controller-spec.js",
        "Description": "work status",
        "WhenList": [],
        "ThenList": [
          "should set tax briefing current milestone",
          "should set tax return current milestone",
          "should set tax Other Compliance current milestone",
          "should set immigration general current milestone",
          "should set social security general current milestone"
        ],
        "Children": []
      },
      {
        "$id": "143",
        "FileName": "assignee-work-records-controller-spec.js",
        "Description": "service status",
        "WhenList": [],
        "ThenList": [
          "should return false when service status is null",
          "should return false when service status is no issues",
          "should return true when service status has value and not 'no issues'",
          "should return true when IsNoFiling is true",
          "should return false when service status is no issues and practice type is immigration",
          "should return true when service status is not no issues and practice type is immigration"
        ],
        "Children": []
      },
      {
        "$id": "144",
        "FileName": "assignee-work-records-controller-spec.js",
        "Description": "inactive work record badge",
        "WhenList": [],
        "ThenList": [
          "should show inactive badge when assignee is active and engagement is inactive",
          "should not show inactive badge when assignee is inactive",
          "should not show inactive badge when assignee is active and engagement is active"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "145",
    "FileName": "batch-import-assignee-controller-spec.js",
    "Description": "batch import assignee controller",
    "WhenList": [],
    "ThenList": [
      "should render import result when success"
    ],
    "Children": []
  },
  {
    "$id": "146",
    "FileName": "batch-upload-file-controller-spec.js",
    "Description": "batch upload file controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "147",
        "FileName": "batch-upload-file-controller-spec.js",
        "Description": "when current user practice types contain Tax",
        "WhenList": [],
        "ThenList": [
          "should set practice type list to [Tax]",
          "should init work record type, work statues and options",
          "should change work status when work record type changed",
          "should return false"
        ],
        "Children": [
          {
            "$id": "148",
            "FileName": "batch-upload-file-controller-spec.js",
            "Description": "when search assignees",
            "WhenList": [],
            "ThenList": [
              "should send correct criteria",
              "should not send workrecord type and workrecord status when country is any"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "149",
        "FileName": "batch-upload-file-controller-spec.js",
        "Description": "when current user practice types does NOT contain Tax",
        "WhenList": [],
        "ThenList": [
          "should set practice type list to []",
          "should return true"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "150",
    "FileName": "batch-upload-file-search-controller-spec.js",
    "Description": "batch upload file search controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "151",
        "FileName": "batch-upload-file-search-controller-spec.js",
        "Description": "when current user practice types contain Tax",
        "WhenList": [],
        "ThenList": [
          "should send get assignee by staff search request at init",
          "should send get assignee by work records search request at init",
          "should send get assignee by work records search request at init given select workrecord status",
          "should send get assignee by work records search request at init given select organizer status",
          "should set description when sofia choose one file"
        ],
        "Children": [
          {
            "$id": "152",
            "FileName": "batch-upload-file-search-controller-spec.js",
            "Description": "upload",
            "WhenList": [],
            "ThenList": [
              "should send correct request when uploading file to multiple assignees"
            ],
            "Children": []
          },
          {
            "$id": "153",
            "FileName": "batch-upload-file-search-controller-spec.js",
            "Description": "upload button disable",
            "WhenList": [],
            "ThenList": [
              "should disable the upload button when file cabinet form is invalid"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "154",
    "FileName": "consent7216-controller-spec.js",
    "Description": "Consent7216Controller",
    "WhenList": [],
    "ThenList": [
      "should be able to update when partI and partII are signed",
      "should be able to update when partI is declined",
      "should not be able to update when invalid form",
      "should not be able to update when partII has not changed",
      "should send request to consent service"
    ],
    "Children": []
  },
  {
    "$id": "155",
    "FileName": "contact-item-edit-controller-spec.js",
    "Description": "contact item edit controller",
    "WhenList": [],
    "ThenList": [
      "should reset staff after change office"
    ],
    "Children": []
  },
  {
    "$id": "156",
    "FileName": "efile-consent-controller-spec.js",
    "Description": "EfileConsentController",
    "WhenList": [],
    "ThenList": [
      "should init success",
      "should closed sign efile consent",
      "can not update efile consent when status is \"Not Signed\"",
      "can not update efile consent when form valid failed",
      "can update efile consent when pass form valid and status is not \"Not Signed\"",
      "should sign efile consent when sign date is today",
      "should sign efile consent when sign date is not today",
      "should sign efile consent when sign date is tax-return upload date",
      "should sign efile consent when sign date is tax-return upload date and today"
    ],
    "Children": []
  },
  {
    "$id": "157",
    "FileName": "file-publish-controller-spec.js",
    "Description": "publish file controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "158",
        "FileName": "file-publish-controller-spec.js",
        "Description": "when publish file",
        "WhenList": [],
        "ThenList": [
          "should post publish file request"
        ],
        "Children": []
      },
      {
        "$id": "159",
        "FileName": "file-publish-controller-spec.js",
        "Description": "when publish multiple files",
        "WhenList": [],
        "ThenList": [
          "should post publish file request",
          "should load first file as default",
          "should load next file after previous file is previewed",
          "should send email when email is required"
        ],
        "Children": []
      },
      {
        "$id": "160",
        "FileName": "file-publish-controller-spec.js",
        "Description": "when publish pdf files in IE9",
        "WhenList": [],
        "ThenList": [
          "should be able to publish without sending email",
          "should be able to publish when sending mail is setup",
          "should NOT be able to publish when sending mail is empty but require to send email"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "161",
    "FileName": "immigration-file-cabinet-upload-controller-spec.js",
    "Description": "immigration file cabinet controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "162",
        "FileName": "immigration-file-cabinet-upload-controller-spec.js",
        "Description": "after ImmigrationFileCabinetController initialized",
        "WhenList": [],
        "ThenList": [
          "should set initial value on view model",
          "should can upload file when the current user has one of WRs link",
          "should only list work records with non-empty uris"
        ],
        "Children": [
          {
            "$id": "163",
            "FileName": "immigration-file-cabinet-upload-controller-spec.js",
            "Description": "when the current user is not authorized to upload files for the assignee",
            "WhenList": [],
            "ThenList": [
              "should redirect to the home page",
              "should display an error message"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "164",
        "FileName": "immigration-file-cabinet-upload-controller-spec.js",
        "Description": "set description during uploading file",
        "WhenList": [],
        "ThenList": [
          "as file name without extension when file has extension",
          "as file name when file has no extension"
        ],
        "Children": []
      },
      {
        "$id": "165",
        "FileName": "immigration-file-cabinet-upload-controller-spec.js",
        "Description": "yingpei reselect country while uploading files to vincent",
        "WhenList": [],
        "ThenList": [
          "should reload immigration work records options and set to 'Please select'"
        ],
        "Children": []
      },
      {
        "$id": "166",
        "FileName": "immigration-file-cabinet-upload-controller-spec.js",
        "Description": "upload",
        "WhenList": [],
        "ThenList": [
          "should send correct request when uploading file(s) to kayla and file type is other document and 4-eyes-review off",
          "should include X-XSRF-TOKEN for file uploading in ie",
          "should send correct request when uploading file(s) to vincent",
          "should send correct request when uploading work record related file(s) to vincent"
        ],
        "Children": [
          {
            "$id": "167",
            "FileName": "immigration-file-cabinet-upload-controller-spec.js",
            "Description": "should send correct request when uploading file(s) to kayla and file type is other document and 4-eyes-review on",
            "WhenList": [],
            "ThenList": [
              "should set audience to be PwC when office four eyes review status is on",
              "should set audience to be PwC when office four eyes review status is off"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "168",
        "FileName": "immigration-file-cabinet-upload-controller-spec.js",
        "Description": "cancel",
        "WhenList": [],
        "ThenList": [
          "should back to immigration filecabinet sub page when Cancel button clicked on immigration upload page"
        ],
        "Children": []
      },
      {
        "$id": "169",
        "FileName": "immigration-file-cabinet-upload-controller-spec.js",
        "Description": "updateFileConstraint(file)",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "170",
            "FileName": "immigration-file-cabinet-upload-controller-spec.js",
            "Description": "when doc type is Tax Return",
            "WhenList": [],
            "ThenList": [
              "should only accept pdf"
            ],
            "Children": []
          },
          {
            "$id": "171",
            "FileName": "immigration-file-cabinet-upload-controller-spec.js",
            "Description": "when doc type is Other",
            "WhenList": [],
            "ThenList": [
              "should not accept file types listed in forbidden document types"
            ],
            "Children": []
          },
          {
            "$id": "172",
            "FileName": "immigration-file-cabinet-upload-controller-spec.js",
            "Description": "when doc type is un specified",
            "WhenList": [],
            "ThenList": [
              "should not accept file types listed in forbidden document types"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "173",
        "FileName": "immigration-file-cabinet-upload-controller-spec.js",
        "Description": "status change because of UAC",
        "WhenList": [],
        "ThenList": [
          "should return required tip class when user only can upload file to work record",
          "should not return required tip class when user can upload file to assignee and work record",
          "should not return required tip class when user only can upload file to assignee"
        ],
        "Children": []
      },
      {
        "$id": "174",
        "FileName": "immigration-file-cabinet-upload-controller-spec.js",
        "Description": "get immigration work records which can upload file",
        "WhenList": [],
        "ThenList": [
          "should get work record with upload link",
          "should filter workrecord with unfinished questionnaire"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "175",
    "FileName": "mytaxes-invitation-criteria-controller-advanced-search-spec.js",
    "Description": "assignee criteria controller when advanced search",
    "WhenList": [],
    "ThenList": [
      "should get correct vm after initialization",
      "should set to correct criteria given engagement changed",
      "should set correct criteria to path when click search with coordinating office",
      "should set correct criteria to path when click search with full fields filled"
    ],
    "Children": []
  },
  {
    "$id": "176",
    "FileName": "mytaxes-invitation-criteria-controller-quick-search-spec.js",
    "Description": "assginee quick search",
    "WhenList": [],
    "ThenList": [
      "should set path to assignee profile page when select a assignee in quick search",
      "should not navigation when did not select assignee"
    ],
    "Children": []
  },
  {
    "$id": "177",
    "FileName": "mytaxes-invitation-criteria-controller-refine-search-spec.js",
    "Description": "assignee criteria controller when refine search criteria",
    "WhenList": [],
    "ThenList": [
      "should get correct vm given a search $q in path",
      "should switch to edit mode when click refine",
      "should switch view mode when cancel refine"
    ],
    "Children": []
  },
  {
    "$id": "178",
    "FileName": "mytaxes-invitation-search-controller-spec.js",
    "Description": "MyTaxesInvitationSearchController",
    "WhenList": [],
    "ThenList": [
      "should get assignee list when criteria is correct",
      "should call navigation service when show assignee details"
    ],
    "Children": [
      {
        "$id": "179",
        "FileName": "mytaxes-invitation-search-controller-spec.js",
        "Description": "batch send invitation",
        "WhenList": [],
        "ThenList": [
          "should update status of assignees according his/her subscription",
          "should not be able to send invitations",
          "should be able to send invitations",
          "should send batch invitation request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "180",
    "FileName": "single-create-assignee-controller-spec.js",
    "Description": "single create assignee controller",
    "WhenList": [],
    "ThenList": [
      "should not create assignee when missing required fields",
      "should get pwc contact office correctly when engagement changed",
      "should set selected office and staff to be default when engagement changed",
      "should set selected staff to be empty when office changed",
      "should create assignee with pwc contact when pwc contact selected",
      "should create assignee correctly when office is selected but staff is null",
      "should create assignee with assignment start date and expected end date"
    ],
    "Children": [
      {
        "$id": "181",
        "FileName": "single-create-assignee-controller-spec.js",
        "Description": "custom fields",
        "WhenList": [],
        "ThenList": [
          "should get custom fields by search criteria",
          "should not load custom field when no engagement selected",
          "should create assignee with correct custom field value",
          "should create assignee with no custom field value when all custom field value is empty",
          "should create assignee with custom field value when the value is 0"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "182",
    "FileName": "batch-send-email-controller-spec.js",
    "Description": "batch send email controller",
    "WhenList": [],
    "ThenList": [
      "initialize"
    ],
    "Children": []
  },
  {
    "$id": "183",
    "FileName": "checklist-criteria-controller-spec.js",
    "Description": "check list item criteria controller",
    "WhenList": [],
    "ThenList": [
      "should initialize options based on current user",
      "should get country checklist template options by country uri and practice type",
      "should set check list template options based on selected engagements and current country",
      "should set check list items options based on selected engagement check list template and selected country check list template"
    ],
    "Children": [
      {
        "$id": "184",
        "FileName": "checklist-criteria-controller-spec.js",
        "Description": "practice type change",
        "WhenList": [],
        "ThenList": [
          "should load work record type when changing practice type",
          "should update country check list options and check list items and clear selectedCountryCheckList and selectedChecklistItem if practice type changes",
          "should update engagement check list options and check list items and clear selectedCountryCheckList and selectedChecklistItem if practice type changes",
          "should reset selected engagements and engagementOptions if practiceType changed"
        ],
        "Children": []
      },
      {
        "$id": "185",
        "FileName": "checklist-criteria-controller-spec.js",
        "Description": "change country checklist template",
        "WhenList": [],
        "ThenList": [
          "should change checklistItemPrompt prompt",
          "should update checklistItemOptions and selectedChecklistItem"
        ],
        "Children": []
      },
      {
        "$id": "186",
        "FileName": "checklist-criteria-controller-spec.js",
        "Description": "change selectedEngagement",
        "WhenList": [],
        "ThenList": [
          "should set engagement checklist template if select one engagement",
          "should clear engagement checklist template if select two engagements",
          "should clear engagement checklist template if select no engagement"
        ],
        "Children": []
      },
      {
        "$id": "187",
        "FileName": "checklist-criteria-controller-spec.js",
        "Description": "change engagement checklist template",
        "WhenList": [],
        "ThenList": [
          "should update checklistItemOptions and selectedChecklistItem"
        ],
        "Children": []
      },
      {
        "$id": "188",
        "FileName": "checklist-criteria-controller-spec.js",
        "Description": "search",
        "WhenList": [],
        "ThenList": [
          "should send search correct request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "189",
    "FileName": "checklist-search-controller-spec.js",
    "Description": "check list item search controller",
    "WhenList": [],
    "ThenList": [
      "should search check list item with criteria from uri",
      "should select all items except issued or no filing ones when click select all"
    ],
    "Children": [
      {
        "$id": "190",
        "FileName": "checklist-search-controller-spec.js",
        "Description": "update",
        "WhenList": [],
        "ThenList": [
          "should send correct request to update check list item and update item's completeDate",
          "should pop up message error when errors occurred during update process"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "191",
    "FileName": "checklist-template-create-controller-spec.js",
    "Description": "ChecklistTemplateCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "192",
        "FileName": "checklist-template-create-controller-spec.js",
        "Description": "after ChecklistTemplateCreateController initialized",
        "WhenList": [],
        "ThenList": [
          "should expose ownedBy to scope and set to the country of current user's office",
          "should expose vm.subscribedOffices to scope",
          "should expose vm.tasks to scope",
          "should expose practiceTypes to scope"
        ],
        "Children": [
          {
            "$id": "193",
            "FileName": "checklist-template-create-controller-spec.js",
            "Description": "when the current user is a Global Admin",
            "WhenList": [],
            "ThenList": [
              "should expose countryOptions to scope"
            ],
            "Children": []
          },
          {
            "$id": "194",
            "FileName": "checklist-template-create-controller-spec.js",
            "Description": "when the current user is a Country Level user",
            "WhenList": [],
            "ThenList": [
              "should only expose China in countryOptions"
            ],
            "Children": []
          },
          {
            "$id": "195",
            "FileName": "checklist-template-create-controller-spec.js",
            "Description": "when the current user is associated to 1 practice type",
            "WhenList": [],
            "ThenList": [
              "should default to the practice type"
            ],
            "Children": []
          },
          {
            "$id": "196",
            "FileName": "checklist-template-create-controller-spec.js",
            "Description": "when the current user is associated with more than 1 practice type",
            "WhenList": [],
            "ThenList": [
              "should not have a selected Practice Type"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "197",
        "FileName": "checklist-template-create-controller-spec.js",
        "Description": "ChecklistTemplateCreateController.create()",
        "WhenList": [],
        "ThenList": [
          "should build create checklist template request"
        ],
        "Children": []
      },
      {
        "$id": "198",
        "FileName": "checklist-template-create-controller-spec.js",
        "Description": "ChecklistTemplateCreateController.notDuplicatedName",
        "WhenList": [],
        "ThenList": [
          "should pass validation when name is not duplicated",
          "should NOT pass validation when name is duplicated"
        ],
        "Children": []
      },
      {
        "$id": "199",
        "FileName": "checklist-template-create-controller-spec.js",
        "Description": "ChecklistTemplateCreateController.getOfficeOptions()",
        "WhenList": [],
        "ThenList": [
          "should find offices by country plus an option All"
        ],
        "Children": []
      },
      {
        "$id": "200",
        "FileName": "checklist-template-create-controller-spec.js",
        "Description": "ChecklistTemplateCreateController.addBlankSubscribedOffice()",
        "WhenList": [],
        "ThenList": [
          "should add a new blank subscribed office"
        ],
        "Children": []
      },
      {
        "$id": "201",
        "FileName": "checklist-template-create-controller-spec.js",
        "Description": "ChecklistTemplateCreateController.isSubscribedOfficeValid()",
        "WhenList": [],
        "ThenList": [
          "should return true when office is NOT duplicated in subscribed office",
          "should return false when office is duplicated in subscribed office",
          "should return true when office is undefined",
          "should return false when 'All' and any office exist in same country"
        ],
        "Children": []
      },
      {
        "$id": "202",
        "FileName": "checklist-template-create-controller-spec.js",
        "Description": "ChecklistTemplateCreateController.isCreateChecklistTemplateFormValid()",
        "WhenList": [],
        "ThenList": [
          "should be true when at least one subscribed office is given and createChecklistTemplateForm is valid",
          "should be false when no subscribed office is given",
          "should be false when createTaskTemplateForm is invalid",
          "should be true when at lease one task is provided",
          "should be false when no task is provided"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "203",
    "FileName": "checklist-template-details-controller-spec.js",
    "Description": "ChecklistTemplateDetailsController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "204",
        "FileName": "checklist-template-details-controller-spec.js",
        "Description": "after ChecklistTemplateDetailsController initialized",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "205",
            "FileName": "checklist-template-details-controller-spec.js",
            "Description": "when the user is a country level user",
            "WhenList": [],
            "ThenList": [
              "should expose vm.checklistTemplate to scope"
            ],
            "Children": []
          },
          {
            "$id": "206",
            "FileName": "checklist-template-details-controller-spec.js",
            "Description": "when the user is a general user",
            "WhenList": [],
            "ThenList": [
              "cannot see the edit button"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "207",
        "FileName": "checklist-template-details-controller-spec.js",
        "Description": "check list getSubscriptionDescription()",
        "WhenList": [],
        "ThenList": [
          "should get office full name when subscript by office",
          "can see the edit button",
          "should get country name when subscript by country"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "208",
    "FileName": "checklist-template-edit-controller-spec.js",
    "Description": "ChecklistTemplateEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "209",
        "FileName": "checklist-template-edit-controller-spec.js",
        "Description": "after ChecklistTemplateEditController initialized",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "210",
            "FileName": "checklist-template-edit-controller-spec.js",
            "Description": "when the current user is a country level user",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "211",
                "FileName": "checklist-template-edit-controller-spec.js",
                "Description": "when the user is the owner of the template",
                "WhenList": [],
                "ThenList": [
                  "should load checklist template name",
                  "should load checklist template practice type",
                  "should load checklist template items"
                ],
                "Children": []
              },
              {
                "$id": "212",
                "FileName": "checklist-template-edit-controller-spec.js",
                "Description": "when the user is not the owner of the template",
                "WhenList": [],
                "ThenList": [
                  "cannot edit the template name and the checklist",
                  "doesn't setup the required-tip class for the template name"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "213",
            "FileName": "checklist-template-edit-controller-spec.js",
            "Description": "when the current user is a general user and the template is not for engagement",
            "WhenList": [],
            "ThenList": [
              "should go to the homepage",
              "should have an error message"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "214",
        "FileName": "checklist-template-edit-controller-spec.js",
        "Description": "ChecklistTemplateEditController save()",
        "WhenList": [],
        "ThenList": [
          "should build update checklist template request"
        ],
        "Children": []
      },
      {
        "$id": "215",
        "FileName": "checklist-template-edit-controller-spec.js",
        "Description": "ChecklistTemplateEditController.addNewEmptyItem()",
        "WhenList": [],
        "ThenList": [
          "should add a new empty item"
        ],
        "Children": []
      },
      {
        "$id": "216",
        "FileName": "checklist-template-edit-controller-spec.js",
        "Description": "ChecklistTemplateEditController.notDuplicatedName",
        "WhenList": [],
        "ThenList": [
          "should pass validation when name not exist",
          "should NOT pass validation when name is used",
          "should pass validation when name is used by herself"
        ],
        "Children": []
      },
      {
        "$id": "217",
        "FileName": "checklist-template-edit-controller-spec.js",
        "Description": "ChecklistTemplateEditController.isUpdateChecklistTemplateFormValid",
        "WhenList": [],
        "ThenList": [
          "should valid",
          "should invalid when subscription is invalid",
          "should invalid when no item"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "218",
    "FileName": "checklist-template-list-controller-spec.js",
    "Description": "ChecklistTemplateListController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "219",
        "FileName": "checklist-template-list-controller-spec.js",
        "Description": "ChecklistTemplateListController with supported practiceTypes",
        "WhenList": [],
        "ThenList": [
          "should expose vm.templates to scope",
          "should expose vm.nameColumn to scope and set to 'Checklist Template'",
          "should find country by uri"
        ],
        "Children": []
      },
      {
        "$id": "220",
        "FileName": "checklist-template-list-controller-spec.js",
        "Description": "ChecklistTemplateListController with not supported practiceTypes",
        "WhenList": [],
        "ThenList": [
          "should expose vm.templates to scope"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "221",
    "FileName": "client-create-controller-spec.js",
    "Description": "client create controller",
    "WhenList": [],
    "ThenList": [
      "init requestBy use current user",
      "watch vm.requestBy.office",
      "create"
    ],
    "Children": []
  },
  {
    "$id": "222",
    "FileName": "client-detail-controller-spec.js",
    "Description": "client detail controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "223",
        "FileName": "client-detail-controller-spec.js",
        "Description": "when current user is a general user",
        "WhenList": [],
        "ThenList": [
          "should resubmit and not be able to edit"
        ],
        "Children": []
      },
      {
        "$id": "224",
        "FileName": "client-detail-controller-spec.js",
        "Description": "when current user can approve and reject",
        "WhenList": [],
        "ThenList": [
          "approve",
          "reject",
          "should resubmit and still be able to edit",
          "edit"
        ],
        "Children": []
      },
      {
        "$id": "225",
        "FileName": "client-detail-controller-spec.js",
        "Description": "when current user is general and client is active",
        "WhenList": [],
        "ThenList": [
          "should not show notes section"
        ],
        "Children": []
      },
      {
        "$id": "226",
        "FileName": "client-detail-controller-spec.js",
        "Description": "when current user is global admin",
        "WhenList": [],
        "ThenList": [
          "should show notes section",
          "should be able to edit notes section when client is active",
          "should not show edit in notes section when client is not active",
          "should initialize note when click edit notes section"
        ],
        "Children": []
      },
      {
        "$id": "227",
        "FileName": "client-detail-controller-spec.js",
        "Description": "when edit and update client details section",
        "WhenList": [],
        "ThenList": [
          "should be able to save pwc channel when it is changed",
          "should be able to save is private client when it is changed",
          "should patch note to API",
          "should refresh vm after patch note to API"
        ],
        "Children": []
      },
      {
        "$id": "228",
        "FileName": "client-detail-controller-spec.js",
        "Description": "when edit and update notes section",
        "WhenList": [],
        "ThenList": [
          "should be able to save note when it is changed",
          "should be able to save requested by when it is changed",
          "should be able to save request reason when it is changed",
          "should not be able to save when requested by is not filled",
          "should be able to clear note",
          "should be able to clear request reason",
          "should patch requested by to API",
          "should patch reason for request to API",
          "should patch note to API",
          "should refresh vm after patch note to API"
        ],
        "Children": []
      },
      {
        "$id": "229",
        "FileName": "client-detail-controller-spec.js",
        "Description": "when loading engagement list",
        "WhenList": [],
        "ThenList": [
          "should load engagement list by client",
          "should able to navigate to engagement detail page when showDetails"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "230",
    "FileName": "client-edit-controller-spec.js",
    "Description": "client edit controller",
    "WhenList": [],
    "ThenList": [
      "init",
      "cancel",
      "save",
      "should redirect to the client detail page if edit is not authorized"
    ],
    "Children": []
  },
  {
    "$id": "231",
    "FileName": "client-engagement-search-controller-spec.js",
    "Description": "Test client engagement search controller",
    "WhenList": [],
    "ThenList": [
      "should call client repository to fetch all clients"
    ],
    "Children": []
  },
  {
    "$id": "232",
    "FileName": "client-search-controller-spec.js",
    "Description": "Test client search controller",
    "WhenList": [],
    "ThenList": [
      "should call client repository to fetch all clients"
    ],
    "Children": []
  },
  {
    "$id": "233",
    "FileName": "country-custom-field-create-controller-spec.js",
    "Description": "country custom field create controller",
    "WhenList": [],
    "ThenList": [
      "should navigate to country custom field list page when click cancel link"
    ],
    "Children": [
      {
        "$id": "234",
        "FileName": "country-custom-field-create-controller-spec.js",
        "Description": "initialization",
        "WhenList": [],
        "ThenList": [
          "should displayed custom field type in order of Text/Date/Number/List based on the usage frequency",
          "should set uac status as opened after initialization",
          "should init country as current user's country",
          "should init counties as current user's country when he is the country level role",
          "should init counties as current user's country when he is the global admin",
          "should init custom field location without assignee assignment option"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "235",
    "FileName": "country-custom-field-detail-controller-spec.js",
    "Description": "CountryCustomFieldDetailController",
    "WhenList": [],
    "ThenList": [
      "should return the country custom field detail",
      "should set file constraint to excel file",
      "should clear import file input when canceling import",
      "country level role can edit custom field when current users role is above country level",
      "country level role can NOT edit custom field when current users role is general user",
      "custom field batch update should toggle import mode",
      "custom field batch update should cancel"
    ],
    "Children": []
  },
  {
    "$id": "236",
    "FileName": "country-custom-field-edit-controller-spec.js",
    "Description": "CountryCustomFieldEditController",
    "WhenList": [],
    "ThenList": [
      "should change option text when list content not used",
      "should change option text when list content already used and confirm to change it",
      "should not change option text when list content already used but not confirm to change it",
      "should remove list content when no used",
      "should warning and remove list content when used and confirm to remove it",
      "should warning but not remove list content when used and not confirm to remove it",
      "should get country custom field when controller initialize",
      "should be invalid if practice types is empty when edit country custom field",
      "should correct update request data and when success go to detail page after save"
    ],
    "Children": [
      {
        "$id": "237",
        "FileName": "country-custom-field-edit-controller-spec.js",
        "Description": "should redirect to home page",
        "WhenList": [],
        "ThenList": [
          "when current user is general user",
          "when current user is country level role but editing the country custom field that not belongs to his country"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "238",
    "FileName": "country-custom-field-list-controller-spec.js",
    "Description": "CountryCustomFieldListController",
    "WhenList": [],
    "ThenList": [
      "should list the custom fields according current staff"
    ],
    "Children": [
      {
        "$id": "239",
        "FileName": "country-custom-field-list-controller-spec.js",
        "Description": "country custom field option",
        "WhenList": [],
        "ThenList": [
          "should create country custom field when current user is country level",
          "should create country custom field when current user is global admin",
          "should not create country custom field when current user is general user"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "240",
    "FileName": "country-delete-custom-field-confirm-controller-spec.js",
    "Description": "CountryCustomFieldDeleteConfirmController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "241",
        "FileName": "country-delete-custom-field-confirm-controller-spec.js",
        "Description": "when deleting country custom field",
        "WhenList": [],
        "ThenList": [
          "redirects the user to the country custom field list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "242",
    "FileName": "custom-field-list-content-controller-spec.js",
    "Description": "custom field list content controller",
    "WhenList": [],
    "ThenList": [
      "should set validity based on whether there's any duplication",
      "should remove list item"
    ],
    "Children": []
  },
  {
    "$id": "243",
    "FileName": "engagement-custom-field-detail-controller-spec.js",
    "Description": "EngagementCustomFieldDetailController",
    "WhenList": [],
    "ThenList": [
      "should return related engagement",
      "should return the related custom field detail",
      "should set file constraint to excel file",
      "should clear import file input when canceling import",
      "should export assignee custom field report",
      "should render import result",
      "custom field batch update should toggle import mode",
      "custom field batch update should cancel",
      "should render displayed on myMobility section if assignee profile custom field",
      "should render displayed on myMobility section if assignee assignment custom field"
    ],
    "Children": []
  },
  {
    "$id": "244",
    "FileName": "engagement-custom-field-edit-controller-spec.js",
    "Description": "EngagementCustomFieldEditController",
    "WhenList": [],
    "ThenList": [
      "should get engagement custom field when controller initialize",
      "should remove list content when no used",
      "should warning and remove list content when used and confirm to remove it",
      "should warning but not remove list content when used and not confirm to remove it",
      "should back to detail page when back initialize",
      "should correct update request data and when success go to detail page after save",
      "should changeSegToNo when not used in myMobility",
      "should not changeSegToNo when used in myMobility but not confirm to change it",
      "should changeSegToNo when used in myMobility and confirm to change it"
    ],
    "Children": [
      {
        "$id": "245",
        "FileName": "engagement-custom-field-edit-controller-spec.js",
        "Description": "should update myMobility publication value",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "246",
            "FileName": "engagement-custom-field-edit-controller-spec.js",
            "Description": "when in type of AssigneeProfile",
            "WhenList": [],
            "ThenList": [
              "when custom field become restricted for assignee assignments type",
              "when custom field become open"
            ],
            "Children": []
          },
          {
            "$id": "247",
            "FileName": "engagement-custom-field-edit-controller-spec.js",
            "Description": "when in type of AssigneeAssignments",
            "WhenList": [],
            "ThenList": [
              "when custom field become restricted for assignee assignments type",
              "when custom field become open"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "248",
        "FileName": "engagement-custom-field-edit-controller-spec.js",
        "Description": "should get correct myMobility publication value",
        "WhenList": [],
        "ThenList": [
          "when location is work record",
          "when restricted",
          "when can publish to myMobility",
          "when location is Assignee Assignments can publish to myMobility"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "249",
    "FileName": "engagement-delete-custom-field-confirm-controller-spec.js",
    "Description": "EngagementCustomFieldDeleteConfirmController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "250",
        "FileName": "engagement-delete-custom-field-confirm-controller-spec.js",
        "Description": "when deleting engagement custom field",
        "WhenList": [],
        "ThenList": [
          "redirects the user to the engagement custom field list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "251",
    "FileName": "efile-group-controller-spec.js",
    "Description": "e-file group controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "252",
        "FileName": "efile-group-controller-spec.js",
        "Description": "after initialized",
        "WhenList": [],
        "ThenList": [
          "should display all e-file countries in the filter",
          "should select e-file country for current user",
          "should display first e-file country if current user is not a e-file country user.",
          "should get email of the e-file group",
          "should get members of the e-file group",
          "should contain all country list"
        ],
        "Children": []
      },
      {
        "$id": "253",
        "FileName": "efile-group-controller-spec.js",
        "Description": "when edit staff to e-file group",
        "WhenList": [],
        "ThenList": [
          "should reset staff search box when country is changed",
          "should reset staff search box when office is changed"
        ],
        "Children": []
      },
      {
        "$id": "254",
        "FileName": "efile-group-controller-spec.js",
        "Description": "when add staff to e-file group",
        "WhenList": [],
        "ThenList": [
          "should add new staff to current efile group"
        ],
        "Children": []
      },
      {
        "$id": "255",
        "FileName": "efile-group-controller-spec.js",
        "Description": "when remove staff from e-file group",
        "WhenList": [],
        "ThenList": [
          "should remove staff"
        ],
        "Children": []
      },
      {
        "$id": "256",
        "FileName": "efile-group-controller-spec.js",
        "Description": "when general user navigates to e-file group management page",
        "WhenList": [],
        "ThenList": [
          "should cannot edit"
        ],
        "Children": []
      },
      {
        "$id": "257",
        "FileName": "efile-group-controller-spec.js",
        "Description": "when global admin navigates to e-file group management page",
        "WhenList": [],
        "ThenList": [
          "should can edit"
        ],
        "Children": []
      },
      {
        "$id": "258",
        "FileName": "efile-group-controller-spec.js",
        "Description": "when country role navigates to e-file group managemant page",
        "WhenList": [],
        "ThenList": [
          "should be able to edit e-file group of his/her home country",
          "should not be able to edit e-file group which is not his/her home country"
        ],
        "Children": []
      },
      {
        "$id": "259",
        "FileName": "efile-group-controller-spec.js",
        "Description": "when office role navigates to e-file group management page",
        "WhenList": [],
        "ThenList": [
          "should cannot edit"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "260",
    "FileName": "employer-work-record-detail-controller-spec.js",
    "Description": "EmployerWorkRecordDetailController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "261",
        "FileName": "employer-work-record-detail-controller-spec.js",
        "Description": "given employer tax work record",
        "WhenList": [],
        "ThenList": [
          "should set milestone name and code",
          "can edit details",
          "can't edit details if no link of employerworkrecord/edit-public-detail",
          "can't edit responsibility if no link of employerworkrecord/responsibility",
          "should only expand milestone section default",
          "should load employer work record",
          "should load client contacts",
          "should load email history",
          "should expand section and show edit view if edit section",
          "should assign modifiedEmployerWorkRecord if edit section",
          "should load included assignees",
          "should get correct dialog config"
        ],
        "Children": [
          {
            "$id": "262",
            "FileName": "employer-work-record-detail-controller-spec.js",
            "Description": "when update responsibility",
            "WhenList": [],
            "ThenList": [
              "should send update responsibility request"
            ],
            "Children": []
          },
          {
            "$id": "263",
            "FileName": "employer-work-record-detail-controller-spec.js",
            "Description": "save",
            "WhenList": [],
            "ThenList": [
              "should send request to update employer work record",
              "should update vm.employerWorkRecordId's name",
              "should update vm.employerWorkRecordId's client contacts",
              "should disable send email if there is no client contacts",
              "should close edit view and show details"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "264",
    "FileName": "employer-work-record-email-controller-spec.js",
    "Description": "EmployerWorkRecordEmailController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "265",
        "FileName": "employer-work-record-email-controller-spec.js",
        "Description": "when go to send email page",
        "WhenList": [],
        "ThenList": [
          "should get engagement when controller initialized",
          "should get client contacts names when controller initialized",
          "should support 2 client contacts when get client contact emails",
          "should get all offices as options after controller initialized",
          "should send from Staff's email if TeamMailBox does not exist",
          "should send from TeamMailBox if staff with TeamMailBox",
          "should post send email request with correct body to client contacts"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "266",
    "FileName": "employer-work-record-include-assignee-dialog-controller-spec.js",
    "Description": "EmployerWorkRecordIncludeAssigneesDialogController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "267",
        "FileName": "employer-work-record-include-assignee-dialog-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should load all assignees under the work record engagement",
          "should mark selected assignees",
          "should not be able to click save without changes of selection",
          "should be able to click save when change the selection",
          "should close dialog when click cancel"
        ],
        "Children": []
      },
      {
        "$id": "268",
        "FileName": "employer-work-record-include-assignee-dialog-controller-spec.js",
        "Description": "when save assignees",
        "WhenList": [],
        "ThenList": [
          "should send correct request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "269",
    "FileName": "employer-work-record-milestone-controller-spec.js",
    "Description": "employer work record milestone controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "270",
        "FileName": "employer-work-record-milestone-controller-spec.js",
        "Description": "given employer work record",
        "WhenList": [],
        "ThenList": [
          "should show correct icon when current milestone no task started",
          "should show clock ico when current milestone have task started",
          "should show clock ico when current milestone have task completed",
          "should return true for current milestone"
        ],
        "Children": []
      },
      {
        "$id": "271",
        "FileName": "employer-work-record-milestone-controller-spec.js",
        "Description": "given employer work record",
        "WhenList": [],
        "ThenList": [
          "should show completed icon when milestone is completed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "272",
    "FileName": "employer-work-records-batch-send-email-controller-spec.js",
    "Description": "client contact batch send email controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "273",
        "FileName": "employer-work-records-batch-send-email-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "274",
            "FileName": "employer-work-records-batch-send-email-controller-spec.js",
            "Description": "when the staff office is Singapore",
            "WhenList": [],
            "ThenList": [
              "should select current year as default year ending and current month to be default month"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "275",
        "FileName": "employer-work-records-batch-send-email-controller-spec.js",
        "Description": "when change to annual",
        "WhenList": [],
        "ThenList": [
          "should select fiscal year as default year ending"
        ],
        "Children": []
      },
      {
        "$id": "276",
        "FileName": "employer-work-records-batch-send-email-controller-spec.js",
        "Description": "when change to annual",
        "WhenList": [],
        "ThenList": [
          "should select calendar year as default year ending"
        ],
        "Children": []
      },
      {
        "$id": "277",
        "FileName": "employer-work-records-batch-send-email-controller-spec.js",
        "Description": "when is annual and country changed",
        "WhenList": [],
        "ThenList": [
          "should change default year"
        ],
        "Children": []
      },
      {
        "$id": "278",
        "FileName": "employer-work-records-batch-send-email-controller-spec.js",
        "Description": "when click search button",
        "WhenList": [],
        "ThenList": [
          "should send correct request for annual employer work record",
          "should send correct request for monthly employer work record"
        ],
        "Children": []
      },
      {
        "$id": "279",
        "FileName": "employer-work-records-batch-send-email-controller-spec.js",
        "Description": "when click previousStep on step2 ",
        "WhenList": [],
        "ThenList": [
          "should go back to step1 and clear the selected engagements"
        ],
        "Children": []
      },
      {
        "$id": "280",
        "FileName": "employer-work-records-batch-send-email-controller-spec.js",
        "Description": "when search employer work records on step2",
        "WhenList": [],
        "ThenList": [
          "should only get employer work records of selected engagements"
        ],
        "Children": []
      },
      {
        "$id": "281",
        "FileName": "employer-work-records-batch-send-email-controller-spec.js",
        "Description": "when click send button",
        "WhenList": [],
        "ThenList": [
          "should post send email request with correct body to client contacts"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "282",
    "FileName": "engagement-administration-controller-spec.js",
    "Description": "engagement administration list controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "283",
        "FileName": "engagement-administration-controller-spec.js",
        "Description": "initialize",
        "WhenList": [],
        "ThenList": [
          "should load billing model"
        ],
        "Children": []
      },
      {
        "$id": "284",
        "FileName": "engagement-administration-controller-spec.js",
        "Description": "when ACL form load current user ACL role",
        "WhenList": [],
        "ThenList": [
          "should go to engagement record when current user can not view administration tab"
        ],
        "Children": []
      },
      {
        "$id": "285",
        "FileName": "engagement-administration-controller-spec.js",
        "Description": "when engagement shown",
        "WhenList": [],
        "ThenList": [
          "should get isTaxEngagement correctly",
          "should not be able to edit engagement role when engagement inactive",
          "should not be able to edit engagement role when user is in the ACL and have not authorization to update",
          "should has export assignments link correctly",
          "should has import assignments link correctly"
        ],
        "Children": []
      },
      {
        "$id": "286",
        "FileName": "engagement-administration-controller-spec.js",
        "Description": "when get vips list",
        "WhenList": [],
        "ThenList": [
          "should get vips"
        ],
        "Children": []
      },
      {
        "$id": "287",
        "FileName": "engagement-administration-controller-spec.js",
        "Description": "when can attach service evaluation",
        "WhenList": [],
        "ThenList": [
          "should load service evaluation settings"
        ],
        "Children": []
      },
      {
        "$id": "288",
        "FileName": "engagement-administration-controller-spec.js",
        "Description": "when engagement settings",
        "WhenList": [],
        "ThenList": [
          "should show billing model when practiceType is tax",
          "should show billing model when practiceType is immigration",
          "should show billing model when practiceType is social security",
          "should not show billing model when practiceType is technology"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "289",
    "FileName": "when-get-billing-feature-spec.es6",
    "Description": "when get billing feature",
    "WhenList": [],
    "ThenList": [
      "should get billing feature"
    ],
    "Children": []
  },
  {
    "$id": "290",
    "FileName": "when-edit-billing-model-spec.es6",
    "Description": "when edit billing model in engagement administration section edit controller",
    "WhenList": [],
    "ThenList": [
      "should not edit billing model when centralized",
      "should not edit billing model when decentralized"
    ],
    "Children": []
  },
  {
    "$id": "291",
    "FileName": "when-save-billing-model-spec.es6",
    "Description": "administration tab save in engagement admin section edit controller",
    "WhenList": [],
    "ThenList": [
      "should send save engagement billing model request and update billing model",
      "should not send update billing model request when practice type is technology",
      "should not send update billing model request when billing model is not changed"
    ],
    "Children": []
  },
  {
    "$id": "292",
    "FileName": "when-show-billing-model-tooltip-spec.es6",
    "Description": "show billing model tooltip in engagement admin section edit controller",
    "WhenList": [],
    "ThenList": [
      "should show billing model tooltip when mouse over current element",
      "should not show billing model tooltip when mouse leave",
      "should not show billing model tooltip when mouse over another element"
    ],
    "Children": []
  },
  {
    "$id": "293",
    "FileName": "when-engagement-kpi-overview-controller-clicked-spec.es6",
    "Description": "When engagement kpi overview controller tile clicked",
    "WhenList": [],
    "ThenList": [
      "should goto service evaluation page if current user click service evaluation tile"
    ],
    "Children": []
  },
  {
    "$id": "294",
    "FileName": "when-engagement-kpi-overview-controller-initialized-spec.es6",
    "Description": "When engagement kpi overview controller initialized",
    "WhenList": [],
    "ThenList": [
      "should get tiles",
      "should get global compliance tile",
      "should get office overview title if current user has office view permission",
      "should get engagement overview title if current user has engagement view permission"
    ],
    "Children": []
  },
  {
    "$id": "295",
    "FileName": "access-control-list-controller-spec.js",
    "Description": "access control list controller",
    "WhenList": [],
    "ThenList": [
      "should get engagement status when init",
      "can edit if it is primary contact",
      "can edit if it is working contact",
      "can edit if it is office engagement admin",
      "can not edit if it is normal acl staff",
      "can edit if it is normal acl staff but global admin",
      "should add staff to acl",
      "should remove staff who is not contact when try to remove a staff",
      "should mark staff as deleting when try to remove a staff",
      "should show warning message when try to remove a staff who is questionnaire contact and pwc contact",
      "should no warning when init",
      "should has waring when click delete icon",
      "hasWaring is false when click cancel button",
      "should show warning message when try to remove a staff who is questionnaire contact and is not pwc contact",
      "should show warning message when try to remove a staff who is pwc contact and is not questionnaire contact",
      "should change isDeleting to false when click cancel button",
      "should show enable delete icon",
      "cancel remove staff should set staff as not deleting and reset dialog warning status",
      "confirm remove staff should remove staff from list and reset dialog warning status",
      "should recover all the data when update request failed"
    ],
    "Children": [
      {
        "$id": "296",
        "FileName": "access-control-list-controller-spec.js",
        "Description": "showEnabledDeleteIcon",
        "WhenList": [],
        "ThenList": [
          "should show enabled delete icon when isDeleting is false and hasWarning is false",
          "should not show enabled delete icon when isDeleting is true and hasWarning is false",
          "should not show enabled delete icon when isDeleting is false and hasWarning is true"
        ],
        "Children": []
      },
      {
        "$id": "297",
        "FileName": "access-control-list-controller-spec.js",
        "Description": "canEdit",
        "WhenList": [],
        "ThenList": [
          "should can edit when currentUserAccess is a global admin and has AclStaff",
          "should can not edit when currentUserAccess is a country admin and has not AclStaff",
          "should can edit when currentUserAccess is a country admin and has AclStaff",
          "should can edit when currentUserAccess is a global admin and has not AclStaff"
        ],
        "Children": []
      },
      {
        "$id": "298",
        "FileName": "access-control-list-controller-spec.js",
        "Description": "showDisabledDeleteIcon",
        "WhenList": [],
        "ThenList": [
          "should show disable delete icon when isDeleting is false and hasWarning is true",
          "should show disable delete icon when isDeleting is false and hasWarning is true",
          "should not show disable delete icon when current staff is deleting and the dialog has warning"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "299",
    "FileName": "coordinating-edit-section-column-count-spec.es6",
    "Description": "work office edit section column count",
    "WhenList": [],
    "ThenList": [
      "should return 6 column count when restricted is yes",
      "should return 5 column count when restricted is no"
    ],
    "Children": []
  },
  {
    "$id": "300",
    "FileName": "delete-client-administrator-dialog-controller-spec.js",
    "Description": "delete client administrator dialog controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "301",
        "FileName": "delete-client-administrator-dialog-controller-spec.js",
        "Description": "initialize",
        "WhenList": [],
        "ThenList": [
          "should get correct engagementNames when initialize controller"
        ],
        "Children": []
      },
      {
        "$id": "302",
        "FileName": "delete-client-administrator-dialog-controller-spec.js",
        "Description": "delete client administrator",
        "WhenList": [],
        "ThenList": [
          "should send delete request and close dialog"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "303",
    "FileName": "employer-work-record-create-controller-spec.js",
    "Description": "EmployerWorkRecordCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "304",
        "FileName": "employer-work-record-create-controller-spec.js",
        "Description": "when the employer work record is monthly",
        "WhenList": [],
        "ThenList": [
          "should generate work record name with Year, Month, Country and primary service description ",
          "should send employer work record create request"
        ],
        "Children": []
      },
      {
        "$id": "305",
        "FileName": "employer-work-record-create-controller-spec.js",
        "Description": "when the employer work record is annual",
        "WhenList": [],
        "ThenList": [
          "should generate work record name with Year, Country and primary service description ",
          "should send employer work record create request"
        ],
        "Children": []
      },
      {
        "$id": "306",
        "FileName": "employer-work-record-create-controller-spec.js",
        "Description": "when responsible office changed",
        "WhenList": [],
        "ThenList": [
          "should set task assignment responsible office and clear responsibility"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "307",
    "FileName": "engagement-access-control-list-controller-spec.js",
    "Description": "engagement access control list controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "308",
        "FileName": "engagement-access-control-list-controller-spec.js",
        "Description": "when engagement shown",
        "WhenList": [],
        "ThenList": [
          "should get value from model correctly"
        ],
        "Children": []
      },
      {
        "$id": "309",
        "FileName": "engagement-access-control-list-controller-spec.js",
        "Description": "when user select some staff and click save button",
        "WhenList": [],
        "ThenList": [
          "should onStaffChanged callback be executed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "310",
    "FileName": "engagement-admin-section-edit-controller-spec.es6",
    "Description": "engagement administration section edit controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "311",
        "FileName": "engagement-admin-section-edit-controller-spec.es6",
        "Description": "initialize",
        "WhenList": [],
        "ThenList": [
          "should bind correct engagement admins",
          "should invalidate engagement cache",
          "should get billing model as not set when not select any valid billing model"
        ],
        "Children": []
      },
      {
        "$id": "312",
        "FileName": "engagement-admin-section-edit-controller-spec.es6",
        "Description": "isInvalid",
        "WhenList": [],
        "ThenList": [
          "should be false if engagement admin1 staff is not selected"
        ],
        "Children": []
      },
      {
        "$id": "313",
        "FileName": "engagement-admin-section-edit-controller-spec.es6",
        "Description": "redirect",
        "WhenList": [],
        "ThenList": [
          "should redirect to engagement record tab if the user becomes general user"
        ],
        "Children": []
      },
      {
        "$id": "314",
        "FileName": "engagement-admin-section-edit-controller-spec.es6",
        "Description": "save",
        "WhenList": [],
        "ThenList": [
          "should update admin and go to administration view page if user does not become general user"
        ],
        "Children": []
      },
      {
        "$id": "315",
        "FileName": "engagement-admin-section-edit-controller-spec.es6",
        "Description": "administrationTabSave",
        "WhenList": [],
        "ThenList": [
          "should send save engagement and evaluation settings request then navigate to administration page "
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "316",
    "FileName": "engagement-assignment-type-section-edit-controller-spec.js",
    "Description": "engagement assignment type section edit controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "317",
        "FileName": "engagement-assignment-type-section-edit-controller-spec.js",
        "Description": "init",
        "WhenList": [],
        "ThenList": [
          "should get correct view model when initialize controller",
          "should invalidate engagement cache"
        ],
        "Children": []
      },
      {
        "$id": "318",
        "FileName": "engagement-assignment-type-section-edit-controller-spec.js",
        "Description": "save assignment type",
        "WhenList": [],
        "ThenList": [
          "should save assignment type."
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "319",
    "FileName": "engagement-authorization-activity-history-dialog-controller-spec.js",
    "Description": "EngagementAuthorizationActivityHistoryDialogControllerSpec",
    "WhenList": [],
    "ThenList": [
      "should set fields when init.",
      "should reload history and change countries options when change year.",
      "should auto add \"All Calendar Year Countries\" option when have calendar year country.",
      "should filter item when change country or assignee",
      "should filter item when change year but keep country filter.",
      "should filter item when change year but keep assignee filter.",
      "should close dialog when cancel."
    ],
    "Children": []
  },
  {
    "$id": "320",
    "FileName": "engagement-authorization-administrators-dialog-controller-spec.js",
    "Description": "EngagementAuthorizationAdministratorsDialogController",
    "WhenList": [],
    "ThenList": [
      "should init controller",
      "should not error when change country by add a default auth admin.",
      "should clean select office and staff and reset office options when change country.",
      "should clean select staff when change office.",
      "should get default authorization admin",
      "should save staffs to authorization administrators",
      "should close dialog and do NOT send any request when click cancel button on dialog",
      "should maintain deleted authorization administrator when delete one and click cancel button",
      "should reload after deleted self from authorization administrator list when deleted and click save button"
    ],
    "Children": [
      {
        "$id": "321",
        "FileName": "engagement-authorization-administrators-dialog-controller-spec.js",
        "Description": "should not display in adding list",
        "WhenList": [],
        "ThenList": [
          "should not display engagementAdmin",
          "should not display custom auth admins",
          "should not display adding admins",
          "should not display coordinating contacts",
          "should not display delegated coordinating contacts"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "322",
    "FileName": "engagement-authorization-controller-spec.es6",
    "Description": "EngagementAuthorizationController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "323",
        "FileName": "engagement-authorization-controller-spec.es6",
        "Description": "uac",
        "WhenList": [],
        "ThenList": [
          "should go to engagement record page if current user can not view services tab"
        ],
        "Children": []
      },
      {
        "$id": "324",
        "FileName": "engagement-authorization-controller-spec.es6",
        "Description": "when initializing",
        "WhenList": [],
        "ThenList": [
          "should only get authorization list one time",
          "should set year options according to current year and set default value and filter out existed list year",
          "should hide activity history link given no any authorization list.",
          "should show activity history link given authorization list exist."
        ],
        "Children": []
      },
      {
        "$id": "325",
        "FileName": "engagement-authorization-controller-spec.es6",
        "Description": "auth rules dialog",
        "WhenList": [],
        "ThenList": [
          "should pass assignment types including rules for home and host country to dialog",
          "should pass resource links in engagement to dialog"
        ],
        "Children": []
      },
      {
        "$id": "326",
        "FileName": "engagement-authorization-controller-spec.es6",
        "Description": "auth admins dialog",
        "WhenList": [],
        "ThenList": [
          "open auth admins show dialog when click administrator link given current user can not right to edit auth admins",
          "open auth admins edit dialog when click administrator link given current user can edit auth admins",
          "do nothing when cancel dialog",
          "reload engagement authorization admins when update auth admin success."
        ],
        "Children": []
      },
      {
        "$id": "327",
        "FileName": "engagement-authorization-controller-spec.es6",
        "Description": "auth history dialog",
        "WhenList": [],
        "ThenList": [
          "open auth admins show dialog when click activity history",
          "open auth admins show dialog with selected year."
        ],
        "Children": []
      },
      {
        "$id": "328",
        "FileName": "engagement-authorization-controller-spec.es6",
        "Description": "when generating",
        "WhenList": [],
        "ThenList": [
          "should generate list for current engagement and selected year",
          "should update generated list and navigate to generated year",
          "should show activity history link after generate a auth list."
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "329",
    "FileName": "engagement-authorization-list-controller-spec.js",
    "Description": "EngagementAuthorizationListController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "330",
        "FileName": "engagement-authorization-list-controller-spec.js",
        "Description": "when initializing",
        "WhenList": [],
        "ThenList": [
          "should sort auth list result by assignee name, id, category, country",
          "should get country filter options from the auth list",
          "should get country filter options with uri for fancy select match selected.",
          "should get isFinalized from authorization items",
          "should show finalized on global when all countries are finalized",
          "should show finalized on all calendar year countries when all calendar year countries are finalized",
          "should not show share with client link if authorization list tile is not subscribed",
          "should show share with client link if authorization list tile is subscribed"
        ],
        "Children": []
      },
      {
        "$id": "331",
        "FileName": "engagement-authorization-list-controller-spec.js",
        "Description": "edit",
        "WhenList": [],
        "ThenList": [
          "should switch mode when click edit button",
          "should keep selected country when editing authorization list",
          "should keep selected the group of countries when editing authorization list"
        ],
        "Children": []
      },
      {
        "$id": "332",
        "FileName": "engagement-authorization-list-controller-spec.js",
        "Description": "filter",
        "WhenList": [],
        "ThenList": [
          "by country",
          "by all calendar year countries",
          "by 'draft countries only'",
          "by authorized only",
          "by all conditions"
        ],
        "Children": [
          {
            "$id": "333",
            "FileName": "engagement-authorization-list-controller-spec.js",
            "Description": "by assignee search text",
            "WhenList": [],
            "ThenList": [
              "when matching assignee name",
              "when matching assignee id",
              "when matching assignee employee id"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "334",
        "FileName": "engagement-authorization-list-controller-spec.js",
        "Description": "should download report",
        "WhenList": [],
        "ThenList": [
          "get report no filter",
          "get down by filter",
          "get down by Calendar year filter"
        ],
        "Children": []
      },
      {
        "$id": "335",
        "FileName": "engagement-authorization-list-controller-spec.js",
        "Description": "finalize auth list dialog",
        "WhenList": [],
        "ThenList": [
          "should show dialog",
          "should parse all countries when filtered country is global",
          "should parse all calendar year countries when filtered country is All Calendar Year Countries",
          "should parse all draft countries when filtered country is 'Draft countries only'",
          "should parse correct finalize function to model to be called"
        ],
        "Children": []
      },
      {
        "$id": "336",
        "FileName": "engagement-authorization-list-controller-spec.js",
        "Description": "can finalize",
        "WhenList": [],
        "ThenList": [
          "should  not disable finalize button when there is a country not finalized given the global filter",
          "should  not disable finalize button when there is a country not finalized given the 'All Calendar Year Countries' filter",
          "should disable finalize button given the filtered country is finalized"
        ],
        "Children": []
      },
      {
        "$id": "337",
        "FileName": "engagement-authorization-list-controller-spec.js",
        "Description": "show finalized legend tooltip",
        "WhenList": [],
        "ThenList": [
          "should show finalized legend to be true when the selected filter 'global' first seen"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "338",
    "FileName": "engagement-authorization-list-edit-controller-spec.js",
    "Description": "EngagementAuthorizationListEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "339",
        "FileName": "engagement-authorization-list-edit-controller-spec.js",
        "Description": "when navigate away",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "340",
            "FileName": "engagement-authorization-list-edit-controller-spec.js",
            "Description": "when switch view",
            "WhenList": [],
            "ThenList": [
              "should be able switch directly when no changes",
              "should keep changes when confirm stay when have changes",
              "should not show dialog when change to same view when have changes",
              "should change view when confirm to go away."
            ],
            "Children": []
          },
          {
            "$id": "341",
            "FileName": "engagement-authorization-list-edit-controller-spec.js",
            "Description": "when change location",
            "WhenList": [],
            "ThenList": [
              "should be able navigate away directly when no changes",
              "should keep changes when confirm stay when have changes",
              "should change location when confirm to go away."
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "342",
        "FileName": "engagement-authorization-list-edit-controller-spec.js",
        "Description": "cancel",
        "WhenList": [],
        "ThenList": [
          "should directly cancel when no changes"
        ],
        "Children": [
          {
            "$id": "343",
            "FileName": "engagement-authorization-list-edit-controller-spec.js",
            "Description": "when have changes",
            "WhenList": [],
            "ThenList": [
              "should keep changes when confirm stay",
              "should cancel changes when confirm stay"
            ],
            "Children": [
              {
                "$id": "344",
                "FileName": "engagement-authorization-list-edit-controller-spec.js",
                "Description": "comments",
                "WhenList": [],
                "ThenList": [
                  "should show dialog when change comments",
                  "should not show dialog when change comments to empty",
                  "should not show dialog when change comments to spaces",
                  "should show dialog when clear comments"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "345",
        "FileName": "engagement-authorization-list-edit-controller-spec.js",
        "Description": "authorize",
        "WhenList": [],
        "ThenList": [
          "should change isAuthorized status",
          "should not change isAuthorized status of finalized items if sofia is not authorization list administrator",
          "should change isAuthorized status of finalized items if sofia is authorization list administrator"
        ],
        "Children": []
      },
      {
        "$id": "346",
        "FileName": "engagement-authorization-list-edit-controller-spec.js",
        "Description": "add new item",
        "WhenList": [],
        "ThenList": [
          "should add one empty new item when click add new button and no country filter",
          "should add one empty new item with filter country if Sophia sets country filter"
        ],
        "Children": []
      },
      {
        "$id": "347",
        "FileName": "engagement-authorization-list-edit-controller-spec.js",
        "Description": "save",
        "WhenList": [],
        "ThenList": [
          "should send request when add new",
          "should emit authorizationListUpdated event after send request",
          "should send request for update item",
          "should send request for update item only for changed item",
          "should send request for update item only when item comments changed",
          "should not save new item if any is invalid"
        ],
        "Children": []
      },
      {
        "$id": "348",
        "FileName": "engagement-authorization-list-edit-controller-spec.js",
        "Description": "delete manual items",
        "WhenList": [],
        "ThenList": [
          "should delete an item on UI when click delete icon",
          "should post server with correct id to delete"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "349",
    "FileName": "engagement-authorization-rules-dialog-controller-spec.js",
    "Description": "EngagementAuthorizationRulesDialogController",
    "WhenList": [],
    "ThenList": [
      "should init controller",
      "should show a notification when there are no assignment types customized for this engagement",
      "should not show a notification when there are assignment types customized for this engagement",
      "should can edit assignment types when principal has the resource link",
      "should cannot edit assignment types when principal has not the resource link",
      "should send request to save changes of assignment type rule and close dialog",
      "should not double-click on 'Apply' button",
      "should close dialog and do NOT send any request when click cancel button on dialog"
    ],
    "Children": []
  },
  {
    "$id": "350",
    "FileName": "engagement-authorization-share-with-client-dialog-controller-spec.js",
    "Description": "EngagementAuthorizationShareWithClientDialogController",
    "WhenList": [],
    "ThenList": [
      "should init controller",
      "should get default client user access",
      "should get client users from mymobility api and sort by name",
      "should save client user access list",
      "should remove client user access when click remove button",
      "should close dialog and do NOT send any request when click cancel button on dialog",
      "should maintain remove client user access when remove one and click cancel button"
    ],
    "Children": []
  },
  {
    "$id": "351",
    "FileName": "engagement-checklist-create-controller-spec.js",
    "Description": "EngagementChecklistCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "352",
        "FileName": "engagement-checklist-create-controller-spec.js",
        "Description": "after EngagementChecklistCreateController initialized",
        "WhenList": [],
        "ThenList": [
          "should expose ownedBy to scope and set to the country of current user's office",
          "should expose vm.tasks to scope"
        ],
        "Children": [
          {
            "$id": "353",
            "FileName": "engagement-checklist-create-controller-spec.js",
            "Description": "when the current user is a Global Admin",
            "WhenList": [],
            "ThenList": [
              "should expose countryOptions to scope"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "354",
        "FileName": "engagement-checklist-create-controller-spec.js",
        "Description": "EngagementChecklistCreateController.create()",
        "WhenList": [],
        "ThenList": [
          "should build create engagement checklist request"
        ],
        "Children": []
      },
      {
        "$id": "355",
        "FileName": "engagement-checklist-create-controller-spec.js",
        "Description": "EngagementChecklistCreateController.notDuplicatedName",
        "WhenList": [],
        "ThenList": [
          "should pass validation when name is not duplicated",
          "should NOT pass validation when name is duplicated"
        ],
        "Children": []
      },
      {
        "$id": "356",
        "FileName": "engagement-checklist-create-controller-spec.js",
        "Description": "EngagementChecklistCreateController.isCreateChecklistTemplateFormValid()",
        "WhenList": [],
        "ThenList": [
          "should be false when createTaskTemplateForm is invalid",
          "should be true when given engagement is valid",
          "should be true when at lease one task is provided",
          "should be false when no task is provided"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "357",
    "FileName": "engagement-checklist-list-controller-spec.js",
    "Description": "EngagementChecklistListController",
    "WhenList": [],
    "ThenList": [
      "should list the checklist according current engagement",
      "show go to create checklist page"
    ],
    "Children": []
  },
  {
    "$id": "358",
    "FileName": "engagement-controller-spec.es6",
    "Description": "Test engagement show-record controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "359",
        "FileName": "engagement-controller-spec.es6",
        "Description": "initialize",
        "WhenList": [],
        "ThenList": [
          "should load an engagement when initialize",
          "should initiate selected tab",
          "should get selected tab from route parameter",
          "should go to home page if selected tab from route parameter not exist",
          "should go to default tab if user does not have permission for selected tab",
          "should able to see team space when current user office in delegated coordinating office",
          "should able to see my files entry when current user office in delegated coordinating office",
          "should set authorization list related permission",
          "should be able to see my files entry when current user is primary contact",
          "should be able to see my files entry when current user is secondary contact",
          "should always use new office file sharing",
          "should ensure cache created",
          "should keep only one cache entry",
          "should can edit assignment types"
        ],
        "Children": []
      },
      {
        "$id": "360",
        "FileName": "engagement-controller-spec.es6",
        "Description": "set file sharing link",
        "WhenList": [],
        "ThenList": [
          "should initialize the client file sharing link for new client file sharing",
          "should initialize the client file sharing link for old client file sharing",
          "should watch IsNewClientFileSharing to update clientFileSharingLink"
        ],
        "Children": []
      },
      {
        "$id": "361",
        "FileName": "engagement-controller-spec.es6",
        "Description": "can display other tabs on engagement detail page",
        "WhenList": [],
        "ThenList": [
          "should not display other tabs when current user not belong this engagement",
          "should display all tabs when current user is primary contact",
          "should display all tabs when current user is secondary contact",
          "should display all tabs when current user is in coordinating office",
          "should display all tabs when current user is in delegated coordinating office",
          "should display all tabs when current user is global admin",
          "should display all tabs when current user is in acl list"
        ],
        "Children": []
      },
      {
        "$id": "362",
        "FileName": "engagement-controller-spec.es6",
        "Description": "can display admin tab",
        "WhenList": [],
        "ThenList": [
          "should return true if it is restricted engagement and user is normal acl user",
          "should return true if it is restricted engagement and user is engagement admin",
          "should return false if it is restricted engagement and user is not acl",
          "should return false if it is open engagement and current user is not from any of engagement's offices",
          "should return false if it is an open engagement and current user is from subscribed office",
          "should return true if it is open engagement and user is engagement admin",
          "should not see the administration tab when current is only office role"
        ],
        "Children": []
      },
      {
        "$id": "363",
        "FileName": "engagement-controller-spec.es6",
        "Description": "when manage myMobility",
        "WhenList": [],
        "ThenList": [
          "should return false when engagement inactive",
          "should return true when current user is engagement role",
          "should return false when current user is not engagement role"
        ],
        "Children": []
      },
      {
        "$id": "364",
        "FileName": "engagement-controller-spec.es6",
        "Description": "when view myMobility",
        "WhenList": [],
        "ThenList": [
          "should show impersonate link if engagement response contains impersonate resource link",
          "should not show impersonate link if engagement response does not contain impersonate resource link"
        ],
        "Children": []
      },
      {
        "$id": "365",
        "FileName": "engagement-controller-spec.es6",
        "Description": "with ACL",
        "WhenList": [],
        "ThenList": [
          "should not view the private info when engagement is restricted and staff not in acl",
          "can view the private info when engagement is open",
          "can view the private info when engagement is restricted and current user in acl normal staff",
          "can view the private info when engagement is restricted and current user is office contact",
          "can view the private info when engagement is restricted and current user is engagement admin"
        ],
        "Children": []
      },
      {
        "$id": "366",
        "FileName": "engagement-controller-spec.es6",
        "Description": "with file sharing",
        "WhenList": [],
        "ThenList": [
          "should return false if there is no file sharing link in engagement dto",
          "should return true if there is file sharing link in engagement dto"
        ],
        "Children": []
      },
      {
        "$id": "367",
        "FileName": "engagement-controller-spec.es6",
        "Description": "with service history",
        "WhenList": [],
        "ThenList": [
          "should return false if there is employerworkrecords link not in engagement dto",
          "should return true if there is employerworkrecords link in engagement dto"
        ],
        "Children": []
      },
      {
        "$id": "368",
        "FileName": "engagement-controller-spec.es6",
        "Description": "can show client file sharing button",
        "WhenList": [],
        "ThenList": [
          "should show client file sharing button when sofia's office is the same with engagement's coordinating office",
          "should not show client file sharing sub tab when sofia's office is different from engagement's coordinating office"
        ],
        "Children": []
      },
      {
        "$id": "369",
        "FileName": "engagement-controller-spec.es6",
        "Description": "when upgrade file sharing",
        "WhenList": [],
        "ThenList": [
          "should show new client file sharing link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "370",
    "FileName": "engagement-create-controller-spec.js",
    "Description": "engagement create controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "371",
        "FileName": "engagement-create-controller-spec.js",
        "Description": "when engagement role is on",
        "WhenList": [],
        "ThenList": [
          "should build create engagement request correctly"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "372",
    "FileName": "engagement-custom-field-create-controller-spec.js",
    "Description": "engagement custom field create controller",
    "WhenList": [],
    "ThenList": [
      "should navigate to custom field section under engagement administration page when click cancel link",
      "should navigate to engagement custom field section under engagement administration page when create success",
      "should return false when list contains no content"
    ],
    "Children": [
      {
        "$id": "373",
        "FileName": "engagement-custom-field-create-controller-spec.js",
        "Description": "initialization",
        "WhenList": [],
        "ThenList": [
          "should displayed custom field type in order of Text/Date/Number/List based on the usage frequency",
          "should displayed custom field location",
          "should set uac status as opened after initialization",
          "should record engagement name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "374",
    "FileName": "engagement-custom-field-list-controller-spec.js",
    "Description": "EngagementCustomFieldListController",
    "WhenList": [],
    "ThenList": [
      "should list custom fields according current engagement",
      "should list other custom fields according current client without work record",
      "should return true when cf canMapToMyMobility is true",
      "should return false when cf canMapToMyMobility is false",
      "should return true when cf canPublishToMyMobility is true",
      "should return false when cf canPublishToMyMobility is false",
      "show go to create custom field page"
    ],
    "Children": [
      {
        "$id": "375",
        "FileName": "engagement-custom-field-list-controller-spec.js",
        "Description": "check name duplication",
        "WhenList": [],
        "ThenList": [
          "should valid when name not duplication with self-cf when edit",
          "should not valid when name duplication with self-cf when edit",
          "should valid when name duplication with self-cf but location type is not same when edit",
          "should valid when name not duplication in other.",
          "should valid when name duplication in other but not sub.",
          "should not valid when name duplication in other but and have been sub.",
          "should not valid when other cf with same name change to sub.",
          "should valid when other cf with same name change to not sub."
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "376",
    "FileName": "engagement-detail-controller-spec.js",
    "Description": "EngagementDetailController",
    "WhenList": [],
    "ThenList": [
      "onStaffChanged"
    ],
    "Children": [
      {
        "$id": "377",
        "FileName": "engagement-detail-controller-spec.js",
        "Description": "when the engagement is restricted",
        "WhenList": [],
        "ThenList": [
          "should be able to edit subscribed offices if the user is engagement role",
          "should not be able to edit subscribed offices if the user is not engagement role"
        ],
        "Children": []
      },
      {
        "$id": "378",
        "FileName": "engagement-detail-controller-spec.js",
        "Description": "when the engagement is not restricted",
        "WhenList": [],
        "ThenList": [
          "should return false when the engagement is not restricted and current user office is not in work offices",
          "should return true when the engagement is not restricted and current user office is in work offices"
        ],
        "Children": []
      },
      {
        "$id": "379",
        "FileName": "engagement-detail-controller-spec.js",
        "Description": "when check be able to subscribe my office",
        "WhenList": [],
        "ThenList": [
          "should not show subscribe my office link when belong to coordinating office",
          "should not show subscribe my office link when already subscribed",
          "should show subscribe my office link for general user when not subscribe yet"
        ],
        "Children": []
      },
      {
        "$id": "380",
        "FileName": "engagement-detail-controller-spec.js",
        "Description": "when ACL form load current user ACL role",
        "WhenList": [],
        "ThenList": [
          "should return true if current user is engagement admin",
          "should return true if current user is primary contact and office same",
          "should return true if current user is primary contact and office not same",
          "should return true if current user is working contact and office same",
          "should return false if current user is working contact and office not same",
          "should return false if current user is notAclStaff",
          "should return true if current user is global admin",
          "should return true if current user is office engagement admin and office same",
          "should return false if current user is office engagement admin and office not same"
        ],
        "Children": []
      },
      {
        "$id": "381",
        "FileName": "engagement-detail-controller-spec.js",
        "Description": "when engagement shown",
        "WhenList": [],
        "ThenList": [
          "should get coordinatingOffice acl list correctly",
          "should get delegatedOffice acl size correctly",
          "should get workOffice acl list correctly",
          "should get workOffice acl list correctly when workOffice primary contact staff same with office engagement admin staff"
        ],
        "Children": []
      },
      {
        "$id": "382",
        "FileName": "engagement-detail-controller-spec.js",
        "Description": "on destroy",
        "WhenList": [],
        "ThenList": [
          "should close acl dialog"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "383",
    "FileName": "engagement-detail-edit-controller-spec.es6",
    "Description": "engagement detail edit controller",
    "WhenList": [],
    "ThenList": [
      "changeCountryInDelegatedOffice",
      "changeOfficeInDelegatedOffice",
      "changeStaffInResponsibleOffice"
    ],
    "Children": [
      {
        "$id": "384",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "init",
        "WhenList": [],
        "ThenList": [
          "should get correct view model when initialize controller",
          "should invalidate engagement cache"
        ],
        "Children": []
      },
      {
        "$id": "385",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "office change",
        "WhenList": [],
        "ThenList": [
          "should clear staff when office changed",
          "should refresh all work office options when work office changed"
        ],
        "Children": []
      },
      {
        "$id": "386",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "default working office country/office changed",
        "WhenList": [],
        "ThenList": [
          "should get office option when country change in default working office",
          "should clear select staff and office engagement admin when working office changed"
        ],
        "Children": []
      },
      {
        "$id": "387",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "save/cancel",
        "WhenList": [],
        "ThenList": [
          "should save new coordinating office staffs when add staff",
          "should send save engagement request and location not changed",
          "should send briefing schedule method request when save",
          "should send status change request when change status",
          "should reload engagement if engagement status is not changed",
          "should not send status change request if engagement status is changed but cancelled",
          "should not open dialog and change engagement status to active"
        ],
        "Children": []
      },
      {
        "$id": "388",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "save coordinating office",
        "WhenList": [],
        "ThenList": [
          "should build the correct request to update the coordinating office",
          "should redirect to the engagement detail page after updating coordinating office"
        ],
        "Children": []
      },
      {
        "$id": "389",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "saveWorkOffice",
        "WhenList": [],
        "ThenList": [
          "should send save engagement request and transfer location when saveWorkOffice is called",
          "should save new work office with exist work office when add work office",
          "should show error message when failed to unsubscribe offices from engagement"
        ],
        "Children": [
          {
            "$id": "390",
            "FileName": "engagement-detail-edit-controller-spec.es6",
            "Description": "save office engagement admin",
            "WhenList": [],
            "ThenList": [
              "when we select a office engagement admin, it should be saved successfully",
              "when we empty a office engagement admin, it should be saved successfully"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "391",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "validate engagement name",
        "WhenList": [],
        "ThenList": [
          "should invalid when engagement name removed",
          "should invalid when engagement name duplicated"
        ],
        "Children": []
      },
      {
        "$id": "392",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "validate contact(s) in coordinating office",
        "WhenList": [],
        "ThenList": [
          "should valid when only correct coordinating office contact"
        ],
        "Children": []
      },
      {
        "$id": "393",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "validate work office",
        "WhenList": [],
        "ThenList": [
          "should correct workOffices empty",
          "should correct workOffice has country office and contact"
        ],
        "Children": []
      },
      {
        "$id": "394",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "coordinatingOfficeTeamContact",
        "WhenList": [],
        "ThenList": [
          "should empty team name and team phone number when team contact empty"
        ],
        "Children": []
      },
      {
        "$id": "395",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "workOfficeTeamContact",
        "WhenList": [],
        "ThenList": [
          "should empty team name and team phone number when team mail box empty",
          "should keep team name and team phone number when team mail box invalid"
        ],
        "Children": []
      },
      {
        "$id": "396",
        "FileName": "engagement-detail-edit-controller-spec.es6",
        "Description": "canEditWorkOffice",
        "WhenList": [],
        "ThenList": [
          "can edit work office when current user is engagement role staff",
          "can not edit work office when current user is not engagement role staff"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "397",
    "FileName": "engagement-file-upload-controller-spec.js",
    "Description": "Test engagement file upload controller",
    "WhenList": [],
    "ThenList": [
      "should add files when upload form is valid",
      "should not add files when upload form is invalid",
      "should delete file"
    ],
    "Children": []
  },
  {
    "$id": "398",
    "FileName": "engagement-finalize-authorization-list-dialog-controller-spec.js",
    "Description": "EngagementFinalizeAuthorizationListDialogController",
    "WhenList": [],
    "ThenList": [
      "should init controller",
      "should finalize correctly"
    ],
    "Children": []
  },
  {
    "$id": "399",
    "FileName": "engagement-frontload-and-cycletime-kpi-controller-spec.es6",
    "Description": "engagement frontload and cycletime kpi controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "400",
        "FileName": "engagement-frontload-and-cycletime-kpi-controller-spec.es6",
        "Description": "init target",
        "WhenList": [],
        "ThenList": [
          "should show target value of frontload and cycletime'",
          "should show only frontload value when cycletime is disabled'",
          "should show only cycleTime value when frontload is disabled'",
          "should sum be empty when kpi settings are all null"
        ],
        "Children": []
      },
      {
        "$id": "401",
        "FileName": "engagement-frontload-and-cycletime-kpi-controller-spec.es6",
        "Description": "load frontload and cycletime",
        "WhenList": [],
        "ThenList": [
          "should not load frontload and cycletime when there is no load data link",
          "should init kpi average by workrecord after data back",
          "should init kpi average by country after data back"
        ],
        "Children": []
      },
      {
        "$id": "402",
        "FileName": "engagement-frontload-and-cycletime-kpi-controller-spec.es6",
        "Description": "offset view style",
        "WhenList": [],
        "ThenList": [
          "should show negative style when given negative offset",
          "should show positive style when given positive offset"
        ],
        "Children": []
      },
      {
        "$id": "403",
        "FileName": "engagement-frontload-and-cycletime-kpi-controller-spec.es6",
        "Description": "init filter collections",
        "WhenList": [],
        "ThenList": [
          "should show year from default kpi start year to current year",
          "should show countries "
        ],
        "Children": []
      },
      {
        "$id": "404",
        "FileName": "engagement-frontload-and-cycletime-kpi-controller-spec.es6",
        "Description": "filter changed",
        "WhenList": [],
        "ThenList": [
          "should show china data only when country is china",
          "should show 2016 data when 2016 is selected"
        ],
        "Children": []
      },
      {
        "$id": "405",
        "FileName": "engagement-frontload-and-cycletime-kpi-controller-spec.es6",
        "Description": "order",
        "WhenList": [],
        "ThenList": [
          "should order data by country after load data",
          "should order data by sum",
          "should order data by country name",
          "should order by country after reloading data"
        ],
        "Children": []
      },
      {
        "$id": "406",
        "FileName": "engagement-frontload-and-cycletime-kpi-controller-spec.es6",
        "Description": "order symbol",
        "WhenList": [],
        "ThenList": [
          "should show asc symbol when sorted by country",
          "should show desc symbol when sorted by a specific country",
          "should show asc and desc symbol when sorted by sum"
        ],
        "Children": []
      },
      {
        "$id": "407",
        "FileName": "engagement-frontload-and-cycletime-kpi-controller-spec.es6",
        "Description": "hide column",
        "WhenList": [],
        "ThenList": [
          "should hide frontlaod and sum when frontload is turned off",
          "should hide cycle tiem and sum when frontload is turned off"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "408",
    "FileName": "engagement-help-text-controller-spec.js",
    "Description": "engagement help text controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "409",
        "FileName": "engagement-help-text-controller-spec.js",
        "Description": "initialize",
        "WhenList": [],
        "ThenList": [
          "should show help text as default",
          "should hide help text according to the data stored in localStorage"
        ],
        "Children": []
      },
      {
        "$id": "410",
        "FileName": "engagement-help-text-controller-spec.js",
        "Description": "hide help text",
        "WhenList": [],
        "ThenList": [
          "should hide help text and save this info to local storage"
        ],
        "Children": []
      },
      {
        "$id": "411",
        "FileName": "engagement-help-text-controller-spec.js",
        "Description": "show help text",
        "WhenList": [],
        "ThenList": [
          "should show help text and save this info to local storage"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "412",
    "FileName": "engagement-internal-kpi-controller-spec.es6",
    "Description": "Test engagement internal KPI controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "413",
        "FileName": "engagement-internal-kpi-controller-spec.es6",
        "Description": "when go to kpi detail page",
        "WhenList": [],
        "ThenList": [
          "should set correct values",
          "should order data by officeName after load data",
          "should order data by [officeName] column",
          "should order data by [officeName] column twice",
          "should order data by [sentCount] column",
          "should order data by [sentCount] column twice",
          "should go back to KPI overview when click [KPI overview] link"
        ],
        "Children": []
      },
      {
        "$id": "414",
        "FileName": "engagement-internal-kpi-controller-spec.es6",
        "Description": "when go to global compliance kpi detail page",
        "WhenList": [],
        "ThenList": [
          "should not include current year"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "415",
    "FileName": "engagement-kpi-controller-spec.es6",
    "Description": "EngagementKpiController",
    "WhenList": [],
    "ThenList": [
      "should able go to other page with year info"
    ],
    "Children": []
  },
  {
    "$id": "416",
    "FileName": "engagement-kpi-settings-controller-spec.es6",
    "Description": "Engagement Kpi Settings Controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "417",
        "FileName": "engagement-kpi-settings-controller-spec.es6",
        "Description": "init",
        "WhenList": [],
        "ThenList": [
          "should restruct kpi settings with kpi type",
          "should only show frontload and cycletime when backend give these data back only",
          "should show only service evaluation when practice type not tax",
          "should show briefing option for when backend give briefing data back",
          "should disable save btn when engagement is inactive"
        ],
        "Children": []
      },
      {
        "$id": "418",
        "FileName": "engagement-kpi-settings-controller-spec.es6",
        "Description": "toggle KPI setting checkbox",
        "WhenList": [],
        "ThenList": [
          "should enable CycleTime kpi when click CycleTime check box",
          "should disable frontload kpi when click frontload check box",
          "should enable Briefing kpi when click Briefing check box"
        ],
        "Children": []
      },
      {
        "$id": "419",
        "FileName": "engagement-kpi-settings-controller-spec.es6",
        "Description": "click KPI setting option",
        "WhenList": [],
        "ThenList": [
          "should select CycleTime kpi when click CycleTime option",
          "should select frontload kpi when click frontload option",
          "should select briefing kpi when click briefing option"
        ],
        "Children": []
      },
      {
        "$id": "420",
        "FileName": "engagement-kpi-settings-controller-spec.es6",
        "Description": "show items of each kpi",
        "WhenList": [],
        "ThenList": [
          "should show settings when kpi is clicked and enabled",
          "should not show settings when kpi is clicked but not enabled",
          "should not show settings when kpi is not clicked but enabled",
          "should not show settings when kpi is not clicked and not enabled",
          "should not show service evaluation settings when kpi is clicked but not enabled",
          "should not show briefing settings when kpi is clicked but not enabled",
          "should not show briefing settings when kpi is clicked and enabled"
        ],
        "Children": []
      },
      {
        "$id": "421",
        "FileName": "engagement-kpi-settings-controller-spec.es6",
        "Description": "save",
        "WhenList": [],
        "ThenList": [
          "should division 100 when click save",
          "should not division 100 when the is no service evaluation kpi"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "422",
    "FileName": "engagement-mymobility-tab-controller-spec.js",
    "Description": "engagement myMobility tab controller",
    "WhenList": [],
    "ThenList": [
      "should go to engagement record if current user can not view my mobility tab"
    ],
    "Children": []
  },
  {
    "$id": "423",
    "FileName": "engagement-mymobility-upgrade-file-sharing-dialog-controller-spec.js",
    "Description": "UpgradeFileSharingDialogController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "424",
        "FileName": "engagement-mymobility-upgrade-file-sharing-dialog-controller-spec.js",
        "Description": "when upgrade file sharing",
        "WhenList": [],
        "ThenList": [
          "should send request to upgrade"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "425",
    "FileName": "engagement-myMobility-user-detail-controller-spec.js",
    "Description": "EngagementMyMobilityUserDetailController",
    "WhenList": [],
    "ThenList": [
      "should load user details without new client file-sharing",
      "should load user details with new client file-sharing"
    ],
    "Children": [
      {
        "$id": "426",
        "FileName": "engagement-myMobility-user-detail-controller-spec.js",
        "Description": "without new client file sharing",
        "WhenList": [],
        "ThenList": [
          "should disable and hide file sharing when no file sharing subscription and view profile",
          "should disable and hide file sharing when no file sharing subscription and edit profile",
          "should enable file sharing when file sharing subscription checked and edit profile",
          "should disable/hide file sharing and unselect everything when the user unselect file sharing subscription"
        ],
        "Children": []
      },
      {
        "$id": "427",
        "FileName": "engagement-myMobility-user-detail-controller-spec.js",
        "Description": "with new client file sharing",
        "WhenList": [],
        "ThenList": [
          "should hide file sharing when no file sharing subscription and view profile",
          "should hide file sharing when no file sharing subscription and edit profile",
          "should hide file sharing when file sharing subscription checked and edit profile",
          "should hide file sharing and unselect everything when the user unselect file sharing subscription"
        ],
        "Children": []
      },
      {
        "$id": "428",
        "FileName": "engagement-myMobility-user-detail-controller-spec.js",
        "Description": "update user without new client file sharing",
        "WhenList": [],
        "ThenList": [
          "should save user details without UDF if user is Administrator",
          "should save user details with UDF if user is General User",
          "should save user subscriptions and update user box folder access",
          "should show error message if failure occurs during update"
        ],
        "Children": []
      },
      {
        "$id": "429",
        "FileName": "engagement-myMobility-user-detail-controller-spec.js",
        "Description": "update user with new client file sharing",
        "WhenList": [],
        "ThenList": [
          "should save user subscriptions and not update user box folder access"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "430",
    "FileName": "engagement-search-controller-spec.js",
    "Description": "Test engagement search controller",
    "WhenList": [],
    "ThenList": [
      "should search by client"
    ],
    "Children": [
      {
        "$id": "431",
        "FileName": "engagement-search-controller-spec.js",
        "Description": "check fuzzy name length",
        "WhenList": [],
        "ThenList": [
          "should return false if fuzzy name is undefined",
          "should return false if fuzzy name has only one char",
          "should return true if fuzzy name has at least two chars"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "432",
    "FileName": "engagement-service-evaluation-kpi-controller-spec.es6",
    "Description": "Test engagement service evaluation kpi controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "433",
        "FileName": "engagement-service-evaluation-kpi-controller-spec.es6",
        "Description": "after kpiInfo loaded",
        "WhenList": [],
        "ThenList": [
          "should load service evaluations when choose service evaluation",
          "should select last year",
          "should still select tiger last year when does not have data for last year",
          "should filter service evaluation when select year was 2016",
          "should return service evaluation when select year was 2016 and country was Armenia",
          "should return service evaluation when select year was 2016 and country was All Countries",
          "should return tax detail template when practice type was tax"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "434",
    "FileName": "engagement-service-history-controller-spec.js",
    "Description": "engagement service history controller",
    "WhenList": [],
    "ThenList": [
      "should load engagement's employer work records",
      "should navigate to create work record page",
      "should navigate to employer work record details page"
    ],
    "Children": [
      {
        "$id": "435",
        "FileName": "engagement-service-history-controller-spec.js",
        "Description": "uac",
        "WhenList": [],
        "ThenList": [
          "should go to engagement record page if current user can not view biling tab"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "436",
    "FileName": "engagement-services-controller-spec.es6",
    "Description": "EngagementServicesController Specs",
    "WhenList": [],
    "ThenList": [
      "should go to engagement record page if current user can not view services tab",
      "should initialize with correct fields"
    ],
    "Children": [
      {
        "$id": "437",
        "FileName": "engagement-services-controller-spec.es6",
        "Description": "when initialize",
        "WhenList": [],
        "ThenList": [
          "should initialize with isEditing as false",
          "should initialize serviceStatusOptions",
          "should switch editing mode when click Edit button",
          "should switch to normal show mode without creating service when click Cancel button",
          "should load all countries with matched active type of service",
          "should filter engagement type of service by current user country",
          "should init active only filter as off",
          "should show currency setting link",
          "should return billing country fee count",
          "should contain billing country fee links",
          "should load billing model and centralized fee setting",
          "should not set engagement fee setting if billing model is not set",
          "should not set engagement fee setting if billing model is decentralized"
        ],
        "Children": []
      },
      {
        "$id": "438",
        "FileName": "engagement-services-controller-spec.es6",
        "Description": "initialize view and edit engagement fee column",
        "WhenList": [],
        "ThenList": [
          "should show internal and external fee column",
          "should not show internal and external fee column",
          "should show external fee column"
        ],
        "Children": []
      },
      {
        "$id": "439",
        "FileName": "engagement-services-controller-spec.es6",
        "Description": "when editing",
        "WhenList": [],
        "ThenList": [
          "should group typeOfService by country",
          "should add a new engagement service item",
          "should add a new engagement service item and country has a default value",
          "should set internal fee currency same as external fee currency when create new and internal fee mode is same as external",
          "should set internal fee currency as null when create new and internal fee mode is local",
          "should change currency when country changes and internal fee mode is local",
          "should not change currency when country changes and internal fee mode is same as external",
          "should change currency when country changes and billing model is decentralized",
          "should delete a service item being created",
          "should show error message when service name is duplicate in one country",
          "should check service name duplicate when country change",
          "should validate service status of existing engagement type of service when country type of service inactive",
          "should filter list by country",
          "should only show active engagement type of service if active only filter is on",
          "should always show new created service when editing",
          "should show count of editing engagement type of services"
        ],
        "Children": []
      },
      {
        "$id": "440",
        "FileName": "engagement-services-controller-spec.es6",
        "Description": "when saving",
        "WhenList": [],
        "ThenList": [
          "should send service without id when add new engagement service",
          "should send service with id when update engagement service",
          "should send service with id when update decentralized engagement service",
          "should send service without id when add new decentralized engagement service",
          "should not send update request and not reload information when nothing changed",
          "should send service with to be deleted item ids",
          "should reset to be deleted item ids when save successfully",
          "should not update idsToBeDeleted when delete new created item"
        ],
        "Children": []
      },
      {
        "$id": "441",
        "FileName": "engagement-services-controller-spec.es6",
        "Description": "when select country",
        "WhenList": [],
        "ThenList": [
          "should access all countries when country is 'All'",
          "should only access specific country when country is specified"
        ],
        "Children": []
      },
      {
        "$id": "442",
        "FileName": "engagement-services-controller-spec.es6",
        "Description": "when filtering",
        "WhenList": [],
        "ThenList": [
          "should only show engagement type of services with filtered country",
          "should show all engagement type of services if country filter is global",
          "should show all engagement type of service if active only filter is off",
          "should only show active engagement type of service if active only filter is on",
          "should keep filter when save from editing mode",
          "should keep global filter when save from editing mode",
          "should keep filter when switching to editing mode"
        ],
        "Children": []
      },
      {
        "$id": "443",
        "FileName": "engagement-services-controller-spec.es6",
        "Description": "when sorting",
        "WhenList": [],
        "ThenList": [
          "should keep by ctos sorting after save"
        ],
        "Children": [
          {
            "$id": "444",
            "FileName": "engagement-services-controller-spec.es6",
            "Description": "in view mode",
            "WhenList": [],
            "ThenList": [
              "should sort by engagement type of service by default",
              "should sort by country name when click",
              "should sort by country name desc when click twice",
              "should sort by ctos when click",
              "should sort by ctos desc when click twice",
              "should sort by etos when click",
              "should sort by etos desc when click twice",
              "should sort by internal fee when click",
              "should sort internal fee and null should be before 0",
              "should sort by internal fee desc when click twice"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "445",
        "FileName": "engagement-services-controller-spec.es6",
        "Description": "when validating",
        "WhenList": [],
        "ThenList": [
          "should validate all engagement type of services"
        ],
        "Children": []
      },
      {
        "$id": "446",
        "FileName": "engagement-services-controller-spec.es6",
        "Description": "when view billing country",
        "WhenList": [],
        "ThenList": [
          "should show view billing country link when service belongs to US and internal fee currency mode is local",
          "should not show view billing country link when service not belongs to US and internal fee currency mode is local",
          "should not show view billing country link when service belongs to US and internal fee currency mode is not local"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "447",
    "FileName": "engagement-task-template-create-controller-spec.js",
    "Description": "EngagementTaskTemplateCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "448",
        "FileName": "engagement-task-template-create-controller-spec.js",
        "Description": "init",
        "WhenList": [],
        "ThenList": [
          "should show six milestone when engagement practice type is immigration"
        ],
        "Children": []
      },
      {
        "$id": "449",
        "FileName": "engagement-task-template-create-controller-spec.js",
        "Description": "create.notDuplicatedName",
        "WhenList": [],
        "ThenList": [
          "should pass validation when name is not duplicated",
          "should NOT pass validation when name is duplicated"
        ],
        "Children": []
      },
      {
        "$id": "450",
        "FileName": "engagement-task-template-create-controller-spec.js",
        "Description": "isCreateTaskTemplateFormValid()",
        "WhenList": [],
        "ThenList": [
          "should be true when given engagement is valid"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "451",
    "FileName": "engagement-task-template-list-controller-spec.js",
    "Description": "EngagementTaskTemplateListController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "452",
        "FileName": "engagement-task-template-list-controller-spec.js",
        "Description": "after TaskTemplateListController initialized",
        "WhenList": [],
        "ThenList": [
          "should expose vm.templates to scope"
        ],
        "Children": []
      },
      {
        "$id": "453",
        "FileName": "engagement-task-template-list-controller-spec.js",
        "Description": "getCountry()",
        "WhenList": [],
        "ThenList": [
          "should find country by uri"
        ],
        "Children": []
      },
      {
        "$id": "454",
        "FileName": "engagement-task-template-list-controller-spec.js",
        "Description": "showDetails",
        "WhenList": [],
        "ThenList": [
          "should navigate to task template details page"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "455",
    "FileName": "mymobility-service-initiation-controller-spec.js",
    "Description": "MyMobilityServiceInitiationController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "456",
        "FileName": "mymobility-service-initiation-controller-spec.js",
        "Description": "when show service initiation settings",
        "WhenList": [],
        "ThenList": [
          "should be able to see mandatory fields",
          "should be able to see instruction texts",
          "should not able to see assignment type field when engagement assignment types is empty",
          "should able to see assignment type field when engagement assignment types is not empty"
        ],
        "Children": []
      },
      {
        "$id": "457",
        "FileName": "mymobility-service-initiation-controller-spec.js",
        "Description": "when save service initiation settings",
        "WhenList": [],
        "ThenList": [
          "should save mandatory fields and instruction texts"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "458",
    "FileName": "mymobility-tile-subscription-controller-spec.js",
    "Description": "MyMobilityTileSubscriptionController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "459",
        "FileName": "mymobility-tile-subscription-controller-spec.js",
        "Description": "when feature-toggle is turned on ",
        "WhenList": [],
        "ThenList": [
          "should be able to see tile subscriptions",
          "should be able to see all tiles whose practice type matches the engagement`s"
        ],
        "Children": []
      },
      {
        "$id": "460",
        "FileName": "mymobility-tile-subscription-controller-spec.js",
        "Description": "when grace click the edit button in tile-subscriptions section on myMobility tab",
        "WhenList": [],
        "ThenList": [
          "should not be able to check the tile when edit button is not clicked",
          "should be able to check tiles when edit button is clicked",
          "should be able to save tile-subscriptions",
          "should be able to show edit button and list the old tile-subscriptions when cancel button clicked",
          "should not show confirmation dialog when saving tile subscriptions if grace doesn't remove any tiles",
          "should show confirmation dialog when saving tile subscriptions if grace removes tiles",
          "should load tiles when confirm to save tile subscriptions"
        ],
        "Children": [
          {
            "$id": "461",
            "FileName": "mymobility-tile-subscription-controller-spec.js",
            "Description": "should hide Client File Sharing link",
            "WhenList": [],
            "ThenList": [
              "when uncheck file sharing",
              "when uncheck new file sharing",
              "when check new file sharing and there are no users existing."
            ],
            "Children": []
          },
          {
            "$id": "462",
            "FileName": "mymobility-tile-subscription-controller-spec.js",
            "Description": "should show Client File Sharing link",
            "WhenList": [],
            "ThenList": [
              "when check new file sharing and there are some users existing."
            ],
            "Children": []
          },
          {
            "$id": "463",
            "FileName": "mymobility-tile-subscription-controller-spec.js",
            "Description": "when the tile has settings",
            "WhenList": [],
            "ThenList": [
              "should check all the settings when checking the tile",
              "should uncheck the tile when unchecking all the settings"
            ],
            "Children": []
          },
          {
            "$id": "464",
            "FileName": "mymobility-tile-subscription-controller-spec.js",
            "Description": "TEQ Settlement",
            "WhenList": [],
            "ThenList": [],
            "Children": []
          },
          {
            "$id": "465",
            "FileName": "mymobility-tile-subscription-controller-spec.js",
            "Description": "Certificate of Coverage",
            "WhenList": [],
            "ThenList": [],
            "Children": []
          },
          {
            "$id": "466",
            "FileName": "mymobility-tile-subscription-controller-spec.js",
            "Description": "Immigration Tracking",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "467",
                "FileName": "mymobility-tile-subscription-controller-spec.js",
                "Description": "when tile is not checked",
                "WhenList": [],
                "ThenList": [
                  "should show confirmation when click checkbox",
                  "should check box when click approve button",
                  "should not check box when click cancel button",
                  "should not popup unsubscribe dialog when uncheck tile"
                ],
                "Children": []
              },
              {
                "$id": "468",
                "FileName": "mymobility-tile-subscription-controller-spec.js",
                "Description": "when tile is checked",
                "WhenList": [],
                "ThenList": [
                  "should show warning dialog when unsubscribe",
                  "should uncheck box when confirm to unsubscribe",
                  "should not popup approve dialog when check tile"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "469",
        "FileName": "mymobility-tile-subscription-controller-spec.js",
        "Description": "employer return",
        "WhenList": [],
        "ThenList": [
          "should not show employer return tile when employer-return feature-toggle turns off"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "470",
    "FileName": "mymobility-user-controller-spec.js",
    "Description": "MyMobilityUserController",
    "WhenList": [],
    "ThenList": [
      "should start in view mode",
      "should initiate the user list"
    ],
    "Children": [
      {
        "$id": "471",
        "FileName": "mymobility-user-controller-spec.js",
        "Description": "grace adding new client admin",
        "WhenList": [],
        "ThenList": [
          "should load existing Nancies from same client",
          "should enter adding mode",
          "should add new item in list"
        ],
        "Children": []
      },
      {
        "$id": "472",
        "FileName": "mymobility-user-controller-spec.js",
        "Description": "grace saving changes to client admin list",
        "WhenList": [],
        "ThenList": [
          "should create a new nancy and associate her to hastings",
          "should update client admin list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "473",
    "FileName": "mymobility-user-create-controller-spec.js",
    "Description": "MyMobilityUserCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "474",
        "FileName": "mymobility-user-create-controller-spec.js",
        "Description": "on initialization",
        "WhenList": [],
        "ThenList": [
          "should set the default values in the form",
          "should set the default values for engagement mapped custom fields",
          "should redirect to the homepage if the current user is not engagement admin"
        ],
        "Children": []
      },
      {
        "$id": "475",
        "FileName": "mymobility-user-create-controller-spec.js",
        "Description": "when selecting Administrator role",
        "WhenList": [],
        "ThenList": [
          "should check all tile subscribed to the engagement and disable the checkbox",
          "should clear all selected custom field values"
        ],
        "Children": []
      },
      {
        "$id": "476",
        "FileName": "mymobility-user-create-controller-spec.js",
        "Description": "when selecting General User role",
        "WhenList": [],
        "ThenList": [
          "should uncheck all tile subscriptions and enable all the checkbox"
        ],
        "Children": []
      },
      {
        "$id": "477",
        "FileName": "mymobility-user-create-controller-spec.js",
        "Description": "when selecting an existing user",
        "WhenList": [],
        "ThenList": [
          "should fill the form with the existing user informations",
          "should disable the inputs firstname, lastname, email, role and phone number",
          "should enable and reset the user info when selecting Please Select",
          "should set role to general user if the existing user is a general user",
          "should set role to administrator if the existing user is an administrator"
        ],
        "Children": []
      },
      {
        "$id": "478",
        "FileName": "mymobility-user-create-controller-spec.js",
        "Description": "form validation",
        "WhenList": [],
        "ThenList": [
          "should enable add button if all the required fields are filled",
          "should invalid an email which already exists in the existing users list",
          "should invalid the first name which length less than 2",
          "should invalid the last name which length less than 2",
          "should invalid an email whose domain is blocked"
        ],
        "Children": []
      },
      {
        "$id": "479",
        "FileName": "mymobility-user-create-controller-spec.js",
        "Description": "on adding a new user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "480",
            "FileName": "mymobility-user-create-controller-spec.js",
            "Description": "with no failure",
            "WhenList": [],
            "ThenList": [
              "should add a new general user in the system",
              "should add a new general user without tile subscriptions",
              "should add a new general user with custom field filter",
              "should add a new admin user in the system",
              "should associate an existing general user with an engagement and tiles",
              "should associate an existing admin user with an engagement and tiles"
            ],
            "Children": [
              {
                "$id": "481",
                "FileName": "mymobility-user-create-controller-spec.js",
                "Description": "when selecting file sharing access for a general user with file sharing subscription checked",
                "WhenList": [],
                "ThenList": [
                  "should create new user in Box with the chosen file access",
                  "should create new user in Box with full access"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "482",
            "FileName": "mymobility-user-create-controller-spec.js",
            "Description": "with failure",
            "WhenList": [],
            "ThenList": [
              "should redirect the user with an error message when box accounts fails to be created",
              "should redirect the user with an error message when user creation returns conflict code",
              "should redirect the user with an error message when user creation fails"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "483",
        "FileName": "mymobility-user-create-controller-spec.js",
        "Description": "file sharing",
        "WhenList": [],
        "ThenList": [
          "should show file sharing section when selecting file sharing tile and role is general user",
          "should hide file-sharing section when selecting admin role",
          "should hide file-sharing section when changing role"
        ],
        "Children": []
      },
      {
        "$id": "484",
        "FileName": "mymobility-user-create-controller-spec.js",
        "Description": "new client file-sharing",
        "WhenList": [],
        "ThenList": [
          "should not show file sharing section when engagement use new client file-sharing"
        ],
        "Children": []
      },
      {
        "$id": "485",
        "FileName": "mymobility-user-create-controller-spec.js",
        "Description": "check confliction with pwc staff",
        "WhenList": [],
        "ThenList": [
          "should return true given not existing staff email address",
          "should return false given staff email address conflicted"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "486",
    "FileName": "old-engagement-kpi-controller-spec.es6",
    "Description": "Test engagement kpi controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "487",
        "FileName": "old-engagement-kpi-controller-spec.es6",
        "Description": "init kpi settings after enagagment loaded",
        "WhenList": [],
        "ThenList": [
          "should not load kpi settings when the setting link is not displayed",
          "should load kpi settings when the setting link is displayed",
          "should not update kpi settings when there is no update link"
        ],
        "Children": []
      },
      {
        "$id": "488",
        "FileName": "old-engagement-kpi-controller-spec.es6",
        "Description": "init data table after engagement loaded",
        "WhenList": [],
        "ThenList": [
          "should show kpi data table when has subscribed any kpi category",
          "should not show kpi data table when has not subscribed any kpi category",
          "should not show kpi data table when no enabled subscribed kpi category"
        ],
        "Children": []
      },
      {
        "$id": "489",
        "FileName": "old-engagement-kpi-controller-spec.es6",
        "Description": "show kpi settings link",
        "WhenList": [],
        "ThenList": [
          "should show kpi settings link when backend returns kpi settings items and has update kpi settings link",
          "should not show kpi settings link when backend returns kpi settings items but without updating kpi settings link"
        ],
        "Children": []
      },
      {
        "$id": "490",
        "FileName": "old-engagement-kpi-controller-spec.es6",
        "Description": "kpi setting dialog",
        "WhenList": [],
        "ThenList": [
          "should pop when click settings link",
          "should update kpi setting success and then reload kpi settings when click save btn",
          "should not send any request when click cancel btn"
        ],
        "Children": []
      },
      {
        "$id": "491",
        "FileName": "old-engagement-kpi-controller-spec.es6",
        "Description": "init filter",
        "WhenList": [],
        "ThenList": [
          "should show default year in year filter",
          "should show external kpi and type option filters to be null when all kpi are turned off",
          "should external kpi type be service evaluation when only service evaluation is turned on ",
          "should external kpi type be frontload and cycletime when only frontload and eycletime is turned on",
          "should external kpi type be ['frontload and cycletime', 'Service Evaluation'] when all kpi are turned on"
        ],
        "Children": []
      },
      {
        "$id": "492",
        "FileName": "old-engagement-kpi-controller-spec.es6",
        "Description": "download report",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "493",
            "FileName": "old-engagement-kpi-controller-spec.es6",
            "Description": "Frontload & CycleTime",
            "WhenList": [],
            "ThenList": [
              "should get report with correct link",
              "should download report for china"
            ],
            "Children": []
          },
          {
            "$id": "494",
            "FileName": "old-engagement-kpi-controller-spec.es6",
            "Description": "Service Evaluation Kpi",
            "WhenList": [],
            "ThenList": [
              "should download service evaluation kpi for china",
              "should download service evaluation kpi for all countries"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "495",
    "FileName": "set-engagement-service-billing-country-fee-dialog-controller-spec.es6",
    "Description": "Set Engagement Service Billing Country Fee Dialog Controller",
    "WhenList": [],
    "ThenList": [
      "should add a new billingCountryFee (which fee and country is not set) to billingCountryFeeList",
      "should change the country currency when change the country name",
      "should check whether there is duplicated countries",
      "should get billing country fees when initialize",
      "should not contain US in all country list",
      "should sort billing country fees when initialize",
      "should delete billing country fee when click the delete icon cell",
      "should save billing country fees when save"
    ],
    "Children": []
  },
  {
    "$id": "496",
    "FileName": "set-engagement-service-currency-controller-spec.es6",
    "Description": "SetEngagementServiceCurrencyController Specs",
    "WhenList": [],
    "ThenList": [
      "should load all currencies defines to view model",
      "should send currency data when click save to close dialog"
    ],
    "Children": []
  },
  {
    "$id": "497",
    "FileName": "subscribe-my-office-controller-spec.es6",
    "Description": "Test subscribe my office controller",
    "WhenList": [],
    "ThenList": [
      "should send correct request when engagement has work office",
      "should send correct request when engagement not has work office"
    ],
    "Children": []
  },
  {
    "$id": "498",
    "FileName": "tax-return-download-reminder-edit-controller-spec.js",
    "Description": "tax return download reminder controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "499",
        "FileName": "tax-return-download-reminder-edit-controller-spec.js",
        "Description": "initialize view",
        "WhenList": [],
        "ThenList": [
          "should revert to original data after user changes days but clicks 'Cancel'",
          "should revert to original data after user put days to empty and clicks 'Cancel'",
          "should revert to original data after user click 'No reminder needed', but clicks 'Cancel'",
          "should revert to original data after user change days, click 'No reminder needed', and clicks 'Cancel'",
          "should revert to original data after user put days to empty, click 'No reminder needed', and clicks 'Cancel'"
        ],
        "Children": []
      },
      {
        "$id": "500",
        "FileName": "tax-return-download-reminder-edit-controller-spec.js",
        "Description": "save",
        "WhenList": [],
        "ThenList": [
          "should update all values as null if 'No reminder needed' is selected",
          "should update initial tax return download reminder days as some value if 'No reminder needed' is not selected",
          "should update tax return download follow-up times and follow-up interval if checkbox is selected",
          "should update tax return download follow-up times and follow-up interval if checkbox is not selected"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "501",
    "FileName": "service-evaluation-criteria-controller-spec.js",
    "Description": "Service evaluation criteria controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "502",
        "FileName": "service-evaluation-criteria-controller-spec.js",
        "Description": "on page initialization",
        "WhenList": [],
        "ThenList": [
          "should set default value when Grace has one practice type and default to that practice type",
          "should init scope when Grace has two practice types",
          "should init responsible offices with all offices",
          "should init practice type without technology",
          "only show year when practypeType is tax"
        ],
        "Children": []
      },
      {
        "$id": "503",
        "FileName": "service-evaluation-criteria-controller-spec.js",
        "Description": "when criteria change",
        "WhenList": [],
        "ThenList": [
          "should reinitialize all elements when practice type is changed",
          "should reinitialize work record type when practice type changes to social security",
          "should reinitialize responsible office when engagement change",
          "should reinitialize office options when engagement change",
          "should reinitialize responsible offices when practice type change",
          "should clear current teams when responsible office change",
          "should load teams from responsible office when responsible office change"
        ],
        "Children": []
      },
      {
        "$id": "504",
        "FileName": "service-evaluation-criteria-controller-spec.js",
        "Description": "on search",
        "WhenList": [],
        "ThenList": [
          "send correct request to search page"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "505",
    "FileName": "service-evaluation-update-controller-spec.js",
    "Description": "ServiceEvaluationUpdateController",
    "WhenList": [],
    "ThenList": [
      "should get the workrecords with evaluation information",
      "should update workrecords evaluation"
    ],
    "Children": []
  },
  {
    "$id": "506",
    "FileName": "feature-toggle-controller-spec.js",
    "Description": "Test feature toggle controller",
    "WhenList": [],
    "ThenList": [
      "should load all feature toggles when initialize",
      "should toggle feature on",
      "should toggle feature off"
    ],
    "Children": []
  },
  {
    "$id": "507",
    "FileName": "frontdoor-controller-spec.js",
    "Description": "Front door controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "508",
        "FileName": "frontdoor-controller-spec.js",
        "Description": "On welcome page",
        "WhenList": [],
        "ThenList": [
          "should redirect to register page if click yes",
          "should redirect to logout page if click no",
          "should display i18n message in welcome page."
        ],
        "Children": []
      },
      {
        "$id": "509",
        "FileName": "frontdoor-controller-spec.js",
        "Description": "On register page",
        "WhenList": [],
        "ThenList": [
          "when initialize",
          "should redirect to wait for reply page if submit success",
          "should display i18n message on registration page",
          "should be empty for practice type selection after initialization",
          "should get offices and countries after initialization",
          "should reset office when country is not specified",
          "should reset office when country is specified",
          "should get timezone list after initialization"
        ],
        "Children": []
      },
      {
        "$id": "510",
        "FileName": "frontdoor-controller-spec.js",
        "Description": "on waiting for reply page",
        "WhenList": [],
        "ThenList": [
          "should display i18n message"
        ],
        "Children": []
      },
      {
        "$id": "511",
        "FileName": "frontdoor-controller-spec.js",
        "Description": "on inactive message page",
        "WhenList": [],
        "ThenList": [
          "should display i18n message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "512",
    "FileName": "master-chart-of-service-controller-spec.es6",
    "Description": "test master chart of service controller",
    "WhenList": [],
    "ThenList": [
      "global admin can access this page",
      "country level role can access this page",
      "office level role can not access this page",
      "general staff can not access this page",
      "should show the master chart of service list"
    ],
    "Children": []
  },
  {
    "$id": "513",
    "FileName": "header-controller-spec.es6",
    "Description": "header controller",
    "WhenList": [],
    "ThenList": [
      "should show menu item without toggle",
      "should show menu item without toggle and current user access is country level",
      "should show menu item without toggle and current user access is different from menu action",
      "should not show menu item without toggle and current user access is general",
      "should not show menu items with toggle and toggle is off",
      "should show review alert when need to review staff profile",
      "should not show review alert when no need to review staff profile",
      "should go to profile page when click button on review alert window"
    ],
    "Children": [
      {
        "$id": "514",
        "FileName": "header-controller-spec.es6",
        "Description": "linkedin prompt",
        "WhenList": [],
        "ThenList": [
          "should send request to disable linkedin prompt when click go to profile button",
          "should send request to disable linkedin prompt when click not now button"
        ],
        "Children": []
      },
      {
        "$id": "515",
        "FileName": "header-controller-spec.es6",
        "Description": "the menu has more than one access",
        "WhenList": [],
        "ThenList": [
          "should show menu when current user access is global admin",
          "should show menu when current user access is country level"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "516",
    "FileName": "office-administration-controller-spec.js",
    "Description": "Test office administration controller",
    "WhenList": [],
    "ThenList": [
      "should load teams"
    ],
    "Children": [
      {
        "$id": "517",
        "FileName": "office-administration-controller-spec.js",
        "Description": "show create team link",
        "WhenList": [],
        "ThenList": [
          "should be able to create team when have a create team link",
          "should not be able to create team when does not have a create team link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "518",
    "FileName": "office-detail-controller-spec.es6",
    "Description": "Test office show-detail controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "519",
        "FileName": "office-detail-controller-spec.es6",
        "Description": "when initialize",
        "WhenList": [],
        "ThenList": [
          "should load an office when initialize",
          "should notify child controller that vm.office has been loaded",
          "should load staff list for the office including pending staff",
          "should load partners list for the office without pending partners"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "520",
    "FileName": "office-engagements-controller-spec.js",
    "Description": "Test office engagements controller",
    "WhenList": [],
    "ThenList": [
      "should get engagements of an office",
      "should call navigation service when show office detail"
    ],
    "Children": []
  },
  {
    "$id": "521",
    "FileName": "office-information-edit-controller-spec.js",
    "Description": "Test office edit information controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "522",
        "FileName": "office-information-edit-controller-spec.js",
        "Description": "edit office",
        "WhenList": [],
        "ThenList": [
          "should send request when click save"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "523",
    "FileName": "office-list-controller-spec.js",
    "Description": "Test office list controller",
    "WhenList": [],
    "ThenList": [
      "should get office list when country is any",
      "should get office list when practiceType is any",
      "should get office list when practiceType and country both any",
      "should get office list when criteria is correct",
      "should call navigation service when show office detail"
    ],
    "Children": []
  },
  {
    "$id": "524",
    "FileName": "office-scheduler-controller-spec.js",
    "Description": "Office Scheduler Controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "525",
        "FileName": "office-scheduler-controller-spec.js",
        "Description": "initialization",
        "WhenList": [],
        "ThenList": [
          "should initialize help information",
          "should load all office schedulers",
          "should load all unavailable days",
          "should select specified scheduler"
        ],
        "Children": [
          {
            "$id": "526",
            "FileName": "office-scheduler-controller-spec.js",
            "Description": "create scheduler link",
            "WhenList": [],
            "ThenList": [
              "should not be able to create scheduler without link",
              "should be able to create scheduler with a create scheduler link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "527",
        "FileName": "office-scheduler-controller-spec.js",
        "Description": "edit button under UAC",
        "WhenList": [],
        "ThenList": [
          "should not show edit button if scheduler dot not have schedulers/update-setting resource link",
          "should show edit button if scheduler has schedulers/update-setting resource link",
          "should not show edit button if scheduler does not have update weekly availability resource link",
          "should show edit button if scheduler has update weekly availability resource link",
          "should show 'New Weekly Availability' button if scheduler has create weekly availability resource link",
          "should show 'Delete' button if scheduler has delete weekly availability resource link"
        ],
        "Children": []
      },
      {
        "$id": "528",
        "FileName": "office-scheduler-controller-spec.js",
        "Description": "show hour of day",
        "WhenList": [],
        "ThenList": [
          "should show 12 AM when hour of day is 0",
          "should show 1 AM when hour of day is 1",
          "should show 12 PM when hour of day is 12",
          "should show 11 PM when hour of day is 23"
        ],
        "Children": []
      },
      {
        "$id": "529",
        "FileName": "office-scheduler-controller-spec.js",
        "Description": "show hourly resources",
        "WhenList": [],
        "ThenList": [
          "should show resource when resource number is larger than 0",
          "should not show resource when resource number is larger than 0 but not on work day",
          "should not show edit button if scheduler dot not have update-unavailable-days resource link",
          "should show edit button if scheduler has update-unavailable-days resource link",
          "should not show 'New Weekly Availability' button if scheduler has no create weekly availability resource link",
          "should not show 'Delete' button if scheduler has no delete weekly availability resource link"
        ],
        "Children": []
      },
      {
        "$id": "530",
        "FileName": "office-scheduler-controller-spec.js",
        "Description": "create new weekly availability",
        "WhenList": [],
        "ThenList": [
          "should add new item to weeklyAvailabilities"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "531",
    "FileName": "office-scheduler-create-controller-spec.js",
    "Description": "OfficeSchedulerCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "532",
        "FileName": "office-scheduler-create-controller-spec.js",
        "Description": "controller initialization",
        "WhenList": [],
        "ThenList": [
          "should load office",
          "should_load_engagements_by_office",
          "should invalid access without create link on office",
          "should have help text on initialize",
          "should make an initial fake custom scheduler model for editing"
        ],
        "Children": []
      },
      {
        "$id": "533",
        "FileName": "office-scheduler-create-controller-spec.js",
        "Description": "editor interactions",
        "WhenList": [],
        "ThenList": [
          "should fetch engagements",
          "should reject engagements already assigned to other schedulers when searching"
        ],
        "Children": []
      },
      {
        "$id": "534",
        "FileName": "office-scheduler-create-controller-spec.js",
        "Description": "sending the create request",
        "WhenList": [],
        "ThenList": [
          "should send the request for creating",
          "should navigate to office scheduler tab with newly created scheduler selected "
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "535",
    "FileName": "office-scheduler-edit-controller-spec.js",
    "Description": "Office Scheduler Edit Controller",
    "WhenList": [],
    "ThenList": [
      "should_load_engagements_by_office"
    ],
    "Children": [
      {
        "$id": "536",
        "FileName": "office-scheduler-edit-controller-spec.js",
        "Description": "when updating scheduler",
        "WhenList": [],
        "ThenList": [
          "should update with engagement ids and name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "537",
    "FileName": "office-scheduler-unavailable-days-edit-controller-spec.es6",
    "Description": "Office Scheduler Unavailable days edit Controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "538",
        "FileName": "office-scheduler-unavailable-days-edit-controller-spec.es6",
        "Description": "edit unavailable day",
        "WhenList": [],
        "ThenList": [
          "should add a unavailable day when click \"add conndition\"",
          "should delete a unavailable day when click \"delete\""
        ],
        "Children": []
      },
      {
        "$id": "539",
        "FileName": "office-scheduler-unavailable-days-edit-controller-spec.es6",
        "Description": "save unavailable day",
        "WhenList": [],
        "ThenList": [
          "should save unavailableDays after click save button",
          "should cannot save unavailable day when the day is null or empty",
          "should save unavailable day when the day format is MM-dd-yyyy"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "540",
    "FileName": "office-scheduler-weekly-availability-edit-controller-spec.js",
    "Description": "Office Scheduler Weekly Availability Edit Controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "541",
        "FileName": "office-scheduler-weekly-availability-edit-controller-spec.js",
        "Description": "when save weekly availability",
        "WhenList": [],
        "ThenList": [
          "should update weekly availability if click save button",
          "should keep current custom scheduler selected",
          "should save when weekly availability is a new one"
        ],
        "Children": []
      },
      {
        "$id": "542",
        "FileName": "office-scheduler-weekly-availability-edit-controller-spec.js",
        "Description": "when cancel edit weekly availability",
        "WhenList": [],
        "ThenList": [
          "should delete new weekly availability",
          "should reset existing weekly availability"
        ],
        "Children": []
      },
      {
        "$id": "543",
        "FileName": "office-scheduler-weekly-availability-edit-controller-spec.js",
        "Description": "when create new weekly availability",
        "WhenList": [],
        "ThenList": [
          "should not delete new weekly availability"
        ],
        "Children": []
      },
      {
        "$id": "544",
        "FileName": "office-scheduler-weekly-availability-edit-controller-spec.js",
        "Description": "when delete weekly availability",
        "WhenList": [],
        "ThenList": [
          "should delete successfully"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "545",
    "FileName": "office-search-controller-spec.js",
    "Description": "office criteria controller",
    "WhenList": [],
    "ThenList": [
      "should load countries that have offices",
      "should selected current user's office and practiceType by default",
      "should load practice type"
    ],
    "Children": [
      {
        "$id": "546",
        "FileName": "office-search-controller-spec.js",
        "Description": "should set correct criteria on path when search",
        "WhenList": [],
        "ThenList": [
          "with full fields filled",
          "with only country filled",
          "with only practice type filled"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "547",
    "FileName": "office-setting-edit-controller-spec.js",
    "Description": "Test office edit controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "548",
        "FileName": "office-setting-edit-controller-spec.js",
        "Description": "edit office",
        "WhenList": [],
        "ThenList": [
          "should init briefing method dict",
          "should send request when click save"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "549",
    "FileName": "assignee-calendar-report-search-controller-spec.js",
    "Description": "assignee report",
    "WhenList": [],
    "ThenList": [
      "should clear engagement when practice type is changed",
      "should disable filters and show warning if there is no available practice type",
      "should disable assignee filters if there is no available engagement",
      "should send export assignee calendar report request with right fields",
      "should clear selected country when selected country category from 'both' to 'either'",
      "should clear selected country when selected country category from 'either' to 'both'"
    ],
    "Children": [
      {
        "$id": "550",
        "FileName": "assignee-calendar-report-search-controller-spec.js",
        "Description": "country filter",
        "WhenList": [],
        "ThenList": [
          "should send export assignee calendar report request with home or host country filter",
          "should send export assignee calendar report request with country filter"
        ],
        "Children": []
      },
      {
        "$id": "551",
        "FileName": "assignee-calendar-report-search-controller-spec.js",
        "Description": "assignee filter",
        "WhenList": [],
        "ThenList": [
          "should send export assignee calendar report request with assignee filter"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "552",
    "FileName": "assignee-report-search-controller-spec.js",
    "Description": "assignee report",
    "WhenList": [],
    "ThenList": [
      "should set practice type according to engagement practice type when engagement is changed",
      "should not change the practice type when selected engagement is undefined",
      "should clear engagement when practice type is changed",
      "should send export assignee report request with right fields"
    ],
    "Children": []
  },
  {
    "$id": "553",
    "FileName": "country-work-record-report-search-controller-spec.js",
    "Description": "country workRecord reportSearch controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "554",
        "FileName": "country-work-record-report-search-controller-spec.js",
        "Description": "when init and check access",
        "WhenList": [],
        "ThenList": [
          "country level role can access this page",
          "other role do not have the permission to access to this page",
          "should show year when work record type is immigration general",
          "should show year when work record type is immigration"
        ],
        "Children": []
      },
      {
        "$id": "555",
        "FileName": "country-work-record-report-search-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should init workrecord type options base on practice type given first practice type is Tax.",
          "should init workrecord type options base on practice type given first practice type is immi.",
          "should init workrecord type options base on practice type given first practice type is ss."
        ],
        "Children": []
      },
      {
        "$id": "556",
        "FileName": "country-work-record-report-search-controller-spec.js",
        "Description": "when practice type changed",
        "WhenList": [],
        "ThenList": [
          "should change workrecord type when practice type is changed",
          "should change workrecord type when practice type is changed from immigration to tax"
        ],
        "Children": []
      },
      {
        "$id": "557",
        "FileName": "country-work-record-report-search-controller-spec.js",
        "Description": "when search country work record report",
        "WhenList": [],
        "ThenList": [
          "should send work record type",
          "should send correct work record type after work record type changed.",
          "should send work record type as briefing when work record type is briefing."
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "558",
    "FileName": "efile-consent-reports-controller-spec.js",
    "Description": "e-file consent reports controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "559",
        "FileName": "efile-consent-reports-controller-spec.js",
        "Description": "when user come to this page",
        "WhenList": [],
        "ThenList": [
          "should show correct options to user"
        ],
        "Children": []
      },
      {
        "$id": "560",
        "FileName": "efile-consent-reports-controller-spec.js",
        "Description": "when current user was added into Efile Group of UK",
        "WhenList": [],
        "ThenList": [
          "should limit country filter options to UK"
        ],
        "Children": []
      },
      {
        "$id": "561",
        "FileName": "efile-consent-reports-controller-spec.js",
        "Description": "when current user was not in any Efile Group",
        "WhenList": [],
        "ThenList": [
          "should not limit country filter options"
        ],
        "Children": []
      },
      {
        "$id": "562",
        "FileName": "efile-consent-reports-controller-spec.js",
        "Description": "when current user was added into Efile Groups of UK and DE",
        "WhenList": [],
        "ThenList": [
          "should limit country filter options to UK and DE"
        ],
        "Children": []
      },
      {
        "$id": "563",
        "FileName": "efile-consent-reports-controller-spec.js",
        "Description": "when export e-file consent report",
        "WhenList": [],
        "ThenList": [
          "should sent download request",
          "should only send tax ending year filter when efileDownloaded filter no value ",
          "should only send tax ending year filter when efileConsentStatus filter no value ",
          "should only send tax ending year filter when other filter no value "
        ],
        "Children": []
      },
      {
        "$id": "564",
        "FileName": "efile-consent-reports-controller-spec.js",
        "Description": "when export efile consent with employer return info",
        "WhenList": [],
        "ThenList": [
          "should send employer return status filter when selected country can access employer return",
          "should not send employer return filter when country does not apply employer return",
          "should use approved as default option for employer return status",
          "should not keep last option for employer return status when user change country",
          "should not send Employer Return Status filter when select all option"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "565",
    "FileName": "my-data-controller-spec.js",
    "Description": "my data",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "566",
        "FileName": "my-data-controller-spec.js",
        "Description": "init",
        "WhenList": [],
        "ThenList": [
          "should init sections when page load",
          "should init currentFilters when page load without Tax",
          "should init currentFilters when page load"
        ],
        "Children": [
          {
            "$id": "567",
            "FileName": "my-data-controller-spec.js",
            "Description": "init work record type",
            "WhenList": [],
            "ThenList": [
              "should init workrecord type options base on practice type given first practice type is Tax.",
              "should init workrecord type options base on practice type given first practice type is immi.",
              "should init workrecord type options base on practice type given first practice type is ss."
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "568",
        "FileName": "my-data-controller-spec.js",
        "Description": "change filters",
        "WhenList": [],
        "ThenList": [
          "when engagement changed",
          "when work record country changed"
        ],
        "Children": [
          {
            "$id": "569",
            "FileName": "my-data-controller-spec.js",
            "Description": "change practice type",
            "WhenList": [],
            "ThenList": [
              "should set correct value in scope when practice type changed",
              "should change workrecord type when practice type is changed",
              "should change workrecord type when practice type is changed from tax to Immigration"
            ],
            "Children": []
          },
          {
            "$id": "570",
            "FileName": "my-data-controller-spec.js",
            "Description": "when responsibile office changed",
            "WhenList": [],
            "ThenList": [
              "should load teams when work record responsible office changed",
              "should clear team information when work record responsible office changed to undefined"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "571",
        "FileName": "my-data-controller-spec.js",
        "Description": "export",
        "WhenList": [],
        "ThenList": [
          "should export with team filter",
          "should export with work record type filter",
          "should export with work record type filter after work record type changed",
          "should not send year when year is any",
          "should return download file when export my data",
          "should not send with work record filters when assignee sections only"
        ],
        "Children": []
      },
      {
        "$id": "572",
        "FileName": "my-data-controller-spec.js",
        "Description": "selecting sections",
        "WhenList": [],
        "ThenList": [
          "should change current section count when section click",
          "should all work record section with Work Record Data category",
          "should disable work record filters when select assignee sections only"
        ],
        "Children": [
          {
            "$id": "573",
            "FileName": "my-data-controller-spec.js",
            "Description": "year options and selected year",
            "WhenList": [],
            "ThenList": [
              "should remove any from year options and select current year when when select work record sections and practice type is tax ",
              "should only remove any from year options and keep current selected when selected Work Record Data categroy section again and practice type is tax",
              "should only restore any to year options and keep current selected when remove all selected Work Record Data categroy section and practice type is tax",
              "should not remove any from year options and not change default selected when selected Work Record Data categroy section and practice type is not tax ",
              "should remove any and keep current selected year when selected work record data category and change practice type from imm to tax",
              "should keep any and set current selected year as any when selected work record data category and change practice type from tax to imm",
              "should set current selected year as last year at country is Fiscal when selected work record data category and pratice type is tax",
              "should set current selected year as calendar year at country is not Fiscal when selected work record data category and pratice type is tax"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "574",
    "FileName": "questionnaire-status-report-search-controller-spec.js",
    "Description": "QuestionnaireStatusReportSearchController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "575",
        "FileName": "questionnaire-status-report-search-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should load team for current responsible office"
        ],
        "Children": []
      },
      {
        "$id": "576",
        "FileName": "questionnaire-status-report-search-controller-spec.js",
        "Description": "when change responsible office",
        "WhenList": [],
        "ThenList": [
          "should clear selected team and load teams",
          "should clear team information when responsible office changed to undefined"
        ],
        "Children": []
      },
      {
        "$id": "577",
        "FileName": "questionnaire-status-report-search-controller-spec.js",
        "Description": "when search questionnaire status report",
        "WhenList": [],
        "ThenList": [
          "should send team"
        ],
        "Children": []
      },
      {
        "$id": "578",
        "FileName": "questionnaire-status-report-search-controller-spec.js",
        "Description": "when engagement changed",
        "WhenList": [],
        "ThenList": [
          "should distinct offices when engagement changed",
          "should set practice type according to engagement practice type when engagement is changed",
          "should not change the practice type when selected engagement is undefined"
        ],
        "Children": []
      },
      {
        "$id": "579",
        "FileName": "questionnaire-status-report-search-controller-spec.js",
        "Description": "when practice type changed",
        "WhenList": [],
        "ThenList": [
          "should clear engagement when practice type is changed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "580",
    "FileName": "tax-return-report-search-controller-spec.js",
    "Description": "TaxReturnReportSearchController",
    "WhenList": [],
    "ThenList": [
      "should distinct offices when engagement changed",
      "should clear team information when responsible office changed to undefined",
      "should clear selected team and load teams from office when responsible office changed",
      "should send correct criteria when search work record report",
      "should select not downloaded tax returns by default"
    ],
    "Children": []
  },
  {
    "$id": "581",
    "FileName": "work-record-report-search-controller-spec.js",
    "Description": "WorkRecordReportSearchController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "582",
        "FileName": "work-record-report-search-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should init workrecord type options base on practice type given first practice type is Tax.",
          "should init workrecord type options base on practice type given first practice type is immi.",
          "should init workrecord type options base on practice type given first practice type is ss.",
          "should show year when work record type is immigration general",
          "should show year when work record type is immigration"
        ],
        "Children": []
      },
      {
        "$id": "583",
        "FileName": "work-record-report-search-controller-spec.js",
        "Description": "when search work record report",
        "WhenList": [],
        "ThenList": [
          "should send work record type",
          "should send work record type as Briefing when search tax briefing",
          "should send correct work record type after work record type changed.",
          "should send work record type as Briefing when search ss briefing",
          "should send team criteria",
          "should send work record year when work record type is immigration general",
          "should send work record year when work record type is immigration",
          "should not send work record year when work record type is briefing and practice type is immigration"
        ],
        "Children": []
      },
      {
        "$id": "584",
        "FileName": "work-record-report-search-controller-spec.js",
        "Description": "when engagement changed",
        "WhenList": [],
        "ThenList": [
          "should distinct offices when engagement changed",
          "should set practice type according to engagement practice type when engagement is changed",
          "should not change the practice type when selected engagement is undefined"
        ],
        "Children": []
      },
      {
        "$id": "585",
        "FileName": "work-record-report-search-controller-spec.js",
        "Description": "when practice type changed",
        "WhenList": [],
        "ThenList": [
          "should clear engagement when practice type is changed",
          "should change workrecord type when practice type is changed",
          "should change workrecord type when practice type is changed from tax to Immigration"
        ],
        "Children": []
      },
      {
        "$id": "586",
        "FileName": "work-record-report-search-controller-spec.js",
        "Description": "when responsible office changed",
        "WhenList": [],
        "ThenList": [
          "should clear team information when responsible office changed to undefined",
          "should clear selected team and load teams from office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "587",
    "FileName": "search-controller-spec.js",
    "Description": "test search controller",
    "WhenList": [],
    "ThenList": [
      "should go to search result page",
      "should go to search result page when query with route",
      "should not go to search result page without input",
      "should not go to search result page with empty input string",
      "should init content type from session",
      "should record search type in session when it changed"
    ],
    "Children": []
  },
  {
    "$id": "588",
    "FileName": "search-result-controller-spec.js",
    "Description": "test search result controller",
    "WhenList": [],
    "ThenList": [
      "should search result by query",
      "should navigate to assignee detail page when show assignee details",
      "should return error when show assignee details with restricted engagement",
      "should navigate to assignee detail page when just 1 result matched",
      "should navigate to assignee search result page when more than 1 results matched"
    ],
    "Children": []
  },
  {
    "$id": "589",
    "FileName": "batch-create-staff-controller-spec.es6",
    "Description": "batch create staff controller",
    "WhenList": [],
    "ThenList": [
      "should render import result when success"
    ],
    "Children": []
  },
  {
    "$id": "590",
    "FileName": "pending-staff-approve-controller-spec.es6",
    "Description": "Pending staff approve controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "591",
        "FileName": "pending-staff-approve-controller-spec.es6",
        "Description": "when initialize",
        "WhenList": [],
        "ThenList": [
          "should sort practiceTypeWithStatus by status and name",
          "should see confirm button when one pending practice type can approve",
          "should not see confirm button when all pending practice type can not approve",
          "should redirect to staff profile page when staff does not have pending practice types"
        ],
        "Children": []
      },
      {
        "$id": "592",
        "FileName": "pending-staff-approve-controller-spec.es6",
        "Description": "for confirm process",
        "WhenList": [],
        "ThenList": [
          "should set invalid when reject without comment",
          "should send approve practice type request when confirm"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "593",
    "FileName": "staff-create-controller-spec.es6",
    "Description": "Test staff create controller",
    "WhenList": [],
    "ThenList": [
      "should send correct request when create staff"
    ],
    "Children": [
      {
        "$id": "594",
        "FileName": "staff-create-controller-spec.es6",
        "Description": "after initialized",
        "WhenList": [],
        "ThenList": [
          "should get correct value after initialization",
          "should expose allPracticeTypes to $scope"
        ],
        "Children": []
      },
      {
        "$id": "595",
        "FileName": "staff-create-controller-spec.es6",
        "Description": "should reset offices",
        "WhenList": [],
        "ThenList": [
          "when country not specified",
          "when country specified"
        ],
        "Children": []
      },
      {
        "$id": "596",
        "FileName": "staff-create-controller-spec.es6",
        "Description": "notDuplicatedPwCGuid()",
        "WhenList": [],
        "ThenList": [
          "should be valid when PwCGuid is not duplicated",
          "should be invalid when PwCGuid is duplicated"
        ],
        "Children": []
      },
      {
        "$id": "597",
        "FileName": "staff-create-controller-spec.es6",
        "Description": "check duplication email",
        "WhenList": [],
        "ThenList": [
          "should return true given not existing staff email address",
          "should return false given staff email address duplicate"
        ],
        "Children": []
      },
      {
        "$id": "598",
        "FileName": "staff-create-controller-spec.es6",
        "Description": "isPracticeTypeAssigned()",
        "WhenList": [],
        "ThenList": [
          "should return true when at least one practice type is assigned to staff",
          "should return false when no practice type is assigned to staff"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "599",
    "FileName": "staff-criteria-controller-advance-search-spec.es6",
    "Description": "staff criteria controller when advance search",
    "WhenList": [],
    "ThenList": [
      "should get correct value after initialization"
    ],
    "Children": [
      {
        "$id": "600",
        "FileName": "staff-criteria-controller-advance-search-spec.es6",
        "Description": "should set correct offices value when country change",
        "WhenList": [],
        "ThenList": [
          "when set to other country",
          "when country set to empty"
        ],
        "Children": []
      },
      {
        "$id": "601",
        "FileName": "staff-criteria-controller-advance-search-spec.es6",
        "Description": "should set correct criteria on path when search",
        "WhenList": [],
        "ThenList": [
          "with full fields filled",
          "with only country filled"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "602",
    "FileName": "staff-criteria-controller-refine-search-spec.es6",
    "Description": "staff criteria controller when refine search",
    "WhenList": [],
    "ThenList": [
      "should get correct search criteria after initialization given $q in path",
      "should switch to edit mode when click refine",
      "should switch view mode when cancel refine"
    ],
    "Children": []
  },
  {
    "$id": "603",
    "FileName": "staff-detail-controller-spec.es6",
    "Description": "Test staff show-detail controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "604",
        "FileName": "staff-detail-controller-spec.es6",
        "Description": "after initialized",
        "WhenList": [],
        "ThenList": [
          "should load a staff",
          "should load staff with correct timezone info",
          "isEditing should be false",
          "should expose $scope.allPracticeTypes",
          "should expose $scope.selectedPracticeTypes"
        ],
        "Children": []
      },
      {
        "$id": "605",
        "FileName": "staff-detail-controller-spec.es6",
        "Description": "can edit staff",
        "WhenList": [],
        "ThenList": [
          "can edit when contains edit-staff link",
          "can not edit when not contains edit-staff link"
        ],
        "Children": []
      },
      {
        "$id": "606",
        "FileName": "staff-detail-controller-spec.es6",
        "Description": "can show badge",
        "WhenList": [],
        "ThenList": [
          "for partner",
          "for office level role",
          "for country level role",
          "for country level role"
        ],
        "Children": []
      },
      {
        "$id": "607",
        "FileName": "staff-detail-controller-spec.es6",
        "Description": "can inactive",
        "WhenList": [],
        "ThenList": [
          "should be able to inactive when is office level role of staff's office",
          "should not be able to inactive when office level role is not in staff's office",
          "should be able to inactive when  staff's office in country level role's country",
          "should not be able to inactive when staff's office not in country level role's country"
        ],
        "Children": []
      },
      {
        "$id": "608",
        "FileName": "staff-detail-controller-spec.es6",
        "Description": "connect LinkedIn",
        "WhenList": [],
        "ThenList": [
          "should send request to disable linkedin prompt given user needs PromptForLinkedIn",
          "should not send request to disable linkedin prompt given user needs PromptForLinkedIn"
        ],
        "Children": []
      },
      {
        "$id": "609",
        "FileName": "staff-detail-controller-spec.es6",
        "Description": "show confirm inactive staff dialog",
        "WhenList": [],
        "ThenList": [
          "should show inactivate staff with responsibility dialog",
          "should go to reassign page when click 'proceed'",
          "should remain detail page when click 'cancel'",
          "should show inactivate staff without responsibility dialog"
        ],
        "Children": []
      },
      {
        "$id": "610",
        "FileName": "staff-detail-controller-spec.es6",
        "Description": "current user access is higher than general",
        "WhenList": [],
        "ThenList": [
          "should return true when current user access is office level",
          "should return false when current user access is general"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "611",
    "FileName": "staff-edit-controller-spec.es6",
    "Description": "staff edit controller",
    "WhenList": [],
    "ThenList": [
      "should not be in saving status if update failed",
      "should get false when have duplicate guids",
      "should only can add employeeId when update staff employeeId",
      "should be valid when staff is valid and no format error",
      "should be invalid when have format error",
      "should be invalid when staff is invalid"
    ],
    "Children": [
      {
        "$id": "612",
        "FileName": "staff-edit-controller-spec.es6",
        "Description": "after initialized",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "613",
            "FileName": "staff-edit-controller-spec.es6",
            "Description": "when the current user is authorized to edit",
            "WhenList": [],
            "ThenList": [
              "should get correct view model after initialization",
              "should init roles"
            ],
            "Children": []
          },
          {
            "$id": "614",
            "FileName": "staff-edit-controller-spec.es6",
            "Description": "when the current user is global admin",
            "WhenList": [],
            "ThenList": [
              "should init roles on own profile",
              "should init roles on staff detail page"
            ],
            "Children": []
          },
          {
            "$id": "615",
            "FileName": "staff-edit-controller-spec.es6",
            "Description": "when current user is general level",
            "WhenList": [],
            "ThenList": [
              "should init roles on own profile",
              "should init roles on staff detail page"
            ],
            "Children": []
          },
          {
            "$id": "616",
            "FileName": "staff-edit-controller-spec.es6",
            "Description": "when current user is office level",
            "WhenList": [],
            "ThenList": [
              "should init roles on own profile",
              "should init roles on staff detail page",
              "should disabled access level on higher level staff detail page"
            ],
            "Children": []
          },
          {
            "$id": "617",
            "FileName": "staff-edit-controller-spec.es6",
            "Description": "when current user is country level",
            "WhenList": [],
            "ThenList": [
              "should init roles on own profile",
              "should init roles on staff detail page",
              "should disabled access level on higher level staff detail page"
            ],
            "Children": []
          },
          {
            "$id": "618",
            "FileName": "staff-edit-controller-spec.es6",
            "Description": "when current user is immigration/technology approver",
            "WhenList": [],
            "ThenList": [
              "should disabled access level on higher level staff detail page",
              "should disabled access level on lower level staff detail page but the staff's country is different with current user",
              "should disabled access level on same level staff detail page but the staff's country is different with current user",
              "should disabled access level on lower level staff detail page but the staff's office is different with current user",
              "should disabled access level on same level staff detail page but the staff's office is different with current user",
              "should disabled access level on staff detail page when current user is general",
              "should enabled access level on staff detail page when current user is global admin",
              "should enabled access level on lower level staff detail page and the staff's country is same as current user",
              "should enabled access level on same level staff detail page and the staff's country is same as current user",
              "should enabled access level on lower level staff detail page and the staff's office is same as current user",
              "should disabled access level on same level staff detail page and the staff's office is same as current user",
              "should disabled tax/social practice types when current user is general and in same office or country with edited staff",
              "should disabled tax/social practice types when current user is general and not in same office or country with edited staff",
              "should disabled tax/social practice types when current user is office level but have different office with edited staff",
              "should enabled tax/social practice types when current user is office level and have same office with edited staff",
              "should disabled tax/social practice types when current user is country level but have different country with edited staff",
              "should enabled tax/social practice types when current user is country level and have same country with edited staff"
            ],
            "Children": []
          },
          {
            "$id": "619",
            "FileName": "staff-edit-controller-spec.es6",
            "Description": "when current user is authorized to edit practice type",
            "WhenList": [],
            "ThenList": [
              "should disabled edit practice type when current user edit self profile detail page",
              "should disabled all practice type checkbox when current user has one practice type and same with staff practice type",
              "should only enabled immigration practice type checkbox when current user is authorized for immigrationApproval and staff has tax practice type",
              "should enabled all checkbox when current user can approve immigration, technology and has tax,social security practice type"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "620",
        "FileName": "staff-edit-controller-spec.es6",
        "Description": "build correct request",
        "WhenList": [],
        "ThenList": [
          "should send correct update request when save",
          "should send correct update request when office level update self",
          "should send correct update request when global admin update self"
        ],
        "Children": [
          {
            "$id": "621",
            "FileName": "staff-edit-controller-spec.es6",
            "Description": "when change office",
            "WhenList": [],
            "ThenList": [
              "should change office when staff has no responsibility",
              "should not change office when staff has responsibilities"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "622",
        "FileName": "staff-edit-controller-spec.es6",
        "Description": "update staff office",
        "WhenList": [],
        "ThenList": [
          "can edit office when contains edit-staff-office link",
          "can not edit office when not contain edit-staff-office link",
          "should show dialog when office changed and need reassign work"
        ],
        "Children": []
      },
      {
        "$id": "623",
        "FileName": "staff-edit-controller-spec.es6",
        "Description": "update staff practice type",
        "WhenList": [],
        "ThenList": [
          "should save practice type if add new practice type",
          "should save practice type when remove practice type and no work needs reassign",
          "should not save practice type and show reassign confirm dialog when remove practice type and need reassign work",
          "should jump to reassign page with practice type parameter when click proceed on reassign confirm dialog",
          "should stay on current page when click cancel on reassign confirm dialog"
        ],
        "Children": []
      },
      {
        "$id": "624",
        "FileName": "staff-edit-controller-spec.es6",
        "Description": "update staff office and remove practice type at the same time",
        "WhenList": [],
        "ThenList": [
          "should show dialog when office and practice type both need reassign work"
        ],
        "Children": []
      },
      {
        "$id": "625",
        "FileName": "staff-edit-controller-spec.es6",
        "Description": "update staff access",
        "WhenList": [],
        "ThenList": [
          "should update current user's access if update self"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "626",
    "FileName": "staff-handover-controller-spec.es6",
    "Description": "Test staff hand over controller",
    "WhenList": [],
    "ThenList": [
      "should handover work",
      "should transform handover works after initial",
      "should not be ready to proceed when works has not been all assigned",
      "should be ready to proceed when all works has been assigned",
      "should return selected handover works number",
      "should get practice type restriction when select works",
      "should reset assign to when handover works changed"
    ],
    "Children": []
  },
  {
    "$id": "627",
    "FileName": "staff-inactivate-staff-no-responsibility-dialog-controller-spec.es6",
    "Description": "InactivateStaffNoResponsibilityDialogController",
    "WhenList": [],
    "ThenList": [
      "should init controller",
      "should close dialog and call cancel callback when canceling",
      "should change button styles and call inactivate when click ok"
    ],
    "Children": []
  },
  {
    "$id": "628",
    "FileName": "staff-open-work-records-controller-spec.es6",
    "Description": "staff open work records controller",
    "WhenList": [],
    "ThenList": [
      "should load open work records when init from routes params"
    ],
    "Children": []
  },
  {
    "$id": "629",
    "FileName": "staff-reassign-assignee-contacts-controller-spec.es6",
    "Description": "staff reassign assignee contact controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "630",
        "FileName": "staff-reassign-assignee-contacts-controller-spec.es6",
        "Description": "when initializing",
        "WhenList": [],
        "ThenList": [
          "should set assign to office as the office of staff to be reassigned",
          "can check the child item have been assigned staff",
          "should change parent scope hasAssigned"
        ],
        "Children": []
      },
      {
        "$id": "631",
        "FileName": "staff-reassign-assignee-contacts-controller-spec.es6",
        "Description": "when assigning",
        "WhenList": [],
        "ThenList": [
          "should set selected when select certain responsibility",
          "should set assignTo staff to selected responsibility",
          "should assign successfully if the re-selected candidate staff is not same with the previous selected staff",
          "should get filter practiceType options from searchResult",
          "should get filter role options from searchResult",
          "should get filter engagement options from searchResult",
          "should get assignee contacts with selected engagement when filtering",
          "should get assignee contacts with selected practice type when filtering",
          "should get assignee contacts with selected role when filtering",
          "should only change the state when click assignTo button for the contacts which are applied to filtered role",
          "should clear check boxes on the items which are not shown and update all selected status when filtering",
          "should check all shown item when checking all"
        ],
        "Children": []
      },
      {
        "$id": "632",
        "FileName": "staff-reassign-assignee-contacts-controller-spec.es6",
        "Description": "when saving",
        "WhenList": [],
        "ThenList": [
          "should show search results by filters after save",
          "should show assigned search results after save",
          "should clear selected staff after save"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "633",
    "FileName": "staff-reassign-controller-spec.es6",
    "Description": "staff reassign controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "634",
        "FileName": "staff-reassign-controller-spec.es6",
        "Description": "when initializing",
        "WhenList": [],
        "ThenList": [
          "should initialize with staff name",
          "should go to staff profile page when click staff name link",
          "should go to first tab which has records",
          "should get responsibility for given practice types"
        ],
        "Children": []
      },
      {
        "$id": "635",
        "FileName": "staff-reassign-controller-spec.es6",
        "Description": "inactivate staff after reassign",
        "WhenList": [],
        "ThenList": [
          "should pop up Inactivate dialog when finish all reassign",
          "should not pop up Inactivate dialog when from change staff office",
          "should pop up dialog with message",
          "should go to staff profile page when cancel inactivate"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "636",
    "FileName": "staff-reassign-engagement-roles-controller-spec.es6",
    "Description": "staff reassign engagement roles controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "637",
        "FileName": "staff-reassign-engagement-roles-controller-spec.es6",
        "Description": "when initializing",
        "WhenList": [],
        "ThenList": [
          "should set assign to office as the office of staff to be reassigned",
          "can check the child item have been assigned staff",
          "should change parent scope hasAssigned"
        ],
        "Children": []
      },
      {
        "$id": "638",
        "FileName": "staff-reassign-engagement-roles-controller-spec.es6",
        "Description": "when assigning",
        "WhenList": [],
        "ThenList": [
          "should set selected when select certain responsibility",
          "should clear selected staff when select another office",
          "should set assignTo staff to selected responsibility",
          "should show error after clicking assign if candidate staff are the same with existing alternatives",
          "should show correct selectedCount if there is a error line checked before select all",
          "should show error if candidate staff are not in the same office when assigning subscribed office and delegated coordinating office contacts",
          "should assign successfully if the re-selected candidate staff is not same with the existing admin staff",
          "should refresh assignTo after clicking assign to button"
        ],
        "Children": []
      },
      {
        "$id": "639",
        "FileName": "staff-reassign-engagement-roles-controller-spec.es6",
        "Description": "when save",
        "WhenList": [],
        "ThenList": [
          "should send request for correct request to reassign",
          "save button should not be disabled when there is valid candidate staff",
          "should clear selected staff after save"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "640",
    "FileName": "staff-reassign-work-records-controller-spec.es6",
    "Description": "staff reassign work record controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "641",
        "FileName": "staff-reassign-work-records-controller-spec.es6",
        "Description": "when initializing",
        "WhenList": [],
        "ThenList": [
          "should set assign to office as the office of staff to be reassigned"
        ],
        "Children": []
      },
      {
        "$id": "642",
        "FileName": "staff-reassign-work-records-controller-spec.es6",
        "Description": "when filtering",
        "WhenList": [],
        "ThenList": [
          "should show only tax type if filter tax",
          "should only show tasks of tax return work records when filtered by tax return work record type",
          "should only show tasks of selected office when filtered by responsible office",
          "should only show tasks of engagement when filtered by engagement",
          "should reset work record type filter when reset practice type filter",
          "should not check the not shown tasks when filtering",
          "should set record count based on filter result",
          "should filter engagement by practiceType when filter practiceType"
        ],
        "Children": []
      },
      {
        "$id": "643",
        "FileName": "staff-reassign-work-records-controller-spec.es6",
        "Description": "when assigning",
        "WhenList": [],
        "ThenList": [
          "should assignTo after clicking assign to button",
          "should reset parent checkbox when uncheck children",
          "should refresh assignTo after clicking assign to button"
        ],
        "Children": []
      },
      {
        "$id": "644",
        "FileName": "staff-reassign-work-records-controller-spec.es6",
        "Description": "when save the reassign work",
        "WhenList": [],
        "ThenList": [
          "should set selectedItems as two when select two tasks",
          "should pop dialog when want to go to change location if have assigned staff",
          "should save the reassign work about change task responsibility when click the save button",
          "should save the reassign checklist responsibility work after click save button",
          "should set 'results found' to 0 if all tasks are assigned and saved",
          "should change work record unselect after reassign its all task successfully",
          "should reset selected staff as null after click save button",
          "should only save tasks displayed when saving"
        ],
        "Children": []
      },
      {
        "$id": "645",
        "FileName": "staff-reassign-work-records-controller-spec.es6",
        "Description": "can assign",
        "WhenList": [],
        "ThenList": [
          "should enable assign with selected Staff and selected Items when reassign to staff",
          "should disable assign when not select any tasks",
          "should disable assign when not select staff",
          "should enable assign when reassign to WorkPool",
          "should disable assign when reassign to WorkPool but not select any tasks"
        ],
        "Children": []
      },
      {
        "$id": "646",
        "FileName": "staff-reassign-work-records-controller-spec.es6",
        "Description": "when assign to work pool",
        "WhenList": [],
        "ThenList": [
          "should show selected office when click assign button",
          "should show error message when assign to office not match engagement responsible offices",
          "should show error message when assign checklist task to work pool"
        ],
        "Children": []
      },
      {
        "$id": "647",
        "FileName": "staff-reassign-work-records-controller-spec.es6",
        "Description": "when assign to staff",
        "WhenList": [],
        "ThenList": [
          "should show selected staff when click assign button",
          "can check the child item have been assigned staff",
          "should change parent scope hasAssigned",
          "should show error message when assign to staff not match work record practice type",
          "should show error message when assign to staff not match engagement responsible offices",
          "should change work record unselected after reassign its all task successfully",
          "should change work record unselected after reassign its all task successfully"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "648",
    "FileName": "staff-record-controller-spec.es6",
    "Description": "Test staff show-detail controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "649",
        "FileName": "staff-record-controller-spec.es6",
        "Description": "after initialized",
        "WhenList": [],
        "ThenList": [
          "should initiate selected tab"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "650",
    "FileName": "staff-responsibility-reassign-confirm-controller-spec.es6",
    "Description": "InactivateStaffNoResponsibilityDialogController",
    "WhenList": [],
    "ThenList": [
      "should init controller for practice type",
      "should init controller for office",
      "should init controller for office and practice type"
    ],
    "Children": []
  },
  {
    "$id": "651",
    "FileName": "staff-search-controller-spec.es6",
    "Description": "Test staff search controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "652",
        "FileName": "staff-search-controller-spec.es6",
        "Description": "For search function",
        "WhenList": [],
        "ThenList": [
          "should get staff list when criteria is correct",
          "should call navigation service when show staff details"
        ],
        "Children": []
      },
      {
        "$id": "653",
        "FileName": "staff-search-controller-spec.es6",
        "Description": "For detail navigation function",
        "WhenList": [],
        "ThenList": [
          "should go to staff detail page when staff without pending practice type",
          "should go to staff pending page when staff has pending practice type",
          "should go to staff pending page when staff has pending pracitce type"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "654",
    "FileName": "tag-create-controller-spec.js",
    "Description": "Test tag create controller",
    "WhenList": [],
    "ThenList": [
      "should set current staff's office by default",
      "should not select office by office level staff",
      "should select offices in the same country by country level staff",
      "should select all offices by global admin staff"
    ],
    "Children": [
      {
        "$id": "655",
        "FileName": "tag-create-controller-spec.js",
        "Description": "create tag",
        "WhenList": [],
        "ThenList": [
          "should send request to create tag when click create button",
          "should redirect to tag detail page after creating successfully tag",
          "should alert when fail to create tag"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "656",
    "FileName": "tag-detail-controller-spec.js",
    "Description": "Test tag detail controller",
    "WhenList": [],
    "ThenList": [
      "should assign office"
    ],
    "Children": []
  },
  {
    "$id": "657",
    "FileName": "tag-edit-controller-spec.js",
    "Description": "Test tag detail controller",
    "WhenList": [],
    "ThenList": [
      "should assign office"
    ],
    "Children": []
  },
  {
    "$id": "658",
    "FileName": "tag-search-controller-spec.js",
    "Description": "Test tag search controller",
    "WhenList": [],
    "ThenList": [
      "should call tags API and fetch tags by current user's office",
      "should call tags API and fetch tags when office changed"
    ],
    "Children": []
  },
  {
    "$id": "659",
    "FileName": "subscribed-office-edit-controller-spec.js",
    "Description": "SubscribedOfficesEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "660",
        "FileName": "subscribed-office-edit-controller-spec.js",
        "Description": "isSubscribedOfficeValid()",
        "WhenList": [],
        "ThenList": [
          "should be valid when new added office not existed in the subscribed office list",
          "should be valid when add all offices belong new country",
          "should be invalid when the new added office existing",
          "should be invalid when the new added office belongs to existing country"
        ],
        "Children": []
      },
      {
        "$id": "661",
        "FileName": "subscribed-office-edit-controller-spec.js",
        "Description": "onBuildRequest()",
        "WhenList": [],
        "ThenList": [
          "should build subscriptions when select offices all"
        ],
        "Children": []
      },
      {
        "$id": "662",
        "FileName": "subscribed-office-edit-controller-spec.js",
        "Description": "SubscribedOfficesEditController.transformSubscribedOffice()",
        "WhenList": [],
        "ThenList": [
          "should not transform empty object"
        ],
        "Children": [
          {
            "$id": "663",
            "FileName": "subscribed-office-edit-controller-spec.js",
            "Description": "when subscribed by office",
            "WhenList": [],
            "ThenList": [
              "should expose subscription.editable"
            ],
            "Children": []
          },
          {
            "$id": "664",
            "FileName": "subscribed-office-edit-controller-spec.js",
            "Description": "when subscribed by country",
            "WhenList": [],
            "ThenList": [
              "should expose subscription.editable"
            ],
            "Children": []
          },
          {
            "$id": "665",
            "FileName": "subscribed-office-edit-controller-spec.js",
            "Description": "when the user is a global admin",
            "WhenList": [],
            "ThenList": [
              "should expose subscription.countryOptions with all the countries"
            ],
            "Children": []
          },
          {
            "$id": "666",
            "FileName": "subscribed-office-edit-controller-spec.js",
            "Description": "when the user is a country level user",
            "WhenList": [],
            "ThenList": [
              "should expose subscription.countryOptions with the user country when the user is authorized in the subscribed country"
            ],
            "Children": []
          },
          {
            "$id": "667",
            "FileName": "subscribed-office-edit-controller-spec.js",
            "Description": "when user is not authorized in subscribed country",
            "WhenList": [],
            "ThenList": [
              "should expose subscription.countryOptions as the subscribed country"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "668",
    "FileName": "task-definition-edit-controller-spec.js",
    "Description": "TaskDefinitionEditControllerSpec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "669",
        "FileName": "task-definition-edit-controller-spec.js",
        "Description": "onTaskNameChanged()",
        "WhenList": [],
        "ThenList": [
          "should add a new blank task when we set the name of an existing blank task",
          "should not add new task when edit existed task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "670",
    "FileName": "task-template-create-controller-spec.js",
    "Description": "TaskTemplateCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "671",
        "FileName": "task-template-create-controller-spec.js",
        "Description": "after TaskTemplateCreateController initialized",
        "WhenList": [],
        "ThenList": [
          "should expose ownedBy to scope and set to the country of current user's office",
          "should expose vm.subscribedOffices to scope"
        ],
        "Children": [
          {
            "$id": "672",
            "FileName": "task-template-create-controller-spec.js",
            "Description": "when the current user is a Global Admin",
            "WhenList": [],
            "ThenList": [
              "should expose countryOptions to scope",
              "should set is mandatory to no"
            ],
            "Children": []
          },
          {
            "$id": "673",
            "FileName": "task-template-create-controller-spec.js",
            "Description": "when the current user is a Country Level user",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "674",
                "FileName": "task-template-create-controller-spec.js",
                "Description": "when the user has 1 practice type",
                "WhenList": [],
                "ThenList": [
                  "should only expose China in countryOptions"
                ],
                "Children": []
              },
              {
                "$id": "675",
                "FileName": "task-template-create-controller-spec.js",
                "Description": "when the user has more than 1 practice type",
                "WhenList": [],
                "ThenList": [],
                "Children": []
              }
            ]
          },
          {
            "$id": "676",
            "FileName": "task-template-create-controller-spec.js",
            "Description": "when the current user is associated to 1 practice type",
            "WhenList": [],
            "ThenList": [
              "should default to the practice type"
            ],
            "Children": []
          },
          {
            "$id": "677",
            "FileName": "task-template-create-controller-spec.js",
            "Description": "when the current user is associated with more than 1 practice type",
            "WhenList": [],
            "ThenList": [
              "should not have a selected Practice Type"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "678",
        "FileName": "task-template-create-controller-spec.js",
        "Description": "when criteria changes",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "679",
            "FileName": "task-template-create-controller-spec.js",
            "Description": "when practice type changes",
            "WhenList": [],
            "ThenList": [
              "should clear Mandatory and services",
              "should has six milestone when practice type is immigration"
            ],
            "Children": []
          },
          {
            "$id": "680",
            "FileName": "task-template-create-controller-spec.js",
            "Description": "when mandatory changes",
            "WhenList": [],
            "ThenList": [
              "should clear services"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "681",
        "FileName": "task-template-create-controller-spec.js",
        "Description": "TaskTemplateCreateController create()",
        "WhenList": [],
        "ThenList": [
          "should build create task template request for tax practice type",
          "should build create task template request for immigration practice type"
        ],
        "Children": []
      },
      {
        "$id": "682",
        "FileName": "task-template-create-controller-spec.js",
        "Description": "create.notDuplicatedName",
        "WhenList": [],
        "ThenList": [
          "should pass validation when name is not duplicated",
          "should NOT pass validation when name is duplicated"
        ],
        "Children": []
      },
      {
        "$id": "683",
        "FileName": "task-template-create-controller-spec.js",
        "Description": "getOfficeOptions()",
        "WhenList": [],
        "ThenList": [
          "should find offices by country plus an option All"
        ],
        "Children": []
      },
      {
        "$id": "684",
        "FileName": "task-template-create-controller-spec.js",
        "Description": "addBlankSubscribedOffice()",
        "WhenList": [],
        "ThenList": [
          "should add a new blank subscribed office"
        ],
        "Children": []
      },
      {
        "$id": "685",
        "FileName": "task-template-create-controller-spec.js",
        "Description": "create task template isOfficeUnique()",
        "WhenList": [],
        "ThenList": [
          "should return true when office is NOT duplicated in subscribed office",
          "should return false when office is duplicated in subscribed office",
          "should return true when office is undefined",
          "should return false when 'All' and any office exist in same country"
        ],
        "Children": []
      },
      {
        "$id": "686",
        "FileName": "task-template-create-controller-spec.js",
        "Description": "isCreateTaskTemplateFormValid()",
        "WhenList": [],
        "ThenList": [
          "should be true when at least one subscribed office is given and createTaskTemplateForm is valid",
          "should be false when no subscribed office is given",
          "should be false when given subscribed office is empty",
          "should be true when some given subscribed office is empty and others are valid",
          "should be false when subscribed office has country but no office",
          "should be false when createTaskTemplateForm is invalid",
          "should be false when mandatory is yes but service is empty",
          "should be true when mandatory is no"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "687",
    "FileName": "task-template-details-controller-spec.js",
    "Description": "TaskTemplateDetailsController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "688",
        "FileName": "task-template-details-controller-spec.js",
        "Description": "after TaskTemplateDetailsController initialized",
        "WhenList": [],
        "ThenList": [
          "should get six milestones when show immigration country task template",
          "should get five milestones when show immigration general country task template"
        ],
        "Children": [
          {
            "$id": "689",
            "FileName": "task-template-details-controller-spec.js",
            "Description": "when current user is country level",
            "WhenList": [],
            "ThenList": [
              "can see the edit button",
              "should expose vm.taskTemplate to scope"
            ],
            "Children": []
          },
          {
            "$id": "690",
            "FileName": "task-template-details-controller-spec.js",
            "Description": "when current user is general",
            "WhenList": [],
            "ThenList": [
              "can not see the edit button for country task template",
              "can not see the edit button for task template for engagement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "691",
        "FileName": "task-template-details-controller-spec.js",
        "Description": "getSubscriptionDescription()",
        "WhenList": [],
        "ThenList": [
          "should get office full name when subscript by office",
          "should get country name when subscript by country"
        ],
        "Children": []
      },
      {
        "$id": "692",
        "FileName": "task-template-details-controller-spec.js",
        "Description": "getTasksClass()",
        "WhenList": [],
        "ThenList": [
          "should return 'empty' if milestone has no task",
          "should return '' if milestone has task(s)"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "693",
    "FileName": "task-template-edit-controller-spec.js",
    "Description": "TaskTemplateEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "694",
        "FileName": "task-template-edit-controller-spec.js",
        "Description": "access page with different rols",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "695",
            "FileName": "task-template-edit-controller-spec.js",
            "Description": "when the country level user's country is different with the template ownedby",
            "WhenList": [],
            "ThenList": [
              "should disable the task template name"
            ],
            "Children": []
          },
          {
            "$id": "696",
            "FileName": "task-template-edit-controller-spec.js",
            "Description": "when the country level user's country is the same as the template ownedby",
            "WhenList": [],
            "ThenList": [
              "should load task template name",
              "should group tasks by milestone"
            ],
            "Children": []
          },
          {
            "$id": "697",
            "FileName": "task-template-edit-controller-spec.js",
            "Description": "when the current user is a general user and the template is not for engagement",
            "WhenList": [],
            "ThenList": [
              "should go to the homepage",
              "should have an error message"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "698",
        "FileName": "task-template-edit-controller-spec.js",
        "Description": "basic initialization functionality",
        "WhenList": [],
        "ThenList": [
          "should set mandatory to yes based on current template",
          "should set type of services based on current template",
          "should load type of service options according to template practice type",
          "should remove existing services from type of service options",
          "should add services to options when user delete service from existing",
          "should get six milestones when show immigration country task template",
          "should get five milestones when show immigration general country task template"
        ],
        "Children": []
      },
      {
        "$id": "699",
        "FileName": "task-template-edit-controller-spec.js",
        "Description": "save()",
        "WhenList": [],
        "ThenList": [
          "should build update task template request",
          "should build update task template request for immigration with service milestones",
          "should send selectedServices as empty when not isMandatory for any service"
        ],
        "Children": []
      },
      {
        "$id": "700",
        "FileName": "task-template-edit-controller-spec.js",
        "Description": "edit.notDuplicatedName",
        "WhenList": [],
        "ThenList": [
          "should pass validation when name not exist",
          "should NOT pass validation when name is used",
          "should pass validation when name is used by herself"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "701",
    "FileName": "task-template-list-controller-spec.js",
    "Description": "TaskTemplateListController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "702",
        "FileName": "task-template-list-controller-spec.js",
        "Description": "after TaskTemplateListController initialized",
        "WhenList": [],
        "ThenList": [
          "should expose vm.templates to scope",
          "should expose vm.nameColumn to scope and set to 'Task Template'"
        ],
        "Children": []
      },
      {
        "$id": "703",
        "FileName": "task-template-list-controller-spec.js",
        "Description": "getCountry()",
        "WhenList": [],
        "ThenList": [
          "should find country by uri"
        ],
        "Children": []
      },
      {
        "$id": "704",
        "FileName": "task-template-list-controller-spec.js",
        "Description": "showDetails",
        "WhenList": [],
        "ThenList": [
          "should navigate to task template details page"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "705",
    "FileName": "team-create-controller-spec.js",
    "Description": "Test team creation",
    "WhenList": [],
    "ThenList": [
      "should load all offices when initialize",
      "should load staffs for selecting members when an office is selected",
      "should not use own office to select members",
      "should not select the office again when an office is selected",
      "should be able to select out again when when an office is removed",
      "should send create team across request"
    ],
    "Children": []
  },
  {
    "$id": "706",
    "FileName": "team-detail-controller-spec.js",
    "Description": "Test team across offices detail controller",
    "WhenList": [],
    "ThenList": [
      "should load team detail when initialize"
    ],
    "Children": []
  },
  {
    "$id": "707",
    "FileName": "team-edit-controller-spec.js",
    "Description": "Test team across offices detail controller",
    "WhenList": [],
    "ThenList": [
      "should save updated team information",
      "should build request when add office members"
    ],
    "Children": [
      {
        "$id": "708",
        "FileName": "team-edit-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should office options not contain team office or selected office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "709",
    "FileName": "team-member-list-controller-spec.js",
    "Description": "Test team across offices detail controller",
    "WhenList": [],
    "ThenList": [
      "should build request when add office members"
    ],
    "Children": []
  },
  {
    "$id": "710",
    "FileName": "add-personal-task-controller-spec.js",
    "Description": "AddPersonalTaskController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "711",
        "FileName": "add-personal-task-controller-spec.js",
        "Description": "save()",
        "WhenList": [],
        "ThenList": [
          "should build to do item request"
        ],
        "Children": []
      },
      {
        "$id": "712",
        "FileName": "add-personal-task-controller-spec.js",
        "Description": "checkSelectedAssignee()",
        "WhenList": [],
        "ThenList": [
          "should clear selected assignee when its engagements do not contain selected engagement",
          "should NOT clear selected assignee when its engagements contain selected engagement",
          "should NOT clear selected assignee when there is no selected engagement"
        ],
        "Children": []
      },
      {
        "$id": "713",
        "FileName": "add-personal-task-controller-spec.js",
        "Description": "when selecting an assignee",
        "WhenList": [],
        "ThenList": [
          "should set engagement as the selected assignees engagement",
          "shouldn't display any engagements on page initialization",
          "should display the assignee engagements and select default prompt if more than one engagement",
          "should display and default to the assignee engagement if the assignee has only one engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "714",
    "FileName": "edit-personal-task-controller-spec.js",
    "Description": "EditPersonalTaskController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "715",
        "FileName": "edit-personal-task-controller-spec.js",
        "Description": "when the page initializes",
        "WhenList": [],
        "ThenList": [
          "should display the assignee engagements the current user is allowed to see"
        ],
        "Children": []
      },
      {
        "$id": "716",
        "FileName": "edit-personal-task-controller-spec.js",
        "Description": "when selecting a new assignee",
        "WhenList": [],
        "ThenList": [
          "should default to the first engagement when we change assignee and the new assignee has only one engagement"
        ],
        "Children": []
      },
      {
        "$id": "717",
        "FileName": "edit-personal-task-controller-spec.js",
        "Description": "save()",
        "WhenList": [],
        "ThenList": [
          "should build personal task request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "718",
    "FileName": "filter-to-do-list-spec.js",
    "Description": "MyToDoListController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "719",
        "FileName": "filter-to-do-list-spec.js",
        "Description": "after MyToDoListController initialized",
        "WhenList": [],
        "ThenList": [
          "should set work record type options for tax",
          "should set work record type options for immigration",
          "should set milestone options for immigration work record type",
          "should set atLeastOneItemHasMissingInfo status",
          "should set atLeastOneItemHasMissingInfo status based on filtered items"
        ],
        "Children": []
      },
      {
        "$id": "720",
        "FileName": "filter-to-do-list-spec.js",
        "Description": "when filtering",
        "WhenList": [],
        "ThenList": [
          "should filter by selected practice type",
          "should filter by selected engagement",
          "should filter by selected milestone",
          "should include all service milestone tasks when select immigration work record type and In Progress milestone",
          "should filter by vip",
          "should filter by urgent",
          "should filter by work record type",
          "should show tasks from work records with missing items by default"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "721",
    "FileName": "my-to-do-list-controller-spec.js",
    "Description": "MyToDoListController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "722",
        "FileName": "my-to-do-list-controller-spec.js",
        "Description": "after MyToDoListController initialized",
        "WhenList": [],
        "ThenList": [
          "should expose isTodaySectionExpanded to scope and set to true",
          "should expose isNext7DaysSectionExpanded to scope and set to true",
          "should expose isNotSetSectionExpanded to scope and set to true",
          "should expose grouped and ordered items in sections to scope",
          "should setup practice type filter options by staff",
          "should set all toDoItems isShown to be true",
          "should reset atLeastOneItemHasMissingInfo when filtering"
        ],
        "Children": []
      },
      {
        "$id": "723",
        "FileName": "my-to-do-list-controller-spec.js",
        "Description": "when change practice type to immigration",
        "WhenList": [],
        "ThenList": [
          "should has immigration work record type",
          "should set other work record type toDoItems isShown to be false when select immigration work record type"
        ],
        "Children": []
      },
      {
        "$id": "724",
        "FileName": "my-to-do-list-controller-spec.js",
        "Description": "finishToDoItem()",
        "WhenList": [],
        "ThenList": [
          "should complete personal task when todo item is personal",
          "should complete work record task when todo item is system"
        ],
        "Children": []
      },
      {
        "$id": "725",
        "FileName": "my-to-do-list-controller-spec.js",
        "Description": "startToDoItem",
        "WhenList": [],
        "ThenList": [
          "should update todo item after start the task"
        ],
        "Children": []
      },
      {
        "$id": "726",
        "FileName": "my-to-do-list-controller-spec.js",
        "Description": "updateToDoList()",
        "WhenList": [],
        "ThenList": [
          "should update todo item section when the item section changed"
        ],
        "Children": []
      },
      {
        "$id": "727",
        "FileName": "my-to-do-list-controller-spec.js",
        "Description": "getSortableElementClass()",
        "WhenList": [],
        "ThenList": [
          "should return 'item' class when todo item is not personal",
          "should return empty when todo item is personal"
        ],
        "Children": []
      },
      {
        "$id": "728",
        "FileName": "my-to-do-list-controller-spec.js",
        "Description": "mark item as urgent",
        "WhenList": [],
        "ThenList": [
          "should mark personal todo item as urgent when it has not been marked as urgent",
          "should un-mark personal todo item as urgent when it has been marked as urgent",
          "should filter all todo items when after switchUrgentStatus"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "729",
    "FileName": "reassign-task-controller-spec.js",
    "Description": "ReassignTaskController",
    "WhenList": [],
    "ThenList": [
      "after initialization",
      "should reset responsibility when change office"
    ],
    "Children": []
  },
  {
    "$id": "730",
    "FileName": "sort-my-to-do-list-spec.js",
    "Description": "SortMyToDoListController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "731",
        "FileName": "sort-my-to-do-list-spec.js",
        "Description": "after MyToDoListController initialized",
        "WhenList": [],
        "ThenList": [
          "should sort work record task items in sections to scope"
        ],
        "Children": []
      },
      {
        "$id": "732",
        "FileName": "sort-my-to-do-list-spec.js",
        "Description": "when sort by daysInCurrentMilestone",
        "WhenList": [],
        "ThenList": [
          "should sort work record task items by days in current milestone"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "733",
    "FileName": "staff-to-do-list-controller-spec.js",
    "Description": "StaffToDoListController",
    "WhenList": [],
    "ThenList": [
      "should get staff tax to do list data when change practiceType to tax",
      "should get staff tax return to do list data when change workRecordType to tax return",
      "should unsubscribe selected staff from to do list",
      "should set work record type options when practice type is changed to immigration",
      "should set 6 milestone names for immigration workrecord type"
    ],
    "Children": [
      {
        "$id": "734",
        "FileName": "staff-to-do-list-controller-spec.js",
        "Description": "should use custom layout when workrecord type is briefing or immigration",
        "WhenList": [],
        "ThenList": [
          "should use custom layout when workrecord type is briefing or immigration",
          "should use custom layout when workrecord type is briefing or immigration",
          "should use custom layout when workrecord type is briefing or immigration"
        ],
        "Children": []
      },
      {
        "$id": "735",
        "FileName": "staff-to-do-list-controller-spec.js",
        "Description": "milestone name",
        "WhenList": [],
        "ThenList": [
          "should reset milestone name when selected work record type is social security coc",
          "should reset milestone name when selected work record type is ss other compliance"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "736",
    "FileName": "subscribe-staff-controller-spec.js",
    "Description": "SubscribeStaffController",
    "WhenList": [],
    "ThenList": [
      "should reset responsibility when change office",
      "should close dialog after click cancel button",
      "should close dialog after click add button",
      "should subscribe selected staff",
      "should go to staff's to do list tab after subscribe staff"
    ],
    "Children": []
  },
  {
    "$id": "737",
    "FileName": "to-do-list-controller-spec.js",
    "Description": "ToDoListController",
    "WhenList": [],
    "ThenList": [
      "should change tab when click another tab"
    ],
    "Children": []
  },
  {
    "$id": "738",
    "FileName": "type-of-services-controller-spec.es6",
    "Description": "TypeOfServicesController",
    "WhenList": [],
    "ThenList": [
      "should change from edit mode to view mode when click save",
      "should change from edit mode to view mode when click cancel"
    ],
    "Children": [
      {
        "$id": "739",
        "FileName": "type-of-services-controller-spec.es6",
        "Description": "initialize",
        "WhenList": [],
        "ThenList": [
          "should initialize current practice type as default practiceType and practice type options",
          "should initialize current status as true",
          "should initialize current country as current user's country",
          "should initialize country options from all countries list",
          "should initialize master chart of service options",
          "should not try to get master chart of service if user can not edit",
          "should load country currencies"
        ],
        "Children": []
      },
      {
        "$id": "740",
        "FileName": "type-of-services-controller-spec.es6",
        "Description": "editing",
        "WhenList": [],
        "ThenList": [
          "should change to edit mode when click edit",
          "should copy editing typeOfServices when click editing typeOfservices",
          "should create a new type of service when click createNew",
          "should create a new type of service with default practice type and country when click createNew",
          "should create a new type of service with currency of current country",
          "should be able to delete new created type of service",
          "should be able to delete new created type of service if not first",
          "should be able to get inactive service name for validation"
        ],
        "Children": []
      },
      {
        "$id": "741",
        "FileName": "type-of-services-controller-spec.es6",
        "Description": "saving",
        "WhenList": [],
        "ThenList": [
          "should not call batchUpdate to save all changes if there are no changes",
          "should call batchUpdate to save all changes if there are changes",
          "should able to save new type of service",
          "should able to save type of service with fee",
          "should not save type of service with fee if amount is not changed"
        ],
        "Children": []
      },
      {
        "$id": "742",
        "FileName": "type-of-services-controller-spec.es6",
        "Description": "only global admin and country level role can edit",
        "WhenList": [],
        "ThenList": [
          "global admin can edit",
          "country level can edit",
          "office level can not edit",
          "general can not edit"
        ],
        "Children": []
      },
      {
        "$id": "743",
        "FileName": "type-of-services-controller-spec.es6",
        "Description": "fee",
        "WhenList": [],
        "ThenList": [
          "should show fee for tax",
          "should show fee for immigration",
          "should not show fee for social security",
          "should not show fee for technology"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "744",
    "FileName": "user-preference-edit-controller-spec.js",
    "Description": "user preference",
    "WhenList": [],
    "ThenList": [
      "should go to correct path when cancel edit operation",
      "should go to home page when sofia has not yet set her preference",
      "should initialize the controller",
      "should initialize default preference items"
    ],
    "Children": []
  },
  {
    "$id": "745",
    "FileName": "user-profile-edit-controller-spec.es6",
    "Description": "user profile edit controller",
    "WhenList": [],
    "ThenList": [
      "should update user information after edit user profile"
    ],
    "Children": []
  },
  {
    "$id": "746",
    "FileName": "add-video-dialog-controller-spec.es6",
    "Description": "AddVideoDialogController",
    "WhenList": [],
    "ThenList": [
      "should close dialog when click cancel",
      "should save model when click save"
    ],
    "Children": []
  },
  {
    "$id": "747",
    "FileName": "briefing-videos-controller-spec.es6",
    "Description": "BriefingVideosController",
    "WhenList": [],
    "ThenList": [
      "should load briefing videos",
      "should open dialog to show briefing video",
      "should send request to API create video when save model"
    ],
    "Children": []
  },
  {
    "$id": "748",
    "FileName": "batch-assign-work-criteria-controller-spec.js",
    "Description": "Batch assign work criteria controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "749",
        "FileName": "batch-assign-work-criteria-controller-spec.js",
        "Description": "on page initialization",
        "WhenList": [],
        "ThenList": [
          "should init scope when Grace has one practice type and default to that practice type",
          "should init scope when Grace has two practice types",
          "should init responsible offices with all offices"
        ],
        "Children": []
      },
      {
        "$id": "750",
        "FileName": "batch-assign-work-criteria-controller-spec.js",
        "Description": "when criteria change",
        "WhenList": [],
        "ThenList": [
          "should reinitialize all elements when practice type is changed",
          "should keep responsible office when engagement removed",
          "should keep responsible office when engagement changed to another still with this office as responsible office",
          "should clear responsible office when engagement changed to another without this office as responsible office",
          "should reinitialize responsible offices when practice type change",
          "should reinitialize type of services when practice type or jurisdiction change",
          "should reinitialize milestones when practice type is undefined",
          "should set up briefing milestones when work record type is briefing",
          "should clear team information when responsible office changed to undefined",
          "should load teams when responsible office changed"
        ],
        "Children": []
      },
      {
        "$id": "751",
        "FileName": "batch-assign-work-criteria-controller-spec.js",
        "Description": "when engagement selected",
        "WhenList": [],
        "ThenList": [
          "should set engagement's practice type when selecting engagement with no practice type set",
          "should set engagement task templates when selecting engagement"
        ],
        "Children": []
      },
      {
        "$id": "752",
        "FileName": "batch-assign-work-criteria-controller-spec.js",
        "Description": "set country task template",
        "WhenList": [],
        "ThenList": [
          "should set country task templates when selecting practice type and responsible office"
        ],
        "Children": []
      },
      {
        "$id": "753",
        "FileName": "batch-assign-work-criteria-controller-spec.js",
        "Description": "on search",
        "WhenList": [],
        "ThenList": [
          "send correct request to search page",
          "send correct request to search page with complexity",
          "send correct request to search page with engagement task template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "754",
    "FileName": "batch-assign-work-search-controller-spec.js",
    "Description": "BatchAssignWorkSearchController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "755",
        "FileName": "batch-assign-work-search-controller-spec.js",
        "Description": "set searchResult before response for lazy-load in page..",
        "WhenList": [],
        "ThenList": [
          "should init vm.searchResult because of lazy-load in page."
        ],
        "Children": []
      },
      {
        "$id": "756",
        "FileName": "batch-assign-work-search-controller-spec.js",
        "Description": "search tax return tasks",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "757",
            "FileName": "batch-assign-work-search-controller-spec.js",
            "Description": "on page initialization",
            "WhenList": [],
            "ThenList": [
              "should set milestones for selected practice type",
              "should set practiceType for filter responsibility",
              "should set tasks for selected practice type and template id",
              "should not select any tasks",
              "should sort results by assignee last name",
              "should not default to any responsibility office and responsibility staff in the update form"
            ],
            "Children": []
          },
          {
            "$id": "758",
            "FileName": "batch-assign-work-search-controller-spec.js",
            "Description": "when change filter and options",
            "WhenList": [],
            "ThenList": [
              "should reset fetched items when milestone changed",
              "should reset tasks drop down list when milestone changed",
              "should enable search result when office is updated from invalid to 'please select'"
            ],
            "Children": []
          },
          {
            "$id": "759",
            "FileName": "batch-assign-work-search-controller-spec.js",
            "Description": "when selecting some tasks",
            "WhenList": [],
            "ThenList": [
              "should enable the update button when office has value and at least one of tasks are selected",
              "should disable button if office is not selected",
              "should disable the update button if no tasks selected",
              "should disable item if new office is not subscribed to the item engagement responsible offices",
              "should enable item if new office is  subscribed to the item engagement responsible offices",
              "should enable all items if the user reset the all the offices"
            ],
            "Children": []
          },
          {
            "$id": "760",
            "FileName": "batch-assign-work-search-controller-spec.js",
            "Description": "when batch assign work",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "761",
                "FileName": "batch-assign-work-search-controller-spec.js",
                "Description": "before updating",
                "WhenList": [],
                "ThenList": [
                  "should build the correct request"
                ],
                "Children": []
              },
              {
                "$id": "762",
                "FileName": "batch-assign-work-search-controller-spec.js",
                "Description": "after updating",
                "WhenList": [],
                "ThenList": [
                  "should unselect all tasks",
                  "should disable update button",
                  "should enable all tasks"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "763",
        "FileName": "batch-assign-work-search-controller-spec.js",
        "Description": "search tax return tasks with country task template only",
        "WhenList": [],
        "ThenList": [
          "should set tasks for selected practice type and template id",
          "should reset fetched items when task changed",
          "should reset fetched items when milestone changed"
        ],
        "Children": []
      },
      {
        "$id": "764",
        "FileName": "batch-assign-work-search-controller-spec.js",
        "Description": "search tax return tasks with engagement task template only",
        "WhenList": [],
        "ThenList": [
          "should set tasks for selected practice type and template id"
        ],
        "Children": []
      },
      {
        "$id": "765",
        "FileName": "batch-assign-work-search-controller-spec.js",
        "Description": "initialize milestones for briefing work record",
        "WhenList": [],
        "ThenList": [
          "should init milestones for briefing WR when work record type is briefing"
        ],
        "Children": []
      },
      {
        "$id": "766",
        "FileName": "batch-assign-work-search-controller-spec.js",
        "Description": "initialize offices for country level Role",
        "WhenList": [],
        "ThenList": [
          "should init offices"
        ],
        "Children": []
      },
      {
        "$id": "767",
        "FileName": "batch-assign-work-search-controller-spec.js",
        "Description": "search with engagement",
        "WhenList": [],
        "ThenList": [
          "should add tags to offices when office has tag when initializing"
        ],
        "Children": []
      },
      {
        "$id": "768",
        "FileName": "batch-assign-work-search-controller-spec.js",
        "Description": "country level user search engagement",
        "WhenList": [],
        "ThenList": [
          "should search set office drop down with office in user's country"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "769",
    "FileName": "batch-reassign-work-criteria-controller-spec.js",
    "Description": "Batch reassign work criteria controller",
    "WhenList": [],
    "ThenList": [
      "when search by country level role"
    ],
    "Children": [
      {
        "$id": "770",
        "FileName": "batch-reassign-work-criteria-controller-spec.js",
        "Description": "on page initialization",
        "WhenList": [],
        "ThenList": [
          "should init scope when Grace has one practice type",
          "should init scope when Grace has two practice types"
        ],
        "Children": []
      },
      {
        "$id": "771",
        "FileName": "batch-reassign-work-criteria-controller-spec.js",
        "Description": "when criteria change",
        "WhenList": [],
        "ThenList": [
          "should filter engagements when practice changed",
          "should filter staff offices when engagement changed",
          "should set work record type when practice type changed",
          "should reload teams when responsible office changed",
          "should empty teams when responsible office changed to undefined",
          "should filter staff offices when don't have engagement",
          "should clean staff when staff office changed",
          "should clean staff when engagement changed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "772",
    "FileName": "batch-reassign-work-search-controller-spec.js",
    "Description": "BatchReassignWorkSearchController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "773",
        "FileName": "batch-reassign-work-search-controller-spec.js",
        "Description": "on page initialization",
        "WhenList": [],
        "ThenList": [
          "should not select any tasks",
          "should not default to any responsibility office and responsibility staff in the update form"
        ],
        "Children": []
      },
      {
        "$id": "774",
        "FileName": "batch-reassign-work-search-controller-spec.js",
        "Description": "when selecting some tasks",
        "WhenList": [],
        "ThenList": [
          "should enable the update button when the responsible office and tasks are selected and selected staff",
          "should enable the update button when the staff is not selected",
          "should disable button if no responsible office is selected",
          "should disable the update button if no tasks selected",
          "should disable item if new responsibility office is not subscribed to the item engagement responsible offices",
          "should enable all items if the user reset the new responsibility office"
        ],
        "Children": []
      },
      {
        "$id": "775",
        "FileName": "batch-reassign-work-search-controller-spec.js",
        "Description": "when updating responsibilities",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "776",
            "FileName": "batch-reassign-work-search-controller-spec.js",
            "Description": "before updating",
            "WhenList": [],
            "ThenList": [
              "should build the correct request",
              "should build the correct request and set tagUri to null if responsible office changed"
            ],
            "Children": []
          },
          {
            "$id": "777",
            "FileName": "batch-reassign-work-search-controller-spec.js",
            "Description": "after updating",
            "WhenList": [],
            "ThenList": [
              "should unselect all tasks",
              "should disable new responsibility autocomplete and update button",
              "should enable all tasks"
            ],
            "Children": []
          },
          {
            "$id": "778",
            "FileName": "batch-reassign-work-search-controller-spec.js",
            "Description": "when updating and reassigning to office",
            "WhenList": [],
            "ThenList": [
              "should update the task responsible office and responsibility.",
              "should set responsibility to null if there is no responsibility."
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "779",
    "FileName": "batch-reassign-work-search-controller-spec.js",
    "Description": "BatchReassignWorkSearchController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "780",
        "FileName": "batch-reassign-work-search-controller-spec.js",
        "Description": "on page initialization",
        "WhenList": [],
        "ThenList": [
          "should init engagement uri"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "781",
    "FileName": "work-pool-criteria-controller-spec.js",
    "Description": "work pool criteria controller",
    "WhenList": [],
    "ThenList": [
      "should init scope as default values",
      "should init workrecord types when practice type is tax",
      "should init workrecord types when practice type is immi",
      "should init workrecord types when practice type is ss",
      "should distinct offices when engagement changed",
      "should contain all offices for responsible office when engagement change to undefined",
      "should not change the set practice type when selected engagement is undefined",
      "should update options when practice type is changed",
      "should change workrecord type options when practice type is changed to immi",
      "should change workrecord type options when practice type is changed to tax",
      "should update options when practice type is changed and engagement is empty",
      "should load teams when responsible office changes",
      "should clear selected team when responsible office changes",
      "should clear teams when responsible office set to undefined"
    ],
    "Children": [
      {
        "$id": "782",
        "FileName": "work-pool-criteria-controller-spec.js",
        "Description": "on search",
        "WhenList": [],
        "ThenList": [
          "should send search request",
          "should have year in request when search practice type is tax",
          "should have teamUri in request when search criteria has team",
          "should have complexity in request when search criteria has complexity"
        ],
        "Children": [
          {
            "$id": "783",
            "FileName": "work-pool-criteria-controller-spec.js",
            "Description": "send correct workrecord type",
            "WhenList": [],
            "ThenList": [
              "given select tax return",
              "given select tax briefing",
              "given select tax other",
              "given select immi general",
              "given select immi briefing",
              "given select ss general",
              "given select ss briefing"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "784",
        "FileName": "work-pool-criteria-controller-spec.js",
        "Description": "on work record type change",
        "WhenList": [],
        "ThenList": [
          "should set milestones options for tax return work record",
          "should set milestones options for other compliance work record",
          "should set milestones options for tax briefing work record",
          "should set milestones options for immi general work record",
          "should set milestones options for immi briefing work record",
          "should set milestones options for Social Security general work record",
          "should set milestones options for Social Security briefing work record",
          "should reset task name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "785",
    "FileName": "work-pool-search-controller-spec.js",
    "Description": "work pool search controller",
    "WhenList": [],
    "ThenList": [
      "should init scope as default values",
      "should init isBriefing is true when workrecord type is briefing",
      "should bind result to vm",
      "responsibilityChanged",
      "assignMe",
      "assign milestone level responsibility",
      "should clean assigned tasks responsibility when milestone responsibility assignment changed to empty",
      "should assign task level responsibility",
      "should save when milestone level assignment changed",
      "should save when task level assignment changed",
      "should save when tax practice type task level assignment changed",
      "should open confirmation dialog when cancel",
      "assignMeToOneTask",
      "clickItem",
      "should set milestone level responsibility as empty when all tasks responsibilities are empty",
      "should set milestone level responsibility as first task responsibility when all tasks responsibilities are the same staff",
      "should set milestone level responsibility as empty when all tasks responsibilities are NOT the same staff",
      "isAllTasksAssignedToSameStaff",
      "should call navigation service when click assignee name"
    ],
    "Children": []
  },
  {
    "$id": "786",
    "FileName": "batch-update-work-record-batch-search-controller-spec.js",
    "Description": "batch update work record criteria controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "787",
        "FileName": "batch-update-work-record-batch-search-controller-spec.js",
        "Description": "when initializing",
        "WhenList": [],
        "ThenList": [
          "should initialize scope default search criteria",
          "should prompt message when user has no available practice type"
        ],
        "Children": []
      },
      {
        "$id": "788",
        "FileName": "batch-update-work-record-batch-search-controller-spec.js",
        "Description": "when changing practice type",
        "WhenList": [],
        "ThenList": [
          "should initialize options based on practice type"
        ],
        "Children": []
      },
      {
        "$id": "789",
        "FileName": "batch-update-work-record-batch-search-controller-spec.js",
        "Description": "when changing engagement",
        "WhenList": [],
        "ThenList": [
          "should distinct offices when engagement changed",
          "should distinct offices when engagement change to undefined",
          "should not change the set practice type when selected engagement is undefined",
          "should match the first one of the engagement responsible offices when engagement responsible offices not contains current user's office"
        ],
        "Children": []
      },
      {
        "$id": "790",
        "FileName": "batch-update-work-record-batch-search-controller-spec.js",
        "Description": "when changing responsible office",
        "WhenList": [],
        "ThenList": [
          "should load teams when responsible office is changed",
          "should reset criteria.team when responsible office is changed",
          "should clear criteria.team and scope.teams when responsible office is set to null"
        ],
        "Children": []
      },
      {
        "$id": "791",
        "FileName": "batch-update-work-record-batch-search-controller-spec.js",
        "Description": "when searching",
        "WhenList": [],
        "ThenList": [
          "should send search request with correct query string"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "792",
    "FileName": "batch-update-work-record-assignment-criteria-controller-spec.js",
    "Description": "batch update work record assignment criteria controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "793",
        "FileName": "batch-update-work-record-assignment-criteria-controller-spec.js",
        "Description": "when initializing",
        "WhenList": [],
        "ThenList": [
          "should initialize scope default search criteria",
          "should prompt message when user has no available practice type"
        ],
        "Children": []
      },
      {
        "$id": "794",
        "FileName": "batch-update-work-record-assignment-criteria-controller-spec.js",
        "Description": "when changing practice type",
        "WhenList": [],
        "ThenList": [
          "should initialize options based on practice type"
        ],
        "Children": []
      },
      {
        "$id": "795",
        "FileName": "batch-update-work-record-assignment-criteria-controller-spec.js",
        "Description": "when changing engagement",
        "WhenList": [],
        "ThenList": [
          "should set responsible offices as options when engagement changed",
          "should set all offices when engagement change to undefined",
          "should match the first one of the engagement responsible offices when engagement responsible offices not contains current user's office"
        ],
        "Children": []
      },
      {
        "$id": "796",
        "FileName": "batch-update-work-record-assignment-criteria-controller-spec.js",
        "Description": "when searching",
        "WhenList": [],
        "ThenList": [
          "should send search request with correct query string"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "797",
    "FileName": "batch-update-work-record-assignment-search-controller-spec.js",
    "Description": "Batch update work record assignment search controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "798",
        "FileName": "batch-update-work-record-assignment-search-controller-spec.js",
        "Description": "when initializing",
        "WhenList": [],
        "ThenList": [
          "should search for work records with criteria",
          "should work record forbid to update when current user is not in the engagements responsible office"
        ],
        "Children": []
      },
      {
        "$id": "799",
        "FileName": "batch-update-work-record-assignment-search-controller-spec.js",
        "Description": "when cancel",
        "WhenList": [],
        "ThenList": [
          "should directly cancel when no changes",
          "should show dialog when change comments",
          "should keep changes when confirm stay",
          "should cancel changes when confirm stay"
        ],
        "Children": []
      },
      {
        "$id": "800",
        "FileName": "batch-update-work-record-assignment-search-controller-spec.js",
        "Description": "when navigate away",
        "WhenList": [],
        "ThenList": [
          "should be able navigate away directly when no changes",
          "should keep changes when confirm stay when have changes",
          "should change location when confirm to go away."
        ],
        "Children": []
      },
      {
        "$id": "801",
        "FileName": "batch-update-work-record-assignment-search-controller-spec.js",
        "Description": "auto fill assignment",
        "WhenList": [],
        "ThenList": [
          "should auto fill only when workrecord assignment is empty",
          "should not auto fill when more than one assignments satisfied with workRecord "
        ],
        "Children": []
      },
      {
        "$id": "802",
        "FileName": "batch-update-work-record-assignment-search-controller-spec.js",
        "Description": "select and shown property at workRecord",
        "WhenList": [],
        "ThenList": [
          "only select shown workRecord",
          "should unselect hidden workRecord after user chooses onShowUnfilledAssignmentOnly",
          "should not auto select revealed workRecords after user untick onShowUnfilledAssignmentOnly with shown items selected"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "803",
    "FileName": "batch-update-work-record-responsible-office-spec.js",
    "Description": "batch update work record responsible office controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "804",
        "FileName": "batch-update-work-record-responsible-office-spec.js",
        "Description": "when initial",
        "WhenList": [],
        "ThenList": [
          "should get work record count",
          "should selected count equals the selected numbers and update the select all status when checked",
          "should selected all be true when all no-issue work records are selected",
          "should selected non when all work records are disabled ",
          "need to disable for issued work records",
          "should be disabled when selected responsible office doesn't turn on online scheduler for online briefing work record",
          "need to disable for online briefing work record if they have been completed",
          "it should be red for online briefing work record if they have been completed",
          "should load engagement engaged offices according to the search criteria"
        ],
        "Children": []
      },
      {
        "$id": "805",
        "FileName": "batch-update-work-record-responsible-office-spec.js",
        "Description": "before update",
        "WhenList": [],
        "ThenList": [
          "work records should be disabled when selected responsible office are not in their engagement responsible offices ",
          "should select all button be checked when all the non-disable work record are selected",
          "should select all button not be checked when work records are all disabled"
        ],
        "Children": []
      },
      {
        "$id": "806",
        "FileName": "batch-update-work-record-responsible-office-spec.js",
        "Description": "when update",
        "WhenList": [],
        "ThenList": [
          "should update selected work records when click update",
          "should update button disable when there are no non-issue work records",
          "should update button enabled when work records select"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "807",
    "FileName": "batch-update-work-record-team-controller-spec.js",
    "Description": "Batch Update Work Record Team Controller",
    "WhenList": [],
    "ThenList": [
      "should initialize team options by selected responsible office",
      "should send request when update"
    ],
    "Children": []
  },
  {
    "$id": "808",
    "FileName": "batch-update-work-record-team-search-controller-spec.js",
    "Description": "Batch Update Work Record Team Search Controller",
    "WhenList": [],
    "ThenList": [
      "should save selected responsible office",
      "should set no team applied according to criteria"
    ],
    "Children": [
      {
        "$id": "809",
        "FileName": "batch-update-work-record-team-search-controller-spec.js",
        "Description": "unableToUpdate",
        "WhenList": [],
        "ThenList": [
          "should return true when no record selected without new updated properties",
          "should return true when no record selected with new updated properties",
          "should return false when records selected with option"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "810",
    "FileName": "work-record-create-controller-assignee-preview-spec.js",
    "Description": "WorkRecordCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "811",
        "FileName": "work-record-create-controller-assignee-preview-spec.js",
        "Description": "when click save button in assignees preview dialog",
        "WhenList": [],
        "ThenList": [
          "should update task responsible offices",
          "should reset task responsible offices to current user's office",
          "should update checklistItems",
          "should reset checklistItems responsible office to current user's office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "812",
    "FileName": "work-record-create-controller-briefing-spec.js",
    "Description": "WorkRecordCreateController",
    "WhenList": [],
    "ThenList": [
      "should not be valid when engagement online only but responsible office scheduler disabled"
    ],
    "Children": [
      {
        "$id": "813",
        "FileName": "work-record-create-controller-briefing-spec.js",
        "Description": "on work record type change",
        "WhenList": [],
        "ThenList": [
          "canCreateOnlineBriefingWorkRecord to be true work record responsible office online scheduler is enabled",
          "canCreateOnlineBriefingWorkRecord to be false engagement is immigration",
          "canCreateOnlineBriefingWorkRecord to be false work record responsible office online scheduler is not enabled"
        ],
        "Children": []
      },
      {
        "$id": "814",
        "FileName": "work-record-create-controller-briefing-spec.js",
        "Description": "when reset scheduling method",
        "WhenList": [],
        "ThenList": [
          "should set responsible office as default briefing coordinator office"
        ],
        "Children": []
      },
      {
        "$id": "815",
        "FileName": "work-record-create-controller-briefing-spec.js",
        "Description": "when engagement scheduling method is manually only",
        "WhenList": [],
        "ThenList": [
          "when office online scheduler off",
          "when office online scheduler on"
        ],
        "Children": []
      },
      {
        "$id": "816",
        "FileName": "work-record-create-controller-briefing-spec.js",
        "Description": "when engagement scheduling method is online only",
        "WhenList": [],
        "ThenList": [
          "when office online scheduler off",
          "when office online scheduler on"
        ],
        "Children": []
      },
      {
        "$id": "817",
        "FileName": "work-record-create-controller-briefing-spec.js",
        "Description": "when engagement scheduling method is both",
        "WhenList": [],
        "ThenList": [
          "when office online scheduler off",
          "when office online scheduler on"
        ],
        "Children": []
      },
      {
        "$id": "818",
        "FileName": "work-record-create-controller-briefing-spec.js",
        "Description": "BriefingWorkRecordSchedulingMethodHint",
        "WhenList": [],
        "ThenList": [
          "for immigration work record"
        ],
        "Children": [
          {
            "$id": "819",
            "FileName": "work-record-create-controller-briefing-spec.js",
            "Description": "engagement scheduler is both",
            "WhenList": [],
            "ThenList": [
              "when responsible office online scheduler is not enabled",
              "when responsible office online scheduler is enabled"
            ],
            "Children": []
          },
          {
            "$id": "820",
            "FileName": "work-record-create-controller-briefing-spec.js",
            "Description": "when engagement scheduler is manual only",
            "WhenList": [],
            "ThenList": [
              "when office scheduler enabled",
              "when office scheduler disabled"
            ],
            "Children": []
          },
          {
            "$id": "821",
            "FileName": "work-record-create-controller-briefing-spec.js",
            "Description": "when engagement scheduler is online only",
            "WhenList": [],
            "ThenList": [
              "when office scheduler disabled",
              "when office scheduler enabled"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "822",
        "FileName": "work-record-create-controller-briefing-spec.js",
        "Description": "when change briefing coordinator office",
        "WhenList": [],
        "ThenList": [
          "should reset briefing coordinator name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "823",
    "FileName": "work-record-create-controller-create-spec.js",
    "Description": "WorkRecordCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "824",
        "FileName": "work-record-create-controller-create-spec.js",
        "Description": "WorkRecordCreateController create()",
        "WhenList": [],
        "ThenList": [
          "should broadcast create request"
        ],
        "Children": []
      },
      {
        "$id": "825",
        "FileName": "work-record-create-controller-create-spec.js",
        "Description": "isCreateWorkRecordFormValid",
        "WhenList": [],
        "ThenList": [
          "should be invalid when apply task template but no template selected",
          "should be valid when do not use template",
          "should be valid when apply office task template",
          "should be valid when apply engagement task template"
        ],
        "Children": []
      },
      {
        "$id": "826",
        "FileName": "work-record-create-controller-create-spec.js",
        "Description": "isCreateWorkRecordFormValid",
        "WhenList": [],
        "ThenList": [
          "should be invalid when apply task template but no template selected",
          "should be valid when do not use template",
          "should be valid when apply office task template",
          "should be valid when apply engagement task template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "827",
    "FileName": "work-record-create-controller-offices-spec.js",
    "Description": "WorkRecordCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "828",
        "FileName": "work-record-create-controller-offices-spec.js",
        "Description": "responsible offices",
        "WhenList": [],
        "ThenList": [
          "should reset responsible office options when select engagement and set onlineSchedulerStatus",
          "should reset default responsible office options when change engagement",
          "should set current user's office as responsible office options when no engagement selected",
          "should append team offices which subscribed enagegement to responsible office options",
          "should set responsible office as default tax contact office when require questionnaire has been set to yes"
        ],
        "Children": [
          {
            "$id": "829",
            "FileName": "work-record-create-controller-offices-spec.js",
            "Description": "should reset work record responsible office options for single create",
            "WhenList": [],
            "ThenList": [
              "when select an engagement which currentUser in its Coordinating office",
              "when select an engagement which currentUser in its work office"
            ],
            "Children": []
          },
          {
            "$id": "830",
            "FileName": "work-record-create-controller-offices-spec.js",
            "Description": "should reset work record responsible office options for batch create",
            "WhenList": [],
            "ThenList": [
              "when current user in all engagements' coordinating office",
              "when current user not in all engagements' coordinating office"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "831",
    "FileName": "work-record-create-controller-spec.js",
    "Description": "WorkRecordCreateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "832",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when initialize",
        "WhenList": [],
        "ThenList": [
          "should set dependent to no as default value",
          "should load team offices",
          "should have help text on initialize"
        ],
        "Children": []
      },
      {
        "$id": "833",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when change date requested and work record is immigration and contains year",
        "WhenList": [],
        "ThenList": [
          "should change year equals to date requested year"
        ],
        "Children": []
      },
      {
        "$id": "834",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when change practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "835",
            "FileName": "work-record-create-controller-spec.js",
            "Description": "canWorkRecordHaveQuestionnaire",
            "WhenList": [],
            "ThenList": [
              "should show questionnaire option when practice type is not social security",
              "should not show questionnaire option when practice type is social security"
            ],
            "Children": []
          },
          {
            "$id": "836",
            "FileName": "work-record-create-controller-spec.js",
            "Description": "containsYear",
            "WhenList": [],
            "ThenList": [
              "should input year when practice type is tax",
              "should show input year when work record type is immigration general",
              "should show input year when work record type is immigration",
              "should not show input year when work record type is immigration briefing",
              "should not show input year when practice type is social security"
            ],
            "Children": []
          },
          {
            "$id": "837",
            "FileName": "work-record-create-controller-spec.js",
            "Description": "questionnaire required",
            "WhenList": [],
            "ThenList": [
              "should reset immigration dates and reset questionnaire required to yes",
              "should reset questionnaire required to no when select practice type as tax"
            ],
            "Children": []
          },
          {
            "$id": "838",
            "FileName": "work-record-create-controller-spec.js",
            "Description": "refresh QuestionSets",
            "WhenList": [],
            "ThenList": [
              "should refresh question set for tax return workrecord",
              "should refresh question set for immigration workrecord",
              "should have question set service unavailable error",
              "should have empty question set message"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "839",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "auto change work record name",
        "WhenList": [],
        "ThenList": [
          "should change work record name",
          "should change work record name when tax jurisdiction is changed",
          "should change work record name when yearEnding is changed"
        ],
        "Children": []
      },
      {
        "$id": "840",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when choose not to assign responsibility",
        "WhenList": [],
        "ThenList": [
          "should clear all the responsibility and use the full user office (not the simple version from the profile) as default task responsibleOffice"
        ],
        "Children": []
      },
      {
        "$id": "841",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when change engagements",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "842",
            "FileName": "work-record-create-controller-spec.js",
            "Description": "filter workRecordResponsibleOfficeOptions",
            "WhenList": [],
            "ThenList": [
              "should filter workRecordResponsibleOfficeOptions by delegatedOffices",
              "should filter workRecordResponsibleOfficeOptions by coordinatingOffice",
              "should filter workRecordResponsibleOfficeOptions by user team owned-by office"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "843",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when change engagement",
        "WhenList": [],
        "ThenList": [
          "should show engagement type of service in primary service options without inactive engagement type of service",
          "should not show engagement type of service in primary service options when remove engagement"
        ],
        "Children": []
      },
      {
        "$id": "844",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when change tax jurisdiction",
        "WhenList": [],
        "ThenList": [
          "should clean primary service and reset service options when tax jurisdiction is changed",
          "should filter engagement type of service by country"
        ],
        "Children": []
      },
      {
        "$id": "845",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when change work record type",
        "WhenList": [],
        "ThenList": [
          "should display undefined service when record type change to immigration"
        ],
        "Children": []
      },
      {
        "$id": "846",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "should append team when create workrecord",
        "WhenList": [],
        "ThenList": [
          "should load teams by responsible office when responsible office change"
        ],
        "Children": []
      },
      {
        "$id": "847",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when apply evaluation settings for batch create work record",
        "WhenList": [],
        "ThenList": [
          "should not apply evaluation settings when all engagements evaluation setting are disabled",
          "should apply evaluation settings when at least one engagement evaluation setting is enabled",
          "should apply evaluation settings when all engagement evaluation settings are enabled"
        ],
        "Children": []
      },
      {
        "$id": "848",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "when change responsible office",
        "WhenList": [],
        "ThenList": [
          "should tax contact office not be changed when responsible office changed",
          "should set briefing coordinator office to responsible office when work record is briefing online",
          "should clear briefing coordinator when briefing coordinator office changed because of responsible office changing",
          "should reset questionnaire contact and office when responsible office changing",
          "should set task responsibility assignment office as responsible office and clear responsibility",
          "should set checklist responsibility assignment office as responsible office and clear responsibility"
        ],
        "Children": []
      },
      {
        "$id": "849",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "transform tasks by milestone",
        "WhenList": [],
        "ThenList": [
          "should group tasks by milestone and sort milestone list when user select task template",
          "should group tasks by milestone and sort milestone list when user select engagement task template"
        ],
        "Children": []
      },
      {
        "$id": "850",
        "FileName": "work-record-create-controller-spec.js",
        "Description": "can apply evaluation",
        "WhenList": [],
        "ThenList": [
          "should NOT be able to apply evaluation on work record when disabled on engagement level"
        ],
        "Children": [
          {
            "$id": "851",
            "FileName": "work-record-create-controller-spec.js",
            "Description": "when engagement evaluation enabled",
            "WhenList": [],
            "ThenList": [
              "should be able to apply evaluation for immigration work record",
              "should NOT be able to apply evaluation for tax without organizer work record"
            ],
            "Children": []
          },
          {
            "$id": "852",
            "FileName": "work-record-create-controller-spec.js",
            "Description": "when work record type changed",
            "WhenList": [],
            "ThenList": [
              "should NOT be able to apply evaluation on work record when selected work record type is Briefing",
              "should NOT be able to apply evaluation on work record when selected work record type is social security Other Compliance"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "853",
    "FileName": "immigration-application-work-record-show-spec.es6",
    "Description": "immigration application work record",
    "WhenList": [],
    "ThenList": [
      "should call get milestone request to fetch milestone and tasks when initialize",
      "should build service milestone successfully when work record has many applications"
    ],
    "Children": []
  },
  {
    "$id": "854",
    "FileName": "tax-equalization-section-create-controller-spec.js",
    "Description": "on initialize",
    "WhenList": [],
    "ThenList": [
      "should set tax equalization in the scope",
      "should set the currencies"
    ],
    "Children": [
      {
        "$id": "855",
        "FileName": "tax-equalization-section-create-controller-spec.js",
        "Description": "on teq settlement started",
        "WhenList": [],
        "ThenList": [
          "should cannot editable"
        ],
        "Children": []
      },
      {
        "$id": "856",
        "FileName": "tax-equalization-section-create-controller-spec.js",
        "Description": "delete tax equalization",
        "WhenList": [],
        "ThenList": [
          "should delete tax equalization and update the view model after save",
          "should reset edit section after delete"
        ],
        "Children": []
      },
      {
        "$id": "857",
        "FileName": "tax-equalization-section-create-controller-spec.js",
        "Description": "save",
        "WhenList": [],
        "ThenList": [
          "should update tax equalization and update the view model after save",
          "should reset edit section after save"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "858",
    "FileName": "tax-equalization-section-edit-controller-spec.js",
    "Description": "TaxEqualizationSectionEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "859",
        "FileName": "tax-equalization-section-edit-controller-spec.js",
        "Description": "on initialize",
        "WhenList": [],
        "ThenList": [
          "should set tax equalization in the scope",
          "should set the currencies"
        ],
        "Children": []
      },
      {
        "$id": "860",
        "FileName": "tax-equalization-section-edit-controller-spec.js",
        "Description": "on teq settlement started",
        "WhenList": [],
        "ThenList": [
          "should cannot editable"
        ],
        "Children": []
      },
      {
        "$id": "861",
        "FileName": "tax-equalization-section-edit-controller-spec.js",
        "Description": "delete tax equalization",
        "WhenList": [],
        "ThenList": [
          "should delete tax equalization and update the view model after save",
          "should reset edit section after delete",
          "should tip to delete file associated the tax equalization ",
          "should tip to delete file unassociated the tax equalization "
        ],
        "Children": []
      },
      {
        "$id": "862",
        "FileName": "tax-equalization-section-edit-controller-spec.js",
        "Description": "save",
        "WhenList": [],
        "ThenList": [
          "should update tax equalization and update the view model after save",
          "should reset edit section after save"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "863",
    "FileName": "additional-service-selection-controller-spec.js",
    "Description": "AdditionalServiceSelectionController",
    "WhenList": [],
    "ThenList": [
      "should get all services uris",
      "should remove specific service",
      "should not be the same object with current additional service",
      "should initialize service groups",
      "should initialize service groups related variables",
      "should initialize showPrimaryService as true when pass primaryService from model",
      "should initialize showPrimaryService as true when primaryService not pass from model"
    ],
    "Children": [
      {
        "$id": "864",
        "FileName": "additional-service-selection-controller-spec.js",
        "Description": "should determine if services can be saved",
        "WhenList": [],
        "ThenList": [
          "should be able to save if primary service is not needed",
          "should be able to save if primary service is valid",
          "should not be able to save if primary service is need but not have same task template",
          "should not be able to save if primary service is need but old primary service not active any more",
          "should show delete warning when delete additional service of immigration application work record",
          "should not show delete warning when delete additional service of non immigration application work record"
        ],
        "Children": []
      },
      {
        "$id": "865",
        "FileName": "additional-service-selection-controller-spec.js",
        "Description": "when work record type is immigration application",
        "WhenList": [],
        "ThenList": [
          "should remove specific service",
          "should remove multiple services",
          "should display undefined in primary service list when primary is undefined now",
          "should not display undefined in primary service list when primary is not undefined now"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "866",
    "FileName": "additional-service-spec.js",
    "Description": "update additional services in work record detail page",
    "WhenList": [],
    "ThenList": [
      "should show additional service panel with valid models"
    ],
    "Children": []
  },
  {
    "$id": "867",
    "FileName": "application-service-milestone-controller-spec.es6",
    "Description": "ApplicationServiceMilestoneController test",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "868",
        "FileName": "application-service-milestone-controller-spec.es6",
        "Description": "serviceMoveBack",
        "WhenList": [],
        "ThenList": [
          "should move service milestone from submission to preparation for immigration application",
          "should move back to assessment directly when workrecord has single service",
          "should popup a confirm dialog and send request after confirm dialog when workrecord has multiple service and try to move back to assessment",
          "should popup a confirm dialog and not send request after cancel dialog when workrecord has multiple service and try to move back to assessment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "869",
    "FileName": "apply-checklist-template-to-work-record-controller-spec.js",
    "Description": "ApplyChecklistTemplateController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "870",
        "FileName": "apply-checklist-template-to-work-record-controller-spec.js",
        "Description": "when practice type is Tax",
        "WhenList": [],
        "ThenList": [
          "should return check list templates with selected responsible office",
          "should update engagement checklist template options when engagements changed",
          "should accept valid checklist template",
          "should not accept invalid checklist template"
        ],
        "Children": []
      },
      {
        "$id": "871",
        "FileName": "apply-checklist-template-to-work-record-controller-spec.js",
        "Description": "when practice type is changed to Immigration",
        "WhenList": [],
        "ThenList": [
          "should return office checklist templates filtered by selected responsible office",
          "should return engagement checklist templates filtered by selected engagement",
          "should return empty engagement checklist templates when no engagement is selected"
        ],
        "Children": []
      },
      {
        "$id": "872",
        "FileName": "apply-checklist-template-to-work-record-controller-spec.js",
        "Description": "clearChecklistTemplates()",
        "WhenList": [],
        "ThenList": [
          "should clear selected checklist template, engagement checklist template and checklist items"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "873",
    "FileName": "apply-task-template-controller-spec.js",
    "Description": "ApplyTaskTemplateController",
    "WhenList": [],
    "ThenList": [
      "should filter office task templates by responsible office",
      "should filter task templates when practice type changed",
      "should filter task templates when work record type changed",
      "should filter task templates by country of responsible office",
      "should reset task template and engagement task template to null when not apply task template",
      "should filter task templates by engagements",
      "should filter task templates by engagements when practice type changed",
      "should filter engagement task templates when work record type changed",
      "should accept valid task template",
      "should not accept invalid task template",
      "should filter task templates when primary service changed",
      "should set isMandatory when primary service changed",
      "should set isMandatory when primary service changed to engagement type of service which has mandatory task template",
      "should set country task template when just one mandatory task template available"
    ],
    "Children": [
      {
        "$id": "874",
        "FileName": "apply-task-template-controller-spec.js",
        "Description": "given an mandatory task template of immigration work record with general type",
        "WhenList": [],
        "ThenList": [
          "should set isMandatory when practice type is immigration, work record type is general and primary service is immigration audits",
          "should not set isMandatory when practice type is immigration, work record type is immigration and primary service is immigration audits"
        ],
        "Children": []
      },
      {
        "$id": "875",
        "FileName": "apply-task-template-controller-spec.js",
        "Description": "given an mandatory task template of immigration work record with immigration type",
        "WhenList": [],
        "ThenList": [
          "should set isMandatory when practice type is immigration, work record type is immigration and primary service is immigration audits",
          "should not set isMandatory when practice type is immigration, work record type is general and primary service is immigration audits"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "876",
    "FileName": "assignee-work-record-responsibility-controller-spec.js",
    "Description": "AssignAssigneeWorkRecordResponsibilityController",
    "WhenList": [],
    "ThenList": [
      "should load tasks when init and task templates change",
      "should load checklist items when init and checklist templates change",
      "should accept valid assignments for checklist items",
      "should not accept invalid assignments for checklist items",
      "should only accept valid assignments for tasks"
    ],
    "Children": [
      {
        "$id": "877",
        "FileName": "assignee-work-record-responsibility-controller-spec.js",
        "Description": "service milestone",
        "WhenList": [],
        "ThenList": [
          "should show service milestone same with milestone when work record type is immigration application",
          "should init additional service template after get tasks when work record type is immigration application",
          "should show additional service milestone tasks when work record type is immigration application",
          "should show default additional service milestone tasks when add additional service after primary service tasks template is applied",
          "should has empty additional service template when work record type is not immigration application"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "878",
    "FileName": "batch-marked-work-record-missing-information-controller-spec.js",
    "Description": "BathMarkedWorkRecordMissingInformationControllerSpec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "879",
        "FileName": "batch-marked-work-record-missing-information-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should post all criteria when receive search request"
        ],
        "Children": []
      },
      {
        "$id": "880",
        "FileName": "batch-marked-work-record-missing-information-controller-spec.js",
        "Description": "when click a missing item in search results",
        "WhenList": [],
        "ThenList": [
          "should go to work record details page",
          "should show error message when work record is from restricted assignee and staff cannot view work record",
          "should show detail when work record is from restricted assignee and staff can view work record"
        ],
        "Children": []
      },
      {
        "$id": "881",
        "FileName": "batch-marked-work-record-missing-information-controller-spec.js",
        "Description": "when click \"Mark as Received\" button",
        "WhenList": [],
        "ThenList": [
          "should post mark missing items when select items",
          "should go to search criteria page after mark missing information"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "882",
    "FileName": "batch-marked-work-record-missing-information-search-controller-spec.js",
    "Description": "BathMarkedWorkRecordMissingInformationSearchControllerSpec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "883",
        "FileName": "batch-marked-work-record-missing-information-search-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should init practice type options to have only Tax and Social Security",
          "should init workrecord type options base on practice type given first practice type is Tax.",
          "should init workrecord type options base on practice type given first practice type is social security.",
          "should init display default values"
        ],
        "Children": []
      },
      {
        "$id": "884",
        "FileName": "batch-marked-work-record-missing-information-search-controller-spec.js",
        "Description": "when engagement changed",
        "WhenList": [],
        "ThenList": [
          "should distinct offices when engagement changed",
          "should set practice type according to engagement practice type when engagement is changed",
          "should not change the practice type when selected engagement is undefined"
        ],
        "Children": []
      },
      {
        "$id": "885",
        "FileName": "batch-marked-work-record-missing-information-search-controller-spec.js",
        "Description": "when practice type changed",
        "WhenList": [],
        "ThenList": [
          "should clear engagement when practice type is changed",
          "should change workrecord type when practice type is changed",
          "should change workrecord type when practice type is changed back to tax from social security",
          "should clear tax year when practice type is changed to social security"
        ],
        "Children": []
      },
      {
        "$id": "886",
        "FileName": "batch-marked-work-record-missing-information-search-controller-spec.js",
        "Description": "should clear description",
        "WhenList": [],
        "ThenList": [
          "should available description when engagement changed",
          "when practice type is changed",
          "when work record type change",
          "when responsible office change",
          "when country change",
          "when tax year change"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "887",
    "FileName": "batch-send-briefing-reminders-criteria-controller-spec.js",
    "Description": "batch send briefing reminders criteria controller",
    "WhenList": [],
    "ThenList": [
      "should initialize scope default search criteria",
      "should only return tax and social security practice types",
      "should load engagements according to selected practice type when changing practice type"
    ],
    "Children": []
  },
  {
    "$id": "888",
    "FileName": "batch-send-questionnaire-controller-spec.js",
    "Description": "batch send questionnaire controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "889",
        "FileName": "batch-send-questionnaire-controller-spec.js",
        "Description": "immigration",
        "WhenList": [],
        "ThenList": [
          "should send batch immigration questionnaire notifications"
        ],
        "Children": []
      },
      {
        "$id": "890",
        "FileName": "batch-send-questionnaire-controller-spec.js",
        "Description": "tax",
        "WhenList": [],
        "ThenList": [
          "should pop up specify global email dialog if there are global notifications",
          "should not pop up specify global email dialog if there are only single notifications"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "891",
    "FileName": "batch-update-work-record-billing-status-controller-spec.js",
    "Description": "BatchUpdateWorkRecordBillingStatusControllerSpec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "892",
        "FileName": "batch-update-work-record-billing-status-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should post all criteria when receive search request",
          "should set billing radio checked"
        ],
        "Children": []
      },
      {
        "$id": "893",
        "FileName": "batch-update-work-record-billing-status-controller-spec.js",
        "Description": "when click a work record in search results",
        "WhenList": [],
        "ThenList": [
          "should go to work record details page",
          "should show error message when work record is from restricted assignee and staff cannot view work record",
          "should show detail when work record is from restricted assignee and staff can view work record"
        ],
        "Children": []
      },
      {
        "$id": "894",
        "FileName": "batch-update-work-record-billing-status-controller-spec.js",
        "Description": "when click \"Update\" button",
        "WhenList": [],
        "ThenList": [
          "should post work record when update billing status to false",
          "should post work record when update billing status to true",
          "should still stage current page after update"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "895",
    "FileName": "batch-update-work-record-billing-status-search-controller-spec.es6",
    "Description": "BatchUpdateWorkRecordBillingStatusSearchControllerSpec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "896",
        "FileName": "batch-update-work-record-billing-status-search-controller-spec.es6",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should init all practice types",
          "should init all billing status",
          "should init workrecord type options base on practice type given first practice type is Tax.",
          "should init workrecord type options base on practice type given first practice type is social security.",
          "should init workrecord type options base on practice type given first practice type is immigration.",
          "should init display default values",
          "should init display default values when current staff is social security"
        ],
        "Children": []
      },
      {
        "$id": "897",
        "FileName": "batch-update-work-record-billing-status-search-controller-spec.es6",
        "Description": "when engagement changed",
        "WhenList": [],
        "ThenList": [
          "should distinct offices when engagement changed"
        ],
        "Children": []
      },
      {
        "$id": "898",
        "FileName": "batch-update-work-record-billing-status-search-controller-spec.es6",
        "Description": "when practice type changed",
        "WhenList": [],
        "ThenList": [
          "should clear engagement when practice type is changed",
          "should change workrecord type when practice type is changed to social security",
          "should change workrecord type when practice type is changed to immigration",
          "should change workrecord type when practice type is changed back to tax from social security",
          "should clear tax year when practice type is changed to social security"
        ],
        "Children": []
      },
      {
        "$id": "899",
        "FileName": "batch-update-work-record-billing-status-search-controller-spec.es6",
        "Description": "when responsible office changed",
        "WhenList": [],
        "ThenList": [
          "should distinct teams when responsible office changed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "900",
    "FileName": "batch-update-work-record-name-controller-spec.js",
    "Description": "BatchUpdateWorkRecordNameController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "901",
        "FileName": "batch-update-work-record-name-controller-spec.js",
        "Description": "unableToUpdate",
        "WhenList": [],
        "ThenList": [
          "should return true when no record selected without new updated properties",
          "should return true when no record selected with new updated properties",
          "should return false when records selected with new properties"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "902",
    "FileName": "batch-update-work-record-tax-contact-controller-spec.es6",
    "Description": "BatchUpdateQuestionnaireContactController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "903",
        "FileName": "batch-update-work-record-tax-contact-controller-spec.es6",
        "Description": "BatchUpdateQuestionnaireContactController.unableToUpdate",
        "WhenList": [],
        "ThenList": [
          "should not allow update when there's no updatable records selected",
          "should not allow update when new tax contact office is not selected",
          "should not allow update when new tax contact is not specified",
          "should allow update when some work records are selected, new contact office is selected and new tax contact is specified",
          "should allow update when selected contact office has team mail box with display name while selected contact is empty",
          "should not allow update when selected contact office has team mail box without display name while selected contact is empty"
        ],
        "Children": []
      },
      {
        "$id": "904",
        "FileName": "batch-update-work-record-tax-contact-controller-spec.es6",
        "Description": "when update",
        "WhenList": [],
        "ThenList": [
          "should send update questionnaire contact with contact office",
          "when update questionnaire contact only with contact office "
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "905",
    "FileName": "briefing-coordinator-criteria-controller-spec.js",
    "Description": "briefing notification criteria controller",
    "WhenList": [],
    "ThenList": [
      "should initialize scope default search criteria when access work record advanced search page",
      "should init scope as default values",
      "should distinct offices when engagement changed",
      "should distinct offices and set team options when engagement change to undefined",
      "should not change the set practice type when selected engagement is undefined",
      "should clear criteria when practice type is changed",
      "should initialize options based on practice type",
      "should send correct search parameters to search page"
    ],
    "Children": [
      {
        "$id": "906",
        "FileName": "briefing-coordinator-criteria-controller-spec.js",
        "Description": "load teams in responsible office",
        "WhenList": [],
        "ThenList": [
          "should load teams in office when changing responsible office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "907",
    "FileName": "briefing-manual-work-record-section-schedule-details-edit-controller-spec.js",
    "Description": "BriefingManualWorkRecordSectionScheduleDetailsEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "908",
        "FileName": "briefing-manual-work-record-section-schedule-details-edit-controller-spec.js",
        "Description": "edit manual schedule details of work record",
        "WhenList": [],
        "ThenList": [
          "should disable schedule details save button when hour selected and meridiem is not selected",
          "should enable schedule details save button when schedule detail time/date is not selected and contact number is filled in",
          "should update schedule details"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "909",
    "FileName": "briefing-notification-criteria-controller-spec.js",
    "Description": "briefing notification criteria controller",
    "WhenList": [],
    "ThenList": [
      "should clear selected briefing coordinator when change office"
    ],
    "Children": []
  },
  {
    "$id": "910",
    "FileName": "briefing-notification-search-controller-spec.js",
    "Description": "briefing notification search controller",
    "WhenList": [],
    "ThenList": [
      "should search work record when initialized"
    ],
    "Children": []
  },
  {
    "$id": "911",
    "FileName": "briefing-online-work-record-section-scheduler-details-edit-controller-spec.js",
    "Description": "BriefingOnlineWorkRecordSectionScheduleDetailsEditController",
    "WhenList": [],
    "ThenList": [
      "should initialize with briefing information"
    ],
    "Children": [
      {
        "$id": "912",
        "FileName": "briefing-online-work-record-section-scheduler-details-edit-controller-spec.js",
        "Description": "before scheduled",
        "WhenList": [],
        "ThenList": [
          "should init default schedule detail",
          "should show address bar to input PwC office address if available briefing methods contain AtPwCOffice",
          "should not show address bar to input PwC office address if available briefing methods do not contain AtPwCOffice"
        ],
        "Children": [
          {
            "$id": "913",
            "FileName": "briefing-online-work-record-section-scheduler-details-edit-controller-spec.js",
            "Description": "when save",
            "WhenList": [],
            "ThenList": [
              "should contain available briefing methods information in request",
              "should contain pwc office address information in request; but doesn't contain available briefing methods",
              "should contain pwc office address information in request if available briefing methods has no AtPwcAddress",
              "should contain other briefing method name in request if available briefing methods has no Other"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "914",
        "FileName": "briefing-online-work-record-section-scheduler-details-edit-controller-spec.js",
        "Description": "after scheduled",
        "WhenList": [],
        "ThenList": [
          "should init default schedule detail when reschedule",
          "should getAvailableTimeSlots based on time zone and date",
          "should updateTimeZoneRelatedTime when assignee timezone changed",
          "should clear selected timeslot if appointment timezone or date changed",
          "should call backend api to convert to sofia's timezone when selected a timeSlot"
        ],
        "Children": [
          {
            "$id": "915",
            "FileName": "briefing-online-work-record-section-scheduler-details-edit-controller-spec.js",
            "Description": "save for reschedule",
            "WhenList": [],
            "ThenList": [
              "should post correct info when normally reschedule",
              "should contain selected briefing address when selected briefing method is ByPhone",
              "should post correct info when reschedule as Other briefing method",
              "should post other briefing method name when reschedule as By Phone",
              "should post other briefing method details when reschedule as By Phone",
              "should revert pwc address when clear pwc address and selected ByPhone",
              "should revert other briefing name when clear other briefing name and selected ByPhone"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "916",
    "FileName": "briefing-work-record-detail-main-controller-spec.js",
    "Description": "briefing work record detail main controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "917",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "briefing method",
        "WhenList": [],
        "ThenList": [
          "should assert whether contains a briefing method",
          "should show briefing address when available briefing methods contains AtPwCOffice",
          "should not show briefing address when available briefing method does not contain AtPwCOffice"
        ],
        "Children": []
      },
      {
        "$id": "918",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "when initialized",
        "WhenList": [],
        "ThenList": [
          "should ensure vm.workRecord.assignments has correct default value",
          "should set isOnline field",
          "should get service status",
          "should init variables related to page section as collapse",
          "should format history of workrecord",
          "should not forbid view restricted information"
        ],
        "Children": []
      },
      {
        "$id": "919",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "init edit type of service dialog",
        "WhenList": [],
        "ThenList": [
          "should show engagement type of services and ahead of country type of services"
        ],
        "Children": []
      },
      {
        "$id": "920",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "delete",
        "WhenList": [],
        "ThenList": [
          "showConfirmDeletion should be false when init",
          "should not show delete link given workrecord don't have delete link.",
          "should not show delete link given workrecord don't have delete link.",
          "should change showConfirmDeletion when click delete link",
          "should navigate back when delete work record successful",
          "should pop up error message when delete work record failed"
        ],
        "Children": []
      },
      {
        "$id": "921",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "show markedness tag",
        "WhenList": [],
        "ThenList": [
          "should show markedness tag when service status has issues"
        ],
        "Children": []
      },
      {
        "$id": "922",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "canEditScheduleDetails",
        "WhenList": [],
        "ThenList": [
          "should be true when with EditScheduleDetails link",
          "should be false when without EditScheduleDetails link"
        ],
        "Children": []
      },
      {
        "$id": "923",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "canEditOnlineScheduleDetails",
        "WhenList": [],
        "ThenList": [
          "should be true when with EditOnlineScheduleDetails link",
          "should be false when without EditScheduleDetails link"
        ],
        "Children": []
      },
      {
        "$id": "924",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "canEditBriefingCoordinator",
        "WhenList": [],
        "ThenList": [
          "should be true when with EditBriefingCoordinator link",
          "should be false when without EditScheduleDetails link"
        ],
        "Children": []
      },
      {
        "$id": "925",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "hasScheduleDetails",
        "WhenList": [],
        "ThenList": [
          "should not show schedule details when not set schedule details",
          "should show schedule details when set schedule details",
          "should convert schedule date time to correct format"
        ],
        "Children": []
      },
      {
        "$id": "926",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "show send notify",
        "WhenList": [],
        "ThenList": [
          "canSendNotification",
          "should send notify"
        ],
        "Children": []
      },
      {
        "$id": "927",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "sending first reminder",
        "WhenList": [],
        "ThenList": [
          "should show 'send first reminder' when has send-first-reminder link",
          "should not show 'send first reminder' when does not have send-first-reminder link",
          "should send first reminder",
          "should refresh work record and not be able to send first reminder after sent first reminder"
        ],
        "Children": []
      },
      {
        "$id": "928",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "sending final reminder",
        "WhenList": [],
        "ThenList": [
          "should show final reminder when has final reminder link",
          "should send final reminder"
        ],
        "Children": []
      },
      {
        "$id": "929",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "cancel appointment",
        "WhenList": [],
        "ThenList": [
          "can cancel appointment",
          "should not cancel appointment when choose no",
          "should cancel appointment when choose yes"
        ],
        "Children": []
      },
      {
        "$id": "930",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "when editing",
        "WhenList": [],
        "ThenList": [
          "should disable other edit buttons when editing one section",
          "should enable other edit buttons when cancel editing one section"
        ],
        "Children": []
      },
      {
        "$id": "931",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "workMilestoneStyle for Online Briefing Workrecord and current milestone is Schedule",
        "WhenList": [],
        "ThenList": [
          "should return 'completed' as class name when milestone has completed",
          "should return 'completed last-completed' as class name when milestone is the last completed one",
          "should return 'not-started' as class name when milestone is not started",
          "should show current ico when milestone is current milestone and no task is completed or started",
          "should show current ico when milestone is current milestone and one task is started",
          "should show current ico when milestone is current milestone and one task is completed"
        ],
        "Children": []
      },
      {
        "$id": "932",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "workMilestoneStyle for Online Briefing Workrecord and current milestone is Notify",
        "WhenList": [],
        "ThenList": [
          "should show current ico when current milestone is Notify and only one task is started ",
          "should show current ico when current milestone is Notify and only one task is completed "
        ],
        "Children": []
      },
      {
        "$id": "933",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "workMilestoneStyle for not Notify or Schedule",
        "WhenList": [],
        "ThenList": [
          "should show clock ico when current milestone is not Notify or Schedule and only one task is started ",
          "should show clock ico when current milestone is not Notify or Schedule and only one task is completed "
        ],
        "Children": []
      },
      {
        "$id": "934",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "workMilestoneStyle for Manually briefing Workrecord and current milestone is Notify",
        "WhenList": [],
        "ThenList": [
          "should show clock ico when current milestone is Notify and only one task is started ",
          "should show clock ico when current milestone is Notify and only one task is completed "
        ],
        "Children": []
      },
      {
        "$id": "935",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "workMilestoneStyle for Manually briefing Workrecord and current milestone is Schedule",
        "WhenList": [],
        "ThenList": [
          "should show clock ico when current milestone is Notify and only one task is started ",
          "should show clock ico when current milestone is Notify and only one task is completed "
        ],
        "Children": []
      },
      {
        "$id": "936",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "edit work record detail button",
        "WhenList": [],
        "ThenList": [
          "should enable edit button when work record has edit link",
          "should disable edit button when work record does not have edit link"
        ],
        "Children": []
      },
      {
        "$id": "937",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "has external links",
        "WhenList": [],
        "ThenList": [
          "should not show external links section if no external link created",
          "should show external links section if has external links"
        ],
        "Children": []
      },
      {
        "$id": "938",
        "FileName": "briefing-work-record-detail-main-controller-spec.js",
        "Description": "when get update briefing coordinator information dialog",
        "WhenList": [],
        "ThenList": [
          "should pass workRecord from controller to dialog controller"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "939",
    "FileName": "briefing-work-record-mark-as-scheduled-dialog-controller-spec.js",
    "Description": "briefing work record mark as scheduled dialog controller",
    "WhenList": [],
    "ThenList": [
      "should init default appointment",
      "should select the only briefing method option when init",
      "should getAvailableTimeSlots based on time zone and date",
      "should updateTimeZoneRelatedTime when assignee timezone changed",
      "should only canInputAddress if briefing method is not By Phone",
      "should canInputOtherBriefingMethodDetails if selected briefing method is Other",
      "should canInputOtherBriefingMethodDetails if available briefing methods contains Other briefing method ",
      "should clear selected timeslot if appointment timezone or date changed",
      "should call backend api to convert to sofia's timezone when selected a timeSlot"
    ],
    "Children": [
      {
        "$id": "940",
        "FileName": "briefing-work-record-mark-as-scheduled-dialog-controller-spec.js",
        "Description": "briefing work record mark as scheduled dialog controller",
        "WhenList": [],
        "ThenList": [
          "should pass out filled values when MarkAsScheduled",
          "should send address given selected briefing method is At Assignee Office",
          "should send address given selected briefing method is At PwC Office",
          "should send other briefing method name and desc given selected briefing method is Other"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "941",
    "FileName": "briefing-work-record-section-work-record-details-edit-controller-spec.js",
    "Description": "BriefingWorkRecordSectionWorkRecordDetailsEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "942",
        "FileName": "briefing-work-record-section-work-record-details-edit-controller-spec.js",
        "Description": "update responsible office",
        "WhenList": [],
        "ThenList": [
          "should set up responsible office options",
          "should show error if not scheduled work record set to office with scheduler turned off",
          "should show error if it is scheduled work records",
          "should change team options when changing responsible office"
        ],
        "Children": []
      },
      {
        "$id": "943",
        "FileName": "briefing-work-record-section-work-record-details-edit-controller-spec.js",
        "Description": "edit basic details of work record",
        "WhenList": [],
        "ThenList": [
          "should update work record basic info",
          "should update service status",
          "should update assignment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "944",
    "FileName": "confirm-consents-spec.js",
    "Description": "confirm consents on questionnaire",
    "WhenList": [],
    "ThenList": [
      "should confirm not signed consent given organizer has unsigned consent",
      "should send confirm consents request given a valid signed date"
    ],
    "Children": []
  },
  {
    "$id": "945",
    "FileName": "employer-work-record-responsibility-controller-spec.js",
    "Description": "AssignEmployerWorkRecordResponsibilityController",
    "WhenList": [],
    "ThenList": [
      "should load tasks when init",
      "should clear all task responsibility assignment"
    ],
    "Children": []
  },
  {
    "$id": "946",
    "FileName": "estimated-completion-date-criteria-controller-spec.js",
    "Description": "estimated completion date criteria controller",
    "WhenList": [],
    "ThenList": [
      "should initialize scope default search criteria when access work record advanced search page",
      "should load current status when changing work record type",
      "should init scope as default values",
      "should distinct offices when engagement changed",
      "should distinct offices when engagement change to undefined",
      "should set practice type according to engagement practice type when engagement is changed",
      "should not change the set practice type when selected engagement is undefined"
    ],
    "Children": []
  },
  {
    "$id": "947",
    "FileName": "missing-item-responsible-office-controller-spec.js",
    "Description": "MissingItemResponsibleOfficeController",
    "WhenList": [],
    "ThenList": [
      "should get correct responsible office"
    ],
    "Children": []
  },
  {
    "$id": "948",
    "FileName": "new-work-record-batch-confirm-controller-spec.js",
    "Description": "new work record confirm controller",
    "WhenList": [],
    "ThenList": [
      "should create tax work record",
      "should clear work record basic after create work record",
      "should post to different immigration uri when batch create immigration work record"
    ],
    "Children": []
  },
  {
    "$id": "949",
    "FileName": "new-work-record-batch-create-assign-controller-spec.js",
    "Description": "WorkRecordBatchCreateAssignController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "950",
        "FileName": "new-work-record-batch-create-assign-controller-spec.js",
        "Description": "assign",
        "WhenList": [],
        "ThenList": [
          "should get primary service options by selected practice type and jurisdiction",
          "should not show assignee list and engagement list"
        ],
        "Children": [
          {
            "$id": "951",
            "FileName": "new-work-record-batch-create-assign-controller-spec.js",
            "Description": "initialize",
            "WhenList": [],
            "ThenList": [
              "should get options of 'Tax' only",
              "should default to be 'Tax'",
              "should init selected engagement"
            ],
            "Children": []
          },
          {
            "$id": "952",
            "FileName": "new-work-record-batch-create-assign-controller-spec.js",
            "Description": "country",
            "WhenList": [],
            "ThenList": [
              "should load country options by all services",
              "should use current user's country as default when country is contained in all services countries",
              "should get null when user's country is not contained in all services countries"
            ],
            "Children": []
          },
          {
            "$id": "953",
            "FileName": "new-work-record-batch-create-assign-controller-spec.js",
            "Description": "Responsible Office",
            "WhenList": [],
            "ThenList": [
              "should get all offices in when current user's office is engagement responsible office"
            ],
            "Children": [
              {
                "$id": "954",
                "FileName": "new-work-record-batch-create-assign-controller-spec.js",
                "Description": "when current user office is not coordinating office",
                "WhenList": [],
                "ThenList": [
                  "should get current user's office in responsible office list",
                  "should get all office in questionnaire contact office list"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "955",
            "FileName": "new-work-record-batch-create-assign-controller-spec.js",
            "Description": "Custom Field",
            "WhenList": [],
            "ThenList": [
              "should set value to customFields when selected assignee have single engagement changes",
              "should not clear custom field value if engagement has not change",
              "should not set value to customFields when selected assignees from different engagements",
              "should  set value to customFields when selected assignees from same engagement"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "956",
    "FileName": "new-work-record-batch-create-assign-controller-spec.js",
    "Description": "Questionnaire Contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "957",
        "FileName": "new-work-record-batch-create-assign-controller-spec.js",
        "Description": "selected assignees have same engagement",
        "WhenList": [],
        "ThenList": [
          "should be able to select contact when contact office does not have team mail box",
          "should not be able to select contact when contact office has team mail box"
        ],
        "Children": []
      },
      {
        "$id": "958",
        "FileName": "new-work-record-batch-create-assign-controller-spec.js",
        "Description": "selected assignees have different engagement",
        "WhenList": [],
        "ThenList": [
          "should select questionnaire contact office or questionnaire contact name when selected assignees have different engagements"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "959",
    "FileName": "new-work-record-batch-create-preview-controller-spec.js",
    "Description": "WorkRecordBatchCreatePreviewController",
    "WhenList": [],
    "ThenList": [
      "should group the assignees by selected",
      "should get all selected assignees",
      "should change select status of assignee",
      "should sort the assignees by name",
      "should enable/disable Save button depends if there are assignees selected.",
      "should update fetchedItems/selectCount/isAllSelected after click save button"
    ],
    "Children": []
  },
  {
    "$id": "960",
    "FileName": "new-work-record-batch-create-search-controller-spec.js",
    "Description": "NewWorkRecordBatchCreateSearchController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "961",
        "FileName": "new-work-record-batch-create-search-controller-spec.js",
        "Description": "Search",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "962",
            "FileName": "new-work-record-batch-create-search-controller-spec.js",
            "Description": "onSelectedEngagement",
            "WhenList": [],
            "ThenList": [
              "should reset the search result after the search criteria selectedPracticeType changed",
              "should clear selected engagement when practice type changes",
              "should return true if staff has only one selectable practice type",
              "should return false if staff has none selectable practice type",
              "should return false if staff has more than one selectable practice type",
              "should return true if staff has more than one practice type but only has one selectable practice type",
              "should pre set practiceType when only has one selectable practice type",
              "should not pre set practiceType when has more than one selectable practice type",
              "should not pre set practiceType when has no selectable practice type"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "963",
    "FileName": "new-work-record-notes-controller-spec.js",
    "Description": "new work record notes controller",
    "WhenList": [],
    "ThenList": [
      "newworkrecordnote should be valid if all field valid",
      "newworkrecordnote should be invalid if any field invalid",
      "should not change edit note content and status after create a new added note",
      "should update the page after delete an existing note",
      "should update the page after update an existing note",
      "should update the page after update an existing note",
      "should deny update when note content is empty",
      "should remove unsaved changes after cancel edit note",
      "should remove new note content before ajax call when click save to avoid create multiple notes when quick click save btn many times",
      "should remove unsaved changes after cancel edit newly created note "
    ],
    "Children": []
  },
  {
    "$id": "964",
    "FileName": "out-of-scope-work-reminder-dialog-controller-spec.es6",
    "Description": "OutOfScopeWorkReminderDialogController",
    "WhenList": [],
    "ThenList": [
      "default should be not have out of scope work",
      "should can confirm when do not have out of scope work",
      "should send correct out of scope work request when has out of scope work and confirm"
    ],
    "Children": []
  },
  {
    "$id": "965",
    "FileName": "out-of-scope-works-controller-spec.js",
    "Description": "OutOfScopeWorkController",
    "WhenList": [],
    "ThenList": [
      "should valid when all fields valid",
      "should invalid when description is spaces",
      "should convert IOS8601 datetime string to date"
    ],
    "Children": []
  },
  {
    "$id": "966",
    "FileName": "questionnaire-contact-criteria-controller-spec.js",
    "Description": "questionnaire contact criteria controller",
    "WhenList": [],
    "ThenList": [
      "should initialize scope default search criteria when access work record advanced search page",
      "should load current status and questionnaire status when changing practice type",
      "should reset criteria when changing practice type",
      "should load work record type when changing practice type",
      "should initialize current status options when changing immigration work record type to immigration application",
      "should reset current status to \"Any\" when change immigration work record type",
      "should init scope as default values",
      "should distinct offices when engagement changed",
      "should distinct offices when engagement change to undefined",
      "should set practice type according to engagement practice type when engagement is changed",
      "should not change the set practice type when selected engagement is undefined",
      "should reset responsible office to current user office when engagement changed",
      "should clear criteria when practice type is changed",
      "should initialize options based on practice type",
      "should send correct search parameters to search page"
    ],
    "Children": [
      {
        "$id": "967",
        "FileName": "questionnaire-contact-criteria-controller-spec.js",
        "Description": "load teams in responsible office",
        "WhenList": [],
        "ThenList": [
          "should clear team when clear responsible office",
          "should load teams in office when changing responsible office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "968",
    "FileName": "questionnaire-contact-search-controller-spec.js",
    "Description": "questionnaire contact search controller",
    "WhenList": [],
    "ThenList": [
      "should only search work records with questionnaire"
    ],
    "Children": []
  },
  {
    "$id": "969",
    "FileName": "questionnaire-controller-spec.js",
    "Description": "Questionnaire Controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "970",
        "FileName": "questionnaire-controller-spec.js",
        "Description": "show reminder link in old way",
        "WhenList": [],
        "ThenList": [
          "should send first reminder",
          "should send final reminder"
        ],
        "Children": []
      },
      {
        "$id": "971",
        "FileName": "questionnaire-controller-spec.js",
        "Description": "on init view model",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "972",
            "FileName": "questionnaire-controller-spec.js",
            "Description": "when load question set name",
            "WhenList": [],
            "ThenList": [
              "should load question set name when question set name is not given for practice type TAX",
              "should not reload question set name when question set name exists for practice type TAX",
              "should load question set name when question set name is not given for practice type IMMIGRATION"
            ],
            "Children": []
          },
          {
            "$id": "973",
            "FileName": "questionnaire-controller-spec.js",
            "Description": "when set vm.canActive",
            "WhenList": [],
            "ThenList": [
              "should set to true when contain active link",
              "should set to false when not contain active link"
            ],
            "Children": []
          },
          {
            "$id": "974",
            "FileName": "questionnaire-controller-spec.js",
            "Description": "when set vm.canSubmit",
            "WhenList": [],
            "ThenList": [
              "should set to true when contain submit link",
              "should set to true when contain consent sign confirm link",
              "should set to false when not contain submit link or consent sign confirm link"
            ],
            "Children": []
          },
          {
            "$id": "975",
            "FileName": "questionnaire-controller-spec.js",
            "Description": "when set vm.canBack",
            "WhenList": [],
            "ThenList": [
              "should set to true when contain restart link",
              "should set to false when not contain restart link"
            ],
            "Children": []
          },
          {
            "$id": "976",
            "FileName": "questionnaire-controller-spec.js",
            "Description": "when set vm.datePreText and vm.date",
            "WhenList": [],
            "ThenList": [
              "should set vm.datePreText to Due, vm.date to organizer due date when organizer not submitted",
              "should set vm.datePreText to Received on, vm.date to organizer submitted milestone date when organizer submitted"
            ],
            "Children": []
          },
          {
            "$id": "977",
            "FileName": "questionnaire-controller-spec.js",
            "Description": "when set vm.officeOptions",
            "WhenList": [],
            "ThenList": [
              "should equal workRecord.engagement.responsibleOffices"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "978",
        "FileName": "questionnaire-controller-spec.js",
        "Description": "when get organizer milestone style",
        "WhenList": [],
        "ThenList": [
          "should return not-started when organizer status is started ",
          "should return completed when organizer status is Submitted ",
          "should return completed when organizer status is Notified ",
          "should return not-started when organizer status is Notified ",
          "should return completed when organizer status is In Process ",
          "should return current activity when organizer status is In Process ",
          "should return not-started when organizer status is In Process "
        ],
        "Children": []
      },
      {
        "$id": "979",
        "FileName": "questionnaire-controller-spec.js",
        "Description": "when set vm.canResend",
        "WhenList": [],
        "ThenList": [
          "can resend questionnaire when have resend link",
          "cannot resend questionnaire when have no resend link"
        ],
        "Children": []
      },
      {
        "$id": "980",
        "FileName": "questionnaire-controller-spec.js",
        "Description": "when click resend",
        "WhenList": [],
        "ThenList": [
          "should resend questionnaire"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "981",
    "FileName": "questionnaire-due-date-criteria-controller-spec.js",
    "Description": "questionnaire due date criteria controller",
    "WhenList": [],
    "ThenList": [
      "should initialize scope default search criteria when access work record advanced search page",
      "should load current status when changing practice type",
      "should load work record type when changing practice type to immigration",
      "should init scope as default values",
      "should distinct offices when engagement changed",
      "should distinct offices when engagement change to undefined",
      "should set practice type according to engagement practice type when engagement is changed",
      "should not change the set practice type when selected engagement is undefined",
      "should clear criteria when practice type is changed",
      "should initialize options based on practice type",
      "should load current status when changing practice type to immigration",
      "should initialize current status options when changing immigration work record type to immigration application",
      "should reset current status to \"Any\" when change immigration work record type",
      "should reset criteria when changing practice type",
      "should set search type when click \"Search\"",
      "should reset responsible office to current user office when engagement changed"
    ],
    "Children": []
  },
  {
    "$id": "982",
    "FileName": "questionnaire-reminder-criteria-controller-spec.js",
    "Description": "questionnaire reminder criteria controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "983",
        "FileName": "questionnaire-reminder-criteria-controller-spec.js",
        "Description": "initializing",
        "WhenList": [],
        "ThenList": [
          "should initialize scope default search criteria when access work record advanced search page",
          "should set tax practice type if current user has it",
          "should disable form and show prompt message when current user does not have tax practice type",
          "should init milestones by practice type"
        ],
        "Children": []
      },
      {
        "$id": "984",
        "FileName": "questionnaire-reminder-criteria-controller-spec.js",
        "Description": "when filtering engagement",
        "WhenList": [],
        "ThenList": [
          "should distinct offices when engagement changed",
          "should reset to all offices when engagement change to undefined"
        ],
        "Children": []
      },
      {
        "$id": "985",
        "FileName": "questionnaire-reminder-criteria-controller-spec.js",
        "Description": "when filtering responsible office",
        "WhenList": [],
        "ThenList": [
          "should load teams when responsible office is changed",
          "should reset criteria.team when responsible office is changed",
          "should clear criteria.team and scope.teams when responsible office is set to null"
        ],
        "Children": []
      },
      {
        "$id": "986",
        "FileName": "questionnaire-reminder-criteria-controller-spec.js",
        "Description": "when searching",
        "WhenList": [],
        "ThenList": [
          "should send correct search parameters to search page",
          "should send to corresponding page by action"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "987",
    "FileName": "questionnaire-reminder-send-controller-spec.js",
    "Description": "questionnaire reminder send controller",
    "WhenList": [],
    "ThenList": [
      "should get correct action from parent controller",
      "should post send reminder request with selected work record uri according to different action"
    ],
    "Children": []
  },
  {
    "$id": "988",
    "FileName": "questionnaires-reminder-search-controller-spec.js",
    "Description": "Questionnaire Reminder Search Controller",
    "WhenList": [],
    "ThenList": [
      "should not forbid if has send first reminder link and staff is allowed to do so",
      "should forbid if staff office is not in engagement responsible offices",
      "should not forbid if staff office is engagement subscribed office",
      "should forbid if work record has no organizer",
      "should forbid if organizer has no link",
      "should search work record with correct route action"
    ],
    "Children": []
  },
  {
    "$id": "989",
    "FileName": "social-security-info-controller-spec.js",
    "Description": "SocialSecurityInfoController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "990",
        "FileName": "social-security-info-controller-spec.js",
        "Description": "expiry date",
        "WhenList": [],
        "ThenList": [
          "should set the lower bound for expiry date field",
          "should set the upper bound for expiry date field"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "991",
    "FileName": "task-assignments-controller-spec.js",
    "Description": "task assignments controller",
    "WhenList": [],
    "ThenList": [
      "should reset responsibility and tag to null when selected engagement changed",
      "should not reset responsibility when non selected engagement",
      "should reset tag when responsible office changed"
    ],
    "Children": [
      {
        "$id": "992",
        "FileName": "task-assignments-controller-spec.js",
        "Description": "should return right prompt message",
        "WhenList": [],
        "ThenList": [
          "should return empty if task responsible office is undefined",
          "should return select a tag if task responsible office has tags",
          "should return No tag added if task responsible office does not have any tag"
        ],
        "Children": []
      },
      {
        "$id": "993",
        "FileName": "task-assignments-controller-spec.js",
        "Description": "should contain specific milestone",
        "WhenList": [],
        "ThenList": [
          "should not contain Notify and Schedule milestone for Online Briefing work record",
          "should contain Complete and Post Work milestone for Online Briefing work record",
          "should all 4 milestones for manually briefing w/r"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "994",
    "FileName": "tax-info-controller-spec.js",
    "Description": "TaxInfoController",
    "WhenList": [],
    "ThenList": [
      "should set the current year as the default year when the country uses fiscal year",
      "should set the previous year as the default year when the country use calendar year",
      "should set month to be empty when duration changed from monthly to annual",
      "should set the current year and current month as the default when set duration to be monthly",
      "should set correct year ending when country changed"
    ],
    "Children": []
  },
  {
    "$id": "995",
    "FileName": "update-briefing-coordinator-information-dialog-controller-spec.js",
    "Description": "update questionnaire information dialog controller",
    "WhenList": [],
    "ThenList": [
      "should initialize vm",
      "should clear coordinator when onBriefingCoordinatorOfficeChange"
    ],
    "Children": []
  },
  {
    "$id": "996",
    "FileName": "update-questionnaire-information-dialog-controller-spec.js",
    "Description": "update questionnaire information dialog controller",
    "WhenList": [],
    "ThenList": [
      "should forbidden to select questionnaire contact when contact office has display name",
      "should not forbidden to select questionnaire contact when contact office does not have display name",
      "should not forbidden to select questionnaire contact when contact office is null"
    ],
    "Children": []
  },
  {
    "$id": "997",
    "FileName": "update-valid-period-contoller-spec.js",
    "Description": "UpdateValidPeriodController",
    "WhenList": [],
    "ThenList": [
      "should setup valid date period"
    ],
    "Children": []
  },
  {
    "$id": "998",
    "FileName": "work-milestones-search-controller-spec.js",
    "Description": "WorkMilestonesSearchController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "999",
        "FileName": "work-milestones-search-controller-spec.js",
        "Description": "when initialize",
        "WhenList": [],
        "ThenList": [
          "should set default value",
          "should load practice types",
          "should load responsible offices"
        ],
        "Children": []
      },
      {
        "$id": "1000",
        "FileName": "work-milestones-search-controller-spec.js",
        "Description": "when change work record type to assignee and change country",
        "WhenList": [],
        "ThenList": [
          "should set month default fiscal year",
          "should set default yearEnding"
        ],
        "Children": []
      },
      {
        "$id": "1001",
        "FileName": "work-milestones-search-controller-spec.js",
        "Description": "when change work record type and annualOrMonthly",
        "WhenList": [],
        "ThenList": [
          "should set month",
          "should set default yearEnding"
        ],
        "Children": []
      },
      {
        "$id": "1002",
        "FileName": "work-milestones-search-controller-spec.js",
        "Description": "search functionality",
        "WhenList": [],
        "ThenList": [
          "should not error when not select any engagement",
          "should has definition uri in simple search request"
        ],
        "Children": [
          {
            "$id": "1003",
            "FileName": "work-milestones-search-controller-spec.js",
            "Description": "when is assignee work record",
            "WhenList": [],
            "ThenList": [
              "should send correct request and get correct search result",
              "the work record should not search out when the target task is strike through"
            ],
            "Children": []
          },
          {
            "$id": "1004",
            "FileName": "work-milestones-search-controller-spec.js",
            "Description": "when is employer work record",
            "WhenList": [],
            "ThenList": [
              "should send correct request and get correct search result"
            ],
            "Children": []
          },
          {
            "$id": "1005",
            "FileName": "work-milestones-search-controller-spec.js",
            "Description": "when Sofia selects both a country task template and an engagement task template",
            "WhenList": [],
            "ThenList": [
              "should be shown work records which applied both of those templates"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1006",
        "FileName": "work-milestones-search-controller-spec.js",
        "Description": "task template filters",
        "WhenList": [],
        "ThenList": [
          "should disable search button so that sofia can not update work milestone when a country task filter is selected but no task item selected",
          "should disable search button so that sofia can not update work milestone when a engagement task filter is selected but no task item selected",
          "should be able to update work milestone when a task filter is selected and a task item is selected",
          "should be able to update work milestone when a task filter is selected and a task item is selected"
        ],
        "Children": [
          {
            "$id": "1007",
            "FileName": "work-milestones-search-controller-spec.js",
            "Description": "when choose country task template",
            "WhenList": [],
            "ThenList": [
              "should get task items"
            ],
            "Children": []
          },
          {
            "$id": "1008",
            "FileName": "work-milestones-search-controller-spec.js",
            "Description": "when choose engagement task template",
            "WhenList": [],
            "ThenList": [
              "should contain no task item from engagement task templates when no engagement selected",
              "should contain no task item from engagement task templates when multiple engagements selected",
              "should contain task item from engagement task templates where one engagement selected"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1009",
    "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
    "Description": "WorkMilestonesWithDefaultTaskTemplateEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1010",
        "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
        "Description": "when is employer work record",
        "WhenList": [],
        "ThenList": [
          "should load employer work record milestones",
          "canUpdate always be true"
        ],
        "Children": []
      },
      {
        "$id": "1011",
        "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
        "Description": "when is assignee work Record",
        "WhenList": [],
        "ThenList": [
          "should load assignee work record milestones",
          "should remove all following date when clean current milestone date"
        ],
        "Children": [
          {
            "$id": "1012",
            "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
            "Description": "check can update",
            "WhenList": [],
            "ThenList": [
              "when milestone is before delivered"
            ],
            "Children": [
              {
                "$id": "1013",
                "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
                "Description": "when is delivered milestone",
                "WhenList": [],
                "ThenList": [
                  "when workRecord has missing items",
                  "when workRecord does not have missing items"
                ],
                "Children": []
              },
              {
                "$id": "1014",
                "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
                "Description": "when is complete milestone",
                "WhenList": [],
                "ThenList": [
                  "when workRecord has open missing items",
                  "when workRecord has unfinished checklist task",
                  "when workRecord does not have open missing item or unfinished checklist task"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "1015",
            "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
            "Description": "should update all the empty milestone date before current milestone to current date",
            "WhenList": [],
            "ThenList": [
              "when workRecord has no missing items"
            ],
            "Children": []
          },
          {
            "$id": "1016",
            "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
            "Description": "get milestone previous date",
            "WhenList": [],
            "ThenList": [
              "should get previous milestone of the current milestone"
            ],
            "Children": []
          },
          {
            "$id": "1017",
            "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
            "Description": "get milestone last valid date",
            "WhenList": [],
            "ThenList": [
              "should return today's date as last valid date",
              "should return next milestone date as last valid date when it is earlier than today",
              "should return today when next milestone have no date"
            ],
            "Children": []
          },
          {
            "$id": "1018",
            "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
            "Description": "cancel",
            "WhenList": [],
            "ThenList": [
              "should open confirmation dialog",
              "should open confirmation dialog when navigation toggle on"
            ],
            "Children": []
          },
          {
            "$id": "1019",
            "FileName": "work-milestones-with-default-task-template-edit-controller-spec.js",
            "Description": "save",
            "WhenList": [],
            "ThenList": [
              "should save all changed milestones and go to last page",
              "should save nothing when the search result is empty and then go to last page",
              "should save nothing when the search result is null and then go to last page",
              "should show error message when some of workMilestone had not been updated failed"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1020",
    "FileName": "work-milestones-with-specific-task-template-edit-controller-spec.es6",
    "Description": "WorkMilestonesWithSpecificTaskTemplateEditController",
    "WhenList": [],
    "ThenList": [
      "should initialize",
      "should able to input date before today",
      "should not be update when target task's milestone is delived or after when workrecord with missinginfo",
      "should be update when target task is not final task and work record has unfinished checklist task",
      "should not be update when target task is final task and work record has unfinished checklist task",
      "should send correct request when save",
      "the target task's complete time should be the operate time when due date is today",
      "the target task's complete time should be previous milestone's complete time when dueDate is before today and dueDate is same with target task's previous milestone's complete date",
      "the target task's complete time should be dueDate + 00:00:00 when dueDate is before today, and dueDate is not same with target task's previous milestone' complete date",
      "should not update the completed task's complete date when the target task's milestone has other complete task"
    ],
    "Children": []
  },
  {
    "$id": "1021",
    "FileName": "work-record-batch-create-search-controller-spec.js",
    "Description": "WorkRecordBatchCreateSearchController",
    "WhenList": [],
    "ThenList": [
      "should load cached search criteria",
      "should return one fetched item per assignee engagement",
      "should return fetched items for the selected engagement",
      "should change batch creation step to select step when search result is less than 2000",
      "should display result too large tip when search result is more than 1999",
      "should get search result of assignees when search without any condition",
      "should filter assignee with engagement according to selected practice type when search without any condition",
      "should leave selected options and return to search after click cancel",
      "should stay on current page when the count of search result are more than 5000"
    ],
    "Children": []
  },
  {
    "$id": "1022",
    "FileName": "work-record-batch-create-select-controller-spec.js",
    "Description": "WorkRecordBatchCreateSelectController",
    "WhenList": [],
    "ThenList": [
      "should change step to search after refine search",
      "should filter all the assignees which were selected",
      "should change step to assign after next step",
      "should change route to assign after show details",
      "should return false when there is no assignee selected",
      "should return true when there is assignee selected"
    ],
    "Children": []
  },
  {
    "$id": "1023",
    "FileName": "work-record-batch-create-select-controller-spec.js",
    "Description": "cache page info",
    "WhenList": [],
    "ThenList": [
      "should cache page info after goto assignee detail"
    ],
    "Children": []
  },
  {
    "$id": "1024",
    "FileName": "work-record-checklist-controller-spec.js",
    "Description": "WorkRecordChecklistController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1025",
        "FileName": "work-record-checklist-controller-spec.js",
        "Description": "getChecklistStatusCss()",
        "WhenList": [],
        "ThenList": [
          "should return 'not-started' when no checklist item existing",
          "should return 'current activity task-not-started' when non checklist item started",
          "should return 'current activity task-started' when having unfinished checklist item",
          "should return 'completed' when all checklist items are not unfinished",
          "should return 'current activity task-not-started' when have crossed out item but other not completed"
        ],
        "Children": []
      },
      {
        "$id": "1026",
        "FileName": "work-record-checklist-controller-spec.js",
        "Description": "shouldHaveChecklistDialog",
        "WhenList": [],
        "ThenList": [
          "should false when there is no checklist",
          "should false when there is checklist but current milestone is not create",
          "should true when there is checklist and current milestone is create"
        ],
        "Children": []
      },
      {
        "$id": "1027",
        "FileName": "work-record-checklist-controller-spec.js",
        "Description": "save",
        "WhenList": [],
        "ThenList": [
          "send put request when save"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1028",
    "FileName": "work-record-checklist-item-controller-spec.js",
    "Description": "WorkRecordChecklistItemController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1029",
        "FileName": "work-record-checklist-item-controller-spec.js",
        "Description": "for created checklist item",
        "WhenList": [],
        "ThenList": [
          "should init checklist item when work record loaded"
        ],
        "Children": []
      },
      {
        "$id": "1030",
        "FileName": "work-record-checklist-item-controller-spec.js",
        "Description": "for finished checklist item",
        "WhenList": [],
        "ThenList": [
          "should init checklist item when work record loaded"
        ],
        "Children": []
      },
      {
        "$id": "1031",
        "FileName": "work-record-checklist-item-controller-spec.js",
        "Description": "for crossOuted checklist item",
        "WhenList": [],
        "ThenList": [
          "should init checklist item when work record loaded"
        ],
        "Children": []
      },
      {
        "$id": "1032",
        "FileName": "work-record-checklist-item-controller-spec.js",
        "Description": "for crossOuted checklist item",
        "WhenList": [],
        "ThenList": [
          "should init checklist item when work record loaded"
        ],
        "Children": []
      },
      {
        "$id": "1033",
        "FileName": "work-record-checklist-item-controller-spec.js",
        "Description": "checklist task",
        "WhenList": [],
        "ThenList": [
          "should be cleared when reset task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1034",
    "FileName": "work-record-country-custom-field-edit-controller-spec.js",
    "Description": "WorkRecordCountryCustomFieldEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1035",
        "FileName": "work-record-country-custom-field-edit-controller-spec.js",
        "Description": "When on edit country custom field section",
        "WhenList": [],
        "ThenList": [
          "should get custom field copy when controller load over",
          "can edit restricted custom field once it is a restricted cf and work record has corresponding edit link",
          "should update custom field for work record after click 'save'"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1036",
    "FileName": "work-record-creation-form-controller-spec.js",
    "Description": "Work Record Creation Form",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1037",
        "FileName": "work-record-creation-form-controller-spec.js",
        "Description": "after WorkRecordCreateController initialized",
        "WhenList": [],
        "ThenList": [
          "should set selectedJurisdiction to user country as default",
          "should set workRecordBasic.currentAdditionalServices to empty array",
          "should set work record name to {year}-{country} by default",
          "should have empty organizer info"
        ],
        "Children": []
      },
      {
        "$id": "1038",
        "FileName": "work-record-creation-form-controller-spec.js",
        "Description": "after TaxInfoController initialized",
        "WhenList": [],
        "ThenList": [
          "should set yearEndingOptions to Tiger.YearEnding() (from 1992 to 2020)"
        ],
        "Children": []
      },
      {
        "$id": "1039",
        "FileName": "work-record-creation-form-controller-spec.js",
        "Description": "cascaded changes to organizer info",
        "WhenList": [],
        "ThenList": [
          "should load question sets when organizerInfo.questionnaireRequired is changed to \"yes\"",
          "should not load question sets if year ending is empty",
          "should not load question set if country is empty",
          "should clear organizer info when organizerInfo.questionnaireRequired changed from \"yes\" to \"no\"",
          "should clear question set when no matched question sets exist"
        ],
        "Children": []
      },
      {
        "$id": "1040",
        "FileName": "work-record-creation-form-controller-spec.js",
        "Description": "when selected engagement is changed",
        "WhenList": [],
        "ThenList": [
          "should set selectedResponsibleOffice to current user office as default",
          "should set organizerInfo.selectedTaxContactOffice to current user office as default",
          "should change selectedResponsibleOffice to current user office"
        ],
        "Children": []
      },
      {
        "$id": "1041",
        "FileName": "work-record-creation-form-controller-spec.js",
        "Description": "cascaded changes to current additional services",
        "WhenList": [],
        "ThenList": [
          "should clear addition services when selectedJurisdiction is changed",
          "should clear addition services when selectedPracticeType is changed"
        ],
        "Children": []
      },
      {
        "$id": "1042",
        "FileName": "work-record-creation-form-controller-spec.js",
        "Description": "cascaded changes to primary service",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1043",
            "FileName": "work-record-creation-form-controller-spec.js",
            "Description": "when selectedPrimaryService is provided for changed practiceType and country",
            "WhenList": [],
            "ThenList": [
              "should retain selectedPrimaryService",
              "should retain selectedPrimaryService"
            ],
            "Children": []
          },
          {
            "$id": "1044",
            "FileName": "work-record-creation-form-controller-spec.js",
            "Description": "when selectedPrimaryService is not provided for changed practiceType and country",
            "WhenList": [],
            "ThenList": [
              "should clear selectedPrimaryService",
              "should clear selectedPrimaryService"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1045",
        "FileName": "work-record-creation-form-controller-spec.js",
        "Description": "cascaded changes to work record name",
        "WhenList": [],
        "ThenList": [
          "should generate work record name when selectedJurisdiction is changed",
          "should generate work record name when taxInfo.yearEnding is changed",
          "should generate work record name when immigrationInfo.dependent is changed",
          "should generate work record name when selectedPrimaryService is changed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1046",
    "FileName": "work-record-creation-request-builder-spec.es6",
    "Description": "WorkRecordCreationRequestBuilder",
    "WhenList": [],
    "ThenList": [
      "should build request data when we create a single work record with organizer contact info",
      "should contain organizer contact office uri when organizer does not have contact",
      "should build request data when we create an online briefing single work record",
      "should build request data containing other briefing method name when work record does not have other briefing method checked",
      "should build request data when we create a manually briefing single work record",
      "should build request data when we batch create work records without a selected engagement",
      "should build request data with additional service task assignments when we create immigration application work records"
    ],
    "Children": []
  },
  {
    "$id": "1047",
    "FileName": "work-record-detail-controller-spec.js",
    "Description": "work record detail controller",
    "WhenList": [],
    "ThenList": [
      "should disable other edit buttons when editing one section",
      "should enable other edit buttons when cancel editing one section",
      "should show self nominate link when work record has self nominate link",
      "should not show self nominate link when work record has self nominate link",
      "should put notification history before missingItems history when they are created at same time"
    ],
    "Children": [
      {
        "$id": "1048",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "show publish file button",
        "WhenList": [],
        "ThenList": [
          "should show publish button when workrecord is tax workrecord and questionnaire has been submitted",
          "should not show publish button when questionnaire has not been submitted",
          "should not show publish button when workrecord is nofiling requirement",
          "should not show publish button when service status is cancelled",
          "should not show publish button when service status is declined",
          "should show publish button when service status is no issues"
        ],
        "Children": []
      },
      {
        "$id": "1049",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "show markedness tag",
        "WhenList": [],
        "ThenList": [
          "should show markedness tag when service status has issues",
          "should show markedness tag when organizer is no filing requirement"
        ],
        "Children": []
      },
      {
        "$id": "1050",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "show inactive tag",
        "WhenList": [],
        "ThenList": [
          "should show inactive tag if assignee is inactive",
          "should show inactive tag if engagement is inactive"
        ],
        "Children": []
      },
      {
        "$id": "1051",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "show external links",
        "WhenList": [],
        "ThenList": [
          "should hide the section of external links if there no link created",
          "should show the sectionof external links if links are created"
        ],
        "Children": []
      },
      {
        "$id": "1052",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "init edit type of service dialog",
        "WhenList": [],
        "ThenList": [
          "should show type of service in backend sorted order"
        ],
        "Children": []
      },
      {
        "$id": "1053",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "custom fields edit",
        "WhenList": [],
        "ThenList": [
          "should disable edit custom fields",
          "should enable edit custom fields",
          "should enable edit custom field when work record has only country custom fields"
        ],
        "Children": []
      },
      {
        "$id": "1054",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "after work record detail controller initialized",
        "WhenList": [],
        "ThenList": [
          "should ensure vm.workRecord.assignments has correct default value",
          "should get service status",
          "showConfirmDeletion should be set to false",
          "should get need warn consents",
          "should descending sort notes by create date",
          "should not forbid view restricted information",
          "should initialize no filing requirement",
          "should init variables related to page section as collapse",
          "should init showQuestionnaire as false when workrecord's organizer status is submitted",
          "should init showQuestionnaire as true when workrecord's organizer status is not submitted",
          "should not show service evaluation section when work record is social security other compliance",
          "should init missing info comment for client when has comment"
        ],
        "Children": [
          {
            "$id": "1055",
            "FileName": "work-record-detail-controller-spec.js",
            "Description": "engagement evaluation settings should be take effect",
            "WhenList": [],
            "ThenList": [
              "should be able to show service evaluation when practice type valid"
            ],
            "Children": []
          },
          {
            "$id": "1056",
            "FileName": "work-record-detail-controller-spec.js",
            "Description": "setShowConfirmDeletion",
            "WhenList": [],
            "ThenList": [
              "should set to true if showConfirmDeletion is false",
              "should set to false if showConfirmDeletion is true"
            ],
            "Children": []
          },
          {
            "$id": "1057",
            "FileName": "work-record-detail-controller-spec.js",
            "Description": "load service evaluation",
            "WhenList": [],
            "ThenList": [
              "should load evaluation if work record type is tax return",
              "should not load evaluation if work record type is tax other compliance",
              "should not load evaluation if work record type is social security other compliance"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1058",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "when load immigration application work record",
        "WhenList": [],
        "ThenList": [
          "should be able to get correct assignment data",
          "should transform expiryDate",
          "should use multiple responsibility dialog when load immigration application work record with additional service",
          "should use original responsibility dialog when load immigration application work record with no additional service"
        ],
        "Children": []
      },
      {
        "$id": "1059",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "after work record detail controller initialized as not has pii flag link",
        "WhenList": [],
        "ThenList": [
          "should forbid view restricted information"
        ],
        "Children": []
      },
      {
        "$id": "1060",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "consents warning",
        "WhenList": [],
        "ThenList": [
          "should return empty array when tax work record and no consent need to be signed",
          "should return fror consent when tax work record and fror consent answers yes",
          "should not return Consent7216 if it's not signed",
          "should return undefined need warn consents when immigration work record",
          "should return fror consent only when fror consent answers yes"
        ],
        "Children": []
      },
      {
        "$id": "1061",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "history items",
        "WhenList": [],
        "ThenList": [
          "should ensure vm.workRecord.history.type has correct default value",
          "should ensure workRecord.missingInfoHistories.type has correct default value",
          "should sort history items by creation date desc",
          "should sort missingItem history items by creation date desc",
          "should add missingItemsNotified to history when history type is missingItemsNotified"
        ],
        "Children": []
      },
      {
        "$id": "1062",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "delete",
        "WhenList": [],
        "ThenList": [
          "should navigate back when delete work record successful",
          "should pop up error message when delete work record failed"
        ],
        "Children": []
      },
      {
        "$id": "1063",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "workMilestoneStyle",
        "WhenList": [],
        "ThenList": [
          "should return 'completed' as class name when milestone is completed",
          "should return 'completed last-completed' as class name when milestone is completed",
          "should return 'not-started' as class name when milestone is not started",
          "should show clock ico when milestone is current milestone and only one task is started",
          "should show clock ico when milestone is current milestone and only one task is completed",
          "should show current ico when milestone is current milestone and no task is completed or started"
        ],
        "Children": []
      },
      {
        "$id": "1064",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "onUpdate",
        "WhenList": [],
        "ThenList": [
          "should show notify missing item activity in the missing item history"
        ],
        "Children": []
      },
      {
        "$id": "1065",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "custom fields section show function",
        "WhenList": [],
        "ThenList": [
          "should return true when work record has custom field",
          "should return false when work record has no custom field",
          "should return true when work record has country custom field",
          "should return false when work record has no country custom field"
        ],
        "Children": []
      },
      {
        "$id": "1066",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "edit work record detail button",
        "WhenList": [],
        "ThenList": [
          "should enable edit button when work record has edit link",
          "should disable edit button when work record does not have edit link"
        ],
        "Children": []
      },
      {
        "$id": "1067",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "edit immigratioln service specifics button",
        "WhenList": [],
        "ThenList": [
          "should enable edit button when work record has edit link",
          "should disable edit button when work record does not have edit link"
        ],
        "Children": []
      },
      {
        "$id": "1068",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "tax equalization section",
        "WhenList": [],
        "ThenList": [
          "should display tax equalization section if tax work record and teq not empty",
          "should display tax equalization download link if teq has related file",
          "should not display tax equalization section if teq is empty",
          "should hide tax equalization section if the work record is not tax",
          "should not expand tax equalization section by default",
          "should transform tax equalization data for the view"
        ],
        "Children": []
      },
      {
        "$id": "1069",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "create tax equalization section for us",
        "WhenList": [],
        "ThenList": [
          "should display tax equalization create section if tax work record and teq is empty",
          "should display tax equalization create section if tax work record and teq is empty and work record type is Other Compliance",
          "should not display tax equalization create section if tax work record type not in (Tax Return, Other Compliance)",
          "should not display create tax equalization section if teq is not empty",
          "should hide create tax equalization section if the work record responsible office is not in US",
          "should not expand create tax equalization section by default"
        ],
        "Children": []
      },
      {
        "$id": "1070",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "service evaluation",
        "WhenList": [],
        "ThenList": [
          "should disable edit button when work record does not have edit link",
          "should show questions when evaluation was submitted",
          "should not show questions when evaluation was not submitted"
        ],
        "Children": []
      },
      {
        "$id": "1071",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "tax return downloader reminder",
        "WhenList": [],
        "ThenList": [
          "should show tax return downloader reminder when work record has tax reminder link",
          "should not show tax return downloader reminder when work record has no tax reminder link",
          "should send request to change reminder status when toggle clicked"
        ],
        "Children": []
      },
      {
        "$id": "1072",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "control work record detail table column",
        "WhenList": [],
        "ThenList": [
          "should can add column",
          "should can not add column"
        ],
        "Children": []
      },
      {
        "$id": "1073",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "immigration service milestone",
        "WhenList": [],
        "ThenList": [
          "should show service milestone section if additional service exists",
          "should not show service milestone section if additional service doesn't exist",
          "should expand workrecord milestone and collapse service milestone when work record is 'Initiation'",
          "should expand workrecord milestone and collapse service milestone when work record is 'Assessment'",
          "should expand workrecord milestone and expand service milestone when work record is in 'In Progress'",
          "should expand workrecord milestone and expand service milestone when work record is in 'Post Work'",
          "should display service milestone section after adding one new addtional service to workrecord",
          "should not display service milestone section after removing all addtional services on workrecord",
          "should expand work record milestone section if move service milestone will change immigration work record to 'Post Work' milestone",
          "should expand work record service milestone section if move work record milestone to 'In Progress'",
          "should keep work record expand/collapse behavior when user edit other sections on work record"
        ],
        "Children": []
      },
      {
        "$id": "1074",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "assignee immigration document",
        "WhenList": [],
        "ThenList": [
          "should not enable edit document info",
          "should enable edit document info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1075",
    "FileName": "work-record-detail-controller-spec.js",
    "Description": "Edit Estimated Completion Date",
    "WhenList": [],
    "ThenList": [
      "should not show estimated completion date on dialog if not set",
      "should show estimated completion date on dialog",
      "should not update date when cancel",
      "should update date when save"
    ],
    "Children": [
      {
        "$id": "1076",
        "FileName": "work-record-detail-controller-spec.js",
        "Description": "Display Employer Return Info",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "1077",
    "FileName": "work-record-employer-return-controller-spec.es6",
    "Description": "work record employer return controller",
    "WhenList": [],
    "ThenList": [
      "should be able to send notification when have send notification link"
    ],
    "Children": [
      {
        "$id": "1078",
        "FileName": "work-record-employer-return-controller-spec.es6",
        "Description": "show",
        "WhenList": [],
        "ThenList": [
          "initialize",
          "should show warning box when status is rejected",
          "should not show employer return section when not having uploaded employer return file",
          "should show employer return section when have uploaded employer return file"
        ],
        "Children": []
      },
      {
        "$id": "1079",
        "FileName": "work-record-employer-return-controller-spec.es6",
        "Description": "edit",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1080",
            "FileName": "work-record-employer-return-controller-spec.es6",
            "Description": "initialize",
            "WhenList": [],
            "ThenList": [
              "should employer info"
            ],
            "Children": []
          },
          {
            "$id": "1081",
            "FileName": "work-record-employer-return-controller-spec.es6",
            "Description": "change employer status",
            "WhenList": [],
            "ThenList": [
              "clear decidedBy and decisionDate when changed status to new",
              "decisionDate should be user current local date when changed status to approved"
            ],
            "Children": []
          },
          {
            "$id": "1082",
            "FileName": "work-record-employer-return-controller-spec.es6",
            "Description": "cancel",
            "WhenList": [],
            "ThenList": [
              "should clear changes made before"
            ],
            "Children": []
          },
          {
            "$id": "1083",
            "FileName": "work-record-employer-return-controller-spec.es6",
            "Description": "save",
            "WhenList": [],
            "ThenList": [
              "should save with info modified"
            ],
            "Children": []
          },
          {
            "$id": "1084",
            "FileName": "work-record-employer-return-controller-spec.es6",
            "Description": "deleting",
            "WhenList": [],
            "ThenList": [
              "should send delete request when click pop up yes button"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1085",
        "FileName": "work-record-employer-return-controller-spec.es6",
        "Description": "no client users",
        "WhenList": [],
        "ThenList": [
          "should not do split when decidedByName is null"
        ],
        "Children": []
      },
      {
        "$id": "1086",
        "FileName": "work-record-employer-return-controller-spec.es6",
        "Description": "send notification",
        "WhenList": [],
        "ThenList": [
          "should send notification when click pop up send btn",
          "should show error message when failed to send notification"
        ],
        "Children": []
      },
      {
        "$id": "1087",
        "FileName": "work-record-employer-return-controller-spec.es6",
        "Description": "download link",
        "WhenList": [],
        "ThenList": [
          "should not show download button if no download link exists",
          "should show download button if download link exists"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1088",
    "FileName": "work-record-employer-return-notification-controller-spec.es6",
    "Description": "employer return notification controller",
    "WhenList": [],
    "ThenList": [
      "clear fromStaff when email office changed",
      "should change from email to be staff email when staff changed"
    ],
    "Children": [
      {
        "$id": "1089",
        "FileName": "work-record-employer-return-notification-controller-spec.es6",
        "Description": "init",
        "WhenList": [],
        "ThenList": [
          "load all work offices when team mail box office is not same with work record responsible office",
          "should load work record responsible office when team mail box office is same with work record responsible office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1090",
    "FileName": "work-record-engagement-custom-field-edit-controller-spec.js",
    "Description": "WorkRecordEngagementCustomFieldEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1091",
        "FileName": "work-record-engagement-custom-field-edit-controller-spec.js",
        "Description": "When on edit custom field section",
        "WhenList": [],
        "ThenList": [
          "should get custom field copy when controller load over",
          "can edit restricted custom field once it is a restricted cf and work record has corresponding edit link",
          "should update custom field for work record after click 'save'"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1092",
    "FileName": "work-record-milestone-controller-spec.es6",
    "Description": "work record milestone controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1093",
        "FileName": "work-record-milestone-controller-spec.es6",
        "Description": "when milestone",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1094",
            "FileName": "work-record-milestone-controller-spec.es6",
            "Description": "with verified assignee",
            "WhenList": [],
            "ThenList": [
              "should get isCurrentMilestone",
              "should isAutoCompleted if have any auto completed tasks.",
              "should not isAutoCompleted if don't have any auto completed tasks.",
              "send put request when save",
              "should enable save button when save milestone failed",
              "should use previous milestone complete date when current milestone task complete date is same as it but time is earlier than it",
              "should not use previous milestone complete date when current milestone task complete date is today",
              "should not use previous milestone complete date when current milestone task complete date is today"
            ],
            "Children": []
          },
          {
            "$id": "1095",
            "FileName": "work-record-milestone-controller-spec.es6",
            "Description": "with unverified assignee",
            "WhenList": [],
            "ThenList": [
              "should popup verify confirm dialog when click save and milestone in complete status"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1096",
        "FileName": "work-record-milestone-controller-spec.es6",
        "Description": "getPreviousMilestoneLocalDate",
        "WhenList": [],
        "ThenList": [
          "should return null when get previous milestone date at first milestone",
          "should return null when current task has been crossed out",
          "should return null when validate initiated milestone",
          "should return null when current milestone is initiated milestone",
          "should return previous milestone date when get previous milestone date not at first milestone",
          "should return date with iso date format(no matter what the account setting is)"
        ],
        "Children": []
      },
      {
        "$id": "1097",
        "FileName": "work-record-milestone-controller-spec.es6",
        "Description": "moveBack",
        "WhenList": [],
        "ThenList": [
          "should move current milestone to previous one",
          "should move current milestone to previous one for immigration application"
        ],
        "Children": []
      },
      {
        "$id": "1098",
        "FileName": "work-record-milestone-controller-spec.es6",
        "Description": "canMoveBack",
        "WhenList": [],
        "ThenList": [
          "should return false when current milestone does not have move milestone back resource link",
          "should return true when current milestone is the last milestone of a work record and has move milestone back resource link",
          "should return false when current milestone is 30 and W/R is online briefing W/R"
        ],
        "Children": []
      },
      {
        "$id": "1099",
        "FileName": "work-record-milestone-controller-spec.es6",
        "Description": "immigration application work record",
        "WhenList": [],
        "ThenList": [
          "can move back ",
          "can not add revision task "
        ],
        "Children": []
      },
      {
        "$id": "1100",
        "FileName": "work-record-milestone-controller-spec.es6",
        "Description": "Sequential task",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1101",
            "FileName": "work-record-milestone-controller-spec.es6",
            "Description": "canEdit()",
            "WhenList": [],
            "ThenList": [
              "should can edit when work record is immigration",
              "should can edit any task if work record type is general immigration",
              "should can edit any task include revision task if work record type is general immigration",
              "should can only edit the first task if work record type is immigration application",
              "should can edit when task is the first one",
              "should can edit when task is the first one",
              "should can not edit when there is any revision task created",
              "should can not edit when there is any revision task unfinished"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1102",
        "FileName": "work-record-milestone-controller-spec.es6",
        "Description": "pop up reminder for out of scope work",
        "WhenList": [],
        "ThenList": [
          "should pop up reminder when the milestone completed",
          "should not pop up reminder when the milestone not completed",
          "should not pop up reminder when move milestone back",
          "should pop up when milestone 'Service Initiated' completed",
          "should pop up when milestone 'In Preparation' completed",
          "should pop up when milestone 'In Review' completed",
          "should pop up when milestone 'Delivered' completed",
          "should not pop up when milestone 'Complete' completed"
        ],
        "Children": [
          {
            "$id": "1103",
            "FileName": "work-record-milestone-controller-spec.es6",
            "Description": "when work record type is Certificate of Coverage",
            "WhenList": [],
            "ThenList": [
              "should pop up when milestone 'Initiated' completed",
              "should pop up when milestone 'Information Request Issued' completed",
              "should pop up when milestone 'In Preparation' completed",
              "should pop up when milestone 'Submitted to Authorities' completed",
              "should not pop up when milestone 'Certificate Received' completed"
            ],
            "Children": []
          },
          {
            "$id": "1104",
            "FileName": "work-record-milestone-controller-spec.es6",
            "Description": "when work record type is online briefing",
            "WhenList": [],
            "ThenList": [
              "should not pop up when milestone 'Notify' completed",
              "should not pop up when milestone 'Schedule' completed",
              "should pop up when milestone 'Complete' completed",
              "should pop up when milestone 'Post Work' completed"
            ],
            "Children": []
          },
          {
            "$id": "1105",
            "FileName": "work-record-milestone-controller-spec.es6",
            "Description": "when work record type is offline briefing",
            "WhenList": [],
            "ThenList": [
              "should pop up when milestone 'Notify' completed",
              "should pop up when milestone 'Schedule' completed",
              "should pop up when milestone 'Complete' completed",
              "should pop up when milestone 'Post Work' completed"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1106",
        "FileName": "work-record-milestone-controller-spec.es6",
        "Description": "when show task dialogue for immigration application work record",
        "WhenList": [],
        "ThenList": [
          "should not show task dialog for in-progress"
        ],
        "Children": []
      },
      {
        "$id": "1107",
        "FileName": "work-record-milestone-controller-spec.es6",
        "Description": "when work record is tax",
        "WhenList": [],
        "ThenList": [
          "should not block move milestone when has any missing item"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1108",
    "FileName": "work-record-milestone-responsibility-update-controller-spec.js",
    "Description": "WorkRecordMilestoneResponsibilityUpdateController",
    "WhenList": [],
    "ThenList": [
      "should set offices tag to empty if assignment's office removed from engagements ",
      "should ignore auto completed milestone.",
      "should set offices tag to empty if check list's office removed from engagements ",
      "should not update original work record if clicked cancel",
      "should setup tag options for milestone task",
      "should initialize tag for milestone task",
      "should setup tag options for check list item",
      "should initialize tag for check list item",
      "should update original work record if clicked save",
      "should include tasks that the responsible office or responsibility is empty in the update request",
      "should disable inputs when all work record milestones are complete",
      "should not disable inputs when all work record milestones are start",
      "should disable inputs when checklist task finished or crossed out",
      "should disable inputs when sofia does not have permission",
      "should be able to change responsible office and assigned staff"
    ],
    "Children": [
      {
        "$id": "1109",
        "FileName": "work-record-milestone-responsibility-update-controller-spec.js",
        "Description": "save button",
        "WhenList": [],
        "ThenList": [
          "should enable save button when work record has edit link",
          "should disable save button when work record doesnot have edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1110",
    "FileName": "work-record-milestone-task-controller-spec.js",
    "Description": "work record milestone task controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1111",
        "FileName": "work-record-milestone-task-controller-spec.js",
        "Description": "for created task",
        "WhenList": [],
        "ThenList": [
          "should transform task of work record when loaded"
        ],
        "Children": []
      },
      {
        "$id": "1112",
        "FileName": "work-record-milestone-task-controller-spec.js",
        "Description": "for finished task",
        "WhenList": [],
        "ThenList": [
          "should transform task of work record when loaded"
        ],
        "Children": []
      },
      {
        "$id": "1113",
        "FileName": "work-record-milestone-task-controller-spec.js",
        "Description": "for crossOuted task",
        "WhenList": [],
        "ThenList": [
          "should transform task of work record when loaded"
        ],
        "Children": []
      },
      {
        "$id": "1114",
        "FileName": "work-record-milestone-task-controller-spec.js",
        "Description": "task",
        "WhenList": [],
        "ThenList": [
          "should be cleared when reset task"
        ],
        "Children": []
      },
      {
        "$id": "1115",
        "FileName": "work-record-milestone-task-controller-spec.js",
        "Description": "for sequential task",
        "WhenList": [],
        "ThenList": [
          "should can only edit the first task if work record type is immigration application",
          "should can only edit the revision task if there is one and work record type is immigration application"
        ],
        "Children": []
      },
      {
        "$id": "1116",
        "FileName": "work-record-milestone-task-controller-spec.js",
        "Description": "block task completion",
        "WhenList": [],
        "ThenList": [
          "could complete service task when have any service missing item but, the task is not the last in current milestone",
          "should block moving service milestone when task is last but have any work record missing item",
          "could not complete service task when have any service missing item but, the task is the last in current milestone"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1117",
    "FileName": "work-record-missing-information-add-controller-spec.js",
    "Description": "WorkRecordMissingInformationAddControllerSpec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1118",
        "FileName": "work-record-missing-information-add-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should post all criteria when search tax return work records",
          "should not post tax year when search social security work records",
          "should post all criteria when search tax work record choose any in work record type and office and year",
          "should post all criteria when search Social Security  work record choose any in office and year"
        ],
        "Children": []
      },
      {
        "$id": "1119",
        "FileName": "work-record-missing-information-add-controller-spec.js",
        "Description": "when click search result",
        "WhenList": [],
        "ThenList": [
          "should go to work record details page",
          "should show error message when work record is from restricted assignee and staff cannot view work record",
          "should show error message when work record is from restricted assignee and staff can view work record"
        ],
        "Children": []
      },
      {
        "$id": "1120",
        "FileName": "work-record-missing-information-add-controller-spec.js",
        "Description": "when click add button",
        "WhenList": [],
        "ThenList": [
          "should disable add button when selected from PwC until responsible office is selected",
          "should post add request when missing from Client",
          "should post add request when missing from PwC",
          "should post add request when description input script",
          "should go to search criteria page after add missing information"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1121",
    "FileName": "work-record-missing-information-search-controller-spec.js",
    "Description": "WorkRecordMissingInformationSearchControllerSpec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1122",
        "FileName": "work-record-missing-information-search-controller-spec.js",
        "Description": "when init",
        "WhenList": [],
        "ThenList": [
          "should init practice type options to have only Tax and Social Security",
          "should init workrecord type options base on practice type given first practice type is Tax.",
          "should init workrecord type options base on practice type given first practice type is social security."
        ],
        "Children": []
      },
      {
        "$id": "1123",
        "FileName": "work-record-missing-information-search-controller-spec.js",
        "Description": "when engagement changed",
        "WhenList": [],
        "ThenList": [
          "should distinct offices when engagement changed",
          "should set practice type according to engagement practice type when engagement is changed",
          "should not change the practice type when selected engagement is undefined"
        ],
        "Children": []
      },
      {
        "$id": "1124",
        "FileName": "work-record-missing-information-search-controller-spec.js",
        "Description": "when practice type changed",
        "WhenList": [],
        "ThenList": [
          "should clear engagement when practice type is changed",
          "should change workrecord type when practice type is changed",
          "should change workrecord type when practice type is changed back to tax from social security",
          "should clear tax year when practice type is changed to social security"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1125",
    "FileName": "work-record-missing-items-controller-spec.js",
    "Description": "new missing item controller",
    "WhenList": [],
    "ThenList": [
      "receive date should later than since date",
      "receive date should early than today",
      "should be valid when receive date is correct",
      "newmissingitem should be valid if all field valid, or invalid if any field invalid",
      "should update the page after click save button",
      "should update the page after click delete button",
      "should update description of missing info after saving description",
      "should show edit button when the user has the edit permission",
      "should not show edit button when user is editing receive date",
      "should show Mark As Received button when the user has the receive permission",
      "should not show Mark As Received button when the user is editing received date",
      "sends save request and updates the page",
      "should not change missing item from assignee to pwc after change 'item from'from pwc to assignee",
      "should able to send a email for missing items when link is available",
      "should send email with missing item information",
      "should display Received and Delete only when link is available"
    ],
    "Children": []
  },
  {
    "$id": "1126",
    "FileName": "work-record-names-criteria-controller-spec.js",
    "Description": "work record names criteria controller",
    "WhenList": [],
    "ThenList": [
      "should initialize scope default search criteria",
      "should set organzier status when criteria has organizer current status",
      "should set organizer status when criteria has work milestone current status",
      "should update current status when changing work record type",
      "should load current status when changing practice type",
      "should init scope as default values",
      "should distinct offices when engagement changed",
      "should distinct offices when engagement change to undefined",
      "should set practice type according to engagement practice type when engagement is changed",
      "should not change the set practice type when selected engagement is undefined",
      "should load work record type when changing practice type",
      "should clear criteria when practice type is changed",
      "should initialize options based on practice type",
      "should initialize options when change practice type to Immigration",
      "should load teams when responsible office is changed",
      "should reset criteria.team when responsible office is changed",
      "should clear criteria.team and scope.teams when responsible office is set to null",
      "should reset responsible office to current user office when engagement changed"
    ],
    "Children": []
  },
  {
    "$id": "1127",
    "FileName": "work-record-names-search-controller-spec.js",
    "Description": "WorkRecordNamesSearchController",
    "WhenList": [],
    "ThenList": [
      "should return true if staff office is work record milestone responsible office",
      "should return true if staff office is work record responsible office",
      "should return false if staff office is not work record responsible office and not milestone responsible office"
    ],
    "Children": []
  },
  {
    "$id": "1128",
    "FileName": "work-record-questionnaire-search-controller-spec.js",
    "Description": "WorkRecordQuestionnaireSearchController",
    "WhenList": [],
    "ThenList": [
      "should not forbid if organizer status is created and staff is allowed to do so",
      "should forbid if staff office is not in engagement responsible offices",
      "should not forbid if staff office is engagement subscribed office",
      "should forbid if work record has no organizer",
      "should forbid if organizer status is not created"
    ],
    "Children": []
  },
  {
    "$id": "1129",
    "FileName": "work-record-search-service-spec.js",
    "Description": "workRecordSearchService",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1130",
        "FileName": "work-record-search-service-spec.js",
        "Description": "getSearchCriteria",
        "WhenList": [],
        "ThenList": [
          "should init current status as record created when organizer status is created",
          "should init current status as notified when organizer status is notified",
          "should init current status as service initiated when work status is service initiated"
        ],
        "Children": []
      },
      {
        "$id": "1131",
        "FileName": "work-record-search-service-spec.js",
        "Description": "should init search work record for evaluation",
        "WhenList": [],
        "ThenList": [
          "should init search work record criteria before search",
          "should create criteria with evaluationEnabled and vipOnly when both are false for search"
        ],
        "Children": []
      },
      {
        "$id": "1132",
        "FileName": "work-record-search-service-spec.js",
        "Description": "should build work record search request with team",
        "WhenList": [],
        "ThenList": [
          "should create simple criteria parameter with team",
          "should not have teamUri in actual criteria if criteria.team is null",
          "should create criteria parameter with team",
          "should not have teamUri in actual criteria if criterai.team is null",
          "should not have teamUri in actual criteria if criterai.responsibleOffice is null"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1133",
    "FileName": "work-record-section-edit-controller-spec.js",
    "Description": "WorkRecordSectionEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1134",
        "FileName": "work-record-section-edit-controller-spec.js",
        "Description": "update responsible office",
        "WhenList": [],
        "ThenList": [
          "should set up responsible office options",
          "should change team options when changing responsible office"
        ],
        "Children": []
      },
      {
        "$id": "1135",
        "FileName": "work-record-section-edit-controller-spec.js",
        "Description": "tax work record",
        "WhenList": [],
        "ThenList": [
          "should update work record basic info",
          "should update service status"
        ],
        "Children": [
          {
            "$id": "1136",
            "FileName": "work-record-section-edit-controller-spec.js",
            "Description": "with organizer",
            "WhenList": [],
            "ThenList": [
              "should initialize no filing requirement on view model",
              "should update no filing requirement",
              "should not update no filing requirement when questionnaire is not submitted",
              "should not update no filing requirement when service status is not no issues",
              "should be able to update no filing requirement when service status is no issues",
              "should reset no filing requirement when change service status",
              "should not error no filing requirement when change service status and not have organizer",
              "should update isEfileConsentOn"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1137",
        "FileName": "work-record-section-edit-controller-spec.js",
        "Description": "immigration work record",
        "WhenList": [],
        "ThenList": [
          "should get service status options for immigration",
          "should update immigration work record detail",
          "should update immigration work record service specifics"
        ],
        "Children": []
      },
      {
        "$id": "1138",
        "FileName": "work-record-section-edit-controller-spec.js",
        "Description": "work record with assignment",
        "WhenList": [],
        "ThenList": [
          "should update assignment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1139",
    "FileName": "work-record-send-questionnaire-criteria-controller-spec.js",
    "Description": "work record send questionnaires criteria controller",
    "WhenList": [],
    "ThenList": [
      "should initialize scope default search criteria",
      "should return practice type without social security",
      "should disable form and show prompt message when current user is social security only",
      "should init scope as default values",
      "should distinct offices when engagement changed",
      "should distinct offices when engagement change to undefined",
      "should set practice type according to engagement practice type when engagement is changed",
      "should not change the set practice type when selected engagement is undefined",
      "should clear criteria when practice type is changed",
      "should load work record type when changing practice type",
      "should load teams when responsible office is changed",
      "should reset criteria.team when responsible office is changed",
      "should clear criteria.team and scope.teams when responsible office is set to null",
      "should reset responsible office to current user office when engagement changed"
    ],
    "Children": []
  },
  {
    "$id": "1140",
    "FileName": "work-record-service-evaluation-comment-controller-spec.js",
    "Description": "work record service evaluation comment controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1141",
        "FileName": "work-record-service-evaluation-comment-controller-spec.js",
        "Description": "init",
        "WhenList": [],
        "ThenList": [
          "should initialize action of evaluation comment to \"show\""
        ],
        "Children": []
      },
      {
        "$id": "1142",
        "FileName": "work-record-service-evaluation-comment-controller-spec.js",
        "Description": "create",
        "WhenList": [],
        "ThenList": [
          "should validate whether text area has content before save",
          "adding evaluation comment request should be sent when click save"
        ],
        "Children": []
      },
      {
        "$id": "1143",
        "FileName": "work-record-service-evaluation-comment-controller-spec.js",
        "Description": "update",
        "WhenList": [],
        "ThenList": [
          "should keep original content when click \"edit\", change content and click \"cancel\"",
          "should show warning message if text area is empty before save modification",
          "update request should be sent when click save under edit mode"
        ],
        "Children": []
      },
      {
        "$id": "1144",
        "FileName": "work-record-service-evaluation-comment-controller-spec.js",
        "Description": "delete",
        "WhenList": [],
        "ThenList": [
          "should change comment status to \"delete\" when click delete",
          "delete request should be sent when click delete"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1145",
    "FileName": "work-record-service-evaluation-edit-controller-spec.js",
    "Description": "WorkRecordServiceEvaluationEditController",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1146",
        "FileName": "work-record-service-evaluation-edit-controller-spec.js",
        "Description": "when on edit service evaluation section",
        "WhenList": [],
        "ThenList": [
          "should update service evaluation template",
          "should ignore template updating when update service evaluation to disabled",
          "should not send request when work record has service evaluation and keep disabled",
          "should not send request when work record does not have service evaluation and keep disabled",
          "should only send update reminder request when cannot update evaluation",
          "should not send update request when does not has permission",
          "should set status to off when isEnabled is false",
          "should set status to not sent when isEnabled is true"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1147",
    "FileName": "work-record-service-milestone-controller-spec.es6",
    "Description": "WorkRecordServiceMilestoneController Specs",
    "WhenList": [],
    "ThenList": [
      "should not show done milestone",
      "should save immigration application documents",
      "should save immigration application when expiry date is not available",
      "should return false when milestone name is not equal to application current service milestone"
    ],
    "Children": [
      {
        "$id": "1148",
        "FileName": "work-record-service-milestone-controller-spec.es6",
        "Description": "when initialize",
        "WhenList": [],
        "ThenList": [
          "should get empty array when serviceMilestoneNames for empty immigrationApplications",
          "should copy to editingImmigrationApplications from vm.workRecord.immigrationApplications"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1149",
    "FileName": "work-record-single-create-controller-spec.es6",
    "Description": "WorkRecordSingleCreateController initialize",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1150",
        "FileName": "work-record-single-create-controller-spec.es6",
        "Description": "when predefined assignee",
        "WhenList": [],
        "ThenList": [
          "should not allowed to change assignee when create assignee work record",
          "should setup view data",
          "should filter technology type before system supports it",
          "should load staff served assignees when new-single-create-wr",
          "should change engagement when assignee selected"
        ],
        "Children": []
      },
      {
        "$id": "1151",
        "FileName": "work-record-single-create-controller-spec.es6",
        "Description": "when no predefined assignee selected",
        "WhenList": [],
        "ThenList": [
          "should show assignee after initialize",
          "should trigger custom field change when selected engagement change",
          "should be Tax when non-engagement selected",
          "should trigger practice type change when selected engagement change",
          "should trigger assignments change when selected engagement change",
          "should disable 'Create' button if any mandatory field is NOT filled",
          "should setup work record type when has selected engagement"
        ],
        "Children": []
      },
      {
        "$id": "1152",
        "FileName": "work-record-single-create-controller-spec.es6",
        "Description": "initialize work record basic",
        "WhenList": [],
        "ThenList": [
          "should set Today as serviceRequestReceivedOn"
        ],
        "Children": []
      },
      {
        "$id": "1153",
        "FileName": "work-record-single-create-controller-spec.es6",
        "Description": "preselect BriefingMethods",
        "WhenList": [],
        "ThenList": [
          "should preselect briefing methods from selected responsible office when workRecordTypeChanged",
          "should preselect briefing methods from selected responsible office when responsibleOfficeChanged"
        ],
        "Children": []
      },
      {
        "$id": "1154",
        "FileName": "work-record-single-create-controller-spec.es6",
        "Description": "create",
        "WhenList": [],
        "ThenList": [
          "should request year to backend"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1155",
    "FileName": "work-record-single-create-controller-spec.es6",
    "Description": "cancel",
    "WhenList": [],
    "ThenList": [
      "should go back to service history page when click cancel on new single create",
      "should go back to workrecords list page when click cancel on new single create"
    ],
    "Children": []
  },
  {
    "$id": "1156",
    "FileName": "work-record-single-create-controller-spec.es6",
    "Description": "Questionnaire",
    "WhenList": [],
    "ThenList": [
      "should require briefing method if selected scheduling method is Online Scheduler",
      "should initially select scheduling method as By Phone"
    ],
    "Children": [
      {
        "$id": "1157",
        "FileName": "work-record-single-create-controller-spec.es6",
        "Description": "team mail box",
        "WhenList": [],
        "ThenList": [
          "should disable questionnaire contact field when contact office has team mailbox",
          "should be able to select contact when contact office does not have team mail box but responsible office has team mail box"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1158",
    "FileName": "work-record-task-to-do-list-controller-spec.js",
    "Description": "work record task to-do-list controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1159",
        "FileName": "work-record-task-to-do-list-controller-spec.js",
        "Description": "initialize",
        "WhenList": [],
        "ThenList": [
          "should load workrecord task todo items",
          "should get milestone name base on workrecord type",
          "should contain work record type in uri when selected work record type has value"
        ],
        "Children": []
      },
      {
        "$id": "1160",
        "FileName": "work-record-task-to-do-list-controller-spec.js",
        "Description": "mark item as urgent",
        "WhenList": [],
        "ThenList": [
          "should mark work record todo item as urgent when it has not been marked as urgent",
          "should un-mark work record todo item as urgent when it has been marked as urgent"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1161",
    "FileName": "date-before-after-spec.js",
    "Description": "data after directive",
    "WhenList": [],
    "ThenList": [
      "should be valid when the reference value not defined"
    ],
    "Children": [
      {
        "$id": "1162",
        "FileName": "date-before-after-spec.js",
        "Description": "inputDateAfter spec",
        "WhenList": [],
        "ThenList": [
          "should be valid if date is after model data",
          "should be valid if date is same of model data",
          "should be invalid if date is before model data",
          "should be valid if view model is null"
        ],
        "Children": []
      },
      {
        "$id": "1163",
        "FileName": "date-before-after-spec.js",
        "Description": "when there are two dateAfter dependence",
        "WhenList": [],
        "ThenList": [
          "should be valid only when two dateAfter dependence are before the date of current date in ISO-8601 DATE&TIME format",
          "should be valid only when two dateAfter dependence are before the date of current date in ISO-8601 DATE format"
        ],
        "Children": []
      },
      {
        "$id": "1164",
        "FileName": "date-before-after-spec.js",
        "Description": "when model is in ISO-8601 DATE&TIME format",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input date is equal previous date",
          "should be invalid when input date is older than previous date",
          "should be valid when the value of the afterDate is changed before the model date"
        ],
        "Children": []
      },
      {
        "$id": "1165",
        "FileName": "date-before-after-spec.js",
        "Description": "when model is in ISO-8601 DATE format",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input date is older than previous date",
          "should be invalid when input date equal to previous date",
          "should be valid when the value of the afterDate is changed before the model date"
        ],
        "Children": []
      },
      {
        "$id": "1166",
        "FileName": "date-before-after-spec.js",
        "Description": "when model date list have duplicate date",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input date already exist in date list",
          "should be valid when input date not exist in date list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1167",
    "FileName": "date-local-to-utc-spec.js",
    "Description": "transform local date to utc datetime",
    "WhenList": [],
    "ThenList": [
      "should transform utc date time to local date to display as user format",
      "should parse local date to utc date with 12:00:00 if not today",
      "should parse local date to utc date with now when set date to today",
      "should reset model to original value when change date back",
      "should reset model to original value when original is today change date back",
      "should accept extra values value when extra-date-values option enabled"
    ],
    "Children": []
  },
  {
    "$id": "1168",
    "FileName": "my-date-spec.js",
    "Description": "transform date form user format to ISO format",
    "WhenList": [],
    "ThenList": [
      "should transform date time to date to display as user format",
      "should transform null date time to date to display as empty",
      "should set invalid and not transform to model",
      "should set invalid when input invalid string",
      "should should accept user input 0 as month and day",
      "should set invalid when input has logic issue, but user input error",
      "should accept extra values value when extra-date-values option enabled"
    ],
    "Children": []
  },
  {
    "$id": "1169",
    "FileName": "tiger-future-date-spec.js",
    "Description": "tiger future date",
    "WhenList": [],
    "ThenList": [
      "should be valid when input date is not local date and previous value is older than today",
      "should be valid when input date with shorter format",
      "should be valid when input date with complete format",
      "should be invalid when current user input invalid string",
      "should be invalid when input date's format doesn't match with current user's date format"
    ],
    "Children": [
      {
        "$id": "1170",
        "FileName": "tiger-future-date-spec.js",
        "Description": "used for date without timezone",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input date is older than today",
          "should be valid when input date is today",
          "should be valid when input date doesn't change and previous value is older than today",
          "should be valid when input date is empty"
        ],
        "Children": []
      },
      {
        "$id": "1171",
        "FileName": "tiger-future-date-spec.js",
        "Description": "used for date with timezone",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input date is older than today",
          "should be valid when input date is today",
          "should be valid when input date doesn't change and previous value is older than today"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1172",
    "FileName": "tiger-past-date-spec.js",
    "Description": "tiger past date",
    "WhenList": [],
    "ThenList": [
      "should be valid when current user input invalid string"
    ],
    "Children": [
      {
        "$id": "1173",
        "FileName": "tiger-past-date-spec.js",
        "Description": "use input valid date string",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input date is earlier than today",
          "should be valid when input date is today",
          "should be valid when input date doesn't change and previous value is older than today"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1174",
    "FileName": "cascade-inactive-validation-spec.js",
    "Description": "cascadeInactiveValidation directive",
    "WhenList": [],
    "ThenList": [
      "should be valid only if status is inactive when major status is inactive",
      "should be valid when major status is active"
    ],
    "Children": []
  },
  {
    "$id": "1175",
    "FileName": "fancy-select-spec.es6",
    "Description": "fancy select",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1176",
        "FileName": "fancy-select-spec.es6",
        "Description": "default status with prompt and options are string",
        "WhenList": [],
        "ThenList": [
          "show show 'Please select' when have options but model",
          "show show 'second' when have options and model 'second'",
          "show show 'Please select' when options is empty and model 'second'",
          "show show 'Please select' without options and model"
        ],
        "Children": []
      },
      {
        "$id": "1177",
        "FileName": "fancy-select-spec.es6",
        "Description": "get prompt text by method and options are string",
        "WhenList": [],
        "ThenList": [
          "show show 'select one' when have options but model"
        ],
        "Children": []
      },
      {
        "$id": "1178",
        "FileName": "fancy-select-spec.es6",
        "Description": "without any options and model by default",
        "WhenList": [],
        "ThenList": [
          "should display 'new value' when model 'new value' set"
        ],
        "Children": []
      },
      {
        "$id": "1179",
        "FileName": "fancy-select-spec.es6",
        "Description": "group options",
        "WhenList": [],
        "ThenList": [
          "should show option title if have more than 1 group",
          "should not show option title if option's groupBy is null or undefined",
          "should not show option title if have 1 group",
          "the title option should not be able selected"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1180",
    "FileName": "mark-red-spec.es6",
    "Description": "mark red",
    "WhenList": [],
    "ThenList": [
      "should mark red correctly",
      "should not mark red when add a new item",
      "should not mark red when delete new item",
      "should return to original background color if item becomes valid"
    ],
    "Children": []
  },
  {
    "$id": "1181",
    "FileName": "multiple-emails-spec.js",
    "Description": "multiple emails",
    "WhenList": [],
    "ThenList": [
      "should return true when input valid emails",
      "should return false when input invalid emails"
    ],
    "Children": []
  },
  {
    "$id": "1182",
    "FileName": "my-dialog-spec.js",
    "Description": "dialog directive",
    "WhenList": [],
    "ThenList": [
      "should show dialog when click anchor element",
      "should also support promise config"
    ],
    "Children": []
  },
  {
    "$id": "1183",
    "FileName": "my-natural-number-spec.js",
    "Description": "my natural number widget",
    "WhenList": [],
    "ThenList": [
      "should be valid when view number is correct"
    ],
    "Children": [
      {
        "$id": "1184",
        "FileName": "my-natural-number-spec.js",
        "Description": "natural number spec",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1185",
            "FileName": "my-natural-number-spec.js",
            "Description": "view constraints",
            "WhenList": [],
            "ThenList": [
              "should be invalid when the input is a decimal number",
              "should be valid when the input is empty string",
              "should be invalid when view input is all character",
              "should be invalid when view input contains character",
              "should not support a negative number",
              "should support number with positive sign ",
              "should not support number when the number is 0"
            ],
            "Children": []
          },
          {
            "$id": "1186",
            "FileName": "my-natural-number-spec.js",
            "Description": "model constraints",
            "WhenList": [],
            "ThenList": [
              "should display empty string when model is undefined",
              "should display empty string when model is null",
              "should display empty string when model is NaN",
              "should display 0 when model value is zero",
              "should trim as integer when model value is decimal number",
              "should display zero when model value is negative number",
              "should be invalid when model value is decimal number",
              "should be invalid when model value is negative number",
              "should be valid when the model value is null or undefined",
              "should be invalid when model value is 0"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1187",
    "FileName": "my-number-spec.js",
    "Description": "my number widget",
    "WhenList": [],
    "ThenList": [
      "should be valid when view number is correct"
    ],
    "Children": [
      {
        "$id": "1188",
        "FileName": "my-number-spec.js",
        "Description": "for constraints",
        "WhenList": [],
        "ThenList": [
          "should display empty string when model is undefined",
          "should display empty string when model is null",
          "should be valid when the input is empty string",
          "should be invalid when view inputs are all character",
          "should return empty string when the model value is null",
          "should be invalid when view inputs contain character",
          "should be valid when the number precision no more than two decimal digits",
          "should be invalid when the number precision more than two decimal digits",
          "should be valid when the integer digits of number are no more than 13 ",
          "should be invalid when the integer digits of number are more than 13 ",
          "should support the negative number",
          "should support number with positive sign ",
          "should support number when the number value equals 0"
        ],
        "Children": []
      },
      {
        "$id": "1189",
        "FileName": "my-number-spec.js",
        "Description": "when integer",
        "WhenList": [],
        "ThenList": [
          "should be invalid when the input is a decimal number when only allow integer",
          "should be valid when the input is a negative integer when only allow integer",
          "should be invalid when the input is a negative decimal when only allow integer"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1190",
    "FileName": "my-required-for-sub-select-spec.js",
    "Description": "myRequiredForSubSelect validator",
    "WhenList": [],
    "ThenList": [
      "should be invalid if field is empty; should be valid if field is not empty, when myRequiredForSubSelect is ON",
      "should always be valid, when myRequiredForSubSelect is OFF",
      "should become valid when myRequiredForSubSelect is changed to OFF"
    ],
    "Children": []
  },
  {
    "$id": "1191",
    "FileName": "my-required-spec.js",
    "Description": "my required",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1192",
        "FileName": "my-required-spec.js",
        "Description": "without exp",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input is empty",
          "should valid when input is not empty",
          "should be invalid when model is array but empty",
          "should be valid when model is number but 0"
        ],
        "Children": []
      },
      {
        "$id": "1193",
        "FileName": "my-required-spec.js",
        "Description": "have exp but value is undefined",
        "WhenList": [],
        "ThenList": [
          "should valid when input is empty",
          "should valid when input is not empty"
        ],
        "Children": []
      },
      {
        "$id": "1194",
        "FileName": "my-required-spec.js",
        "Description": "have exp but value is false",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input is empty",
          "should valid when input is not empty"
        ],
        "Children": []
      },
      {
        "$id": "1195",
        "FileName": "my-required-spec.js",
        "Description": "have exp but value is true",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input is empty",
          "should valid when input is not empty"
        ],
        "Children": []
      },
      {
        "$id": "1196",
        "FileName": "my-required-spec.js",
        "Description": "change exp value after init",
        "WhenList": [],
        "ThenList": [
          "should be invalid when input is empty"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1197",
    "FileName": "my-validate-spec.es6",
    "Description": "myValidate",
    "WhenList": [],
    "ThenList": [
      "should get correct validate result",
      "should get correct validate result"
    ],
    "Children": []
  },
  {
    "$id": "1198",
    "FileName": "selected-link-actions-spec.js",
    "Description": "selected link directive",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1199",
        "FileName": "selected-link-actions-spec.js",
        "Description": "when link is selected",
        "WhenList": [],
        "ThenList": [
          "should be select first li when location getHash is 1",
          "should be select second li when location getHash is 2"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1200",
    "FileName": "sort-column-spec.js",
    "Description": "sort column when click",
    "WhenList": [],
    "ThenList": [
      "click same column twice should reverse",
      "should sort on obj field",
      "should sort on obj with filter",
      "should sort on obj field with filter",
      "should sort by default"
    ],
    "Children": []
  },
  {
    "$id": "1201",
    "FileName": "staff-email-spec.js",
    "Description": "email validation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1202",
        "FileName": "staff-email-spec.js",
        "Description": "staff email validation",
        "WhenList": [],
        "ThenList": [
          "should return invalid when did not input an email",
          "should return invalid when input an email but with wrong suffix"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1203",
    "FileName": "validate-assignment-consequences-spec.js",
    "Description": "validate assignment consequences",
    "WhenList": [],
    "ThenList": [
      "should be valid if there is no assignment data",
      "should be invalid if effective date is moved after one of current client's assignment start date",
      "should be invalid if effective date is moved before previous client's last assignment start date"
    ],
    "Children": []
  },
  {
    "$id": "1204",
    "FileName": "when-erase-directive-spec.js",
    "Description": "when erase directive",
    "WhenList": [],
    "ThenList": [
      "should execute expression when input empty",
      "should not execute expression when input has value"
    ],
    "Children": []
  },
  {
    "$id": "1205",
    "FileName": "missing-item-factory-spec.js",
    "Description": "missing item factory",
    "WhenList": [],
    "ThenList": [
      "should return a new missing item with default values",
      "should provide missing item MissingFrom options"
    ],
    "Children": []
  },
  {
    "$id": "1206",
    "FileName": "missing-item-factory-spec.js",
    "Description": "transformation from missing item to request",
    "WhenList": [],
    "ThenList": [
      "should transform engagement missing items",
      "should transform PwC (office and staff) missing items",
      "should transform PwC (office only) missing items",
      "should transform Assignee missing items",
      "should transform multiple missing items at the same time"
    ],
    "Children": [
      {
        "$id": "1207",
        "FileName": "missing-item-factory-spec.js",
        "Description": "the new item created by factory",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1208",
            "FileName": "missing-item-factory-spec.js",
            "Description": "provide function to check where the item is missing from",
            "WhenList": [],
            "ThenList": [
              "should return true when missing item is from PwC",
              "should return false when missing item is from assignee",
              "should return false when missing item is from engagement"
            ],
            "Children": []
          },
          {
            "$id": "1209",
            "FileName": "missing-item-factory-spec.js",
            "Description": "provide function to check whether the item is valid",
            "WhenList": [],
            "ThenList": [
              "should return true when missing item is from engagement with description and start date",
              "should return true when missing item is from assignee with description and start date",
              "should return false when description of missing item is empty",
              "should return false when since date of missing item is empty",
              "should return false when source of missing item is empty",
              "should be invalid when the missing item is from PwC and the responsible office is null",
              "should be valid when the missing item is from PwC and the responsible office is set but the responsibility is null"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1210",
        "FileName": "missing-item-factory-spec.js",
        "Description": "receive missing item",
        "WhenList": [],
        "ThenList": [
          "should transform missing item(s) to request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1211",
    "FileName": "work-record-spec.js",
    "Description": "WorkRecord Enhancement",
    "WhenList": [],
    "ThenList": [
      "should return true if milestone is completed",
      "should return false if milestone is not completed",
      "should get previous milestone of specified milestone",
      "should get next milestone of specified milestone",
      "should get completion state of specified milestone",
      "should get start state of specified milestone",
      "should get all started milestones",
      "should get all not started milestones"
    ],
    "Children": [
      {
        "$id": "1212",
        "FileName": "work-record-spec.js",
        "Description": "getWorkMilestone()",
        "WhenList": [],
        "ThenList": [
          "should return filtered milestone list of work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1213",
    "FileName": "work-record-spec.js",
    "Description": "WorkRecord Enhancement setCurrentMilestoneTo",
    "WhenList": [],
    "ThenList": [
      "should update current status and set last completed milestone date to today when move forward milestone without specifying date",
      "should update current milestone and set last completed milestone date to today when move backward milestone without specifying date",
      "should clear date of not started milestones",
      "should not auto-fill cleared milestone date for started milestones",
      "should allow to add out of scope work when work record has out of scope work link",
      "should allow to update additional service when work record has update additional service link",
      "should allow to send first reminder when work record has organizer as well as first reminder link",
      "should allow to update additional service when work record has update additional service link"
    ],
    "Children": [
      {
        "$id": "1214",
        "FileName": "work-record-spec.js",
        "Description": "isAppliedWithTemplate()",
        "WhenList": [],
        "ThenList": [
          "should return true when work record has task template",
          "should return true when work record has engagement task template",
          "should return false when work record has no task template or engagement task template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1215",
    "FileName": "assignee-document-expiry-date-spec.es6",
    "Description": "date filter",
    "WhenList": [],
    "ThenList": [
      "should format moment object correctly",
      "should return N/A when input date is N/A"
    ],
    "Children": []
  },
  {
    "$id": "1216",
    "FileName": "assignee-employeeId-filter-spec.js",
    "Description": "assignee search result employeeId by client",
    "WhenList": [],
    "ThenList": [
      "should return employeeId for client"
    ],
    "Children": []
  },
  {
    "$id": "1217",
    "FileName": "assignee-filter-spec.js",
    "Description": "assignee reject filter",
    "WhenList": [],
    "ThenList": [
      "should filter input assignee list",
      "should remain the same when input is empty"
    ],
    "Children": []
  },
  {
    "$id": "1218",
    "FileName": "assignee-practice-type-filter-spec.js",
    "Description": "assignee practice type filter",
    "WhenList": [],
    "ThenList": [
      "should return filtered assignees according to given practiceTypes",
      "should return filtered assignees if the given practice type is social security",
      "should return all assignees given all kinds of practiceTypes"
    ],
    "Children": []
  },
  {
    "$id": "1219",
    "FileName": "assignment-display-name-filter-spec.js",
    "Description": "assignment display format filter",
    "WhenList": [],
    "ThenList": [
      "should list assignments based on dispaly format"
    ],
    "Children": []
  },
  {
    "$id": "1220",
    "FileName": "consent-filters-spec.js",
    "Description": "consent filter",
    "WhenList": [],
    "ThenList": [
      "should return consent name display text given myVisas general consent",
      "should return consent name display text given myTaxes general consent",
      "should return consent name display text given employee responsibility consent",
      "should return consent name display text given fror consent",
      "should return the original consent name if it is unnecessary to filter"
    ],
    "Children": []
  },
  {
    "$id": "1221",
    "FileName": "consent-filters-spec.js",
    "Description": "consent status",
    "WhenList": [],
    "ThenList": [
      "should return convert to consent status display text given FROR consent not signed",
      "should return convert to consent status display text given FROR consent is yes",
      "should return convert to consent status display text given FROR consent expired",
      "should return convert to consent status display text given FROR consent need resign",
      "should return Agreed if given FROR status is No",
      "should return convert to consent status display text given other consent status, e.g. Agreed, Declined, NotSigned"
    ],
    "Children": []
  },
  {
    "$id": "1222",
    "FileName": "consent-filters-spec.js",
    "Description": "consent warning filter",
    "WhenList": [],
    "ThenList": [
      "should return FROR consent has not been signed given FROR status is IsReset",
      "should return FROR consent has not been signed given FROR status is None",
      "should return FROR consent has not been re-signed in the past 183 days given FROR status is Expired",
      "should return FROR consent is declined given FROR status is Yes"
    ],
    "Children": []
  },
  {
    "$id": "1223",
    "FileName": "custom-field-value-spec.js",
    "Description": "custom field value",
    "WhenList": [],
    "ThenList": [
      "should return empty string when the custom field value is empty",
      "should return 0 when the custom field value is 0",
      "should return correct formatted number string when the custom field value type is number",
      "should return original number string when the custom field value invalid number",
      "should return original string when the custom field value type is text",
      "should return local date string when the custom field value type is date"
    ],
    "Children": []
  },
  {
    "$id": "1224",
    "FileName": "date-filter-spec.es6",
    "Description": "date filter",
    "WhenList": [],
    "ThenList": [
      "should format moment object correctly"
    ],
    "Children": []
  },
  {
    "$id": "1225",
    "FileName": "date-formatter-spec.js",
    "Description": "DateFormatter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1226",
        "FileName": "date-formatter-spec.js",
        "Description": "parseCustomizedDateString",
        "WhenList": [],
        "ThenList": [
          "should return parsed date from correct customized date string",
          "should return null from incorrect customized date string",
          "should return null when date is out of valid range",
          "should return parsed date from correct customized date string",
          "should return parsed date from correct customized date string",
          "should return parsed date from correct customized date string"
        ],
        "Children": []
      },
      {
        "$id": "1227",
        "FileName": "date-formatter-spec.js",
        "Description": "toCustomizedDateTimeString",
        "WhenList": [],
        "ThenList": [
          "should format date time with specified pattern",
          "should format date time string with specified pattern",
          "should format date string with specified pattern"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1228",
    "FileName": "default-filter-spec.js",
    "Description": "default value filter",
    "WhenList": [],
    "ThenList": [
      "should return original value when input is NOT null/undefined/empty",
      "should return default value when input is null/undefined/empty"
    ],
    "Children": []
  },
  {
    "$id": "1229",
    "FileName": "display-lines-spec.js",
    "Description": "assignee reject filter",
    "WhenList": [],
    "ThenList": [
      "should transform line breaks to <br >",
      "should transform multiple line breaks",
      "should transform multiple line breaks with specified separator",
      "should strip illegal html tags"
    ],
    "Children": []
  },
  {
    "$id": "1230",
    "FileName": "download-histories-spec.js",
    "Description": "download histories",
    "WhenList": [],
    "ThenList": [
      "should return sorted download histories",
      "should return loading when downloadby is not loaded",
      "should return There is no file download history when history is null"
    ],
    "Children": []
  },
  {
    "$id": "1231",
    "FileName": "engagement-filter-spec.js",
    "Description": "reject engagement by practice type filter",
    "WhenList": [],
    "ThenList": [
      "should return 3 engagements by rejecting technology engagement"
    ],
    "Children": []
  },
  {
    "$id": "1232",
    "FileName": "engagement-filter-spec.js",
    "Description": "filter engagement by practice type filter",
    "WhenList": [],
    "ThenList": [
      "should return 3 engagements by filtering technology engagement"
    ],
    "Children": []
  },
  {
    "$id": "1233",
    "FileName": "engagement-filter-spec.js",
    "Description": "engagement office type filter",
    "WhenList": [],
    "ThenList": [
      "should return display name for office"
    ],
    "Children": []
  },
  {
    "$id": "1234",
    "FileName": "formal-name-filter-spec.js",
    "Description": "Formal name Filter",
    "WhenList": [],
    "ThenList": [
      "should build user's full name as {lastName, firstName} when middle name is NOT given",
      "should build user's full name as {lastName, firstName middleName} when middle name is given",
      "should return '--' when user is null with default display name '--'",
      "should return '' when user is null without default display name",
      "should build user's full name with id as {lastName, firstName middleName, id}",
      "should return correct custom field type string",
      "should return correct work record type name"
    ],
    "Children": []
  },
  {
    "$id": "1235",
    "FileName": "invitation-button-text-filter-spec.js",
    "Description": "invitation-button-text-filter-spec",
    "WhenList": [],
    "ThenList": [
      "should return 'Send Invitation' when subscription status is 'Not Invited'",
      "should return 'Resend Invitation' when subscription status is 'Invited'",
      "should return 'Resend Invitation' when subscription status is 'Started'",
      "should return 'In Progress....' when invitation is in progress"
    ],
    "Children": []
  },
  {
    "$id": "1236",
    "FileName": "iso-date-to-user-format-spec.js",
    "Description": "convert date string in ISO8601 format to user's customized format",
    "WhenList": [],
    "ThenList": [
      "should convert valid iso 8601 date string to user format",
      "should throw Error given an invalid date string"
    ],
    "Children": []
  },
  {
    "$id": "1237",
    "FileName": "iso-date-to-user-format-spec.js",
    "Description": "convert date time string in ISO8601 format to user's customized format",
    "WhenList": [],
    "ThenList": [
      "should convert valid iso 8601 date time string to user format",
      "should throw Error given an invalid date string"
    ],
    "Children": []
  },
  {
    "$id": "1238",
    "FileName": "master-chart-of-service-name-filter-spec.js",
    "Description": "master chart of service name  filter",
    "WhenList": [],
    "ThenList": [
      "should show master type of service based on filter"
    ],
    "Children": []
  },
  {
    "$id": "1239",
    "FileName": "missing-from-spec.js",
    "Description": "filter of missing from",
    "WhenList": [],
    "ThenList": [
      "should display staff @ office from PwC",
      "should display office only from PwC",
      "should display the content of 'from' when it is not from PwC"
    ],
    "Children": []
  },
  {
    "$id": "1240",
    "FileName": "my-linky-spec.js",
    "Description": "my-linky",
    "WhenList": [],
    "ThenList": [
      "should return text when no link in note",
      "should return text with a tag when simple link exist in note",
      "should return text with a tag when complex link exist in note",
      "should return text when domain of link is not recognized by pwc",
      "should return multiple hyper links given multiple links in note",
      "should ignore the link which seems like pwc domain",
      "should ignore the links not belonged to pwc related domain",
      "should ignore the link which start with invalid protocol",
      "should deal with angle bracket",
      "should be case insensitive",
      "should return plain text when text contain combine dots",
      "should return hyper link when there are multiple level before pwc domain",
      "should return hyper link when text contains http://uktaxdms.pwcinternal.com/",
      "should return hyper link when text contains http://audms.aap.pwcinternal.com/AUDMS​/",
      "should return hyper link when text contains iwl://",
      "should return hyper link when text contains http://ca-tax-dms.pwcinternal.com/",
      "should return hyper link when text contains https://tax-dms.eurad.ad.pwcinternal.com/"
    ],
    "Children": []
  },
  {
    "$id": "1241",
    "FileName": "number-filter-spec.es6",
    "Description": "number filter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1242",
        "FileName": "number-filter-spec.es6",
        "Description": "percentage kpi filter",
        "WhenList": [],
        "ThenList": [
          "should show 33.3% for 0.33",
          "should show N/a for null",
          "should show \"\" for \"\""
        ],
        "Children": []
      },
      {
        "$id": "1243",
        "FileName": "number-filter-spec.es6",
        "Description": "ifEmpty filter",
        "WhenList": [],
        "ThenList": [
          "should show N/A for null",
          "should show 1.2 for 1.2",
          "should show 0 for 0",
          "should show N/A for empty string"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1244",
    "FileName": "number-formatter-spec.js",
    "Description": "NumberFormatter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1245",
        "FileName": "number-formatter-spec.js",
        "Description": "parseStringToLocalNumber()",
        "WhenList": [],
        "ThenList": [
          "should return null when number format is invalid",
          "should return null when number does not match number format",
          "should return null when parse empty string",
          "should return null when string start with 0 but not 0.*",
          "should return 0 when string value equal 0",
          "should parse number when string with plus sign",
          "should return number by parse CustomizedNumberString without thousand separator",
          "should return number by parse CustomizedNumberString 0",
          "should return number by parse CustomizedNumberString 1",
          "should return number by parse CustomizedNumberString 2",
          "should return number by parse CustomizedNumberString 3",
          "should parse negative number correctly",
          "should parse number with positive sign correctly"
        ],
        "Children": []
      },
      {
        "$id": "1246",
        "FileName": "number-formatter-spec.js",
        "Description": "parseLocalNumberToString()",
        "WhenList": [],
        "ThenList": [
          "should return original number string when no format is given",
          "should return customized number string with given format 1234.56",
          "should return customized number string with given format 1234,56",
          "should return customized number string with given format 1,234.56",
          "should return customized number string with given format 1,234/56",
          "should return customized number string with given format 1.234,56",
          "should return empty string when given number is null",
          "should parse number with negative sign correctly",
          "should return string without '.00' if the number is integer",
          "should return null when the number exceed the range"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1247",
    "FileName": "office-country-filter-spec.js",
    "Description": "office country filter",
    "WhenList": [],
    "ThenList": [
      "should filter office by certain country"
    ],
    "Children": []
  },
  {
    "$id": "1248",
    "FileName": "price-filter-spec.es6",
    "Description": "fee filter",
    "WhenList": [],
    "ThenList": [
      "should show fee with currency if amount has value",
      "should show empty string if amount has no value",
      "should show 0 Currency string if amount is 0"
    ],
    "Children": []
  },
  {
    "$id": "1249",
    "FileName": "reject-staff-filter-spec.js",
    "Description": "reject staffs filter",
    "WhenList": [],
    "ThenList": [
      "should return 2 staffs excluding to be removed staff",
      "should return all staffs excluding to be removed staff"
    ],
    "Children": []
  },
  {
    "$id": "1250",
    "FileName": "simple-filter-spec.js",
    "Description": "id long filter",
    "WhenList": [],
    "ThenList": [
      "should convert 123 to 123",
      "should convert max long"
    ],
    "Children": []
  },
  {
    "$id": "1251",
    "FileName": "simple-filter-spec.js",
    "Description": "proxy account status filter",
    "WhenList": [],
    "ThenList": [
      "should convert \"Inactive\" to \"Invited\"",
      "should convert \"Activated\" to \"Account Created\""
    ],
    "Children": []
  },
  {
    "$id": "1252",
    "FileName": "simple-filter-spec.js",
    "Description": "bill status filter",
    "WhenList": [],
    "ThenList": [
      "should convert \"false\" to \"Not Billed\"",
      "should convert \"true\" to \"Billed\"",
      "should convert \"False\" to \"Not Billed\"",
      "should convert \"True\" to \"Billed\""
    ],
    "Children": []
  },
  {
    "$id": "1253",
    "FileName": "simple-filter-spec.js",
    "Description": "notBlank filter",
    "WhenList": [],
    "ThenList": [
      "should determin if a string is blank or not"
    ],
    "Children": []
  },
  {
    "$id": "1254",
    "FileName": "simple-filter-spec.js",
    "Description": "percentage filter",
    "WhenList": [],
    "ThenList": [
      "should format percentage number"
    ],
    "Children": []
  },
  {
    "$id": "1255",
    "FileName": "simple-filter-spec.js",
    "Description": "positive percentage filter",
    "WhenList": [],
    "ThenList": [
      "should format percentage number"
    ],
    "Children": []
  },
  {
    "$id": "1256",
    "FileName": "simple-filter-spec.js",
    "Description": "positive number filter",
    "WhenList": [],
    "ThenList": [
      "should format number"
    ],
    "Children": []
  },
  {
    "$id": "1257",
    "FileName": "staff-acl-list-filter-spec.js",
    "Description": "staff pre added filter",
    "WhenList": [],
    "ThenList": [
      "should return 2 staff according to given assignee acl",
      "should filter empty preAdded selectedStaff"
    ],
    "Children": []
  },
  {
    "$id": "1258",
    "FileName": "staff-acl-list-filter-spec.js",
    "Description": "reject staffs filter",
    "WhenList": [],
    "ThenList": [
      "should return 2 staff according to given assignee acl",
      "should return 2 staffs excluding to be removed staff",
      "should return all staffs excluding to be removed staff"
    ],
    "Children": []
  },
  {
    "$id": "1259",
    "FileName": "staff-acl-list-filter-spec.js",
    "Description": "filter staff",
    "WhenList": [],
    "ThenList": [
      "should filter out staff",
      "should not be error when engagement acl is null",
      "should return all when no staff to filter"
    ],
    "Children": []
  },
  {
    "$id": "1260",
    "FileName": "staff-practice-type-filter-spec.js",
    "Description": "staff practice types filter",
    "WhenList": [],
    "ThenList": [
      "should return 2 tax staff according to given practiceTypes",
      "should return all practice when the given practiceTypes undefined"
    ],
    "Children": []
  },
  {
    "$id": "1261",
    "FileName": "staff-practice-type-filter-spec.js",
    "Description": "staff practice type filter",
    "WhenList": [],
    "ThenList": [
      "should return 2 tax staff according to given engagement",
      "should return 1 social security staff according to given engagement",
      "should return all staffs when the given practiceTypes null"
    ],
    "Children": []
  },
  {
    "$id": "1262",
    "FileName": "staff-practice-type-filter-spec.js",
    "Description": "staff have all practice type filter",
    "WhenList": [],
    "ThenList": [
      "should return one staff according to given practiceTypes",
      "should return all practice when the given practiceTypes undefined"
    ],
    "Children": []
  },
  {
    "$id": "1263",
    "FileName": "titlecase-filter-spec.js",
    "Description": "title case filter spec",
    "WhenList": [],
    "ThenList": [
      "should covert camelcase to title case",
      "should return empty string when input is not string"
    ],
    "Children": []
  },
  {
    "$id": "1264",
    "FileName": "to-local-date-spec.js",
    "Description": "format date by filter localDate",
    "WhenList": [],
    "ThenList": [
      "should get local date [11/10/2011] with UTC time [11/11/2011 10:14:14] by current user's preference date format(MM/dd/yyyy) and timezone(GMT-12)",
      "should get local date [11-10-2011] with UTC time [11/11/2011 10:14:14] by current user's preference date format(MM-dd-yyyy) and timezone(GMT-12)",
      "should return null when input date is null"
    ],
    "Children": []
  },
  {
    "$id": "1265",
    "FileName": "to-lower-case-spec.js",
    "Description": "toLowerCase",
    "WhenList": [],
    "ThenList": [
      "should convert up case to lower case"
    ],
    "Children": []
  },
  {
    "$id": "1266",
    "FileName": "to-scheduled-date-time-spec.js",
    "Description": "format date by filter scheduledDateTime",
    "WhenList": [],
    "ThenList": [
      "should get correct format without time zone changed"
    ],
    "Children": []
  },
  {
    "$id": "1267",
    "FileName": "to-search-result-message-spec.js",
    "Description": "toDisplayAndFoundMessage",
    "WhenList": [],
    "ThenList": [
      "should build search result message",
      "should not show number when number is undefined or null",
      "should show 0 results when number is zero when toDisplayAndFoundMessage"
    ],
    "Children": []
  },
  {
    "$id": "1268",
    "FileName": "to-search-result-message-spec.js",
    "Description": "toFoundMessage",
    "WhenList": [],
    "ThenList": [
      "should build search result message",
      "should not show number when number is undefined or null",
      "should show 0 results when number is zero when toFoundMessage"
    ],
    "Children": []
  },
  {
    "$id": "1269",
    "FileName": "to-staff-full-name-spec.js",
    "Description": "toStaffFullName",
    "WhenList": [],
    "ThenList": [
      "should load staff and return full name",
      "should load staff and return full name"
    ],
    "Children": []
  },
  {
    "$id": "1270",
    "FileName": "to-uploader-name-spec.js",
    "Description": "toUploaderName",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1271",
        "FileName": "to-uploader-name-spec.js",
        "Description": "when uploaded by tax payer",
        "WhenList": [],
        "ThenList": [
          "should return assignee name"
        ],
        "Children": []
      },
      {
        "$id": "1272",
        "FileName": "to-uploader-name-spec.js",
        "Description": "when uploaded by PwC staff",
        "WhenList": [],
        "ThenList": [
          "should return staff full name"
        ],
        "Children": []
      },
      {
        "$id": "1273",
        "FileName": "to-uploader-name-spec.js",
        "Description": "when uploaded by contact",
        "WhenList": [],
        "ThenList": [
          "should return contact"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1274",
    "FileName": "uri-to-country-name-spec.js",
    "Description": "uriToCountryName",
    "WhenList": [],
    "ThenList": [
      "should return country name"
    ],
    "Children": []
  },
  {
    "$id": "1275",
    "FileName": "uri-to-office-full-name-spec.js",
    "Description": "uriToOfficeFullName",
    "WhenList": [],
    "ThenList": [
      "should return empty when not get all office",
      "should return full name when get all office"
    ],
    "Children": []
  },
  {
    "$id": "1276",
    "FileName": "us-question-set-filter-spec.js",
    "Description": "us question set filter in work record creation",
    "WhenList": [],
    "ThenList": [
      "should show US-Resident-Simplified when country is US and responsible office is Dubai",
      "should show US-Resident-Simplified when country is US and responsible office is Dhahran",
      "should not show US-Resident-Simplified when country is US and responsible office is Singapore",
      "should not change anything when country is Singapore and responsible office is Dubai"
    ],
    "Children": []
  },
  {
    "$id": "1277",
    "FileName": "user-number-format-filter-spec.js",
    "Description": "userNumberFormatFilter",
    "WhenList": [],
    "ThenList": [
      "should get number according to current user number format"
    ],
    "Children": []
  },
  {
    "$id": "1278",
    "FileName": "work-office-edit-section-column-count-filter-spec.es6",
    "Description": "work office edit section column count",
    "WhenList": [],
    "ThenList": [
      "should return 6 column count when restricted is yes",
      "should return 5 column count when restricted is no"
    ],
    "Children": []
  },
  {
    "$id": "1279",
    "FileName": "work-record-current-status-with-organizer-spec.js",
    "Description": "workRecordCurrentStatusWithOrganizer",
    "WhenList": [],
    "ThenList": [
      "should return work record status when work milestone started",
      "should return organizer status when organizer was not submitted",
      "should return work record status when organizer was submitted",
      "should return work record status when organizer was empty"
    ],
    "Children": []
  },
  {
    "$id": "1280",
    "FileName": "assignee-repository-spec.js",
    "Description": "Assignee Repository",
    "WhenList": [],
    "ThenList": [
      "should merge assignee details and account info",
      "should add unlock link when kayla was hard locked",
      "should not add unlock link when kayla was not hard locked",
      "should add subscriptions when account service unavailable",
      "should add subscription with correct status when get account info from account service",
      "should add subscription with correct status and impersonate when get account info from account service",
      "should search assignees",
      "should get work records",
      "should get work records by assignee"
    ],
    "Children": []
  },
  {
    "$id": "1281",
    "FileName": "country-currency-repository-spec.es6",
    "Description": "countryCurrencyRepository",
    "WhenList": [],
    "ThenList": [
      "should get correct country currency after load"
    ],
    "Children": []
  },
  {
    "$id": "1282",
    "FileName": "country-repository-spec.js",
    "Description": "country Repository",
    "WhenList": [],
    "ThenList": [
      "should get sorted countries",
      "should get country by uri"
    ],
    "Children": []
  },
  {
    "$id": "1283",
    "FileName": "currency-repository-spec.js",
    "Description": "currency Repository",
    "WhenList": [],
    "ThenList": [
      "should get sorted currencies"
    ],
    "Children": []
  },
  {
    "$id": "1284",
    "FileName": "efile-country-repository-spec.js",
    "Description": "e-file country repository",
    "WhenList": [],
    "ThenList": [
      "should get all e-file country"
    ],
    "Children": []
  },
  {
    "$id": "1285",
    "FileName": "engagement-repository-spec.js",
    "Description": "engagement Repository",
    "WhenList": [],
    "ThenList": [
      "should get engagement info with sorted work offices",
      "should get id from engagement which fetched from repository"
    ],
    "Children": [
      {
        "$id": "1286",
        "FileName": "engagement-repository-spec.js",
        "Description": "getByOffice()",
        "WhenList": [],
        "ThenList": [
          "should return engagements whose coordinating office is given office or whose working offices contain given office"
        ],
        "Children": []
      },
      {
        "$id": "1287",
        "FileName": "engagement-repository-spec.js",
        "Description": "getByIds",
        "WhenList": [],
        "ThenList": [
          "should return engagements whose ids are given"
        ],
        "Children": []
      },
      {
        "$id": "1288",
        "FileName": "engagement-repository-spec.js",
        "Description": "getEmployerWorkRecordByEngagementUri",
        "WhenList": [],
        "ThenList": [
          "should get employer work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1289",
    "FileName": "evaluation-repository-spec.js",
    "Description": "evaluation Repository",
    "WhenList": [],
    "ThenList": [
      "should get tax evaluation templates"
    ],
    "Children": []
  },
  {
    "$id": "1290",
    "FileName": "master-chart-of-service-repository-spec.js",
    "Description": "master Chart Of Service Repository",
    "WhenList": [],
    "ThenList": [
      "should get master charts"
    ],
    "Children": []
  },
  {
    "$id": "1291",
    "FileName": "office-repository-spec.js",
    "Description": "Office Repository",
    "WhenList": [],
    "ThenList": [
      "should get original offices",
      "should get office by uri regardless of cache",
      "should get office by uri regardless of cache",
      "should get sorted offices",
      "should get one office by id",
      "should sort offices"
    ],
    "Children": [
      {
        "$id": "1292",
        "FileName": "office-repository-spec.js",
        "Description": "office cache",
        "WhenList": [],
        "ThenList": [
          "should not send request to get office by id again",
          "should expire office cache by uri case-insensitively"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1293",
    "FileName": "question-set-repository-spec.js",
    "Description": "questionSetRepository Service",
    "WhenList": [],
    "ThenList": [
      "should return question list filtered by year and jurisdiction",
      "should return the name of the tracking question set",
      "should return the name of the question set"
    ],
    "Children": []
  },
  {
    "$id": "1294",
    "FileName": "staff-repository-spec.js",
    "Description": "Staff Repository",
    "WhenList": [],
    "ThenList": [
      "should get one staff by id"
    ],
    "Children": []
  },
  {
    "$id": "1295",
    "FileName": "tag-repository-spec.js",
    "Description": "Tag repository",
    "WhenList": [],
    "ThenList": [
      "should get tags",
      "should get tags by office uris"
    ],
    "Children": []
  },
  {
    "$id": "1296",
    "FileName": "timezone-repository-spec.js",
    "Description": "Timezone Repository",
    "WhenList": [],
    "ThenList": [
      "should get timezones"
    ],
    "Children": [
      {
        "$id": "1297",
        "FileName": "timezone-repository-spec.js",
        "Description": "get timezone by timezoneId",
        "WhenList": [],
        "ThenList": [
          "should return -11 when asked for 'Samoa Standard Time'",
          "should return timezone by id"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1298",
    "FileName": "todo-list-repository-spec.js",
    "Description": "Todo List Repository",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1299",
        "FileName": "todo-list-repository-spec.js",
        "Description": "when get task by staff id old",
        "WhenList": [],
        "ThenList": [
          "should get results within the limit for max numbers of records and return the status of having too many results "
        ],
        "Children": []
      },
      {
        "$id": "1300",
        "FileName": "todo-list-repository-spec.js",
        "Description": "when get task by staff id",
        "WhenList": [],
        "ThenList": [
          "should assign showStartButton and showStartText for todo item"
        ],
        "Children": []
      },
      {
        "$id": "1301",
        "FileName": "todo-list-repository-spec.js",
        "Description": "when get work record task todo by WR uri",
        "WhenList": [],
        "ThenList": [
          "should assign showStartButton and showStartText for todo item"
        ],
        "Children": []
      },
      {
        "$id": "1302",
        "FileName": "todo-list-repository-spec.js",
        "Description": "when start task for todo item",
        "WhenList": [],
        "ThenList": [
          "should update todo item"
        ],
        "Children": []
      },
      {
        "$id": "1303",
        "FileName": "todo-list-repository-spec.js",
        "Description": "when finish task from todo item ",
        "WhenList": [],
        "ThenList": [
          "should not override user inputted complete date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1304",
    "FileName": "type-of-service-repository-spec.es6",
    "Description": "Type of Service Repository",
    "WhenList": [],
    "ThenList": [
      "should get jurisdiction grouped by practiceType",
      "should get all services",
      "should able to batchUpdate new created type of service",
      "should able to batchUpdate type of service with price"
    ],
    "Children": []
  },
  {
    "$id": "1305",
    "FileName": "type-of-service-repository-spec.es6",
    "Description": "Type of Services filterFunction",
    "WhenList": [],
    "ThenList": [
      "should return type of services with given record type and jurisdiction name"
    ],
    "Children": []
  },
  {
    "$id": "1306",
    "FileName": "work-record-repository-spec.js",
    "Description": "Work Record Repository",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1307",
        "FileName": "work-record-repository-spec.js",
        "Description": "get work record by id",
        "WhenList": [],
        "ThenList": [
          "should get workRecord by id",
          "should share engagement with assignee.engagements",
          "should has been transformed the links in work record as object"
        ],
        "Children": []
      },
      {
        "$id": "1308",
        "FileName": "work-record-repository-spec.js",
        "Description": "search work records by uris",
        "WhenList": [],
        "ThenList": [
          "should associate engagements for each work record by their engagement uri"
        ],
        "Children": []
      },
      {
        "$id": "1309",
        "FileName": "work-record-repository-spec.js",
        "Description": "search work records with evaluation",
        "WhenList": [],
        "ThenList": [
          "should get work record with evaluation information"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1310",
    "FileName": "selectable-search-result-spec.js",
    "Description": "selectableSearchResult",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1311",
        "FileName": "selectable-search-result-spec.js",
        "Description": "selectableSearchResult.new",
        "WhenList": [],
        "ThenList": [
          "should return empty result when given null search results",
          "should return result when given search results"
        ],
        "Children": []
      },
      {
        "$id": "1312",
        "FileName": "selectable-search-result-spec.js",
        "Description": "toggleSelectItem",
        "WhenList": [],
        "ThenList": [
          "should select item and update status"
        ],
        "Children": []
      },
      {
        "$id": "1313",
        "FileName": "selectable-search-result-spec.js",
        "Description": "selectItemChanged",
        "WhenList": [],
        "ThenList": [
          "should update status when item selection is changed"
        ],
        "Children": []
      },
      {
        "$id": "1314",
        "FileName": "selectable-search-result-spec.js",
        "Description": "toggleSelectAll",
        "WhenList": [],
        "ThenList": [
          "should select all when not all is selected",
          "should unselect all when all is selected"
        ],
        "Children": []
      },
      {
        "$id": "1315",
        "FileName": "selectable-search-result-spec.js",
        "Description": "selectAllChanged",
        "WhenList": [],
        "ThenList": [
          "should update status when selected all changed to true",
          "should update status when selected all changed to false",
          "should not count disable items when call selectAllChanged"
        ],
        "Children": []
      },
      {
        "$id": "1316",
        "FileName": "selectable-search-result-spec.js",
        "Description": "memento",
        "WhenList": [],
        "ThenList": [
          "could restore saved memeto to reselect items"
        ],
        "Children": []
      },
      {
        "$id": "1317",
        "FileName": "selectable-search-result-spec.js",
        "Description": "selectedItemsUris",
        "WhenList": [],
        "ThenList": [
          "should return selectedItemsUris"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1318",
    "FileName": "application-factory-spec.js",
    "Description": "applicationFactory",
    "WhenList": [],
    "ThenList": [
      "extend"
    ],
    "Children": []
  },
  {
    "$id": "1319",
    "FileName": "authentication-spec.js",
    "Description": "authentication service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1320",
        "FileName": "authentication-spec.js",
        "Description": "authentication.login",
        "WhenList": [],
        "ThenList": [
          "should start a client session when login successfully",
          "should notify the caller when login failed"
        ],
        "Children": []
      },
      {
        "$id": "1321",
        "FileName": "authentication-spec.js",
        "Description": "authentication.logout",
        "WhenList": [],
        "ThenList": [
          "should clear the session and invoke the callback after login out successfully",
          "should timeout the session when logout with the timeout flag",
          "should refresh page when call logout api fail"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1322",
    "FileName": "authorization-spec.js",
    "Description": "authorization service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1323",
        "FileName": "authorization-spec.js",
        "Description": "isUserAuthorizedInMyMobilityImpersonating",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1324",
            "FileName": "authorization-spec.js",
            "Description": "when current user is in coordinating office",
            "WhenList": [],
            "ThenList": [
              "should return true"
            ],
            "Children": []
          },
          {
            "$id": "1325",
            "FileName": "authorization-spec.js",
            "Description": "when current user is coordinating office contact but not in coordinating office",
            "WhenList": [],
            "ThenList": [
              "should return true"
            ],
            "Children": []
          },
          {
            "$id": "1326",
            "FileName": "authorization-spec.js",
            "Description": "when current user is global admin",
            "WhenList": [],
            "ThenList": [
              "should return true"
            ],
            "Children": []
          },
          {
            "$id": "1327",
            "FileName": "authorization-spec.js",
            "Description": "when current user is in delegated coordinating office",
            "WhenList": [],
            "ThenList": [
              "should return true"
            ],
            "Children": []
          },
          {
            "$id": "1328",
            "FileName": "authorization-spec.js",
            "Description": "when current user is one of primary contact in subscribed offices",
            "WhenList": [],
            "ThenList": [
              "should return true"
            ],
            "Children": []
          },
          {
            "$id": "1329",
            "FileName": "authorization-spec.js",
            "Description": "when current user is in subscribed offices",
            "WhenList": [],
            "ThenList": [
              "should return true"
            ],
            "Children": []
          },
          {
            "$id": "1330",
            "FileName": "authorization-spec.js",
            "Description": "when current user does not match any authorization rule",
            "WhenList": [],
            "ThenList": [
              "should return false"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1331",
        "FileName": "authorization-spec.js",
        "Description": "isUserAuthorizedInCountry()",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1332",
            "FileName": "authorization-spec.js",
            "Description": "when current user is global admin",
            "WhenList": [],
            "ThenList": [
              "should return true"
            ],
            "Children": []
          },
          {
            "$id": "1333",
            "FileName": "authorization-spec.js",
            "Description": "when current user is country level role",
            "WhenList": [],
            "ThenList": [
              "should return true when the user belongs to the country",
              "should return false when the user does not belong to the country"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1334",
        "FileName": "authorization-spec.js",
        "Description": "isUserAuthorizedForStaff()",
        "WhenList": [],
        "ThenList": [
          "should return false when current user is general role"
        ],
        "Children": [
          {
            "$id": "1335",
            "FileName": "authorization-spec.js",
            "Description": "when current user is global admin",
            "WhenList": [],
            "ThenList": [
              "should return true when the target staff is general role",
              "should return true when the target staff is country level role",
              "should return false when the target staff is global admin role"
            ],
            "Children": []
          },
          {
            "$id": "1336",
            "FileName": "authorization-spec.js",
            "Description": "when current user is country level role",
            "WhenList": [],
            "ThenList": [
              "should return true for a general user within the same country",
              "should return true for a country level staff within the same country",
              "should return false for a global admin within the same country",
              "should return false for anyone in a different country"
            ],
            "Children": []
          },
          {
            "$id": "1337",
            "FileName": "authorization-spec.js",
            "Description": "when current user is office level role",
            "WhenList": [],
            "ThenList": [
              "should return true for a general user in the same office",
              "should return true for an office level staff in the same office",
              "should return false for a country level staff in the office",
              "should return false for a global admin in the same office",
              "should return false for anyone in another office"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1338",
        "FileName": "authorization-spec.js",
        "Description": "isUserResponsibleForEngagement()",
        "WhenList": [],
        "ThenList": [
          "should return true when the practice types match and the user works for the engagement",
          "should return false when the practice types match and the user doesn't work for the engagement",
          "should return false when the practice types don't match and the user works for the engagement"
        ],
        "Children": []
      },
      {
        "$id": "1339",
        "FileName": "authorization-spec.js",
        "Description": "isUserAuthorizedForEngagement()",
        "WhenList": [],
        "ThenList": [
          "should return true when the practice types match and the user is engagement admin",
          "should return false when the practice types match and the user is not engagement admin",
          "should return false when the practice types don't match and the user is engagement admin"
        ],
        "Children": []
      },
      {
        "$id": "1340",
        "FileName": "authorization-spec.js",
        "Description": "isUserOfficeSubscribedToEngagement",
        "WhenList": [],
        "ThenList": [
          "should return true when the user office is subscribed as one of the engagement offices",
          "should return false when the user office is not subscribed as one of the engagement offices"
        ],
        "Children": []
      },
      {
        "$id": "1341",
        "FileName": "authorization-spec.js",
        "Description": "isUserBelongToEngagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1342",
            "FileName": "authorization-spec.js",
            "Description": "engagement is not restricted",
            "WhenList": [],
            "ThenList": [
              "should return true when the user is engagement contact",
              "should return false when the user is not belong to engagement",
              "should return true when the user is in coordinating office",
              "should return true when the user is in delegated coordinating office",
              "should return true when the user is in work office",
              "should return true when the user is global admin"
            ],
            "Children": []
          },
          {
            "$id": "1343",
            "FileName": "authorization-spec.js",
            "Description": "engagement is restricted",
            "WhenList": [],
            "ThenList": [
              "should return true when the user is engagement contact",
              "should return false when the user is not belong to engagement",
              "should return true when the user is in coordinating office",
              "should return true when the user is in delegated coordinating office",
              "should return true when the user is in work office",
              "should return true when the user is global admin"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1344",
        "FileName": "authorization-spec.js",
        "Description": "isUserCanAccessAdminTabToEngagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1345",
            "FileName": "authorization-spec.js",
            "Description": "engagement not restricted",
            "WhenList": [],
            "ThenList": [
              "should can access admin tab when current user is engagement contacts",
              "should can access admin tab when current user is engagement contacts and in work office",
              "should can not access admin tab when current user is not belong to engagement",
              "should can access admin tab when current user is global admin",
              "should can access admin tab when current user is in coordinating office",
              "should can access admin tab when current user is in delegated coordinating offices",
              "should can not access admin tab when current user is in work offices",
              "should can not access admin tab when current user is work office contact but not engagement admin",
              "should can access admin tab when current user is engagement admin in work office"
            ],
            "Children": []
          },
          {
            "$id": "1346",
            "FileName": "authorization-spec.js",
            "Description": "engagement is restricted",
            "WhenList": [],
            "ThenList": [
              "should can access admin tab when current user is in acl",
              "should can access admin tab when current user is engagement contacts",
              "should can access admin tab when current user is engagement contacts and in work office",
              "should can not access admin tab when current user is not belong to engagement",
              "should can access admin tab when current user is global admin",
              "should can not access admin tab when current user is in coordinating office",
              "should can not access admin tab when current user is in delegated coordinating offices",
              "should can access admin tab when current user is in delegated coordinating offices contact",
              "should can not access admin tab when current user is in work offices",
              "should can not access admin tab when current user is work office contact but not engagement admin",
              "should can access admin tab when current user is engagement admin in work office",
              "should can not access admin tab when current user is in engagement work office contact"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1347",
        "FileName": "authorization-spec.js",
        "Description": "canUserAdministrateEngagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1348",
            "FileName": "authorization-spec.js",
            "Description": "engagement is Active",
            "WhenList": [],
            "ThenList": [
              "should user can administrate engagement when current user is engagement first admin",
              "should user can administrate engagement when current user is engagement second admin",
              "should user can administrate engagement when current user is global admin",
              "should user can administrate engagement when current user is coordinating office primary contact",
              "should user can administrate engagement when current user is coordinating office secondary contact",
              "should user can administrate engagement when current user is delegated office primary contact",
              "should user can administrate engagement when current user is delegated office secondary contact",
              "should user can administrate engagement when current user is subscribed office primary contact and engagement primary contact",
              "should user can administrate engagement when current user is subscribed office secondary contact and engagement secondary contact",
              "should user can not administrate engagement when current user is not belong to engagement",
              "should user can not administrate engagement when current user is subscribed office primary contact",
              "should user can not administrate engagement when current user is subscribed office secondary contact",
              "should user can not administrate engagement when current user is in coordinating office but not contact",
              "should user can not administrate engagement when current user is in delegated office but not contact",
              "should user can not administrate engagement when current user is in subscribed office"
            ],
            "Children": []
          },
          {
            "$id": "1349",
            "FileName": "authorization-spec.js",
            "Description": "engagement is InActive",
            "WhenList": [],
            "ThenList": [
              "should user can not administrate engagement when current user is engagement first admin",
              "should user can not administrate engagement when current user is engagement second admin",
              "should user can not administrate engagement when current user is global admin",
              "should user can not administrate engagement when current user is coordinating office primary contact",
              "should user can not administrate engagement when current user is coordinating office secondary contact",
              "should user can not administrate engagement when current user is delegated office primary contact",
              "should user can not administrate engagement when current user is delegated office secondary contact",
              "should user can not administrate engagement when current user is subscribed office primary contact and engagement primary contact",
              "should user can not administrate engagement when current user is subscribed office secondary contact and engagement secondary contact",
              "should user can not administrate engagement when current user is not belong to engagement",
              "should user can not administrate engagement when current user is subscribed office primary contact",
              "should user can not administrate engagement when current user is subscribed office secondary contact",
              "should user can not administrate engagement when current user is in coordinating office but not contact",
              "should user can not administrate engagement when current user is in delegated office but not contact",
              "should user can not administrate engagement when current user is in subscribed office"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1350",
    "FileName": "confirm-consent-service-spec.js",
    "Description": "confirm consent.",
    "WhenList": [],
    "ThenList": [
      "should confirm consent."
    ],
    "Children": []
  },
  {
    "$id": "1351",
    "FileName": "confirmation-dialog-spec.js",
    "Description": "CancelConfirmationController",
    "WhenList": [],
    "ThenList": [
      "should close dialog when cancel",
      "should close dialog and navigate to work record search page when done"
    ],
    "Children": []
  },
  {
    "$id": "1352",
    "FileName": "current-user-spec.js",
    "Description": "Current User Service",
    "WhenList": [],
    "ThenList": [
      "should return correct date format when login",
      "should return the user access"
    ],
    "Children": []
  },
  {
    "$id": "1353",
    "FileName": "date-time-converter-spec.js",
    "Description": "date time converter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1354",
        "FileName": "date-time-converter-spec.js",
        "Description": "get local current date",
        "WhenList": [],
        "ThenList": [
          "should return local time by timezone of current user",
          "should return local time by timezone of current user after a long login duration"
        ],
        "Children": []
      },
      {
        "$id": "1355",
        "FileName": "date-time-converter-spec.js",
        "Description": "moment date time",
        "WhenList": [],
        "ThenList": [
          "should get moment utc date time"
        ],
        "Children": []
      },
      {
        "$id": "1356",
        "FileName": "date-time-converter-spec.js",
        "Description": "to utc date time, it assumes 12:00 and current user timezone",
        "WhenList": [],
        "ThenList": [
          "should convert to time with offset 14 (New Zealand)",
          "should convert to time with offset -14",
          "should convert to time with offset -14"
        ],
        "Children": []
      },
      {
        "$id": "1357",
        "FileName": "date-time-converter-spec.js",
        "Description": "to utc date, it assumes 12:00 and current user timezone",
        "WhenList": [],
        "ThenList": [
          "should convert to time with offset 14 (New Zealand)",
          "should convert to time with offset -14",
          "should convert to time with offset -14"
        ],
        "Children": []
      },
      {
        "$id": "1358",
        "FileName": "date-time-converter-spec.js",
        "Description": "converter utc date to specify timezone date",
        "WhenList": [],
        "ThenList": [
          "should convert time to offset 9"
        ],
        "Children": []
      },
      {
        "$id": "1359",
        "FileName": "date-time-converter-spec.js",
        "Description": "toLocalDateTimeString()",
        "WhenList": [],
        "ThenList": [
          "should convert utc date time string to local date string"
        ],
        "Children": []
      },
      {
        "$id": "1360",
        "FileName": "date-time-converter-spec.js",
        "Description": "transformToNoonTimeOfDate()",
        "WhenList": [],
        "ThenList": [
          "should convert utc date time string to 12:00"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1361",
    "FileName": "email-service-spec.js",
    "Description": "email service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1362",
        "FileName": "email-service-spec.js",
        "Description": "buildCcEmailList",
        "WhenList": [],
        "ThenList": [
          "return both staff emails and external emails",
          "only return staff emails"
        ],
        "Children": [
          {
            "$id": "1363",
            "FileName": "email-service-spec.js",
            "Description": "getDefaultEmailFrom",
            "WhenList": [],
            "ThenList": [
              "should return team mail box",
              "should return current user email"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1364",
    "FileName": "engagement-acl-service-spec.js",
    "Description": "engagement acl service",
    "WhenList": [],
    "ThenList": [
      "should get engagement role as current user acl role",
      "should get primary contact as current user acl role",
      "should get working contact when current user is in working office",
      "should get normal acl role when current user is normal acl role",
      "should get normal acl role as current user acl role",
      "should get primary contact when current user is in delegated coordinating office",
      "should get office engagement admin as current user acl role"
    ],
    "Children": []
  },
  {
    "$id": "1365",
    "FileName": "feature-toggle-spec.js",
    "Description": "Feature Toggle",
    "WhenList": [],
    "ThenList": [
      "should clear feature toggles cache"
    ],
    "Children": [
      {
        "$id": "1366",
        "FileName": "feature-toggle-spec.js",
        "Description": "GetAll Feature Toggles",
        "WhenList": [],
        "ThenList": [
          "should get all feature toggles",
          "should cache the loaded feature toggles"
        ],
        "Children": []
      },
      {
        "$id": "1367",
        "FileName": "feature-toggle-spec.js",
        "Description": "Update Feature Toggle",
        "WhenList": [],
        "ThenList": [
          "should update feature toggle"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1368",
    "FileName": "file-cabinet-upload-service-spec.js",
    "Description": "file cabinet upload service",
    "WhenList": [],
    "ThenList": [
      "should set default fileName when proceed",
      "should not set fileName when cancel",
      "should return true if file not valid type",
      "should return false if file is valid type",
      "should can not upload file to work record without uri"
    ],
    "Children": []
  },
  {
    "$id": "1369",
    "FileName": "format-service-spec.js",
    "Description": "format service",
    "WhenList": [],
    "ThenList": [
      "should format hyphen-seperated cases to display format",
      "should format hyphen-seperated cases to Camel Case",
      "should add spaces between words"
    ],
    "Children": []
  },
  {
    "$id": "1370",
    "FileName": "future-date-validator-spec.js",
    "Description": "futureDateValidator",
    "WhenList": [],
    "ThenList": [
      "should be valid if value is not earlier than today",
      "should be invalid if value is earlier than today"
    ],
    "Children": []
  },
  {
    "$id": "1371",
    "FileName": "google-analytics-spec.js",
    "Description": "Google Analytics",
    "WhenList": [],
    "ThenList": [
      "Update Google Analytics Dictionary",
      "should not track for user from front door",
      "should not track for user from china office"
    ],
    "Children": []
  },
  {
    "$id": "1372",
    "FileName": "immigration-application-service-spec.es6",
    "Description": "immgirationApplicationService",
    "WhenList": [],
    "ThenList": [
      "should get [ 'activity', 'not-started' ] style for service milestone if service milestone is not started",
      "should get [ 'activity', 'service-current', 'task-not-started' ] style for service milestone if service milestone task is not started",
      "should get ['activity', 'service-current', 'task-started'] style for service milestone if service milestone task is started",
      "should get [ 'activity', 'completed' ] style for service milestone if service milestone task is completed"
    ],
    "Children": []
  },
  {
    "$id": "1373",
    "FileName": "impersonation-action-spec.js",
    "Description": "impersonationAction",
    "WhenList": [],
    "ThenList": [
      "subscription has impersonate link",
      "subscription does not have impersonate link"
    ],
    "Children": []
  },
  {
    "$id": "1374",
    "FileName": "invitation-action-spec.js",
    "Description": "invitationAction",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1375",
        "FileName": "invitation-action-spec.js",
        "Description": "invitation action facts",
        "WhenList": [],
        "ThenList": [
          "should show send invitation button on both applications when they have contacts but have not subscribed",
          "should show resend invitation button of myTaxes when myTaxes has been subscribed",
          "should show resend invitation button of myVisas when myVisas has been subscribed",
          "should not show myTax invitation when assignee does not belonging to a engagement with tax practice"
        ],
        "Children": [
          {
            "$id": "1376",
            "FileName": "invitation-action-spec.js",
            "Description": "myTravel invitation",
            "WhenList": [],
            "ThenList": [
              "should show invitation button of myTravel when assignee has no subscription",
              "should not show invitation button of myTravel when assignee has subscribed myTaxes",
              "should not show invitation button of myTaxes when assignee has created account of myTravel"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1377",
        "FileName": "invitation-action-spec.js",
        "Description": "sending invitation",
        "WhenList": [],
        "ThenList": [
          "should disable another invitation button when sending invitation"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1378",
    "FileName": "limited-search-service-spec.js",
    "Description": "Paged Search Service",
    "WhenList": [],
    "ThenList": [
      "should get search result according to result set size limit",
      "should get total number of matched result set"
    ],
    "Children": []
  },
  {
    "$id": "1379",
    "FileName": "message-box-service-spec.js",
    "Description": "Message Box Service",
    "WhenList": [],
    "ThenList": [
      "should get error when add an error message",
      "should get success message when add a success message",
      "should remove message store when invoke remove method",
      "should get custom message when add a message"
    ],
    "Children": []
  },
  {
    "$id": "1380",
    "FileName": "milestone-label-service-spec.es6",
    "Description": "milestone label service",
    "WhenList": [],
    "ThenList": [
      "should get correct milestone label for tax",
      "should get correct milestone label for immi",
      "should get correct milestone label for social security",
      "should get empty list for null or undefined practice type"
    ],
    "Children": []
  },
  {
    "$id": "1381",
    "FileName": "milestone-service-spec.js",
    "Description": "milestone Service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1382",
        "FileName": "milestone-service-spec.js",
        "Description": "getMilestoneAssignableStatuses",
        "WhenList": [],
        "ThenList": [
          "should return assignable milestone status"
        ],
        "Children": []
      },
      {
        "$id": "1383",
        "FileName": "milestone-service-spec.js",
        "Description": "getMilestoneStatuses",
        "WhenList": [],
        "ThenList": [
          "should return work milestone statuses"
        ],
        "Children": []
      },
      {
        "$id": "1384",
        "FileName": "milestone-service-spec.js",
        "Description": "getStatusType",
        "WhenList": [],
        "ThenList": [
          "should return state for tax work record organizer notified status",
          "should return activity for tax work record organizer in process status type",
          "should return state for immigration work record organizer record created status type",
          "should return activity for immigration work record organizer immigration submitted status type"
        ],
        "Children": []
      },
      {
        "$id": "1385",
        "FileName": "milestone-service-spec.js",
        "Description": "extractAssignableMilestonesByWorkRecordType",
        "WhenList": [],
        "ThenList": [
          "should return transform milestones to assignments for regular compliance work record"
        ],
        "Children": []
      },
      {
        "$id": "1386",
        "FileName": "milestone-service-spec.js",
        "Description": "extractAssignableMilestonesByWorkRecordType",
        "WhenList": [],
        "ThenList": [
          "should return transform milestones to assignments for employer work record"
        ],
        "Children": []
      },
      {
        "$id": "1387",
        "FileName": "milestone-service-spec.js",
        "Description": "extractAssignableMilestonesByWorkRecordType",
        "WhenList": [],
        "ThenList": [
          "should return assignable work milestone by work record type",
          "should return assignable work milestone for immigration application"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1388",
    "FileName": "my-location-spec.js",
    "Description": "get path template",
    "WhenList": [],
    "ThenList": [
      "should get path template given on a valid path with route",
      "should get path template given on a valid path and search parameter",
      "should get path given on a path",
      "should set correct uri with path",
      "should set correct uri with path and parameters",
      "should reload route given same path"
    ],
    "Children": []
  },
  {
    "$id": "1389",
    "FileName": "navigation-service-spec.js",
    "Description": "Navigation Service",
    "WhenList": [],
    "ThenList": [
      "should in-navigatable by default",
      "should log current step when go to next page",
      "should remove last step and load backup data when back to previous page",
      "should remove last step and load backup data when back to previous page when register and load cache at same time",
      "should remove all step and in-navigatable when back to first page",
      "should get page status when back to previous page",
      "should back to home page when no previous page",
      "should get logged step status",
      "should get last step name",
      "should go to home page",
      "should go back to index page and keep everything after the #",
      "should go to correct location"
    ],
    "Children": []
  },
  {
    "$id": "1390",
    "FileName": "office-service-spec.js",
    "Description": "office Service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1391",
        "FileName": "office-service-spec.js",
        "Description": "Does engagement have office",
        "WhenList": [],
        "ThenList": [
          "should return true if engagement working office contains the office",
          "should return true if engagement coordinating office is the office",
          "should return false if engagement coordinating office is not the office and working office not contain the office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1392",
    "FileName": "practice-type-provider-spec.js",
    "Description": "practice type provider",
    "WhenList": [],
    "ThenList": [
      "should get practice types as current user",
      "should get practice types without technology as current user",
      "should get all practice types",
      "should get all practice types without technology",
      "should get all practice types without social security",
      "should get all practice types without immigration",
      "should parse practice type from string"
    ],
    "Children": [
      {
        "$id": "1393",
        "FileName": "practice-type-provider-spec.js",
        "Description": "get calender related practice type by current user",
        "WhenList": [],
        "ThenList": [
          "should get practice type options when user have both tax and technolay practice type",
          "should get practice type options when user have tax practice type only",
          "should get empty practice type options when user have tax practice type"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1394",
    "FileName": "redirect-verification-service-spec.js",
    "Description": "redirect-verification-service",
    "WhenList": [],
    "ThenList": [
      "should return true when url matches the allowed pattern",
      "should return false when url doesn't match the allowed pattern"
    ],
    "Children": []
  },
  {
    "$id": "1395",
    "FileName": "reset-fror-action-spec.js",
    "Description": "resetFrorAction",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1396",
        "FileName": "reset-fror-action-spec.js",
        "Description": "has fror info",
        "WhenList": [],
        "ThenList": [
          "subscription is myTaxes,status not invited",
          "subscription is myTaxes, status Invited",
          "subscription is not myTaxes, status not invited",
          "subscription is not myTaxes, status invited"
        ],
        "Children": []
      },
      {
        "$id": "1397",
        "FileName": "reset-fror-action-spec.js",
        "Description": "does not have fror info",
        "WhenList": [],
        "ThenList": [
          "subscription is myTaxes,status not invited",
          "subscription is myTaxes,status invited",
          "subscription is not myTaxes,status not invited",
          "subscription is not myTaxes,status invited"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1398",
    "FileName": "response-data-parser-spec.js",
    "Description": "responseDataParser",
    "WhenList": [],
    "ThenList": [
      "should extract json response for ie",
      "should extract text response for ie",
      "should extract json response for non ie",
      "should extract text response for non ie"
    ],
    "Children": []
  },
  {
    "$id": "1399",
    "FileName": "section-service-spec.js",
    "Description": "Section Service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1400",
        "FileName": "section-service-spec.js",
        "Description": "initialize()",
        "WhenList": [],
        "ThenList": [
          "should return group",
          "should always return same group given same name"
        ],
        "Children": []
      },
      {
        "$id": "1401",
        "FileName": "section-service-spec.js",
        "Description": "group.changeToEditStatus()",
        "WhenList": [],
        "ThenList": [
          "should change other sections' isInViewStatus to true when section has been changed to editing mode"
        ],
        "Children": []
      },
      {
        "$id": "1402",
        "FileName": "section-service-spec.js",
        "Description": "group.isSectionInViewStatus()",
        "WhenList": [],
        "ThenList": [
          "should return true when section is in view status",
          "should change section.isInViewStatus to false when section has been changed to editing mode",
          "should change section.isInViewStatus to true when section has been changed from editing mode to view mode"
        ],
        "Children": []
      },
      {
        "$id": "1403",
        "FileName": "section-service-spec.js",
        "Description": "group.anySectionInEditStatus()",
        "WhenList": [],
        "ThenList": [
          "should return true when any section is in edit mode",
          "should return false when all sections are in view mode"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1404",
    "FileName": "session-connection-spec.js",
    "Description": "session connection service",
    "WhenList": [],
    "ThenList": [
      "should invoke registered function after the given timeout."
    ],
    "Children": []
  },
  {
    "$id": "1405",
    "FileName": "session-spec.js",
    "Description": "session",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1406",
        "FileName": "session-spec.js",
        "Description": "start",
        "WhenList": [],
        "ThenList": [
          "starts a new session for the specified timeout and persist it"
        ],
        "Children": []
      },
      {
        "$id": "1407",
        "FileName": "session-spec.js",
        "Description": "get/set",
        "WhenList": [],
        "ThenList": [
          "should get the same saved value"
        ],
        "Children": []
      },
      {
        "$id": "1408",
        "FileName": "session-spec.js",
        "Description": "no cookie...",
        "WhenList": [],
        "ThenList": [
          "should return default values when the session was never started"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1409",
    "FileName": "subscription-status-mapping-service-spec.js",
    "Description": "Subscription status Mapping Service",
    "WhenList": [],
    "ThenList": [
      "should map status from Inactive to Invited",
      "should map status from Active to Invited",
      "should map status from AccountCreated to Account Created",
      "should return Not Invited as default subscription status"
    ],
    "Children": []
  },
  {
    "$id": "1410",
    "FileName": "to-do-list-service-spec.js",
    "Description": "toDoListService",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1411",
        "FileName": "to-do-list-service-spec.js",
        "Description": "getItemsOfSection",
        "WhenList": [],
        "ThenList": [
          "should put personal tasks first and then checklist items and finally work record tasks"
        ],
        "Children": [
          {
            "$id": "1412",
            "FileName": "to-do-list-service-spec.js",
            "Description": "for personal tasks",
            "WhenList": [],
            "ThenList": [
              "should put personal tasks to \"Today\" sections when task is overdue or due in today",
              "should put personal tasks to \"Next 7 Days\" sections when task is due in 7 days",
              "should put personal tasks to \"Not Set\" sections when task is due in more than 7 days",
              "should order personal tasks by due date and then by subject"
            ],
            "Children": []
          },
          {
            "$id": "1413",
            "FileName": "to-do-list-service-spec.js",
            "Description": "for work record tasks",
            "WhenList": [],
            "ThenList": [
              "should work record tasks with original order"
            ],
            "Children": []
          },
          {
            "$id": "1414",
            "FileName": "to-do-list-service-spec.js",
            "Description": "for checklist items",
            "WhenList": [],
            "ThenList": [
              "should order checklist items assignee full name"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1415",
        "FileName": "to-do-list-service-spec.js",
        "Description": "sortSystemGeneratedTaskByDaysInHouse",
        "WhenList": [],
        "ThenList": [
          "should sort by days in house then by assignee name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1416",
    "FileName": "view-helper-spec.js",
    "Description": "ViewHelper service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1417",
        "FileName": "view-helper-spec.js",
        "Description": "setDefaultIfNotFound",
        "WhenList": [],
        "ThenList": [
          "should set the default value if the object value is not found in the collection",
          "should keep the current value if the object value is found in the collection"
        ],
        "Children": []
      },
      {
        "$id": "1418",
        "FileName": "view-helper-spec.js",
        "Description": "setBaseValue",
        "WhenList": [],
        "ThenList": [
          "should set the object value to null if object not found in the collection",
          "should keep the current value if the object value is found in the collection"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1419",
    "FileName": "work-record-service-spec.es6",
    "Description": "work record name service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1420",
        "FileName": "work-record-service-spec.es6",
        "Description": "getWorkRecordName()",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1421",
            "FileName": "work-record-service-spec.es6",
            "Description": "when record type is tax without year ending and country abbrevition",
            "WhenList": [],
            "ThenList": [
              "should change work record name to primary service description"
            ],
            "Children": []
          },
          {
            "$id": "1422",
            "FileName": "work-record-service-spec.es6",
            "Description": "when record type is tax with year ending and country abbrevition",
            "WhenList": [],
            "ThenList": [
              "should change work record name to primary service description"
            ],
            "Children": []
          },
          {
            "$id": "1423",
            "FileName": "work-record-service-spec.es6",
            "Description": "when practice type is immigration",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "1424",
                "FileName": "work-record-service-spec.es6",
                "Description": "when no dependent is provided",
                "WhenList": [],
                "ThenList": [
                  "should change work record name to 'assigneeName - primaryServiceDescription'"
                ],
                "Children": []
              },
              {
                "$id": "1425",
                "FileName": "work-record-service-spec.es6",
                "Description": "when dependent is provided",
                "WhenList": [],
                "ThenList": [
                  "should change work record name to 'dependentName - primaryServiceDescription'"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "1426",
            "FileName": "work-record-service-spec.es6",
            "Description": "when record type is social security",
            "WhenList": [],
            "ThenList": [
              "should change work record name to primary service description when does not given country",
              "should not include year ending in work record name"
            ],
            "Children": []
          },
          {
            "$id": "1427",
            "FileName": "work-record-service-spec.es6",
            "Description": "when build work record milestones",
            "WhenList": [],
            "ThenList": [
              "should build work record milestones"
            ],
            "Children": []
          },
          {
            "$id": "1428",
            "FileName": "work-record-service-spec.es6",
            "Description": "when build immigration application work record service milestone",
            "WhenList": [],
            "ThenList": [
              "should build service milestones"
            ],
            "Children": []
          },
          {
            "$id": "1429",
            "FileName": "work-record-service-spec.es6",
            "Description": "when build single immigration application work record milestones",
            "WhenList": [],
            "ThenList": [
              "should return six milestones for single immigration application work record"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1430",
        "FileName": "work-record-service-spec.es6",
        "Description": "buildMultipleServiceTaskAssignments()",
        "WhenList": [],
        "ThenList": [
          "should build multiple service task assignments according to immigration work record"
        ],
        "Children": []
      },
      {
        "$id": "1431",
        "FileName": "work-record-service-spec.es6",
        "Description": "buildUpdateResponsibilityRequest()",
        "WhenList": [],
        "ThenList": [
          "should build request according to workrecord data"
        ],
        "Children": []
      },
      {
        "$id": "1432",
        "FileName": "work-record-service-spec.es6",
        "Description": "buildUpdateMultipleResponsibilityRequest()",
        "WhenList": [],
        "ThenList": [
          "should build request according to work record data"
        ],
        "Children": []
      },
      {
        "$id": "1433",
        "FileName": "work-record-service-spec.es6",
        "Description": "get work record milestone style for immigration application work record only with primary application",
        "WhenList": [],
        "ThenList": [
          "should get correct style when milestone is current milestone with unstarted task",
          "should get correct style when milestone is completed",
          "should get correct style when current milestone has task started but not completed"
        ],
        "Children": []
      },
      {
        "$id": "1434",
        "FileName": "work-record-service-spec.es6",
        "Description": "get work record milestone style for immigration application work record with additional applications",
        "WhenList": [],
        "ThenList": [
          "should get current task started style for work record milestone when immigration application service milestone has task started",
          "should get current task started style for work record milestone when immigration application service milestone has task completed",
          "should get current task not started style for work record milestone when immigration application service milestone does not have task started",
          "should get current task not started style for work record post work milestone when all immigration application services milestone has been completed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1435",
    "FileName": "work-record-task-service-spec.es6",
    "Description": "work record task service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1436",
        "FileName": "work-record-task-service-spec.es6",
        "Description": "current task should not have N/A(cross out link)",
        "WhenList": [],
        "ThenList": [
          "should not be crossed out when current task is finished",
          "should not be crossed out when current task is crossed out",
          "should not be crossed out when only has one open normal task",
          "should not be crossed out when all the other tasks are crossed out",
          "should not be crossed out when not all previous tasks are closed"
        ],
        "Children": []
      },
      {
        "$id": "1437",
        "FileName": "work-record-task-service-spec.es6",
        "Description": "current task should have N/A(cross out link",
        "WhenList": [],
        "ThenList": [
          "should be able to cross out task in any order for immigration general work record",
          "should be able to cross out revision tasks in any order",
          "should cross out revision tasks before crossing out normal tasks",
          "should cross out normal tasks by sequence for non immigration general or briefing type work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1438",
    "FileName": "assignee-email-validator-spec.js",
    "Description": "assignee email validation",
    "WhenList": [],
    "ThenList": [
      "should return null given valid email address",
      "should return false"
    ],
    "Children": []
  },
  {
    "$id": "1439",
    "FileName": "extract-hash-from-uri-spec.js",
    "Description": "Tiger.getHashByUri",
    "WhenList": [],
    "ThenList": [
      "should truncate apiBaseUrl from uri"
    ],
    "Children": []
  },
  {
    "$id": "1440",
    "FileName": "multiple-emails-validator-spec.js",
    "Description": "multiple emails validation",
    "WhenList": [],
    "ThenList": [
      "should return true when validate valid emails",
      "should return false when validate invalid emails",
      "should return false when validate invalid emails with double quote character"
    ],
    "Children": []
  },
  {
    "$id": "1441",
    "FileName": "staff-email-validator-spec.js",
    "Description": "staff email validation",
    "WhenList": [],
    "ThenList": [
      "should return null given valid email",
      "should return false"
    ],
    "Children": []
  },
  {
    "$id": "1442",
    "FileName": "es6-spec.es6",
    "Description": "es6",
    "WhenList": [],
    "ThenList": [
      "should have 'arrow function' feature"
    ],
    "Children": []
  },
  {
    "$id": "1443",
    "FileName": "fixtures-spec.es6",
    "Description": "fixtures",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1444",
        "FileName": "fixtures-spec.es6",
        "Description": "fee fixture",
        "WhenList": [],
        "ThenList": [
          "amount and currency should be null when create fee fixture without parameters",
          "amount and currency should equal given when create fee fixture with parameters"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1445",
    "FileName": "selection-binding-spec.js",
    "Description": "selection for grouped items",
    "WhenList": [],
    "ThenList": [
      "should change all items to true when group status changed to true",
      "should change all items to false when group status changed to false",
      "should change group status to false when any selected item changed to false",
      "should change group status to true when the last unselected item selected",
      "should change group status to true when the last unselected item selected",
      "should change all items and sub items status to select when parent group selected",
      "should change all items and sub items status to unselected when parent group turns unselected",
      "should change parent status to false if any items status to unselected",
      "should change parent status to true if all items status to selected",
      "should change parent and parent's parent status to true if all items status to selected"
    ],
    "Children": [
      {
        "$id": "1446",
        "FileName": "selection-binding-spec.js",
        "Description": "add unavailable feature to ignore selection function for the item",
        "WhenList": [],
        "ThenList": [
          "should change all items to true when group status changed to true except unavailable item",
          "should change all items to false when group status changed to false except unavailable item",
          "should change group status to true when the last unselected item selected except unavailable item",
          "should change group unavailable status to true when all sub-item are unavailable"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1447",
    "FileName": "utils-spec.js",
    "Description": "utils",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1448",
        "FileName": "utils-spec.js",
        "Description": "notEmpty",
        "WhenList": [],
        "ThenList": [
          "should return false for undefined parameter",
          "should return false for null parameter",
          "should return false for empty string",
          "should return true for non-empty string",
          "should throw exception for object"
        ],
        "Children": []
      },
      {
        "$id": "1449",
        "FileName": "utils-spec.js",
        "Description": "extractFileNames",
        "WhenList": [],
        "ThenList": [
          "should extract 'abc' as primary and '.txt' as extension for file name 'abc.txt'",
          "should extract 'aBc' as primary and '.txt' as extension for file name 'abc.Txt'",
          "should extract 'abc' as primary and '' as extension for file name 'abc'",
          "should extract 'abc.def' as primary and '.txt' as extension for file name 'abc.def.txt'",
          "should extract 'abc' as primary and '' as extension for file name 'abc.'",
          "should extract 'def' as primary and '.txt' as extension for file name 'c:\\\\abc\\\\def.txt'",
          "should extract '' as primary and '' as extension for file name ''",
          "should extract '' as primary and '' as extension for file name null",
          "should extract '' as primary and '' as extension for file name undefined"
        ],
        "Children": []
      },
      {
        "$id": "1450",
        "FileName": "utils-spec.js",
        "Description": "group by function",
        "WhenList": [],
        "ThenList": [
          "should return grouped items with sorted by the key",
          "should return grouped items with by the key and sorted by the function"
        ],
        "Children": []
      },
      {
        "$id": "1451",
        "FileName": "utils-spec.js",
        "Description": "remove object from array",
        "WhenList": [],
        "ThenList": [
          "should remove",
          "should not change given different obj"
        ],
        "Children": []
      },
      {
        "$id": "1452",
        "FileName": "utils-spec.js",
        "Description": "isValidUri",
        "WhenList": [],
        "ThenList": [
          "should checkout uri is valid or not"
        ],
        "Children": []
      },
      {
        "$id": "1453",
        "FileName": "utils-spec.js",
        "Description": "split array",
        "WhenList": [],
        "ThenList": [
          "splitByCount when count is even",
          "splitByCount when count is odd"
        ],
        "Children": []
      },
      {
        "$id": "1454",
        "FileName": "utils-spec.js",
        "Description": "findKeyByValue",
        "WhenList": [],
        "ThenList": [
          "should find key by value"
        ],
        "Children": []
      },
      {
        "$id": "1455",
        "FileName": "utils-spec.js",
        "Description": "isInt",
        "WhenList": [],
        "ThenList": [
          "should check if the number is integer",
          "should return false if the value is not number",
          "Sadly: can not parse special float number like this",
          "Sadly: JavaScript doesn't differ between float and int seriously"
        ],
        "Children": []
      },
      {
        "$id": "1456",
        "FileName": "utils-spec.js",
        "Description": "copy",
        "WhenList": [],
        "ThenList": [
          "should copy object"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1457",
    "FileName": "tiger-validators-spec.es6",
    "Description": "uniqueness should return right result",
    "WhenList": [],
    "ThenList": [
      "should return false given",
      "should return true given"
    ],
    "Children": []
  },
  {
    "$id": "1458",
    "FileName": "tiger-validators-spec.es6",
    "Description": "Tiger.Validators.uniqueness can check equality of object",
    "WhenList": [],
    "ThenList": [
      "should check equality of object"
    ],
    "Children": []
  },
  {
    "$id": "1459",
    "FileName": "tiger-validators-spec.es6",
    "Description": "no more duplication exception self",
    "WhenList": [],
    "ThenList": [
      "should return ture given one employer return",
      "should return false given two employer return"
    ],
    "Children": []
  }
]