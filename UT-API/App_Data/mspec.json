[
  {
    "$id": "1",
    "FileName": "TaxReturnProviderFacts.cs",
    "Description": "tax return provider facts",
    "WhenList": [],
    "ThenList": [
      "should get tax return work records with status info of kayla havent been done for 275 days"
    ],
    "Children": []
  },
  {
    "$id": "2",
    "FileName": "when_get_assignee_organizer.cs",
    "Description": "when get assignee organizer",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3",
        "FileName": "when_get_assignee_organizer.cs",
        "Description": "when get created organizer",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should"
        ],
        "Children": []
      },
      {
        "$id": "4",
        "FileName": "when_get_assignee_organizer.cs",
        "Description": "when get notified organizer",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should"
        ],
        "Children": []
      },
      {
        "$id": "5",
        "FileName": "when_get_assignee_organizer.cs",
        "Description": "when get notified organizer by id",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should return notified organizer for assignee"
        ],
        "Children": []
      },
      {
        "$id": "6",
        "FileName": "when_get_assignee_organizer.cs",
        "Description": "when get organizer for another assignee",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should"
        ],
        "Children": []
      },
      {
        "$id": "7",
        "FileName": "when_get_assignee_organizer.cs",
        "Description": "when get in process organizer",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should"
        ],
        "Children": []
      },
      {
        "$id": "8",
        "FileName": "when_get_assignee_organizer.cs",
        "Description": "when get in process cpq organizer",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should"
        ],
        "Children": []
      },
      {
        "$id": "9",
        "FileName": "when_get_assignee_organizer.cs",
        "Description": "when get submitted organizer",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should"
        ],
        "Children": []
      },
      {
        "$id": "10",
        "FileName": "when_get_assignee_organizer.cs",
        "Description": "when get organizer of work record has been done over 275 days",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should return organizer of work record been outdated"
        ],
        "Children": []
      },
      {
        "$id": "11",
        "FileName": "when_get_assignee_organizer.cs",
        "Description": "when get organizer without work record has been done over 275 days",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "12",
    "FileName": "when_add_engagement_for_assignee.cs",
    "Description": "when add engagement for assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "13",
        "FileName": "when_add_engagement_for_assignee.cs",
        "Description": "when add engagment from existing client",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "14",
            "FileName": "when_add_engagement_for_assignee.cs",
            "Description": "when add an engagement",
            "WhenList": [],
            "ThenList": [],
            "Children": []
          },
          {
            "$id": "15",
            "FileName": "when_add_engagement_for_assignee.cs",
            "Description": "when engagement is active",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok and should not fail by update authorization list",
              "should add engagement for kayla"
            ],
            "Children": [
              {
                "$id": "16",
                "FileName": "when_add_engagement_for_assignee.cs",
                "Description": "when engagement is inactive",
                "WhenList": [
                  "of"
                ],
                "ThenList": [
                  "should return return bad request"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "17",
            "FileName": "when_add_engagement_for_assignee.cs",
            "Description": "when add engagement by an immigration staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden",
              "should not add engagement for kayla"
            ],
            "Children": []
          },
          {
            "$id": "18",
            "FileName": "when_add_engagement_for_assignee.cs",
            "Description": "when add engagement by a staff not engaged for this engagement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden",
              "should not add engagement for kayla"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "19",
        "FileName": "when_add_engagement_for_assignee.cs",
        "Description": "when add engagement cross client",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should add engagement for kayla"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "20",
    "FileName": "when_update_engagements_for_assignee.cs",
    "Description": "when update engagements for assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "21",
        "FileName": "when_update_engagements_for_assignee.cs",
        "Description": "when add existing client engagement with invalid request",
        "WhenList": [
          "given request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "22",
        "FileName": "when_update_engagements_for_assignee.cs",
        "Description": "when add cross client engagement with invalid request",
        "WhenList": [
          "given request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "23",
        "FileName": "when_update_engagements_for_assignee.cs",
        "Description": "when add existed client engagement",
        "WhenList": [
          "given request"
        ],
        "ThenList": [
          "should return 200 ok",
          "should update engagement without changing client association"
        ],
        "Children": []
      },
      {
        "$id": "24",
        "FileName": "when_update_engagements_for_assignee.cs",
        "Description": "when change client effective date",
        "WhenList": [
          "given request"
        ],
        "ThenList": [
          "should return 200 ok",
          "should update engagement and exist client association for kayla"
        ],
        "Children": []
      },
      {
        "$id": "25",
        "FileName": "when_update_engagements_for_assignee.cs",
        "Description": "when add new engagement from new client",
        "WhenList": [
          "given request"
        ],
        "ThenList": [
          "should return 200 ok",
          "should update engagement and exist client association for kayla"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "26",
    "FileName": "when_batch_create_assignees_encounter_account_service_error.cs",
    "Description": "when batch create assignees encounter account service error",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 200 ok",
      "should include error message in response"
    ],
    "Children": []
  },
  {
    "$id": "27",
    "FileName": "when_batch_create_assignees_for_non_exist_engagement.cs",
    "Description": "when batch create assignees for non exist engagement",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 404 not found"
    ],
    "Children": []
  },
  {
    "$id": "28",
    "FileName": "when_batch_create_assignees_for_restricted_engagement_when_current_staff_is_on_engagement_ACL.cs",
    "Description": "when batch create assignees for restricted engagement when current staff is on engagement ACL",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "29",
        "FileName": "when_batch_create_assignees_for_restricted_engagement_when_current_staff_is_on_engagement_ACL.cs",
        "Description": "when current user is on acl",
        "WhenList": [
          "create assignees"
        ],
        "ThenList": [
          "should return 200 ok"
        ],
        "Children": []
      },
      {
        "$id": "30",
        "FileName": "when_batch_create_assignees_for_restricted_engagement_when_current_staff_is_on_engagement_ACL.cs",
        "Description": "when current user is not on acl",
        "WhenList": [
          "create assignees"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "31",
    "FileName": "when_batch_create_assignees_from_excel_of_incorrect_format.cs",
    "Description": "when batch create assignees from excel of incorrect format",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 400 bad request"
    ],
    "Children": [
      {
        "$id": "32",
        "FileName": "when_batch_create_assignees_from_excel_of_incorrect_format.cs",
        "Description": "dummy request",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "33",
    "FileName": "when_batch_create_assignees_with_correct_information.cs",
    "Description": "when batch create assignees with event store",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 200 ok",
      "assignee should be created"
    ],
    "Children": []
  },
  {
    "$id": "34",
    "FileName": "when_batch_create_assignees_with_correct_information.cs",
    "Description": "when batch create assignees with correct information",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 200 ok",
      "assignee should be created"
    ],
    "Children": []
  },
  {
    "$id": "35",
    "FileName": "when_batch_create_assignees_with_correct_request.cs",
    "Description": "when batch create assignees with correct request",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 200 ok",
      "assignee should be created",
      "should save creator"
    ],
    "Children": []
  },
  {
    "$id": "36",
    "FileName": "when_batch_create_assignees_with_duplicated_email.cs",
    "Description": "when batch create assignees with duplicated email",
    "WhenList": [
      "import assignees with duplicated email"
    ],
    "ThenList": [
      "should return 200 ok",
      "should include error message in response"
    ],
    "Children": []
  },
  {
    "$id": "37",
    "FileName": "when_batch_create_assignees_with_inactive_engagement.cs",
    "Description": "when batch create assignees with inactive engagement",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "38",
    "FileName": "when_batch_create_assignees_with_incorrect_responsible_office.cs",
    "Description": "when batch create assignees with incorrect responsible office",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return forbidden 403",
      "should return null in response header location"
    ],
    "Children": []
  },
  {
    "$id": "39",
    "FileName": "when_batch_create_assignees_with_invalid_engagement_and_contact.cs",
    "Description": "when batch create assignees with invalid engagement and contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "40",
        "FileName": "when_batch_create_assignees_with_invalid_engagement_and_contact.cs",
        "Description": "when upload no responsiable staff contact",
        "WhenList": [
          "create assignees"
        ],
        "ThenList": [
          "should return 200 ok",
          "should include error message in response"
        ],
        "Children": []
      },
      {
        "$id": "41",
        "FileName": "when_batch_create_assignees_with_invalid_engagement_and_contact.cs",
        "Description": "when upload no match practice type staff contact",
        "WhenList": [
          "create assignees"
        ],
        "ThenList": [
          "should return 200 ok",
          "should include error message in response"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "42",
    "FileName": "when_batch_create_assignees_with_validation_error.cs",
    "Description": "when batch create assignees with validation error given empty content",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 200 ok",
      "should include error message in response"
    ],
    "Children": []
  },
  {
    "$id": "43",
    "FileName": "when_get_consents_by_accountId.cs",
    "Description": "when get consents by account id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "44",
        "FileName": "when_get_consents_by_accountId.cs",
        "Description": "when get consents",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should has requried consents name sent to consent service"
        ],
        "Children": []
      },
      {
        "$id": "45",
        "FileName": "when_get_consents_by_accountId.cs",
        "Description": "when get efile consent",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return two efile consents"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "46",
    "FileName": "when_get_consents_by_accountId_with_efile_consents.cs",
    "Description": "when get consents by account id with efile consents",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "47",
        "FileName": "when_get_consents_by_accountId_with_efile_consents.cs",
        "Description": "when get consents with efile consents by efile workrecord",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "48",
        "FileName": "when_get_consents_by_accountId_with_efile_consents.cs",
        "Description": "when get consents with efile consents by last one in two year",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "49",
        "FileName": "when_get_consents_by_accountId_with_efile_consents.cs",
        "Description": "when get consents with correct status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "50",
        "FileName": "when_get_consents_by_accountId_with_efile_consents.cs",
        "Description": "when get consents with re publish tax return",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "51",
        "FileName": "when_get_consents_by_accountId_with_efile_consents.cs",
        "Description": "when have consent status but workrecord have deleted",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "52",
    "FileName": "when_get_consents_by_accountId_with_efile_consents_links.cs",
    "Description": "when get consents by account id with efile consents links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "53",
        "FileName": "when_get_consents_by_accountId_with_efile_consents_links.cs",
        "Description": "when not move over delivered milestone and not sign",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "54",
        "FileName": "when_get_consents_by_accountId_with_efile_consents_links.cs",
        "Description": "when move over delivered milestone and not sign and not publish tax return",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "55",
        "FileName": "when_get_consents_by_accountId_with_efile_consents_links.cs",
        "Description": "when move over delivered milestone and not sign and publish tax return",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "56",
        "FileName": "when_get_consents_by_accountId_with_efile_consents_links.cs",
        "Description": "when have signed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "57",
        "FileName": "when_get_consents_by_accountId_with_efile_consents_links.cs",
        "Description": "when have signed but re publish tax return",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "58",
        "FileName": "when_get_consents_by_accountId_with_efile_consents_links.cs",
        "Description": "when move back to delivered milestone and not sign and publish tax return",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      },
      {
        "$id": "59",
        "FileName": "when_get_consents_by_accountId_with_efile_consents_links.cs",
        "Description": "when move back to delivered milestone and already sign and publish tax return",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return consent status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "60",
    "FileName": "when_create_assignee_and_account_service_is_unavailable.cs",
    "Description": "when create assignee and account service is unavailable",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 503 service unavailable"
    ],
    "Children": []
  },
  {
    "$id": "61",
    "FileName": "when_create_assignee_with_assignee_gomigration_status.cs",
    "Description": "when create assignee with assignee inactive status",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 201 created",
      "should return assignee uri in response header location",
      "should create assignee successfully"
    ],
    "Children": []
  },
  {
    "$id": "62",
    "FileName": "when_create_assignee_with_assignment_dates.cs",
    "Description": "when create assignee with assignment dates",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "63",
        "FileName": "when_create_assignee_with_assignment_dates.cs",
        "Description": "when create assingee with assignment start date later than expected end date",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "64",
        "FileName": "when_create_assignee_with_assignment_dates.cs",
        "Description": "when create assingee with assignment start date without expected end date",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return created",
          "should create assignee with correct assignment dates"
        ],
        "Children": []
      },
      {
        "$id": "65",
        "FileName": "when_create_assignee_with_assignment_dates.cs",
        "Description": "when create assingee with assignment expected end date without start date",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return created",
          "should create assignee with correct assignment dates"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "66",
    "FileName": "when_create_assignee_with_correct_request.cs",
    "Description": "when create assignee with correct request",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 201 created",
      "should return assignee uri in response header location",
      "should create assignee successfully"
    ],
    "Children": []
  },
  {
    "$id": "67",
    "FileName": "when_create_assignee_with_default_contact.cs",
    "Description": "when create assignee with default contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "68",
        "FileName": "when_create_assignee_with_default_contact.cs",
        "Description": "when create assignee with correct contact",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 201 created",
          "should create assignee successfully with default contact"
        ],
        "Children": []
      },
      {
        "$id": "69",
        "FileName": "when_create_assignee_with_default_contact.cs",
        "Description": "when create assignee with contact unsubsribed for engagement",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return bad request",
          "should not create assignee"
        ],
        "Children": []
      },
      {
        "$id": "70",
        "FileName": "when_create_assignee_with_default_contact.cs",
        "Description": "when create assignee with contact with different practice type with engagement",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return bad request",
          "should not create assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "71",
    "FileName": "when_create_assignee_with_incorrect_engagement.cs",
    "Description": "when create assignee with incorrect engagement",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "72",
    "FileName": "when_create_assignee_with_incorrect_parameters.cs",
    "Description": "when create assignee with incorrect parameters",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should get a bad request code"
    ],
    "Children": []
  },
  {
    "$id": "73",
    "FileName": "when_create_assignee_with_incorrect_responsible_office.cs",
    "Description": "when create assignee with incorrect responsible office",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 403",
      "should return null in response header location"
    ],
    "Children": []
  },
  {
    "$id": "74",
    "FileName": "when_create_restricted_engagements_assignee.cs",
    "Description": "when create restricted engagements assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "75",
        "FileName": "when_create_restricted_engagements_assignee.cs",
        "Description": "when current user is on engagements acl",
        "WhenList": [
          "of create"
        ],
        "ThenList": [
          "should return 201 created"
        ],
        "Children": []
      },
      {
        "$id": "76",
        "FileName": "when_create_restricted_engagements_assignee.cs",
        "Description": "when current user is not on engagements acl",
        "WhenList": [
          "of create"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "77",
        "FileName": "when_create_restricted_engagements_assignee.cs",
        "Description": "when current user is engagements office contact",
        "WhenList": [
          "of create"
        ],
        "ThenList": [
          "should return 201 created"
        ],
        "Children": []
      },
      {
        "$id": "78",
        "FileName": "when_create_restricted_engagements_assignee.cs",
        "Description": "when current user is engagements work office contact",
        "WhenList": [
          "of create"
        ],
        "ThenList": [
          "should return 201 created"
        ],
        "Children": []
      },
      {
        "$id": "79",
        "FileName": "when_create_restricted_engagements_assignee.cs",
        "Description": "when current user is engagements role",
        "WhenList": [
          "of create"
        ],
        "ThenList": [
          "should return 201 created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "80",
    "FileName": "when_custom_fields_with_mutli_engagements.cs",
    "Description": "when custom fields with mutli engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "81",
        "FileName": "when_custom_fields_with_mutli_engagements.cs",
        "Description": "given diff name",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not contain duplicated custom fields"
        ],
        "Children": []
      },
      {
        "$id": "82",
        "FileName": "when_custom_fields_with_mutli_engagements.cs",
        "Description": "given same name",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not contain duplicated custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "83",
    "FileName": "when_custom_fields_with_one_engagement.cs",
    "Description": "when custom fields with one engagement",
    "WhenList": [
      "get assignee details"
    ],
    "ThenList": [
      "should return 200 OK",
      "should contains predefined custom fields and their values order by created time"
    ],
    "Children": []
  },
  {
    "$id": "84",
    "FileName": "when_subscribed_custom_fields_from_another_engagement_which_not_rel_to_assignee.cs",
    "Description": "when subscribed custom fields from another engagement which not rel to assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "85",
        "FileName": "when_subscribed_custom_fields_from_another_engagement_which_not_rel_to_assignee.cs",
        "Description": "when name not duplication",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not contain duplicated custom fields"
        ],
        "Children": []
      },
      {
        "$id": "86",
        "FileName": "when_subscribed_custom_fields_from_another_engagement_which_not_rel_to_assignee.cs",
        "Description": "when name dup in other engagement and sub engagement",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not contain duplicated custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "87",
    "FileName": "when_subscribed_custom_fields_from_another_own_engagement.cs",
    "Description": "when subscribed custom fields from another own engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "88",
        "FileName": "when_subscribed_custom_fields_from_another_own_engagement.cs",
        "Description": "when name not duplication",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not contain duplicated custom fields"
        ],
        "Children": []
      },
      {
        "$id": "89",
        "FileName": "when_subscribed_custom_fields_from_another_own_engagement.cs",
        "Description": "when name duplication",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not contain duplicated custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "90",
    "FileName": "when_get_assignee_details_with_assignment_custom_fields.cs",
    "Description": "when get assignee details with assignment custom fields",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "91",
        "FileName": "when_get_assignee_details_with_assignment_custom_fields.cs",
        "Description": "when get assignee by multiple practice type staff",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should contains predefined custom fields and their values order by created time"
        ],
        "Children": []
      },
      {
        "$id": "92",
        "FileName": "when_get_assignee_details_with_assignment_custom_fields.cs",
        "Description": "when get assignee by tax only staff",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not return custom field of other types of engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "93",
    "FileName": "when_get_assignee_details_with_assignment_restricted_custom_fields.cs",
    "Description": "when get assignee details with assignment restricted custom fields",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "94",
        "FileName": "when_get_assignee_details_with_assignment_restricted_custom_fields.cs",
        "Description": "when get assignee by pwc contact",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should contains predefined custom fields and their values order by created time"
        ],
        "Children": []
      },
      {
        "$id": "95",
        "FileName": "when_get_assignee_details_with_assignment_restricted_custom_fields.cs",
        "Description": "when get assignee by unauthorized staff",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not return custom field of other types of engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "96",
    "FileName": "when_get_assignee_details_with_country_custom_fields.cs",
    "Description": "when get assignee details with country custom fields",
    "WhenList": [
      "get assignee details"
    ],
    "ThenList": [
      "should return 200 OK",
      "should load assignee country custom fields"
    ],
    "Children": []
  },
  {
    "$id": "97",
    "FileName": "when_get_assignee_details_with_subscribed_assignment_custom_fields.cs",
    "Description": "when get assignee details with subscribed assignment custom fields",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "98",
        "FileName": "when_get_assignee_details_with_subscribed_assignment_custom_fields.cs",
        "Description": "when return subscribed assignee assignment custom fields",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return custom fields contains own and subscribed"
        ],
        "Children": []
      },
      {
        "$id": "99",
        "FileName": "when_get_assignee_details_with_subscribed_assignment_custom_fields.cs",
        "Description": "should remove duplication when load assignment custom fields from both subscriber and own engagements",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return distinct custom fields contains own and subscribed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "100",
    "FileName": "when_update_custom_fields_of_assignee_from_mymobility.cs",
    "Description": "when update custom fields of assignee from mymobility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "101",
        "FileName": "when_update_custom_fields_of_assignee_from_mymobility.cs",
        "Description": "when update assignee custom field value from mymobility",
        "WhenList": [
          "when changing one of two custom fields value"
        ],
        "ThenList": [
          "should return 200",
          "should update the custom fields value"
        ],
        "Children": []
      },
      {
        "$id": "102",
        "FileName": "when_update_custom_fields_of_assignee_from_mymobility.cs",
        "Description": "when updating assignee custom fields from my mobility and custom fields null",
        "WhenList": [
          "updating with no change"
        ],
        "ThenList": [
          "should return 200"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "103",
    "FileName": "when_get_assignee_details_with_custom_fields.cs",
    "Description": "when get assignee details with custom fields",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "104",
        "FileName": "when_get_assignee_details_with_custom_fields.cs",
        "Description": "should get profile customfield for assignee",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should contains predefined custom fields and their values order by created time"
        ],
        "Children": []
      },
      {
        "$id": "105",
        "FileName": "when_get_assignee_details_with_custom_fields.cs",
        "Description": "should get both profile custom field and assignment customfied",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should contains both assignment custom field and profile assignment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "106",
    "FileName": "when_there_is_restricted_custom_field.cs",
    "Description": "when there is restricted custom field",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "107",
        "FileName": "when_there_is_restricted_custom_field.cs",
        "Description": "when staffs office in kaylas engagement offices and is self nominated",
        "WhenList": [
          "load assignee data"
        ],
        "ThenList": [
          "should return ok",
          "should load all fields"
        ],
        "Children": []
      },
      {
        "$id": "108",
        "FileName": "when_there_is_restricted_custom_field.cs",
        "Description": "when staffs office not in kaylas engagement offices",
        "WhenList": [
          "load assignee public data"
        ],
        "ThenList": [
          "should return ok",
          "should not load restricted field"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "109",
    "FileName": "when_update_assignee_country_custom_field_value.cs",
    "Description": "when update assignee country custom field value",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "110",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "with correct request",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update the custom fields"
        ],
        "Children": []
      },
      {
        "$id": "111",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "with invalid custom field id",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should not change custom fields value"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "112",
    "FileName": "when_update_assignee_custom_field_value_with_correct_request.cs",
    "Description": "when update assignee custom field value with correct request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "113",
        "FileName": "when_update_assignee_custom_field_value_with_correct_request.cs",
        "Description": "when a tax staff updates a tax engagement custom field",
        "WhenList": [
          "update assignee custom field value"
        ],
        "ThenList": [
          "should return 200",
          "should update the custom fields"
        ],
        "Children": []
      },
      {
        "$id": "114",
        "FileName": "when_update_assignee_custom_field_value_with_correct_request.cs",
        "Description": "when an immigration staff updates a tax engagement custom field",
        "WhenList": [
          "update assignee custom field value"
        ],
        "ThenList": [
          "should return forbidden",
          "should not update the custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "115",
    "FileName": "when_update_assignee_details_with_custom_field_date_type_corret_request.cs",
    "Description": "when update assignee details with custom field date type value formate corret request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "116",
        "FileName": "when_update_assignee_details_with_custom_field_date_type_corret_request.cs",
        "Description": "when update assignee custom field value",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update the custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "117",
    "FileName": "when_update_assignee_details_with_custom_field_date_type_value_format_invalid_request.cs",
    "Description": "when update assignee details with custom field date type value format invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "118",
        "FileName": "when_update_assignee_details_with_custom_field_date_type_value_format_invalid_request.cs",
        "Description": "when update assignee custom field value",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should update the custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "119",
    "FileName": "when_update_assignee_details_with_custom_field_date_type_value_not_date_invalid_request.cs",
    "Description": "when update assignee details with custom field date type value not date invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "120",
        "FileName": "when_update_assignee_details_with_custom_field_date_type_value_not_date_invalid_request.cs",
        "Description": "when update assignee custom field value",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should update the custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "121",
    "FileName": "when_cancel_deletion_for_assignee.cs",
    "Description": "when cancel deletion for assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "122",
        "FileName": "when_cancel_deletion_for_assignee.cs",
        "Description": "when staff cannot pending delete assignee",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "123",
        "FileName": "when_cancel_deletion_for_assignee.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "cancele delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should activate assignee",
          "should conatin pending delete link"
        ],
        "Children": []
      },
      {
        "$id": "124",
        "FileName": "when_cancel_deletion_for_assignee.cs",
        "Description": "when staff is in engagement coordinating offce",
        "WhenList": [
          "cancele delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should set assignee pending deleted status to true",
          "should conatin pending delete link"
        ],
        "Children": []
      },
      {
        "$id": "125",
        "FileName": "when_cancel_deletion_for_assignee.cs",
        "Description": "when staff is in engagement deletecated offce",
        "WhenList": [
          "cancele delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should set assignee pending deleted status to true",
          "should conatin pending delete link"
        ],
        "Children": []
      },
      {
        "$id": "126",
        "FileName": "when_cancel_deletion_for_assignee.cs",
        "Description": "when staff is in assignee primary contact",
        "WhenList": [
          "cancele delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should set assignee pending deleted status to true",
          "should conatin pending delete link"
        ],
        "Children": []
      },
      {
        "$id": "127",
        "FileName": "when_cancel_deletion_for_assignee.cs",
        "Description": "when staff is who create assignee",
        "WhenList": [
          "cancele delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should set assignee pending deleted status to true",
          "should conatin pending delete link"
        ],
        "Children": []
      },
      {
        "$id": "128",
        "FileName": "when_cancel_deletion_for_assignee.cs",
        "Description": "when assignee creator is null",
        "WhenList": [
          "pending delete cancel assignee"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "129",
        "FileName": "when_cancel_deletion_for_assignee.cs",
        "Description": "when assignee is not pending deleted",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "130",
            "FileName": "when_cancel_deletion_for_assignee.cs",
            "Description": "when assignee is active",
            "WhenList": [
              "cancel deletion assignee"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "131",
            "FileName": "when_cancel_deletion_for_assignee.cs",
            "Description": "when assignee is inactive",
            "WhenList": [
              "cancel deletion assignee"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "132",
            "FileName": "when_cancel_deletion_for_assignee.cs",
            "Description": "when assignee is inactive GO migration",
            "WhenList": [
              "cancel deletion assignee"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "133",
            "FileName": "when_cancel_deletion_for_assignee.cs",
            "Description": "when assignee is pending",
            "WhenList": [
              "cancel deletion assignee"
            ],
            "ThenList": [
              "should return forbidden",
              "should not return cancel deletion link when get assignee by id"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "134",
    "FileName": "when_confirm_delete_assignee.cs",
    "Description": "when confirm delete assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "135",
        "FileName": "when_confirm_delete_assignee.cs",
        "Description": "when confirm delete",
        "WhenList": [
          "confirm delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should delete assignee"
        ],
        "Children": []
      },
      {
        "$id": "136",
        "FileName": "when_confirm_delete_assignee.cs",
        "Description": "when confirm delete assignee not by creator",
        "WhenList": [
          "confirm delete assignee"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "137",
        "FileName": "when_confirm_delete_assignee.cs",
        "Description": "when confirm delete assignee with null creator",
        "WhenList": [
          "confirm delete assignee"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "138",
        "FileName": "when_confirm_delete_assignee.cs",
        "Description": "when confirm delete assignee with creator",
        "WhenList": [
          "confirm delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should delete assignee"
        ],
        "Children": []
      },
      {
        "$id": "139",
        "FileName": "when_confirm_delete_assignee.cs",
        "Description": "when comfirm delete assignee who has already schedulered briefing appointment",
        "WhenList": [
          "delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should delete appointment schedulered by assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "140",
    "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
    "Description": "when get confirm deletion link by assignee id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "141",
        "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
        "Description": "staff office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "142",
            "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
            "Description": "when the staff office is subscribed in one of the assignee engagements work offices",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "should return ok",
              "shold not return delete link"
            ],
            "Children": []
          },
          {
            "$id": "143",
            "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
            "Description": "when the staff office is subscribed in one of the assignee engagements coordinating offices",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "should return ok",
              "shold return delete link"
            ],
            "Children": []
          },
          {
            "$id": "144",
            "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
            "Description": "when the staff office is a delegated office",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "shold return delete link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "145",
        "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
        "Description": "when current user is in restricted assignee acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should get delete link"
        ],
        "Children": []
      },
      {
        "$id": "146",
        "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
        "Description": "when general contact get assignee by id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return delete link"
        ],
        "Children": []
      },
      {
        "$id": "147",
        "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
        "Description": "staff who create assignee",
        "WhenList": [
          "get assignee"
        ],
        "ThenList": [
          "should return delete link"
        ],
        "Children": []
      },
      {
        "$id": "148",
        "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
        "Description": "when assignee has multiple engagments with different practicetypes",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "149",
            "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
            "Description": "when current user match one parctice type",
            "WhenList": [
              "get assignee"
            ],
            "ThenList": [
              "should not return pending deletion link"
            ],
            "Children": []
          },
          {
            "$id": "150",
            "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
            "Description": "when current user have both practice types",
            "WhenList": [
              "get assignee"
            ],
            "ThenList": [
              "should return pending deletion link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "151",
        "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
        "Description": "should collect history when mark kayla as pending deletion",
        "WhenList": [
          "mark kayla as pending deletion"
        ],
        "ThenList": [
          "should record history"
        ],
        "Children": []
      },
      {
        "$id": "152",
        "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
        "Description": "should be different from staff who mark as delete",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "153",
            "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
            "Description": "when get by same staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not return delete link"
            ],
            "Children": []
          },
          {
            "$id": "154",
            "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
            "Description": "when get by different staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return delete link"
            ],
            "Children": []
          },
          {
            "$id": "155",
            "FileName": "when_get_confirm_deletion_link_by_assignee_id.cs",
            "Description": "after restored by different staff",
            "WhenList": [
              "origin staff"
            ],
            "ThenList": [
              "should return delete link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "156",
    "FileName": "when_get_files_from_deleted_assignee.cs",
    "Description": "when get files from deleted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "157",
        "FileName": "when_get_files_from_deleted_assignee.cs",
        "Description": "when get files of kayla",
        "WhenList": [
          "get files"
        ],
        "ThenList": [
          "should return ok",
          "should contain files"
        ],
        "Children": []
      },
      {
        "$id": "158",
        "FileName": "when_get_files_from_deleted_assignee.cs",
        "Description": "when get files of kayla after deleted",
        "WhenList": [
          "get files"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "159",
        "FileName": "when_get_files_from_deleted_assignee.cs",
        "Description": "when download files of deleted kayla",
        "WhenList": [
          "apply download token"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "160",
    "FileName": "when_get_workrecords_from_deleted_assignee.cs",
    "Description": "when get workrecords from deleted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "161",
        "FileName": "when_get_workrecords_from_deleted_assignee.cs",
        "Description": "when get tax return workrecord with tracking organizer",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "162",
        "FileName": "when_get_workrecords_from_deleted_assignee.cs",
        "Description": "when get tax other compliance work records",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "163",
            "FileName": "when_get_workrecords_from_deleted_assignee.cs",
            "Description": "when is general user",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should return not found"
            ],
            "Children": []
          },
          {
            "$id": "164",
            "FileName": "when_get_workrecords_from_deleted_assignee.cs",
            "Description": "when is admin user",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should return not found"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "165",
        "FileName": "when_get_workrecords_from_deleted_assignee.cs",
        "Description": "when get immigration work records",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "166",
        "FileName": "when_get_workrecords_from_deleted_assignee.cs",
        "Description": "when get social security work records",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "167",
    "FileName": "when_pending_delete_assignee.cs",
    "Description": "when pending delete assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "168",
        "FileName": "when_pending_delete_assignee.cs",
        "Description": "when staff cannot pending delete assignee",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "should return forbidden",
          "should not return pending delete link when get assignee by id"
        ],
        "Children": []
      },
      {
        "$id": "169",
        "FileName": "when_pending_delete_assignee.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should set assignee pending deleted status to true",
          "should not return pending delete link when get assignee by id",
          "should return restore link"
        ],
        "Children": []
      },
      {
        "$id": "170",
        "FileName": "when_pending_delete_assignee.cs",
        "Description": "when staff is in engagement coordinating offce",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should set assignee pending deleted status to true",
          "should not return pending delete link when get assignee by id",
          "should return restore link"
        ],
        "Children": []
      },
      {
        "$id": "171",
        "FileName": "when_pending_delete_assignee.cs",
        "Description": "when staff is in engagement delegated coordinating offce",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should set assignee pending deleted status to true",
          "should not return pending delete link when get assignee by id",
          "should return restore link"
        ],
        "Children": []
      },
      {
        "$id": "172",
        "FileName": "when_pending_delete_assignee.cs",
        "Description": "when staff is in assignee primary contact",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should set assignee pending deleted status to true",
          "should not return pending delete link when get assignee by id",
          "should return restore link"
        ],
        "Children": []
      },
      {
        "$id": "173",
        "FileName": "when_pending_delete_assignee.cs",
        "Description": "when staff is who create assignee",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "should return ok",
          "should set assignee pending deleted status to true",
          "should not return pending delete link when get assignee by id",
          "should return restore link"
        ],
        "Children": []
      },
      {
        "$id": "174",
        "FileName": "when_pending_delete_assignee.cs",
        "Description": "when assignee creator is null",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "175",
        "FileName": "when_pending_delete_assignee.cs",
        "Description": "when assignee is not active",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "176",
            "FileName": "when_pending_delete_assignee.cs",
            "Description": "when assignee is inactive",
            "WhenList": [
              "pending delete assignee"
            ],
            "ThenList": [
              "should return forbidden",
              "should not return pending delete link when get assignee by id"
            ],
            "Children": []
          },
          {
            "$id": "177",
            "FileName": "when_pending_delete_assignee.cs",
            "Description": "when assignee is inactive GO migration",
            "WhenList": [
              "pending delete assignee"
            ],
            "ThenList": [
              "should return forbidden",
              "should not return pending delete link when get assignee by id"
            ],
            "Children": []
          },
          {
            "$id": "178",
            "FileName": "when_pending_delete_assignee.cs",
            "Description": "when assignee is pending",
            "WhenList": [
              "pending delete assignee"
            ],
            "ThenList": [
              "should return forbidden",
              "should not return pending delete link when get assignee by id"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "179",
    "FileName": "when_batch_send_email_to_assignees.cs",
    "Description": "when batch send email to assignees",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "180",
        "FileName": "when_batch_send_email_to_assignees.cs",
        "Description": "batch send email without cc",
        "WhenList": [
          "send email"
        ],
        "ThenList": [
          "should send cc email",
          "should return accepted",
          "should be able to track progress of email sending"
        ],
        "Children": []
      },
      {
        "$id": "181",
        "FileName": "when_batch_send_email_to_assignees.cs",
        "Description": "batch send email with over max content length limitation",
        "WhenList": [
          "send email"
        ],
        "ThenList": [
          "should return 400"
        ],
        "Children": []
      },
      {
        "$id": "182",
        "FileName": "when_batch_send_email_to_assignees.cs",
        "Description": "batch send email with empty content",
        "WhenList": [
          "send email"
        ],
        "ThenList": [
          "should return 201"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "183",
    "FileName": "when_batch_send_invitation.cs",
    "Description": "when batch send invitation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "184",
        "FileName": "when_batch_send_invitation.cs",
        "Description": "when client does not care result",
        "WhenList": [
          "sent batch invitation request"
        ],
        "ThenList": [
          "should accept the request"
        ],
        "Children": []
      },
      {
        "$id": "185",
        "FileName": "when_batch_send_invitation.cs",
        "Description": "when client only care final result",
        "WhenList": [
          "sent batch invitation request"
        ],
        "ThenList": [
          "should send invitation and notification eventually"
        ],
        "Children": []
      },
      {
        "$id": "186",
        "FileName": "when_batch_send_invitation.cs",
        "Description": "when client care batch progress",
        "WhenList": [
          "sent batch invitation request"
        ],
        "ThenList": [
          "should be able to track progress"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "187",
    "FileName": "when_send_email_to_single_assignee.cs",
    "Description": "when send email to single assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "188",
        "FileName": "when_send_email_to_single_assignee.cs",
        "Description": "when send valid email",
        "WhenList": [
          "send email to kayla"
        ],
        "ThenList": [
          "should return ok",
          "should send correct email"
        ],
        "Children": []
      },
      {
        "$id": "189",
        "FileName": "when_send_email_to_single_assignee.cs",
        "Description": "when send over max length email",
        "WhenList": [
          "send email to kayla"
        ],
        "ThenList": [
          "should return 400"
        ],
        "Children": []
      },
      {
        "$id": "190",
        "FileName": "when_send_email_to_single_assignee.cs",
        "Description": "when send email without content",
        "WhenList": [
          "send email to kayla"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "191",
        "FileName": "when_send_email_to_single_assignee.cs",
        "Description": "when staff not in acl send email",
        "WhenList": [
          "send email to kayla"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "192",
    "FileName": "should_not_raise_empty_acl_changed_event.cs",
    "Description": "should not raise empty acl changed event",
    "WhenList": [
      "change status"
    ],
    "ThenList": [
      "should not raise acl changed event"
    ],
    "Children": []
  },
  {
    "$id": "193",
    "FileName": "should_raise_assginee_cancel_deleted_event.cs",
    "Description": "should raise assginee cancel deleted event",
    "WhenList": [
      "cancele delete assignee"
    ],
    "ThenList": [
      "should raise assignee cancel deleted event"
    ],
    "Children": []
  },
  {
    "$id": "194",
    "FileName": "should_raise_assginee_deleted_event.cs",
    "Description": "should raise assginee deleted event",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "195",
        "FileName": "should_raise_assginee_deleted_event.cs",
        "Description": "when confirm delete",
        "WhenList": [
          "confirm delete assignee"
        ],
        "ThenList": [
          "should raise assignee deleted event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "196",
    "FileName": "should_raise_assginee_pending_deleted_event.cs",
    "Description": "should raise assginee pending deleted event",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "197",
        "FileName": "should_raise_assginee_pending_deleted_event.cs",
        "Description": "when pending delete",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "should not raise assignee deleted event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "198",
    "FileName": "should_raise_assignee_contact_info_changed_event.cs",
    "Description": "should raise assignee contact info changed event",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "199",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when change primary email",
        "WhenList": [
          "change primay email"
        ],
        "ThenList": [
          "should raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "200",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when add secondary email",
        "WhenList": [
          "add secondary email"
        ],
        "ThenList": [
          "should raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "201",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when change secondary email",
        "WhenList": [
          "add secondary email"
        ],
        "ThenList": [
          "should raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "202",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when delete secondary email",
        "WhenList": [
          "delete secondary email"
        ],
        "ThenList": [
          "should raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "203",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when emails not changed",
        "WhenList": [
          "no changes"
        ],
        "ThenList": [
          "should not raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "204",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when add a empty email",
        "WhenList": [
          "add a emtpy email"
        ],
        "ThenList": [
          "should not raise contact info changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "205",
    "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
    "Description": "should raise assignee contact info changed event for account sync job",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "206",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when change primary email",
        "WhenList": [
          "change contact info"
        ],
        "ThenList": [
          "should raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "207",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when add secondary email",
        "WhenList": [
          "change contact info"
        ],
        "ThenList": [
          "should raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "208",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when change secondary email",
        "WhenList": [
          "change contact info"
        ],
        "ThenList": [
          "should raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "209",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when delete secondary email",
        "WhenList": [
          "change contact info"
        ],
        "ThenList": [
          "should raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "210",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when no contact info changed",
        "WhenList": [
          "no contact info changed"
        ],
        "ThenList": [
          "should not raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "211",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when add a empty email",
        "WhenList": [
          "add a empty email"
        ],
        "ThenList": [
          "should not raise assignee contact info changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "212",
    "FileName": "should_raise_event_inactive_staff.cs",
    "Description": "should raise event inactive staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "213",
        "FileName": "should_raise_event_inactive_staff.cs",
        "Description": "when batch hand over staff",
        "WhenList": [
          "inactive leonard from leeds"
        ],
        "ThenList": [
          "should return ok",
          "should not get leonard from leeds in kayla acl list"
        ],
        "Children": []
      },
      {
        "$id": "214",
        "FileName": "should_raise_event_inactive_staff.cs",
        "Description": "when inactive staff in acl",
        "WhenList": [
          "inactive sofia from leeds"
        ],
        "ThenList": [
          "should not get leonard from leeds in kayla acl list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "215",
    "FileName": "should_raise_event_when_add_engagement.cs",
    "Description": "should raise event when add engagement with same client",
    "WhenList": [
      "given new engagement to assignee"
    ],
    "ThenList": [
      "should return ok",
      "should raise event"
    ],
    "Children": []
  },
  {
    "$id": "216",
    "FileName": "should_raise_event_when_add_engagement.cs",
    "Description": "should raise event when add engagement with cross client",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "217",
        "FileName": "should_raise_event_when_add_engagement.cs",
        "Description": "when assignee is created",
        "WhenList": [
          "given new engagement to assignee"
        ],
        "ThenList": [
          "should return ok",
          "should raise event"
        ],
        "Children": []
      },
      {
        "$id": "218",
        "FileName": "should_raise_event_when_add_engagement.cs",
        "Description": "when assignee is migrated",
        "WhenList": [
          "add engagement across client"
        ],
        "ThenList": [
          "should return ok",
          "should raise assignee client association changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "219",
    "FileName": "should_raise_event_when_add_engagement.cs",
    "Description": "should raise event when change effcetive date",
    "WhenList": [
      "given new engagement to assignee"
    ],
    "ThenList": [
      "should raise event"
    ],
    "Children": []
  },
  {
    "$id": "220",
    "FileName": "should_raise_event_when_add_engagement.cs",
    "Description": "should raise event when change effcetive date and add new engagement",
    "WhenList": [
      "given new engagement to assignee"
    ],
    "ThenList": [
      "should raise event"
    ],
    "Children": []
  },
  {
    "$id": "221",
    "FileName": "should_raise_event_when_add_engagement.cs",
    "Description": "shold raise event when change employee id",
    "WhenList": [
      "add assignee engagement with cross client"
    ],
    "ThenList": [
      "should raise assignee client association changed event to eventstore"
    ],
    "Children": []
  },
  {
    "$id": "222",
    "FileName": "when_assignee_upload_file.cs",
    "Description": "when assignee upload file",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "223",
        "FileName": "when_assignee_upload_file.cs",
        "Description": "when assignee upload file one time",
        "WhenList": [
          "upload file"
        ],
        "ThenList": [
          "should raise assignee file uploaded event"
        ],
        "Children": []
      },
      {
        "$id": "224",
        "FileName": "when_assignee_upload_file.cs",
        "Description": "when assignee upload files many times",
        "WhenList": [
          "upload files"
        ],
        "ThenList": [
          "should raise assignee file upload events"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "225",
    "FileName": "when_batch_create_assignee.cs",
    "Description": "when batch create assignee",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 200 ok",
      "should raise assignee created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "226",
    "FileName": "when_change_assignee_with_out_PWC_contact_restricted_status.cs",
    "Description": "when change assignee with out primary contact restricted status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "227",
        "FileName": "when_change_assignee_with_out_PWC_contact_restricted_status.cs",
        "Description": "when change status from no to yes",
        "WhenList": [
          "change status"
        ],
        "ThenList": [
          "should raise assignee restricted status changed event"
        ],
        "Children": []
      },
      {
        "$id": "228",
        "FileName": "when_change_assignee_with_out_PWC_contact_restricted_status.cs",
        "Description": "when change status from yes to no",
        "WhenList": [
          "change status"
        ],
        "ThenList": [
          "should raise assignee restricted status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "229",
    "FileName": "when_change_assignee_with_PwC_contact_restricted_status.cs",
    "Description": "when change assignee with primary contact restricted status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "230",
        "FileName": "when_change_assignee_with_PwC_contact_restricted_status.cs",
        "Description": "when change status from no to yes",
        "WhenList": [
          "change status"
        ],
        "ThenList": [
          "should raise assignee restricted status changed event and restricted assignee accesss controls list changed event"
        ],
        "Children": []
      },
      {
        "$id": "231",
        "FileName": "when_change_assignee_with_PwC_contact_restricted_status.cs",
        "Description": "when change status from yes to no",
        "WhenList": [
          "change status"
        ],
        "ThenList": [
          "should raise assignee restricted status changed event and restricted assignee accesss controls list changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "232",
    "FileName": "when_change_restricted_assignee_acl_list.cs",
    "Description": "when change restricted assignee acl list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "233",
        "FileName": "when_change_restricted_assignee_acl_list.cs",
        "Description": "when add staff to restricted assignee acl",
        "WhenList": [
          "change acl list"
        ],
        "ThenList": [
          "should return ok when add acl",
          "should get lou in kayla acl list"
        ],
        "Children": []
      },
      {
        "$id": "234",
        "FileName": "when_change_restricted_assignee_acl_list.cs",
        "Description": "when remove staff to restricted assignee acl",
        "WhenList": [
          "change acl list"
        ],
        "ThenList": [
          "should return ok when add acl",
          "should get lou in kayla acl list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "235",
    "FileName": "when_change_restricted_assignee_contact.cs",
    "Description": "when given staff as assignee general contact to restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "236",
        "FileName": "when_change_restricted_assignee_contact.cs",
        "Description": "when add contact to restricted assignee",
        "WhenList": [
          "given sofia as kayla contact"
        ],
        "ThenList": [
          "should return 200 ok",
          "should get sofia as acl of kayla"
        ],
        "Children": []
      },
      {
        "$id": "237",
        "FileName": "when_change_restricted_assignee_contact.cs",
        "Description": "when remove contact to restricted assignee",
        "WhenList": [
          "given sofia as kayla contact"
        ],
        "ThenList": [
          "should return 200 ok",
          "should get sofia as acl of kayla"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "238",
    "FileName": "when_change_unrestricted_assignee_contact.cs",
    "Description": "when given staff as assignee general contact to unrestricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "239",
        "FileName": "when_change_unrestricted_assignee_contact.cs",
        "Description": "when add pw c contact to unrestricted assignee",
        "WhenList": [
          "given sofia as kayla contact"
        ],
        "ThenList": [
          "should return 200 ok",
          "should be null when get assignee assignee controls lists"
        ],
        "Children": []
      },
      {
        "$id": "240",
        "FileName": "when_change_unrestricted_assignee_contact.cs",
        "Description": "when remove pw c contact to unrestricted assignee",
        "WhenList": [
          "given sofia as kayla contact"
        ],
        "ThenList": [
          "should return 200 ok",
          "should be null when get assignee assignee controls lists"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "241",
    "FileName": "when_create_assignee_and_assignee_event_store_feature_toggle_open.cs",
    "Description": "when create assingee",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 201 created",
      "should return assignee uri in response header location",
      "should reply to correct assignee"
    ],
    "Children": []
  },
  {
    "$id": "242",
    "FileName": "when_hand_over_staff_responsibility.cs",
    "Description": "when hand over staff responsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "243",
        "FileName": "when_hand_over_staff_responsibility.cs",
        "Description": "when hand over staff for restricted assignee",
        "WhenList": [
          "inactive leonard from leeds"
        ],
        "ThenList": [
          "should return created",
          "should not get leonard from leeds in kayla acl list"
        ],
        "Children": []
      },
      {
        "$id": "244",
        "FileName": "when_hand_over_staff_responsibility.cs",
        "Description": "when hand over staff for non restricted assignee",
        "WhenList": [
          "inactive leonard from leeds"
        ],
        "ThenList": [
          "should return created",
          "should not raise event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "245",
    "FileName": "when_reassign_assignee_contacts_for_restricted_assignee.cs",
    "Description": "when reassign assignee contacts for restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "246",
        "FileName": "when_reassign_assignee_contacts_for_restricted_assignee.cs",
        "Description": "when reassign assignee contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should generate restricted assignee access list change event"
        ],
        "Children": []
      },
      {
        "$id": "247",
        "FileName": "when_reassign_assignee_contacts_for_restricted_assignee.cs",
        "Description": "when reassign assignee contact to existed contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should not generate restricted assignee access list change event"
        ],
        "Children": []
      },
      {
        "$id": "248",
        "FileName": "when_reassign_assignee_contacts_for_restricted_assignee.cs",
        "Description": "when reassign questionnaire contact to existed contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should not generate restricted assignee access list change event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "249",
    "FileName": "when_reassign_checklist_responsibility_for_restricted_assignee.cs",
    "Description": "when reassign checklist responsibility for restricted assignee",
    "WhenList": [
      "reassign task responsibility"
    ],
    "ThenList": [
      "should be 200",
      "should generate restricted assignee access list change event"
    ],
    "Children": []
  },
  {
    "$id": "250",
    "FileName": "when_update_assignee_assignments_from_myMobility.cs",
    "Description": "when update assignee assignments from my mobility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "251",
        "FileName": "when_update_assignee_assignments_from_myMobility.cs",
        "Description": "update assignment from old nancy",
        "WhenList": [
          "update an assignment"
        ],
        "ThenList": [
          "should raise assignment changed event with all assignments"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "252",
    "FileName": "when_update_assignee_assignments_from_tiger.cs",
    "Description": "when update assignee assignments from tiger",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "253",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when add assignment",
        "WhenList": [
          "add an assignments"
        ],
        "ThenList": [
          "should raise assignments changed event"
        ],
        "Children": []
      },
      {
        "$id": "254",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when add same assignment",
        "WhenList": [
          "add an assignments"
        ],
        "ThenList": [
          "should raise assignments changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "255",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when assignment not changed",
        "WhenList": [
          "update assignment"
        ],
        "ThenList": [
          "should not raise assignments changed event"
        ],
        "Children": []
      },
      {
        "$id": "256",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when remove assignment",
        "WhenList": [
          "remove assignment"
        ],
        "ThenList": [
          "should raise assignments changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "257",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when update assignemnt date",
        "WhenList": [
          "update assignment"
        ],
        "ThenList": [
          "should raise assignments changed event to eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "258",
    "FileName": "when_update_assignee_personal_detail.cs",
    "Description": "when update assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "259",
        "FileName": "when_update_assignee_personal_detail.cs",
        "Description": "when update assginee first name",
        "WhenList": [
          "change assignee first name"
        ],
        "ThenList": [
          "should raise assignee personal detail changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "260",
        "FileName": "when_update_assignee_personal_detail.cs",
        "Description": "when update assginee last name",
        "WhenList": [
          "change assignee last name"
        ],
        "ThenList": [
          "should raise assignee personal detail changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "261",
        "FileName": "when_update_assignee_personal_detail.cs",
        "Description": "when update assginee home country",
        "WhenList": [
          "change assignee home country"
        ],
        "ThenList": [
          "should raise assignee personal detail changed event to eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "262",
    "FileName": "when_update_assignee_personal_detail_from_account_sync_job.cs",
    "Description": "when update assignee personal detail from account sync job",
    "WhenList": [
      "update personal detail info"
    ],
    "ThenList": [
      "should raise assignee personal detail changed event"
    ],
    "Children": []
  },
  {
    "$id": "263",
    "FileName": "when_update_assignee_status.cs",
    "Description": "when update assignee status",
    "WhenList": [
      "change assignee status"
    ],
    "ThenList": [
      "should raise assignee status changed event to eventstore"
    ],
    "Children": []
  },
  {
    "$id": "264",
    "FileName": "should_not_raise_empty_acl_changed_event.cs",
    "Description": "should not raise empty acl changed event",
    "WhenList": [
      "change status"
    ],
    "ThenList": [
      "should not raise acl changed event"
    ],
    "Children": []
  },
  {
    "$id": "265",
    "FileName": "should_raise_assginee_cancel_deleted_event.cs",
    "Description": "should raise assginee cancel deleted event",
    "WhenList": [
      "cancele delete assignee"
    ],
    "ThenList": [
      "should raise assignee cancel deleted event"
    ],
    "Children": []
  },
  {
    "$id": "266",
    "FileName": "should_raise_assginee_deleted_event.cs",
    "Description": "should raise assginee deleted event",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "267",
        "FileName": "should_raise_assginee_deleted_event.cs",
        "Description": "when confirm delete",
        "WhenList": [
          "confirm delete assignee"
        ],
        "ThenList": [
          "should raise assignee deleted event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "268",
    "FileName": "should_raise_assginee_pending_deleted_event.cs",
    "Description": "should raise assginee pending deleted event",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "269",
        "FileName": "should_raise_assginee_pending_deleted_event.cs",
        "Description": "when pending delete",
        "WhenList": [
          "pending delete assignee"
        ],
        "ThenList": [
          "should not raise assignee deleted event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "270",
    "FileName": "should_raise_assignee_contact_info_changed_event.cs",
    "Description": "should raise assignee contact info changed event",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "271",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when change primary email",
        "WhenList": [
          "change primay email"
        ],
        "ThenList": [
          "should raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "272",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when add secondary email",
        "WhenList": [
          "add secondary email"
        ],
        "ThenList": [
          "should raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "273",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when change secondary email",
        "WhenList": [
          "add secondary email"
        ],
        "ThenList": [
          "should raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "274",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when delete secondary email",
        "WhenList": [
          "delete secondary email"
        ],
        "ThenList": [
          "should raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "275",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when emails not changed",
        "WhenList": [
          "no changes"
        ],
        "ThenList": [
          "should not raise contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "276",
        "FileName": "should_raise_assignee_contact_info_changed_event.cs",
        "Description": "when add a empty email",
        "WhenList": [
          "add a emtpy email"
        ],
        "ThenList": [
          "should not raise contact info changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "277",
    "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
    "Description": "should raise assignee contact info changed event for account sync job",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "278",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when change primary email",
        "WhenList": [
          "change contact info"
        ],
        "ThenList": [
          "should raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "279",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when add secondary email",
        "WhenList": [
          "change contact info"
        ],
        "ThenList": [
          "should raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "280",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when change secondary email",
        "WhenList": [
          "change contact info"
        ],
        "ThenList": [
          "should raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "281",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when delete secondary email",
        "WhenList": [
          "change contact info"
        ],
        "ThenList": [
          "should raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "282",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when no contact info changed",
        "WhenList": [
          "no contact info changed"
        ],
        "ThenList": [
          "should not raise assignee contact info changed event"
        ],
        "Children": []
      },
      {
        "$id": "283",
        "FileName": "should_raise_assignee_contact_info_changed_event_for_account_sync_job.cs",
        "Description": "when add a empty email",
        "WhenList": [
          "add a empty email"
        ],
        "ThenList": [
          "should not raise assignee contact info changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "284",
    "FileName": "should_raise_event_inactive_staff.cs",
    "Description": "should raise event inactive staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "285",
        "FileName": "should_raise_event_inactive_staff.cs",
        "Description": "when batch hand over staff",
        "WhenList": [
          "inactive leonard from leeds"
        ],
        "ThenList": [
          "should return ok",
          "should not get leonard from leeds in kayla acl list"
        ],
        "Children": []
      },
      {
        "$id": "286",
        "FileName": "should_raise_event_inactive_staff.cs",
        "Description": "when inactive staff in acl",
        "WhenList": [
          "inactive sofia from leeds"
        ],
        "ThenList": [
          "should not get leonard from leeds in kayla acl list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "287",
    "FileName": "should_raise_event_when_add_engagement.cs",
    "Description": "should raise event when add engagement with same client",
    "WhenList": [
      "given new engagement to assignee"
    ],
    "ThenList": [
      "should return ok",
      "should raise event"
    ],
    "Children": []
  },
  {
    "$id": "288",
    "FileName": "should_raise_event_when_add_engagement.cs",
    "Description": "should raise event when add engagement with cross client",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "289",
        "FileName": "should_raise_event_when_add_engagement.cs",
        "Description": "when assignee is created",
        "WhenList": [
          "given new engagement to assignee"
        ],
        "ThenList": [
          "should return ok",
          "should raise event"
        ],
        "Children": []
      },
      {
        "$id": "290",
        "FileName": "should_raise_event_when_add_engagement.cs",
        "Description": "when assignee is migrated",
        "WhenList": [
          "add engagement across client"
        ],
        "ThenList": [
          "should return ok",
          "should raise assignee client association changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "291",
    "FileName": "should_raise_event_when_add_engagement.cs",
    "Description": "should raise event when change effcetive date",
    "WhenList": [
      "given new engagement to assignee"
    ],
    "ThenList": [
      "should raise event"
    ],
    "Children": []
  },
  {
    "$id": "292",
    "FileName": "should_raise_event_when_add_engagement.cs",
    "Description": "should raise event when change effcetive date and add new engagement",
    "WhenList": [
      "given new engagement to assignee"
    ],
    "ThenList": [
      "should raise event"
    ],
    "Children": []
  },
  {
    "$id": "293",
    "FileName": "when_assignee_upload_file.cs",
    "Description": "when assignee upload file",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "294",
        "FileName": "when_assignee_upload_file.cs",
        "Description": "when assignee upload file one time",
        "WhenList": [
          "upload file"
        ],
        "ThenList": [
          "should raise assignee file uploaded event"
        ],
        "Children": []
      },
      {
        "$id": "295",
        "FileName": "when_assignee_upload_file.cs",
        "Description": "when assignee upload files many times",
        "WhenList": [
          "upload files"
        ],
        "ThenList": [
          "should raise assignee file upload events"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "296",
    "FileName": "when_batch_create_assignee.cs",
    "Description": "when batch create assignee",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 200 ok",
      "should raise assignee created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "297",
    "FileName": "when_batch_hand_over_staff_responsibility.cs",
    "Description": "when batch hand over staff responsibility",
    "WhenList": [
      "inactive leonard from leeds"
    ],
    "ThenList": [
      "should return ok",
      "should not get leonard from leeds in kayla acl list"
    ],
    "Children": []
  },
  {
    "$id": "298",
    "FileName": "when_change_assignee_with_out_PWC_contact_restricted_status.cs",
    "Description": "when change assignee with out primary contact restricted status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "299",
        "FileName": "when_change_assignee_with_out_PWC_contact_restricted_status.cs",
        "Description": "when change status from no to yes",
        "WhenList": [
          "change status"
        ],
        "ThenList": [
          "should raise assignee restricted status changed event"
        ],
        "Children": []
      },
      {
        "$id": "300",
        "FileName": "when_change_assignee_with_out_PWC_contact_restricted_status.cs",
        "Description": "when change status from yes to no",
        "WhenList": [
          "change status"
        ],
        "ThenList": [
          "should raise assignee restricted status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "301",
    "FileName": "when_change_assignee_with_PwC_contact_restricted_status.cs",
    "Description": "when change assignee with primary contact restricted status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "302",
        "FileName": "when_change_assignee_with_PwC_contact_restricted_status.cs",
        "Description": "when change status from no to yes",
        "WhenList": [
          "change status"
        ],
        "ThenList": [
          "should raise assignee restricted status changed event and restricted assignee accesss controls list changed event"
        ],
        "Children": []
      },
      {
        "$id": "303",
        "FileName": "when_change_assignee_with_PwC_contact_restricted_status.cs",
        "Description": "when change status from yes to no",
        "WhenList": [
          "change status"
        ],
        "ThenList": [
          "should raise assignee restricted status changed event and restricted assignee accesss controls list changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "304",
    "FileName": "when_change_restricted_assignee_acl_list.cs",
    "Description": "when change restricted assignee acl list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "305",
        "FileName": "when_change_restricted_assignee_acl_list.cs",
        "Description": "when add staff to restricted assignee acl",
        "WhenList": [
          "change acl list"
        ],
        "ThenList": [
          "should return ok when add acl",
          "should get lou in kayla acl list"
        ],
        "Children": []
      },
      {
        "$id": "306",
        "FileName": "when_change_restricted_assignee_acl_list.cs",
        "Description": "when remove staff to restricted assignee acl",
        "WhenList": [
          "change acl list"
        ],
        "ThenList": [
          "should return ok when add acl",
          "should get lou in kayla acl list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "307",
    "FileName": "when_change_restricted_assignee_contact.cs",
    "Description": "when given staff as assignee general contact to restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "308",
        "FileName": "when_change_restricted_assignee_contact.cs",
        "Description": "when add contact to restricted assignee",
        "WhenList": [
          "given sofia as kayla contact"
        ],
        "ThenList": [
          "should return 200 ok",
          "should get sofia as acl of kayla"
        ],
        "Children": []
      },
      {
        "$id": "309",
        "FileName": "when_change_restricted_assignee_contact.cs",
        "Description": "when remove contact to restricted assignee",
        "WhenList": [
          "given sofia as kayla contact"
        ],
        "ThenList": [
          "should return 200 ok",
          "should get sofia as acl of kayla"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "310",
    "FileName": "when_change_unrestricted_assignee_contact.cs",
    "Description": "when given staff as assignee general contact to unrestricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "311",
        "FileName": "when_change_unrestricted_assignee_contact.cs",
        "Description": "when add pw c contact to unrestricted assignee",
        "WhenList": [
          "given sofia as kayla contact"
        ],
        "ThenList": [
          "should return 200 ok",
          "should be null when get assignee assignee controls lists"
        ],
        "Children": []
      },
      {
        "$id": "312",
        "FileName": "when_change_unrestricted_assignee_contact.cs",
        "Description": "when remove pw c contact to unrestricted assignee",
        "WhenList": [
          "given sofia as kayla contact"
        ],
        "ThenList": [
          "should return 200 ok",
          "should be null when get assignee assignee controls lists"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "313",
    "FileName": "when_create_assignee_and_assignee_event_store_feature_toggle_open.cs",
    "Description": "when create assingee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "314",
        "FileName": "when_create_assignee_and_assignee_event_store_feature_toggle_open.cs",
        "Description": "should get replay assingee when feature toggle on",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 201 created",
          "should return assignee uri in response header location",
          "should reply to correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "315",
        "FileName": "when_create_assignee_and_assignee_event_store_feature_toggle_open.cs",
        "Description": "should get replay assingee without host country when feature toggle on",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 201 created",
          "should return assignee uri in response header location",
          "should reply to correct assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "316",
    "FileName": "when_hand_over_staff_responsibility.cs",
    "Description": "when hand over staff responsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "317",
        "FileName": "when_hand_over_staff_responsibility.cs",
        "Description": "when hand over staff for restricted assignee",
        "WhenList": [
          "inactive leonard from leeds"
        ],
        "ThenList": [
          "should return created",
          "should not get leonard from leeds in kayla acl list"
        ],
        "Children": []
      },
      {
        "$id": "318",
        "FileName": "when_hand_over_staff_responsibility.cs",
        "Description": "when hand over staff for non restricted assignee",
        "WhenList": [
          "inactive leonard from leeds"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "319",
    "FileName": "when_reassign_assignee_contacts_for_restricted_assignee.cs",
    "Description": "when reassign assignee contacts for restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "320",
        "FileName": "when_reassign_assignee_contacts_for_restricted_assignee.cs",
        "Description": "when reassign assignee contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should generate restricted assignee access list change event"
        ],
        "Children": []
      },
      {
        "$id": "321",
        "FileName": "when_reassign_assignee_contacts_for_restricted_assignee.cs",
        "Description": "when reassign assignee contact to existed contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should not generate restricted assignee access list change event"
        ],
        "Children": []
      },
      {
        "$id": "322",
        "FileName": "when_reassign_assignee_contacts_for_restricted_assignee.cs",
        "Description": "when reassign questionnaire contact to existed contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should not generate restricted assignee access list change event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "323",
    "FileName": "when_reassign_checklist_responsibility_for_restricted_assignee.cs",
    "Description": "when reassign checklist responsibility for restricted assignee",
    "WhenList": [
      "reassign task responsibility"
    ],
    "ThenList": [
      "should be 200",
      "should generate restricted assignee access list change event"
    ],
    "Children": []
  },
  {
    "$id": "324",
    "FileName": "when_update_assignee_assignments_from_myMobility.cs",
    "Description": "when update assignee assignments from my mobility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "325",
        "FileName": "when_update_assignee_assignments_from_myMobility.cs",
        "Description": "update assignment from old nancy",
        "WhenList": [
          "update an assignment"
        ],
        "ThenList": [
          "should raise assignment changed event with all assignments to eventstore",
          "should with author of nany"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "326",
    "FileName": "when_update_assignee_assignments_from_tiger.cs",
    "Description": "when update assignee assignments from tiger",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "327",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when add assignment",
        "WhenList": [
          "add an assignments"
        ],
        "ThenList": [
          "should raise assignments changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "328",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when add same assignment",
        "WhenList": [
          "add an assignments"
        ],
        "ThenList": [
          "should raise assignments changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "329",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when assignment not changed",
        "WhenList": [
          "update assignment"
        ],
        "ThenList": [
          "should not raise assignments changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "330",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when remove assignment",
        "WhenList": [
          "remove assignment"
        ],
        "ThenList": [
          "should raise assignments changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "331",
        "FileName": "when_update_assignee_assignments_from_tiger.cs",
        "Description": "when update assignemnt date",
        "WhenList": [
          "update assignment"
        ],
        "ThenList": [
          "should raise assignments changed event to eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "332",
    "FileName": "when_update_assignee_personal_detail.cs",
    "Description": "when update assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "333",
        "FileName": "when_update_assignee_personal_detail.cs",
        "Description": "when update assginee first name",
        "WhenList": [
          "change assignee first name"
        ],
        "ThenList": [
          "should raise assignee personal detail changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "334",
        "FileName": "when_update_assignee_personal_detail.cs",
        "Description": "when update assginee last name",
        "WhenList": [
          "change assignee last name"
        ],
        "ThenList": [
          "should raise assignee personal detail changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "335",
        "FileName": "when_update_assignee_personal_detail.cs",
        "Description": "when update assginee home country",
        "WhenList": [
          "change assignee home country"
        ],
        "ThenList": [
          "should raise assignee personal detail changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "336",
        "FileName": "when_update_assignee_personal_detail.cs",
        "Description": "when update assginee employee id",
        "WhenList": [
          "add assignee engagement with cross client"
        ],
        "ThenList": [
          "should raise assignee client association changed event to eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "337",
    "FileName": "when_update_assignee_personal_detail_from_account_sync_job.cs",
    "Description": "when update assignee personal detail from account sync job",
    "WhenList": [
      "update personal detail info"
    ],
    "ThenList": [
      "should raise assignee personal detail changed event"
    ],
    "Children": []
  },
  {
    "$id": "338",
    "FileName": "when_update_assignee_status.cs",
    "Description": "when update assignee status",
    "WhenList": [
      "change assignee status"
    ],
    "ThenList": [
      "should raise assignee status changed event to eventstore"
    ],
    "Children": []
  },
  {
    "$id": "339",
    "FileName": "when_get_assignee_general_contact_by_accountId.cs",
    "Description": "when get assignee general contact by account id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "340",
        "FileName": "when_get_assignee_general_contact_by_accountId.cs",
        "Description": "when kayla only has general contact",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return general contact"
        ],
        "Children": []
      },
      {
        "$id": "341",
        "FileName": "when_get_assignee_general_contact_by_accountId.cs",
        "Description": "when get general contact with team mailbox",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return cantact with team mail box info"
        ],
        "Children": []
      },
      {
        "$id": "342",
        "FileName": "when_get_assignee_general_contact_by_accountId.cs",
        "Description": "when get general contact with photo",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return general contact with photo"
        ],
        "Children": []
      },
      {
        "$id": "343",
        "FileName": "when_get_assignee_general_contact_by_accountId.cs",
        "Description": "when kayla has general contact of both tax and immigration type",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return general contact with combined contact type"
        ],
        "Children": []
      },
      {
        "$id": "344",
        "FileName": "when_get_assignee_general_contact_by_accountId.cs",
        "Description": "when kayla has unnotified questionnaire",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return general contact and no unnotified questionnaire contact"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "345",
    "FileName": "when_get_assignee_immigration_questionnaire_contact_by_accountId.cs",
    "Description": "when get assignee immigration questionnaire contact by account id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "346",
        "FileName": "when_get_assignee_immigration_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has immigration general contact",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return general contact with immgration contact type"
        ],
        "Children": []
      },
      {
        "$id": "347",
        "FileName": "when_get_assignee_immigration_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has noissue immigration questionnaire contact",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return immigration general contact and immigration questionnaire contact"
        ],
        "Children": []
      },
      {
        "$id": "348",
        "FileName": "when_get_assignee_immigration_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has onhold immigration questionnaire contact",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return immigration general contact and immigration questionnaire contact"
        ],
        "Children": []
      },
      {
        "$id": "349",
        "FileName": "when_get_assignee_immigration_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has denied immigration questionnaire contact",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return immigration general contact and immigration questionnaire contact"
        ],
        "Children": []
      },
      {
        "$id": "350",
        "FileName": "when_get_assignee_immigration_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has completed immigration questionnaire beyond 275 days",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return only general contact"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "351",
    "FileName": "when_get_assignee_tax_questionnaire_contact_by_accountId.cs",
    "Description": "when get assignee tax questionnaire contact by account id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "352",
        "FileName": "when_get_assignee_tax_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has the same staff as general and tax contacts",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return sofia as general contact and tax contact"
        ],
        "Children": []
      },
      {
        "$id": "353",
        "FileName": "when_get_assignee_tax_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has different staffs as general and tax contact",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return tax contact and general contact"
        ],
        "Children": []
      },
      {
        "$id": "354",
        "FileName": "when_get_assignee_tax_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has same tax questionnaire contact for different countries",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return tax contact"
        ],
        "Children": []
      },
      {
        "$id": "355",
        "FileName": "when_get_assignee_tax_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has same tax questionnaire contact for same country",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return tax contact"
        ],
        "Children": []
      },
      {
        "$id": "356",
        "FileName": "when_get_assignee_tax_questionnaire_contact_by_accountId.cs",
        "Description": "when kayla has completed tax questionnaire beyond 275 days",
        "WhenList": [
          "get assignee contact"
        ],
        "ThenList": [
          "should return only general contact"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "357",
    "FileName": "when_get_assignees_by_staff.cs",
    "Description": "when get assignees by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "358",
        "FileName": "when_get_assignees_by_staff.cs",
        "Description": "should get staff served assignees count only",
        "WhenList": [
          "when get assignees by rel"
        ],
        "ThenList": [
          "should return ok",
          "should return two assignees"
        ],
        "Children": []
      },
      {
        "$id": "359",
        "FileName": "when_get_assignees_by_staff.cs",
        "Description": "should get assignees by staff id",
        "WhenList": [
          "when get assignees by rel"
        ],
        "ThenList": [
          "should return ok",
          "should return two assignees",
          "should return only one engagement when the assignee has one engagement and two contacts",
          "should return only one contact when the assignee has two engagements and one contact"
        ],
        "Children": []
      },
      {
        "$id": "360",
        "FileName": "when_get_assignees_by_staff.cs",
        "Description": "should get assignees by staff id and name",
        "WhenList": [
          "when get assignees by rel"
        ],
        "ThenList": [
          "should return ok",
          "should return one assignee"
        ],
        "Children": []
      },
      {
        "$id": "361",
        "FileName": "when_get_assignees_by_staff.cs",
        "Description": "should get assignees by staff id and home host country",
        "WhenList": [
          "when get assignees by rel"
        ],
        "ThenList": [
          "should return ok",
          "should return one assignee"
        ],
        "Children": []
      },
      {
        "$id": "362",
        "FileName": "when_get_assignees_by_staff.cs",
        "Description": "when having restricted engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "363",
            "FileName": "when_get_assignees_by_staff.cs",
            "Description": "should get restricted engagements assignees when current user is on engagements acl",
            "WhenList": [
              "when get assignees by rel"
            ],
            "ThenList": [
              "should return ok",
              "should return restricted engagements assignees"
            ],
            "Children": []
          },
          {
            "$id": "364",
            "FileName": "when_get_assignees_by_staff.cs",
            "Description": "should get restricted engagements assignees when current user is not on engagements acl",
            "WhenList": [
              "when get assignees by rel"
            ],
            "ThenList": [
              "should return ok",
              "should return one assignee"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "365",
        "FileName": "when_get_assignees_by_staff.cs",
        "Description": "should get assignees by staff id with specified practice type tax",
        "WhenList": [
          "when get assignees by practice"
        ],
        "ThenList": [
          "should return ok",
          "should only return one assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "366",
    "FileName": "when_get_assignee_and_account_service_is_unavailable.cs",
    "Description": "when get assignee and account service is unavailable",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return tiger cached account info"
    ],
    "Children": []
  },
  {
    "$id": "367",
    "FileName": "when_get_assignee_by_non_exist_id.cs",
    "Description": "when get assignee by non exist id",
    "WhenList": [
      "get assignee by non exist id"
    ],
    "ThenList": [
      "should return 404 not found"
    ],
    "Children": []
  },
  {
    "$id": "368",
    "FileName": "when_get_assignee_common_engagements.cs",
    "Description": "when get assignee common engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "369",
        "FileName": "when_get_assignee_common_engagements.cs",
        "Description": "when given assignees have common engagements",
        "WhenList": [
          "get common engagments of given assignees"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return common engagement list of given assignees"
        ],
        "Children": []
      },
      {
        "$id": "370",
        "FileName": "when_get_assignee_common_engagements.cs",
        "Description": "when given assignees have NO common engagements",
        "WhenList": [
          "get common engagments of given assignees"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return common engagement list of given assignees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "371",
    "FileName": "when_get_assignee_email_history.cs",
    "Description": "when get assignee email history",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "372",
        "FileName": "when_get_assignee_email_history.cs",
        "Description": "when notify id is null",
        "WhenList": [
          "get email history"
        ],
        "ThenList": [
          "should return ok",
          "should get email hisotry sequence by sentday"
        ],
        "Children": []
      },
      {
        "$id": "373",
        "FileName": "when_get_assignee_email_history.cs",
        "Description": "when have notify id",
        "WhenList": [
          "get email history"
        ],
        "ThenList": [
          "should return ok",
          "should get email hisotry with notification link and assigee timezone"
        ],
        "Children": []
      },
      {
        "$id": "374",
        "FileName": "when_get_assignee_email_history.cs",
        "Description": "when have notify id but no assignee time zone",
        "WhenList": [
          "get email history"
        ],
        "ThenList": [
          "should return ok",
          "should get email hisotry with notification link and assigee timezone"
        ],
        "Children": []
      },
      {
        "$id": "375",
        "FileName": "when_get_assignee_email_history.cs",
        "Description": "should filter sent success email when have notify id",
        "WhenList": [
          "get email history"
        ],
        "ThenList": [
          "should return ok",
          "should get email hisotry with notification link and assigee timezone"
        ],
        "Children": []
      },
      {
        "$id": "376",
        "FileName": "when_get_assignee_email_history.cs",
        "Description": "when have notify id and sofia do not have matching pratice type",
        "WhenList": [
          "get email history"
        ],
        "ThenList": [
          "should return ok",
          "should get email hisotry without notification link"
        ],
        "Children": []
      },
      {
        "$id": "377",
        "FileName": "when_get_assignee_email_history.cs",
        "Description": "when have notify id and sofia do not subscribe any engagements",
        "WhenList": [
          "get email history"
        ],
        "ThenList": [
          "should return ok",
          "should get email hisotry without notification link"
        ],
        "Children": []
      },
      {
        "$id": "378",
        "FileName": "when_get_assignee_email_history.cs",
        "Description": "when preview email history",
        "WhenList": [
          "preview email history"
        ],
        "ThenList": [
          "should return ok",
          "should get email history with specfic time"
        ],
        "Children": []
      },
      {
        "$id": "379",
        "FileName": "when_get_assignee_email_history.cs",
        "Description": "when preview email history should hide all links",
        "WhenList": [
          "preview email history"
        ],
        "ThenList": [
          "should return ok",
          "should get email history with hidden links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "380",
    "FileName": "when_get_assignee_family_member_with_all_fields.cs",
    "Description": "when get assignee family member with all fields",
    "WhenList": [
      "load from assignee service"
    ],
    "ThenList": [
      "should load family member succeeful",
      "should load family member"
    ],
    "Children": []
  },
  {
    "$id": "381",
    "FileName": "when_get_assignee_family_member_with_only_mandatory_fields.cs",
    "Description": "when get assignee family member with only mandatory fields",
    "WhenList": [
      "load from assignee service"
    ],
    "ThenList": [
      "should load family member succeeful",
      "should load family member"
    ],
    "Children": []
  },
  {
    "$id": "382",
    "FileName": "when_get_assignee_permission.cs",
    "Description": "when get assignee permission",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "383",
        "FileName": "when_get_assignee_permission.cs",
        "Description": "can view if current user can edit permission",
        "WhenList": [
          "get assignee permission"
        ],
        "ThenList": [
          "should get assignee permission"
        ],
        "Children": []
      },
      {
        "$id": "384",
        "FileName": "when_get_assignee_permission.cs",
        "Description": "should global admin get acl normal staff id and removable info",
        "WhenList": [
          "get assignee permission"
        ],
        "ThenList": [
          "should have 2 staff ids"
        ],
        "Children": []
      },
      {
        "$id": "385",
        "FileName": "when_get_assignee_permission.cs",
        "Description": "should contact can get acl normal staff id and removable info",
        "WhenList": [
          "get assignee permission"
        ],
        "ThenList": [
          "should have 2 staff ids"
        ],
        "Children": []
      },
      {
        "$id": "386",
        "FileName": "when_get_assignee_permission.cs",
        "Description": "should acl normal staff get other acl normal staff removable info when they are in same office and have same practice type",
        "WhenList": [
          "get assignee permission"
        ],
        "ThenList": [
          "should have 1 staff id"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "387",
    "FileName": "when_get_assignee_permission.cs",
    "Description": "when get questionnaire contact",
    "WhenList": [
      "get assignee permission info"
    ],
    "ThenList": [
      "should return ok",
      "should return questionnaire contact info"
    ],
    "Children": []
  },
  {
    "$id": "388",
    "FileName": "when_get_assignee_permission.cs",
    "Description": "when not get other assignee questionnaire contact info",
    "WhenList": [
      "get assignee permission info"
    ],
    "ThenList": [
      "should return ok",
      "should return questionnaire contact info"
    ],
    "Children": []
  },
  {
    "$id": "389",
    "FileName": "when_get_assignee_whom_related_to_restricted_engagement.cs",
    "Description": "when get assignee whom related to restricted engagement",
    "WhenList": [
      "load assignee account data"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "390",
    "FileName": "when_get_assignee_with_account_by_id.cs",
    "Description": "when get assignee with account by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "391",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "when get info normally",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should load kayla succeed"
        ],
        "Children": []
      },
      {
        "$id": "392",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "when account service unavailable",
        "WhenList": [
          "load assignee with account data"
        ],
        "ThenList": [
          "should return non authoritative information",
          "should load kayla without account succeed"
        ],
        "Children": []
      },
      {
        "$id": "393",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "when get assignee client",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "394",
            "FileName": "when_get_assignee_with_account_by_id.cs",
            "Description": "when assignee has only client",
            "WhenList": [
              "load assignee account data"
            ],
            "ThenList": [
              "should load correct client"
            ],
            "Children": []
          },
          {
            "$id": "395",
            "FileName": "when_get_assignee_with_account_by_id.cs",
            "Description": "when assignee has mulitple client associations",
            "WhenList": [
              "load assignee account data"
            ],
            "ThenList": [
              "should load latest effctived client"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "396",
    "FileName": "when_get_assignee_with_assignment_type_by_id.cs",
    "Description": "when get assignee with assignment type by id",
    "WhenList": [
      "get assignee"
    ],
    "ThenList": [
      "should return ok",
      "should load kayla succeed"
    ],
    "Children": []
  },
  {
    "$id": "397",
    "FileName": "when_get_assignee_with_proxy.cs",
    "Description": "when get assignee with proxy",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "398",
        "FileName": "when_get_assignee_with_proxy.cs",
        "Description": "when sofia can view private info",
        "WhenList": [
          "get assignee"
        ],
        "ThenList": [
          "should return ok",
          "should return proxy as assignee dto",
          "should return all of the links"
        ],
        "Children": []
      },
      {
        "$id": "399",
        "FileName": "when_get_assignee_with_proxy.cs",
        "Description": "when sofia cannot view private info but is in office",
        "WhenList": [
          "get assignee"
        ],
        "ThenList": [
          "should return ok",
          "should return proxy as assignee dto",
          "should not return update link"
        ],
        "Children": []
      },
      {
        "$id": "400",
        "FileName": "when_get_assignee_with_proxy.cs",
        "Description": "when sofia can only view proxy",
        "WhenList": [
          "get assignee"
        ],
        "ThenList": [
          "should return ok",
          "should return proxy as assignee dto",
          "should return no links"
        ],
        "Children": []
      },
      {
        "$id": "401",
        "FileName": "when_get_assignee_with_proxy.cs",
        "Description": "when sofia in a different practice type",
        "WhenList": [
          "get assignee"
        ],
        "ThenList": [
          "should return ok",
          "should not return proxy as assignee dto"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "402",
    "FileName": "when_get_assignee_with_specific_culture_by_account_id.cs",
    "Description": "when get assignee with specific culture by account id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "403",
        "FileName": "when_get_assignee_with_specific_culture_by_account_id.cs",
        "Description": "when get assignee with specific culture",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should load kayla succeed"
        ],
        "Children": []
      },
      {
        "$id": "404",
        "FileName": "when_get_assignee_with_specific_culture_by_account_id.cs",
        "Description": "when get assginee without specific culture",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should load kayla succeed"
        ],
        "Children": []
      },
      {
        "$id": "405",
        "FileName": "when_get_assignee_with_specific_culture_by_account_id.cs",
        "Description": "when get assignee from my taxex",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should get assignee successfully"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "406",
    "FileName": "when_resend_activation_code_to_proxy.cs",
    "Description": "when resend activation code to proxy",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "407",
        "FileName": "when_resend_activation_code_to_proxy.cs",
        "Description": "when sofia can send invitation",
        "WhenList": [
          "send activation code to proxy"
        ],
        "ThenList": [
          "should return 200",
          "should call notification service to send the email"
        ],
        "Children": []
      },
      {
        "$id": "408",
        "FileName": "when_resend_activation_code_to_proxy.cs",
        "Description": "when sofia cannot send invitation",
        "WhenList": [
          "send activation code to proxy"
        ],
        "ThenList": [
          "should return 403",
          "should not send the email"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "409",
    "FileName": "when_resend_invitation_to_proxy.cs",
    "Description": "when resend invitation to proxy",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "410",
        "FileName": "when_resend_invitation_to_proxy.cs",
        "Description": "when sofia can send invitation to kayla and proxy account is created",
        "WhenList": [
          "send invitation to proxy"
        ],
        "ThenList": [
          "should return 200",
          "should reset account",
          "should call notification service to send the email"
        ],
        "Children": []
      },
      {
        "$id": "411",
        "FileName": "when_resend_invitation_to_proxy.cs",
        "Description": "when sofia can send invitation to kayla and proxy account is not created",
        "WhenList": [
          "send invitation to proxy"
        ],
        "ThenList": [
          "should return 200",
          "should reset account",
          "should call notification service to send the email"
        ],
        "Children": []
      },
      {
        "$id": "412",
        "FileName": "when_resend_invitation_to_proxy.cs",
        "Description": "when sofia cannot send invitation to kayla",
        "WhenList": [
          "send invitation to proxy"
        ],
        "ThenList": [
          "should return 403",
          "should not reset account",
          "should not send email"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "413",
    "FileName": "when_sofia_remove_proxy_for_kayla.cs",
    "Description": "when sofia remove proxy for kayla",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "414",
        "FileName": "when_sofia_remove_proxy_for_kayla.cs",
        "Description": "when sofia can remove proxy",
        "WhenList": [
          "remove proxy"
        ],
        "ThenList": [
          "should return ok",
          "should delete proxy as assignee"
        ],
        "Children": []
      },
      {
        "$id": "415",
        "FileName": "when_sofia_remove_proxy_for_kayla.cs",
        "Description": "when sofia cannot remove proxy",
        "WhenList": [
          "remove proxy"
        ],
        "ThenList": [
          "should return 403"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "416",
    "FileName": "when_sofia_update_proxy.cs",
    "Description": "when sofia update proxy",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "417",
        "FileName": "when_sofia_update_proxy.cs",
        "Description": "when sofia can view private info",
        "WhenList": [
          "update proxy"
        ],
        "ThenList": [
          "should return ok",
          "should update account",
          "should update permission"
        ],
        "Children": []
      },
      {
        "$id": "418",
        "FileName": "when_sofia_update_proxy.cs",
        "Description": "when sofia cannot view private info",
        "WhenList": [
          "update proxy"
        ],
        "ThenList": [
          "should return forbidden",
          "should not update account",
          "should not update permission"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "419",
    "FileName": "when_add_staffs_to_restricted_assignee_acl_with_restricted_engagement.cs",
    "Description": "when add staffs to restricted assignee acl with restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "420",
        "FileName": "when_add_staffs_to_restricted_assignee_acl_with_restricted_engagement.cs",
        "Description": "should can add staff to assignee acl when current user both on assignee acl and engagement acl",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should return assignee dto with staff"
        ],
        "Children": []
      },
      {
        "$id": "421",
        "FileName": "when_add_staffs_to_restricted_assignee_acl_with_restricted_engagement.cs",
        "Description": "only can add restricted engagement acl staff to restricted assignee acl for restricted engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "422",
            "FileName": "when_add_staffs_to_restricted_assignee_acl_with_restricted_engagement.cs",
            "Description": "can add engagement admin to restricted assignee acl",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "423",
            "FileName": "when_add_staffs_to_restricted_assignee_acl_with_restricted_engagement.cs",
            "Description": "should forbid adding staffs who are not in restricted engagement acl",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should forbid adding"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "424",
    "FileName": "when_get_assignee_administration_permission.cs",
    "Description": "when get assignee administration permission",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "425",
        "FileName": "when_get_assignee_administration_permission.cs",
        "Description": "when get permission by current user not in restricted assignee acl",
        "WhenList": [
          "when get administration"
        ],
        "ThenList": [
          "should not get administration"
        ],
        "Children": []
      },
      {
        "$id": "426",
        "FileName": "when_get_assignee_administration_permission.cs",
        "Description": "when get permission by current user not tax contact of normal assignee",
        "WhenList": [
          "when get administration"
        ],
        "ThenList": [
          "should not get administration"
        ],
        "Children": []
      },
      {
        "$id": "427",
        "FileName": "when_get_assignee_administration_permission.cs",
        "Description": "when get permission by current user being tax contact of normal assignee",
        "WhenList": [
          "when get administration"
        ],
        "ThenList": [
          "should get administration"
        ],
        "Children": []
      },
      {
        "$id": "428",
        "FileName": "when_get_assignee_administration_permission.cs",
        "Description": "when get acl of restricted assignee",
        "WhenList": [
          "when get administration"
        ],
        "ThenList": [
          "should get administration"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "429",
    "FileName": "when_get_assignee_by_id_for_restricted_engagements.cs",
    "Description": "when get assignee by id for restricted engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "430",
        "FileName": "when_get_assignee_by_id_for_restricted_engagements.cs",
        "Description": "should get assignee with acl",
        "WhenList": [
          "when get"
        ],
        "ThenList": [
          "should get assignee",
          "should have restricted engagement acl in assignee dto"
        ],
        "Children": []
      },
      {
        "$id": "431",
        "FileName": "when_get_assignee_by_id_for_restricted_engagements.cs",
        "Description": "should get assignee with not in acl",
        "WhenList": [
          "when get"
        ],
        "ThenList": [
          "should get assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "432",
    "FileName": "when_get_assignee_with_account_by_id.cs",
    "Description": "when get assignee with account by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "433",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "should get assignee with global admin",
        "WhenList": [
          "when get"
        ],
        "ThenList": [
          "should get assignee"
        ],
        "Children": []
      },
      {
        "$id": "434",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "should get assignee with acl",
        "WhenList": [
          "when get"
        ],
        "ThenList": [
          "should get assignee"
        ],
        "Children": []
      },
      {
        "$id": "435",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "should get assignee with tax contact in engagement acl",
        "WhenList": [
          "when get"
        ],
        "ThenList": [
          "should get assignee"
        ],
        "Children": []
      },
      {
        "$id": "436",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "should get assignee with tax contact not in engagement acl",
        "WhenList": [
          "when get"
        ],
        "ThenList": [
          "should get assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "437",
    "FileName": "when_get_assignee_work_records.cs",
    "Description": "when get assignee work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "438",
        "FileName": "when_get_assignee_work_records.cs",
        "Description": "when get work record of restricted assignee with not acl user",
        "WhenList": [],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "439",
        "FileName": "when_get_assignee_work_records.cs",
        "Description": "when global admin get assignee work record information",
        "WhenList": [
          "get assignee workrecord"
        ],
        "ThenList": [
          "should get informations"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "440",
    "FileName": "when_get_online_briefing_work_records_by_account_id.cs",
    "Description": "when get online briefing work records by account id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "441",
        "FileName": "when_get_online_briefing_work_records_by_account_id.cs",
        "Description": "when briefing work records are in different milestones",
        "WhenList": [
          "get online briefing work records"
        ],
        "ThenList": [
          "should return ok",
          "should get online briefing work records"
        ],
        "Children": []
      },
      {
        "$id": "442",
        "FileName": "when_get_online_briefing_work_records_by_account_id.cs",
        "Description": "when briefing work records are in different service status",
        "WhenList": [
          "get online briefing work records"
        ],
        "ThenList": [
          "should return ok",
          "should get online briefing work records of no issues"
        ],
        "Children": []
      },
      {
        "$id": "443",
        "FileName": "when_get_online_briefing_work_records_by_account_id.cs",
        "Description": "when briefing work records have been scheduled",
        "WhenList": [
          "get online briefing work records"
        ],
        "ThenList": [
          "should return ok",
          "should get online briefing work record with scheduled time in assignee time zone"
        ],
        "Children": []
      },
      {
        "$id": "444",
        "FileName": "when_get_online_briefing_work_records_by_account_id.cs",
        "Description": "when briefing work records engagement associated to a custom scheduler",
        "WhenList": [
          "get online briefing work records"
        ],
        "ThenList": [
          "should return ok",
          "should get online briefing work records with custom scheduler"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "445",
    "FileName": "when_get_restricted_assignees_by_staff.cs",
    "Description": "when get restricted assignees by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "446",
        "FileName": "when_get_restricted_assignees_by_staff.cs",
        "Description": "when get restricted assignee with user not in acl",
        "WhenList": [
          "given restricted assignee"
        ],
        "ThenList": [
          "should not search the restricted assignee"
        ],
        "Children": []
      },
      {
        "$id": "447",
        "FileName": "when_get_restricted_assignees_by_staff.cs",
        "Description": "when get specific restricted assignee with user not in acl",
        "WhenList": [
          "given restricted assignee"
        ],
        "ThenList": [
          "should not get the restricted assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "448",
    "FileName": "when_remove_acl_should_reset_responsibility_for_incomplete_task_and_reset_questionnaire_contact.cs",
    "Description": "when remove acl should reset responsibility for incomplete task and reset questionnaire contact",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 200",
      "should set the responsibility null for incompleted task"
    ],
    "Children": []
  },
  {
    "$id": "449",
    "FileName": "when_search_restricted_assignee_by_staff.cs",
    "Description": "when search restricted assignee by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "450",
        "FileName": "when_search_restricted_assignee_by_staff.cs",
        "Description": "should not search out assignee with staff not in acl",
        "WhenList": [
          "when get"
        ],
        "ThenList": [
          "should not get assignee"
        ],
        "Children": []
      },
      {
        "$id": "451",
        "FileName": "when_search_restricted_assignee_by_staff.cs",
        "Description": "should search out assignee with staff not in acl but ignore acl check",
        "WhenList": [
          "when get"
        ],
        "ThenList": [
          "should not get assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "452",
    "FileName": "when_update_acl_normal_staffs.cs",
    "Description": "when update acl normal staffs",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "453",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "update acl normal staff when current user is pwc contact",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should return assignee dto with staff id",
          "should have event published"
        ],
        "Children": []
      },
      {
        "$id": "454",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "reset restricted should clearup acl",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should clear up acl list"
        ],
        "Children": []
      },
      {
        "$id": "455",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "can add working office staff when current user is pwc contact",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should return assignee dto with staffs"
        ],
        "Children": []
      },
      {
        "$id": "456",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "update acl normal staff when current user is global admin",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should return assignee dto with staff id"
        ],
        "Children": []
      },
      {
        "$id": "457",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "should forbid adding staff to acl when current user is not acl",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "458",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "should only add staff in coordinating office or working office to acl",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return bad request",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "459",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "should not add duplicate staff to acl",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return ok",
          "should return 1 acl normal staff"
        ],
        "Children": []
      },
      {
        "$id": "460",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "should not add pwc contact to acl",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return bad request",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "461",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "should update acl when current user is acl",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "462",
            "FileName": "when_update_acl_normal_staffs.cs",
            "Description": "should keep previous normal acl unchanged when add new staff",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return 200",
              "should return 4 acl normal staffs"
            ],
            "Children": []
          },
          {
            "$id": "463",
            "FileName": "when_update_acl_normal_staffs.cs",
            "Description": "can not remove other office staff from acl normal staffs",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "464",
            "FileName": "when_update_acl_normal_staffs.cs",
            "Description": "can not remove other staff with different practice type",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "465",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "should return acl staff without pwc contact when update restricted assignee acl",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should return assignee dto with all staff uris"
        ],
        "Children": []
      },
      {
        "$id": "466",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "should only add staff in same office with current user who is acl normal staff",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden",
          "should return error"
        ],
        "Children": []
      },
      {
        "$id": "467",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "should not add staff to acl when current user is acl normal staff with different practice type",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden",
          "should return error"
        ],
        "Children": []
      },
      {
        "$id": "468",
        "FileName": "when_update_acl_normal_staffs.cs",
        "Description": "should be able to add staff when current user is pwc contact even if in acl",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "469",
    "FileName": "when_update_assignee_administration.cs",
    "Description": "when update assignee administration",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "470",
        "FileName": "when_update_assignee_administration.cs",
        "Description": "should able update admin info with global admin",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "shoule update assignee info",
          "shoule have event"
        ],
        "Children": []
      },
      {
        "$id": "471",
        "FileName": "when_update_assignee_administration.cs",
        "Description": "should able update admin info with tax contact",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "shoule update assignee info"
        ],
        "Children": []
      },
      {
        "$id": "472",
        "FileName": "when_update_assignee_administration.cs",
        "Description": "should not able update admin info with acl",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "shoule update assignee info"
        ],
        "Children": []
      },
      {
        "$id": "473",
        "FileName": "when_update_assignee_administration.cs",
        "Description": "should not able update admin info with not acl",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "shoule update assignee info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "474",
    "FileName": "when_update_assignee_contacts.cs",
    "Description": "when update assignee contacts",
    "WhenList": [
      "when set acl normal staff as contact"
    ],
    "ThenList": [
      "should return 200",
      "should update the contacts and remove acl normal staff"
    ],
    "Children": []
  },
  {
    "$id": "475",
    "FileName": "should_only_return_my_taxes_assignee_when_search_assignees.cs",
    "Description": "should only return my taxes assignee when search assignees",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "476",
        "FileName": "should_only_return_my_taxes_assignee_when_search_assignees.cs",
        "Description": "when search assignee for batch sending my taxes invitation",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return ok",
          "should only return my taxes assignee"
        ],
        "Children": []
      },
      {
        "$id": "477",
        "FileName": "should_only_return_my_taxes_assignee_when_search_assignees.cs",
        "Description": "when search all assignee when practce is all",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return ok",
          "should return all assignee of all practice type"
        ],
        "Children": []
      },
      {
        "$id": "478",
        "FileName": "should_only_return_my_taxes_assignee_when_search_assignees.cs",
        "Description": "when search assignee for batch sending my taxes invitation which not been sent",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return ok",
          "should return all assignee of all practice type"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "479",
    "FileName": "when_fuzzy_search_assignee_by_name.cs",
    "Description": "when fuzzy search assignee by name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "480",
        "FileName": "when_fuzzy_search_assignee_by_name.cs",
        "Description": "when search by informal name",
        "WhenList": [],
        "ThenList": [
          "should return two kayla when searching for kay",
          "should return assignee with spaces in his name by full name",
          "should return assignee with spaces in his name by formal name",
          "should return no assignee when searching with blank",
          "should return sorted assignees when searching with many results",
          "should return one assignee when searching limited 1"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "481",
    "FileName": "when_fuzzy_search_assignee_filtered_by_engagement.cs",
    "Description": "when fuzzy search assignee filtered by engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "482",
        "FileName": "when_fuzzy_search_assignee_filtered_by_engagement.cs",
        "Description": "when search by informal name",
        "WhenList": [],
        "ThenList": [
          "should return two kayla when searching for kay"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "483",
    "FileName": "when_fuzzy_search_inactive_assignee.cs",
    "Description": "when fuzzy search inactive assignee",
    "WhenList": [
      "search inactive assignee"
    ],
    "ThenList": [
      "should return ok",
      "should return only acitive assignee when searching with string act"
    ],
    "Children": []
  },
  {
    "$id": "484",
    "FileName": "when_search_assignee_by_criteria.cs",
    "Description": "when search assignee by criteria",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "485",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by name",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee",
          "should return correct links"
        ],
        "Children": []
      },
      {
        "$id": "486",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by engagement and top is 3 and some assignee has more than one contacts",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "487",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by engagement and top is 4 and some assignee has more than one engagement",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "488",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by engagement",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "489",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by coordinating office",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "490",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by home country",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "491",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by host country",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "492",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by status",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "493",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by engagement and coordinating office",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "494",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee not exist",
        "WhenList": [
          "send a search request"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return correct assignee"
        ],
        "Children": []
      },
      {
        "$id": "495",
        "FileName": "when_search_assignee_by_criteria.cs",
        "Description": "when search assignee by show all assignee except deleted",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "496",
            "FileName": "when_search_assignee_by_criteria.cs",
            "Description": "when show all assignee except deleted is true",
            "WhenList": [
              "send a search request to find inactive"
            ],
            "ThenList": [
              "should contain inactive assignee"
            ],
            "Children": []
          },
          {
            "$id": "497",
            "FileName": "when_search_assignee_by_criteria.cs",
            "Description": "when show all assignee except deleted is false",
            "WhenList": [
              "send a search request to find inactive"
            ],
            "ThenList": [
              "should contain not inactive assignee"
            ],
            "Children": []
          },
          {
            "$id": "498",
            "FileName": "when_search_assignee_by_criteria.cs",
            "Description": "when selected assignee is deleted",
            "WhenList": [
              "send a search request"
            ],
            "ThenList": [
              "should not contain deleted assignee"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "499",
    "FileName": "when_search_assignee_go_migration_inactive.cs",
    "Description": "when search assignee go migration inactive",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "500",
        "FileName": "when_search_assignee_go_migration_inactive.cs",
        "Description": "when quick search",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return ok",
          "should return two assignees"
        ],
        "Children": []
      },
      {
        "$id": "501",
        "FileName": "when_search_assignee_go_migration_inactive.cs",
        "Description": "when advanced search",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return ok",
          "should return one assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "502",
    "FileName": "when_search_assignee_with_inactive_engagement.cs",
    "Description": "when search assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "503",
        "FileName": "when_search_assignee_with_inactive_engagement.cs",
        "Description": "should not search out assignee whose engagements are all inactive",
        "WhenList": [
          "when search"
        ],
        "ThenList": [
          "should not get assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "504",
    "FileName": "when_search_deleted_assignee.cs",
    "Description": "when search deleted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "505",
        "FileName": "when_search_deleted_assignee.cs",
        "Description": "should search out assignee",
        "WhenList": [
          "when search"
        ],
        "ThenList": [
          "should get assignee"
        ],
        "Children": []
      },
      {
        "$id": "506",
        "FileName": "when_search_deleted_assignee.cs",
        "Description": "should not search out deleted assignee",
        "WhenList": [
          "when search"
        ],
        "ThenList": [
          "should not get assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "507",
    "FileName": "when_update_assignee.cs",
    "Description": "when update assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "508",
        "FileName": "when_update_assignee.cs",
        "Description": "subscribed office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "509",
            "FileName": "when_update_assignee.cs",
            "Description": "when the staff office is NOT subscribed in one of kayla engagements offices",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "510",
            "FileName": "when_update_assignee.cs",
            "Description": "when the staff office is subscribed in one of kayla engagements work offices",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "511",
                "FileName": "when_update_assignee.cs",
                "Description": "when edit assignees public info",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              },
              {
                "$id": "512",
                "FileName": "when_update_assignee.cs",
                "Description": "when edit assignees pii",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return forbidden"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "513",
        "FileName": "when_update_assignee.cs",
        "Description": "general contact",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "514",
            "FileName": "when_update_assignee.cs",
            "Description": "when the staff office is general contact of kayla",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "515",
                "FileName": "when_update_assignee.cs",
                "Description": "when edit assignees public info",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              },
              {
                "$id": "516",
                "FileName": "when_update_assignee.cs",
                "Description": "when unsubscribed office contact is editing assignees public information",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              },
              {
                "$id": "517",
                "FileName": "when_update_assignee.cs",
                "Description": "when edit assignees pii",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "518",
        "FileName": "when_update_assignee.cs",
        "Description": "delegated office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "519",
            "FileName": "when_update_assignee.cs",
            "Description": "when the staff office is a delegated office",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "520",
                "FileName": "when_update_assignee.cs",
                "Description": "when edit assignees public info",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              },
              {
                "$id": "521",
                "FileName": "when_update_assignee.cs",
                "Description": "when edit assignees pii",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return forbidden"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "522",
            "FileName": "when_update_assignee.cs",
            "Description": "when the staff is delegated staff",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "523",
                "FileName": "when_update_assignee.cs",
                "Description": "when edit assignees public info",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              },
              {
                "$id": "524",
                "FileName": "when_update_assignee.cs",
                "Description": "when edit assignees pii",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "525",
        "FileName": "when_update_assignee.cs",
        "Description": "when the staff is in work record team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "526",
            "FileName": "when_update_assignee.cs",
            "Description": "when edit assignees public info",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "527",
            "FileName": "when_update_assignee.cs",
            "Description": "when edit assignees pii",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "528",
    "FileName": "when_update_assignee_assignment.cs",
    "Description": "when update assignee assignment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "529",
        "FileName": "when_update_assignee_assignment.cs",
        "Description": "subscribed office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "530",
            "FileName": "when_update_assignee_assignment.cs",
            "Description": "when the staff office is NOT subscribed in one of kayla engagements offices",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "531",
            "FileName": "when_update_assignee_assignment.cs",
            "Description": "when the staff office is subscribed in one of kayla engagements work offices",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "532",
                "FileName": "when_update_assignee_assignment.cs",
                "Description": "when edit assignees public info",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "533",
        "FileName": "when_update_assignee_assignment.cs",
        "Description": "general contact",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "534",
            "FileName": "when_update_assignee_assignment.cs",
            "Description": "when the staff office is general contact of kayla",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "535",
                "FileName": "when_update_assignee_assignment.cs",
                "Description": "when edit assignees public info",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              },
              {
                "$id": "536",
                "FileName": "when_update_assignee_assignment.cs",
                "Description": "when unsubscribed office contact is editing assignees public information",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "537",
        "FileName": "when_update_assignee_assignment.cs",
        "Description": "delegated office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "538",
            "FileName": "when_update_assignee_assignment.cs",
            "Description": "when the staff office is a delegated office",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "539",
                "FileName": "when_update_assignee_assignment.cs",
                "Description": "when edit assignees public info",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "540",
            "FileName": "when_update_assignee_assignment.cs",
            "Description": "when the staff is delegated staff",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "541",
                "FileName": "when_update_assignee_assignment.cs",
                "Description": "when edit assignees public info",
                "WhenList": [
                  "update"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "542",
        "FileName": "when_update_assignee_assignment.cs",
        "Description": "when the staff is in work record team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "543",
            "FileName": "when_update_assignee_assignment.cs",
            "Description": "when edit assignees public info",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "544",
    "FileName": "when_update_assignee_basic_details_with_correct_request.cs",
    "Description": "when update assignee basic details with correct request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "545",
        "FileName": "when_update_assignee_basic_details_with_correct_request.cs",
        "Description": "should success when staffs office in kaylas engagement offices",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return 200",
          "should update success"
        ],
        "Children": []
      },
      {
        "$id": "546",
        "FileName": "when_update_assignee_basic_details_with_correct_request.cs",
        "Description": "should return forbidden when update pii but staffs office not in assignees engagement offices",
        "WhenList": [
          "update assignee"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "547",
        "FileName": "when_update_assignee_basic_details_with_correct_request.cs",
        "Description": "should return forbidden when update non pii but staffs office not in assignees engagement offices",
        "WhenList": [
          "update assignee"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "548",
    "FileName": "when_update_assignee_country_custom_field_value.cs",
    "Description": "when update assignee country custom field value",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "549",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "when staff is in coordinating office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "550",
            "FileName": "when_update_assignee_country_custom_field_value.cs",
            "Description": "before self nomination",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "551",
            "FileName": "when_update_assignee_country_custom_field_value.cs",
            "Description": "after self nomination",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "552",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "when staff is in work record responsible office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "553",
            "FileName": "when_update_assignee_country_custom_field_value.cs",
            "Description": "when update all country custom field",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "554",
            "FileName": "when_update_assignee_country_custom_field_value.cs",
            "Description": "when update us and public uk custom fields",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return OK"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "555",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "when staff is in work record team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "556",
            "FileName": "when_update_assignee_country_custom_field_value.cs",
            "Description": "when update all country custom field",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "557",
            "FileName": "when_update_assignee_country_custom_field_value.cs",
            "Description": "when update us and public uk custom fields",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return OK"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "558",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "when staff is work record delegated staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "559",
            "FileName": "when_update_assignee_country_custom_field_value.cs",
            "Description": "when update all country custom field",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "560",
            "FileName": "when_update_assignee_country_custom_field_value.cs",
            "Description": "when update us and public uk custom fields",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return OK"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "561",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "when staff is in work record delegated office",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "562",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "when staff is in work office",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "563",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "when staff is in unsuscribed office",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "564",
        "FileName": "when_update_assignee_country_custom_field_value.cs",
        "Description": "when staff is general contact",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "565",
    "FileName": "when_update_assignee_family_member_details_with_correct_request.cs",
    "Description": "when update assignee family member details with correct request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "566",
        "FileName": "when_update_assignee_family_member_details_with_correct_request.cs",
        "Description": "should success when staffs office in kaylas engagement coordinating office",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return 200",
          "should update success"
        ],
        "Children": []
      },
      {
        "$id": "567",
        "FileName": "when_update_assignee_family_member_details_with_correct_request.cs",
        "Description": "should not update family member pii info",
        "WhenList": [
          "update assignee"
        ],
        "ThenList": [
          "should return ok",
          "should update success and not update pii info"
        ],
        "Children": []
      },
      {
        "$id": "568",
        "FileName": "when_update_assignee_family_member_details_with_correct_request.cs",
        "Description": "should return forbidden when staffs office not in assignees engagement offices",
        "WhenList": [
          "update assignee"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "569",
    "FileName": "when_update_assignee_family_member_details_with_invalid_request.cs",
    "Description": "when update assignee family member details with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "570",
        "FileName": "when_update_assignee_family_member_details_with_invalid_request.cs",
        "Description": "when update with null relationship",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "571",
        "FileName": "when_update_assignee_family_member_details_with_invalid_request.cs",
        "Description": "when update with null dependent name",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "572",
        "FileName": "when_update_assignee_family_member_details_with_invalid_request.cs",
        "Description": "when update with 256 dependent name",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "573",
        "FileName": "when_update_assignee_family_member_details_with_invalid_request.cs",
        "Description": "when update with family members include null",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "574",
    "FileName": "when_update_assignee_passports.cs",
    "Description": "when update assignee passports",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "575",
        "FileName": "when_update_assignee_passports.cs",
        "Description": "should success when staffs office in kaylas engagement coordinating office",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return 200",
          "should update success"
        ],
        "Children": []
      },
      {
        "$id": "576",
        "FileName": "when_update_assignee_passports.cs",
        "Description": "should return forbidden when staffs office not in assignees engagement offices",
        "WhenList": [
          "update assignee"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "577",
    "FileName": "when_update_assignee_passports_with_work_record.cs",
    "Description": "when update assignee passports with work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "578",
        "FileName": "when_update_assignee_passports_with_work_record.cs",
        "Description": "should success when a staff is assigned to work record task",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return 200",
          "should update success"
        ],
        "Children": []
      },
      {
        "$id": "579",
        "FileName": "when_update_assignee_passports_with_work_record.cs",
        "Description": "should have access when staffs are in work record team",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return 200",
          "should update success"
        ],
        "Children": []
      },
      {
        "$id": "580",
        "FileName": "when_update_assignee_passports_with_work_record.cs",
        "Description": "should return forbidden when staffs is not assigned to work record task",
        "WhenList": [
          "update assignee"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "581",
    "FileName": "when_get_assignee_by_account_id.cs",
    "Description": "when get assignee by account id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "582",
        "FileName": "when_get_assignee_by_account_id.cs",
        "Description": "when account id is invalid",
        "WhenList": [
          "load"
        ],
        "ThenList": [
          "should return 404 NOT FOUND as status code"
        ],
        "Children": []
      },
      {
        "$id": "583",
        "FileName": "when_get_assignee_by_account_id.cs",
        "Description": "when current user is a general contact",
        "WhenList": [
          "load assignee"
        ],
        "ThenList": [
          "should return ok",
          "should load kayla details",
          "should load assignee pii"
        ],
        "Children": []
      },
      {
        "$id": "584",
        "FileName": "when_get_assignee_by_account_id.cs",
        "Description": "when current user office is in unsuscribed office",
        "WhenList": [
          "load assignee public data"
        ],
        "ThenList": [
          "should return ok",
          "should not load kayla pii",
          "should not contain self nomination link"
        ],
        "Children": []
      },
      {
        "$id": "585",
        "FileName": "when_get_assignee_by_account_id.cs",
        "Description": "when current user is immigration user",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not contain tax custom fields and different country custom fields"
        ],
        "Children": []
      },
      {
        "$id": "586",
        "FileName": "when_get_assignee_by_account_id.cs",
        "Description": "when current user is in coordinating office and is self nominated",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should load kayla successfully",
          "should be able to view private custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "587",
    "FileName": "when_get_assignee_by_account_id_with_work_record.cs",
    "Description": "when get assignee by account id with work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "588",
        "FileName": "when_get_assignee_by_account_id_with_work_record.cs",
        "Description": "when staff is assigned to work record task",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should load assignee succeed"
        ],
        "Children": []
      },
      {
        "$id": "589",
        "FileName": "when_get_assignee_by_account_id_with_work_record.cs",
        "Description": "when staff is in work record team",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should load assignee succeed"
        ],
        "Children": []
      },
      {
        "$id": "590",
        "FileName": "when_get_assignee_by_account_id_with_work_record.cs",
        "Description": "when staff in engagement coordinating office and assigned to a work record task",
        "WhenList": [
          "load"
        ],
        "ThenList": [
          "should load kayla succeed",
          "should not contain self nomination link"
        ],
        "Children": []
      },
      {
        "$id": "591",
        "FileName": "when_get_assignee_by_account_id_with_work_record.cs",
        "Description": "when staff office is unsuscribed office",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should load assignee succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "592",
    "FileName": "when_get_assignee_by_id.cs",
    "Description": "when get assignee by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "593",
        "FileName": "when_get_assignee_by_id.cs",
        "Description": "subscribed office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "594",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when the staff office is subscribed in one of the assignee engagements work offices",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "should return ok",
              "should return vip link",
              "should not return pii",
              "should return upload link",
              "should not return restricted link",
              "should not return pending deletion link",
              "should not return self nomination link"
            ],
            "Children": []
          },
          {
            "$id": "595",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when the staff office is subscribed in one of the assignee engagements coordinating offices",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "596",
                "FileName": "when_get_assignee_by_id.cs",
                "Description": "before self nominate",
                "WhenList": [
                  "load assignee data"
                ],
                "ThenList": [
                  "should return ok",
                  "should not return pii",
                  "should return edit link",
                  "should return delete link",
                  "should return upload link",
                  "should return self nomination link",
                  "should not return private custom fields"
                ],
                "Children": []
              },
              {
                "$id": "597",
                "FileName": "when_get_assignee_by_id.cs",
                "Description": "after self nominate",
                "WhenList": [
                  "load assignee data"
                ],
                "ThenList": [
                  "should return ok",
                  "should return private country custom field",
                  "should load kayla successfully"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "598",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when the staff office is a delegated office",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "should return ok",
              "should not return pii",
              "should return upload link",
              "shold return delete link",
              "should return self nomination link",
              "should not return impersonation link",
              "should not return private custom fields"
            ],
            "Children": []
          },
          {
            "$id": "599",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when the staff is delegated staff",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "should return ok",
              "should not have has self nominated text",
              "should return pii",
              "should return upload link",
              "should return public and private custom fields"
            ],
            "Children": []
          },
          {
            "$id": "600",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when the staff works for 2 work records as delegated staff and delegated office",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "should return ok",
              "should not have has self nominated text",
              "should return pii",
              "should return upload link",
              "should return public and private us custom fields and public uk custom fields"
            ],
            "Children": []
          },
          {
            "$id": "601",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when the staff office is coordinating office and staff is responsible of work record",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "should return ok",
              "should return pii",
              "should return edit link",
              "should return upload link",
              "should no need self nominate",
              "should return public and private us country custom fields"
            ],
            "Children": []
          },
          {
            "$id": "602",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when the staff is work record responsible office",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "should return ok",
              "should not have has self nominated text",
              "should return pii",
              "should return upload link",
              "should return public and private custom fields"
            ],
            "Children": []
          },
          {
            "$id": "603",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when staff is in work record team",
            "WhenList": [
              "load assignee data"
            ],
            "ThenList": [
              "should return ok",
              "should not have has self nominated text",
              "should return pii",
              "should return upload link",
              "should return public and private custom fields"
            ],
            "Children": []
          },
          {
            "$id": "604",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when the staff has different practice type",
            "WhenList": [
              "get assignee details"
            ],
            "ThenList": [
              "should return 200 OK",
              "should not contains tax custom fields"
            ],
            "Children": []
          },
          {
            "$id": "605",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when current user is in restricted assignee acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should get admin link",
              "should get delete link"
            ],
            "Children": []
          },
          {
            "$id": "606",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when current user is not in restricted assignee acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "607",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when staff is subscribed to normal engagement but not in acl of another restricted engagement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "608",
        "FileName": "when_get_assignee_by_id.cs",
        "Description": "unsubscribed office",
        "WhenList": [
          "load assignee data"
        ],
        "ThenList": [
          "should return ok",
          "should not return pii data",
          "should not return upload link",
          "should not return self nomination link",
          "should not return edit link",
          "should not return restricted link",
          "should return public custom fields"
        ],
        "Children": []
      },
      {
        "$id": "609",
        "FileName": "when_get_assignee_by_id.cs",
        "Description": "general contact",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "610",
            "FileName": "when_get_assignee_by_id.cs",
            "Description": "when general contact get assignee by id",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return pii",
              "should return edit link",
              "should return upload link",
              "should return delete link",
              "should not return self nomination link",
              "should return restricted assignee link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "611",
        "FileName": "when_get_assignee_by_id.cs",
        "Description": "staff who create assignee",
        "WhenList": [
          "get assignee"
        ],
        "ThenList": [
          "should return delete link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "612",
    "FileName": "when_get_assignee_by_id_with_work_record.cs",
    "Description": "when get assignee by id with work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "613",
        "FileName": "when_get_assignee_by_id_with_work_record.cs",
        "Description": "when staff is assigned to work record task",
        "WhenList": [
          "load assignee"
        ],
        "ThenList": [
          "should load kayla succeed"
        ],
        "Children": []
      },
      {
        "$id": "614",
        "FileName": "when_get_assignee_by_id_with_work_record.cs",
        "Description": "when staff is in work record team",
        "WhenList": [
          "load assignee"
        ],
        "ThenList": [
          "should load kayla succeed"
        ],
        "Children": []
      },
      {
        "$id": "615",
        "FileName": "when_get_assignee_by_id_with_work_record.cs",
        "Description": "when staff is not assigned to work record task",
        "WhenList": [
          "load assignee"
        ],
        "ThenList": [
          "should return ok",
          "should load kayla succeed"
        ],
        "Children": []
      },
      {
        "$id": "616",
        "FileName": "when_get_assignee_by_id_with_work_record.cs",
        "Description": "when staff is not assigned to work record task and has self nominated",
        "WhenList": [
          "load assignee"
        ],
        "ThenList": [
          "should load kayla succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "617",
    "FileName": "when_get_assignee_details_with_custom_fields.cs",
    "Description": "when get assignee details with custom fields",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "618",
        "FileName": "when_get_assignee_details_with_custom_fields.cs",
        "Description": "when normal engagements",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "619",
            "FileName": "when_get_assignee_details_with_custom_fields.cs",
            "Description": "when the current user is not self nominate",
            "WhenList": [
              "get assignee details"
            ],
            "ThenList": [
              "should return 200 OK",
              "should not contains private custom fields"
            ],
            "Children": []
          },
          {
            "$id": "620",
            "FileName": "when_get_assignee_details_with_custom_fields.cs",
            "Description": "when the current user is self nominate",
            "WhenList": [
              "get assignee details"
            ],
            "ThenList": [
              "should return 200 OK",
              "should contains the private custom fields of the engagements"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "621",
        "FileName": "when_get_assignee_details_with_custom_fields.cs",
        "Description": "when staff subscried to one engagement but cannot access restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not contains custom fields from restricted engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "622",
    "FileName": "when_get_assignee_with_account_by_id.cs",
    "Description": "when get assignee with account by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "623",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "when staff office in kaylas engagement coordinating offices after self nomination",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should load kayla succeed",
          "should contain private country custom fields"
        ],
        "Children": []
      },
      {
        "$id": "624",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "when staffs office not in kaylas engagement offices",
        "WhenList": [
          "load assignee public data"
        ],
        "ThenList": [
          "should return ok",
          "should not load kayla pii"
        ],
        "Children": []
      },
      {
        "$id": "625",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "when staffs office in kaylas engagement offices and has not self nomiate",
        "WhenList": [
          "load assignee public data"
        ],
        "ThenList": [
          "should return ok",
          "should not load kayla pii"
        ],
        "Children": []
      },
      {
        "$id": "626",
        "FileName": "when_get_assignee_with_account_by_id.cs",
        "Description": "should not get tax custom fields when current users practice type is immigration",
        "WhenList": [
          "get assignee details"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not contains tax custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "627",
    "FileName": "when_get_assignee_with_account_by_id_with_work_record.cs",
    "Description": "when get assignee with account by id with work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "628",
        "FileName": "when_get_assignee_with_account_by_id_with_work_record.cs",
        "Description": "when staff is assigned to work record task",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should load kayla succeed"
        ],
        "Children": []
      },
      {
        "$id": "629",
        "FileName": "when_get_assignee_with_account_by_id_with_work_record.cs",
        "Description": "when staff is in work record team",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should load kayla succeed"
        ],
        "Children": []
      },
      {
        "$id": "630",
        "FileName": "when_get_assignee_with_account_by_id_with_work_record.cs",
        "Description": "when staff is not assigned to work record task",
        "WhenList": [
          "load assignee public data"
        ],
        "ThenList": [
          "should return ok",
          "should not load kayla pii"
        ],
        "Children": []
      },
      {
        "$id": "631",
        "FileName": "when_get_assignee_with_account_by_id_with_work_record.cs",
        "Description": "when staff is not assigned to work record task and account service cash",
        "WhenList": [
          "load assignee public data"
        ],
        "ThenList": [
          "should return 203",
          "should not load kayla pii"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "632",
    "FileName": "when_get_hidden_assignee_by_id.cs",
    "Description": "when get hidden assignee by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "633",
        "FileName": "when_get_hidden_assignee_by_id.cs",
        "Description": "when general contact get assignee by id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not return impersonation link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "634",
    "FileName": "when_get_work_records_resource_by_assignee_id.cs",
    "Description": "when get work records resource by assignee id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "635",
        "FileName": "when_get_work_records_resource_by_assignee_id.cs",
        "Description": "subscribed office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "636",
            "FileName": "when_get_work_records_resource_by_assignee_id.cs",
            "Description": "when staff in unsubscribed office",
            "WhenList": [
              "getting work records"
            ],
            "ThenList": [
              "should return ok",
              "should not contain the work record uri for tax work record"
            ],
            "Children": []
          },
          {
            "$id": "637",
            "FileName": "when_get_work_records_resource_by_assignee_id.cs",
            "Description": "when staff in assignees engagements work offices",
            "WhenList": [
              "getting work records"
            ],
            "ThenList": [
              "should return ok",
              "should contain work record public info"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "638",
        "FileName": "when_get_work_records_resource_by_assignee_id.cs",
        "Description": "when staff in work record team",
        "WhenList": [
          "getting work records"
        ],
        "ThenList": [
          "should return ok",
          "should contain work record public info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "639",
    "FileName": "when_get_assignee_verify_link.cs",
    "Description": "when get assignee verify link",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "640",
        "FileName": "when_get_assignee_verify_link.cs",
        "Description": "given assignee to be verified by tiger",
        "WhenList": [
          "when get assignee"
        ],
        "ThenList": [
          "should get verify link"
        ],
        "Children": []
      },
      {
        "$id": "641",
        "FileName": "when_get_assignee_verify_link.cs",
        "Description": "given assignee verify process not created",
        "WhenList": [
          "when get assignee"
        ],
        "ThenList": [
          "should not get verify link"
        ],
        "Children": []
      },
      {
        "$id": "642",
        "FileName": "when_get_assignee_verify_link.cs",
        "Description": "given assignee not to be verified by tiger",
        "WhenList": [
          "when get assignee"
        ],
        "ThenList": [
          "should not get verify link"
        ],
        "Children": []
      },
      {
        "$id": "643",
        "FileName": "when_get_assignee_verify_link.cs",
        "Description": "given sofia has no relation with kayla",
        "WhenList": [
          "when get assignee"
        ],
        "ThenList": [
          "should not get verify link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "644",
    "FileName": "when_immigration_staff_updates_assignee_tax_custom_field_value_with_correct_request.cs",
    "Description": "when immigration staff updates assignee tax custom field value with correct request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "645",
        "FileName": "when_immigration_staff_updates_assignee_tax_custom_field_value_with_correct_request.cs",
        "Description": "when update engagement custom field",
        "WhenList": [
          "of update assignee custom field value"
        ],
        "ThenList": [
          "should return forbidden",
          "should not update the custom fields"
        ],
        "Children": []
      },
      {
        "$id": "646",
        "FileName": "when_immigration_staff_updates_assignee_tax_custom_field_value_with_correct_request.cs",
        "Description": "when update country custom field",
        "WhenList": [
          "of update assignee custom field value"
        ],
        "ThenList": [
          "should return forbidden",
          "should not update the custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "647",
    "FileName": "when_impersonate_assignee.cs",
    "Description": "when impersonate assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "648",
        "FileName": "when_impersonate_assignee.cs",
        "Description": "should get ticket when staffs office in assignee engagement coordinating office",
        "WhenList": [
          "impersonate"
        ],
        "ThenList": [
          "should success",
          "should get tick"
        ],
        "Children": []
      },
      {
        "$id": "649",
        "FileName": "when_impersonate_assignee.cs",
        "Description": "should failed when staffs office not in assignees offices",
        "WhenList": [
          "forward impersonate"
        ],
        "ThenList": [
          "should failed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "650",
    "FileName": "when_impersonate_assignee_with_work_record.cs",
    "Description": "when impersonate assignee with work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "651",
        "FileName": "when_impersonate_assignee_with_work_record.cs",
        "Description": "should get ticket when staffs is assigned to work record task",
        "WhenList": [
          "impersonate"
        ],
        "ThenList": [
          "should success",
          "should get ticket"
        ],
        "Children": []
      },
      {
        "$id": "652",
        "FileName": "when_impersonate_assignee_with_work_record.cs",
        "Description": "should get ticket when a staff is in work record team",
        "WhenList": [
          "impersonate"
        ],
        "ThenList": [
          "should success",
          "should get ticket"
        ],
        "Children": []
      },
      {
        "$id": "653",
        "FileName": "when_impersonate_assignee_with_work_record.cs",
        "Description": "should failed when staffs is not assigned to work record task",
        "WhenList": [
          "forward impersonate"
        ],
        "ThenList": [
          "should failed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "654",
    "FileName": "when_resend_invitation.cs",
    "Description": "when resend invitation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "655",
        "FileName": "when_resend_invitation.cs",
        "Description": "when app subscripted but credential didnot created",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should send invitation email"
        ],
        "Children": []
      },
      {
        "$id": "656",
        "FileName": "when_resend_invitation.cs",
        "Description": "should forbidden to resend invitation when staffs office does not related to assignees engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden as status code",
          "should not send invitation email"
        ],
        "Children": []
      },
      {
        "$id": "657",
        "FileName": "when_resend_invitation.cs",
        "Description": "when connection error",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 500 internal server error"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "658",
    "FileName": "when_send_email_for_assignee.cs",
    "Description": "when send email for assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should send invitation email",
      "should record email send history"
    ],
    "Children": []
  },
  {
    "$id": "659",
    "FileName": "when_send_email_for_assignee.cs",
    "Description": "when send multiple email for tax equalization",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should send invitation email",
      "should record email send history"
    ],
    "Children": []
  },
  {
    "$id": "660",
    "FileName": "when_send_or_when_resend_invitation.cs",
    "Description": "when send or when resend invitation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "661",
        "FileName": "when_send_or_when_resend_invitation.cs",
        "Description": "when subscription does not exist",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return created subscription",
          "should send invitation email"
        ],
        "Children": []
      },
      {
        "$id": "662",
        "FileName": "when_send_or_when_resend_invitation.cs",
        "Description": "should create subscription by application id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return created subscription",
          "should send invitation email"
        ],
        "Children": []
      },
      {
        "$id": "663",
        "FileName": "when_send_or_when_resend_invitation.cs",
        "Description": "should forbidden to send invitation when staffs office does not related to assignees engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden as status code",
          "should not send invitation email"
        ],
        "Children": [
          {
            "$id": "664",
            "FileName": "when_send_or_when_resend_invitation.cs",
            "Description": "when app subscripted but credential didnot created",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should send invitation email"
            ],
            "Children": []
          },
          {
            "$id": "665",
            "FileName": "when_send_or_when_resend_invitation.cs",
            "Description": "when assignee has no general contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 409 conflict as status code",
              "should not create subscription"
            ],
            "Children": []
          },
          {
            "$id": "666",
            "FileName": "when_send_or_when_resend_invitation.cs",
            "Description": "when account credential was created",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should send activation email"
            ],
            "Children": []
          },
          {
            "$id": "667",
            "FileName": "when_send_or_when_resend_invitation.cs",
            "Description": "when my travel account credential was created",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should send activation email"
            ],
            "Children": []
          },
          {
            "$id": "668",
            "FileName": "when_send_or_when_resend_invitation.cs",
            "Description": "should forbidden to reset account when staffs office does not related to assignees engagement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden as status code",
              "should not send activation email"
            ],
            "Children": []
          },
          {
            "$id": "669",
            "FileName": "when_send_or_when_resend_invitation.cs",
            "Description": "when connection error",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 500 internal server error"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "670",
    "FileName": "when_update_assignee_address_details_with_correct_request.cs",
    "Description": "when update assignee address details with correct request",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 200",
      "should update account info"
    ],
    "Children": []
  },
  {
    "$id": "671",
    "FileName": "when_update_assignee_address_details_with_invalid_request.cs",
    "Description": "when update assignee address details with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "672",
        "FileName": "when_update_assignee_address_details_with_invalid_request.cs",
        "Description": "when update with invalid gender",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "673",
    "FileName": "when_update_assignee_and_account_service_is_unavailable.cs",
    "Description": "when update assignee and account service is unavailable",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 503 service unavailable"
    ],
    "Children": []
  },
  {
    "$id": "674",
    "FileName": "when_update_assignee_assignments_details_with_correct_request.cs",
    "Description": "when update assignee assignments details with correct request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "675",
        "FileName": "when_update_assignee_assignments_details_with_correct_request.cs",
        "Description": "when update assignment normally",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update assignee assignment rather than remove it and add a new one",
          "should update account host country"
        ],
        "Children": []
      },
      {
        "$id": "676",
        "FileName": "when_update_assignee_assignments_details_with_correct_request.cs",
        "Description": "when try to update assignment with null assignment type",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should delete assignment type"
        ],
        "Children": []
      },
      {
        "$id": "677",
        "FileName": "when_update_assignee_assignments_details_with_correct_request.cs",
        "Description": "when add assignment",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should add new assignment",
          "should update account host country"
        ],
        "Children": []
      },
      {
        "$id": "678",
        "FileName": "when_update_assignee_assignments_details_with_correct_request.cs",
        "Description": "when update assignment with invalid assignment type",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return conflict",
          "should not update assignment"
        ],
        "Children": []
      },
      {
        "$id": "679",
        "FileName": "when_update_assignee_assignments_details_with_correct_request.cs",
        "Description": "when add assignment with null assignment type",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should add new assignment",
          "should update account host country"
        ],
        "Children": []
      },
      {
        "$id": "680",
        "FileName": "when_update_assignee_assignments_details_with_correct_request.cs",
        "Description": "when delete assignment",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should delete assignment",
          "should set work record assignment to null"
        ],
        "Children": []
      },
      {
        "$id": "681",
        "FileName": "when_update_assignee_assignments_details_with_correct_request.cs",
        "Description": "when add and delete assignment at the same time",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should add and delete assignment",
          "should update account host country"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "682",
    "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
    "Description": "when update assignee assignments details with custom fields",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "683",
        "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
        "Description": "when add value for existing assignment custom field",
        "WhenList": [
          "add assignment custom field value"
        ],
        "ThenList": [
          "should return 200",
          "should add assignment custom field value"
        ],
        "Children": []
      },
      {
        "$id": "684",
        "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
        "Description": "should update assignment customfiled value for existing assignment and the original assignment custom field value exist",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "685",
            "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
            "Description": "should only update custom field value if assignment custom value have been existed",
            "WhenList": [
              "update assignment custom field value"
            ],
            "ThenList": [
              "should return 200",
              "should update assignment custom field value"
            ],
            "Children": []
          },
          {
            "$id": "686",
            "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
            "Description": "should remove origin assignment custom field value if the value is empty when update",
            "WhenList": [
              "remove original assignment custom field value"
            ],
            "ThenList": [
              "should return 200",
              "should remove original assignment custom field value"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "687",
        "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
        "Description": "should update assignment customfield value for existing assignment but the original assignment custom field value is not existed",
        "WhenList": [
          "update null assignment custom field value"
        ],
        "ThenList": [
          "should return 200",
          "should update assignment custom field value"
        ],
        "Children": []
      },
      {
        "$id": "688",
        "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
        "Description": "should add new assignment custom field value when it is not empty in update request but the original value is empty",
        "WhenList": [
          "add new assignment custom field value"
        ],
        "ThenList": [
          "should return 200",
          "should get two original assignment custom field values"
        ],
        "Children": []
      },
      {
        "$id": "689",
        "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
        "Description": "should add new assignment with assignment custom field value",
        "WhenList": [
          "add new assignment with assignment custom field value"
        ],
        "ThenList": [
          "should return 200",
          "should get two assignment with two assignment custom field values"
        ],
        "Children": []
      },
      {
        "$id": "690",
        "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
        "Description": "should add new assignment but no need to add assignment custom field value if value is empty",
        "WhenList": [
          "add new assignment with assignment custom field value is empty"
        ],
        "ThenList": [
          "should return 200",
          "should get two assignment but one assignment related assignment custom field values are null"
        ],
        "Children": []
      },
      {
        "$id": "691",
        "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
        "Description": "should remove assignment custom filed value when removing assignment",
        "WhenList": [
          "remove this assignment and its realted assignment custom field value"
        ],
        "ThenList": [
          "should return ok",
          "should remove assignment and assignment custom field value"
        ],
        "Children": []
      },
      {
        "$id": "692",
        "FileName": "when_update_assignee_assignments_details_with_custom_fields.cs",
        "Description": "should update assignment customfiled modifier name to null",
        "WhenList": [
          "update assignment custom field value"
        ],
        "ThenList": [
          "should return 200",
          "should update assignment custom field value"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "693",
    "FileName": "when_update_assignee_assignments_details_with_invalid_request.cs",
    "Description": "when update assignee assignments details with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "694",
        "FileName": "when_update_assignee_assignments_details_with_invalid_request.cs",
        "Description": "when start date is invalid",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "695",
        "FileName": "when_update_assignee_assignments_details_with_invalid_request.cs",
        "Description": "when expected end date is invalid",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "696",
        "FileName": "when_update_assignee_assignments_details_with_invalid_request.cs",
        "Description": "when actual end date is invalid",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "697",
    "FileName": "when_update_assignee_assignments_period_from_Tiger.cs",
    "Description": "when update assignee assignments period from tiger",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "698",
        "FileName": "when_update_assignee_assignments_period_from_Tiger.cs",
        "Description": "when update assignment period",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update assignee assignment period and period modifier"
        ],
        "Children": []
      },
      {
        "$id": "699",
        "FileName": "when_update_assignee_assignments_period_from_Tiger.cs",
        "Description": "when update start date",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should only update assignment start date modifier"
        ],
        "Children": []
      },
      {
        "$id": "700",
        "FileName": "when_update_assignee_assignments_period_from_Tiger.cs",
        "Description": "when update assignment period correctly for assignee with multiple assignments",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should only update the first assignment period and period modifier"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "701",
    "FileName": "when_update_assignee_contacts_with_correct_request.cs",
    "Description": "when update assignee contacts with correct request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "702",
        "FileName": "when_update_assignee_contacts_with_correct_request.cs",
        "Description": "when update assignee contacts",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update the contacts"
        ],
        "Children": []
      },
      {
        "$id": "703",
        "FileName": "when_update_assignee_contacts_with_correct_request.cs",
        "Description": "when update contacts with same staff in different engagements",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update the contacts"
        ],
        "Children": []
      },
      {
        "$id": "704",
        "FileName": "when_update_assignee_contacts_with_correct_request.cs",
        "Description": "when remove all assignee contacts",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return conflict",
          "should not remove contacts"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "705",
    "FileName": "when_update_assignee_contacts_with_correct_request_under_uac_control.cs",
    "Description": "when update assignee contacts with correct request under uac control",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "706",
        "FileName": "when_update_assignee_contacts_with_correct_request_under_uac_control.cs",
        "Description": "when staff update assignee contacts engagement which is not authoried by him",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "707",
            "FileName": "when_update_assignee_contacts_with_correct_request_under_uac_control.cs",
            "Description": "when staff is not responsible for engagement",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "708",
            "FileName": "when_update_assignee_contacts_with_correct_request_under_uac_control.cs",
            "Description": "when staff and engagement have different practice types",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "709",
    "FileName": "when_update_assignee_contacts_with_invalid_request.cs",
    "Description": "when update assignee contacts with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "710",
        "FileName": "when_update_assignee_contacts_with_invalid_request.cs",
        "Description": "when contact staff uri is invalid",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message",
          "should not update assignee contact"
        ],
        "Children": []
      },
      {
        "$id": "711",
        "FileName": "when_update_assignee_contacts_with_invalid_request.cs",
        "Description": "when contacts uris contain non existing staff",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message",
          "should not update assignee contact"
        ],
        "Children": []
      },
      {
        "$id": "712",
        "FileName": "when_update_assignee_contacts_with_invalid_request.cs",
        "Description": "when contacts uris contain duplicated staff",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message",
          "should not update assignee contact"
        ],
        "Children": []
      },
      {
        "$id": "713",
        "FileName": "when_update_assignee_contacts_with_invalid_request.cs",
        "Description": "when contact engagement uri is null",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "714",
        "FileName": "when_update_assignee_contacts_with_invalid_request.cs",
        "Description": "when contact engagement uri is invalid",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "715",
        "FileName": "when_update_assignee_contacts_with_invalid_request.cs",
        "Description": "when contact staff is not responsible for engagement",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "716",
        "FileName": "when_update_assignee_contacts_with_invalid_request.cs",
        "Description": "when contact staff practice type do not match engagement practice type",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "717",
    "FileName": "when_update_assignee_employeeIds_details_with_assignee_belongs_to_multiple_clients.cs",
    "Description": "when update assignee employee ids details with assignee belongs to multiple clients",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 200",
      "should update assignee basic info in client association"
    ],
    "Children": []
  },
  {
    "$id": "718",
    "FileName": "when_update_assignee_employeeIds_details_with_correct_request.cs",
    "Description": "when update assignee employee ids details with correct request",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 200",
      "should update assignee basic info in client association"
    ],
    "Children": []
  },
  {
    "$id": "719",
    "FileName": "when_update_assignee_employeeIds_details_with_wrong_client.cs",
    "Description": "when update assignee employee ids details with wrong client",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 400"
    ],
    "Children": []
  },
  {
    "$id": "720",
    "FileName": "when_update_assignee_notes_with_correct_request.cs",
    "Description": "when update assignee notes with correct request",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 200",
      "should update assignee notes"
    ],
    "Children": []
  },
  {
    "$id": "721",
    "FileName": "when_update_assignee_notes_with_correct_request.cs",
    "Description": "when update assignee whom belongs to restricted engagement",
    "WhenList": [
      "when edit assignee"
    ],
    "ThenList": [
      "should return fobbiden"
    ],
    "Children": []
  },
  {
    "$id": "722",
    "FileName": "when_update_assignee_permission.cs",
    "Description": "when update assignee permission",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "723",
        "FileName": "when_update_assignee_permission.cs",
        "Description": "should update with restriced engagement acl and tax contact",
        "WhenList": [
          "given assignee"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "724",
        "FileName": "when_update_assignee_permission.cs",
        "Description": "should not update with restriced engagement acl and not tax contact",
        "WhenList": [
          "given assignee"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "725",
        "FileName": "when_update_assignee_permission.cs",
        "Description": "should update with restriced engagement not acl but tax contact",
        "WhenList": [
          "given assignee"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "726",
        "FileName": "when_update_assignee_permission.cs",
        "Description": "should update with normal engagement and tax contact",
        "WhenList": [
          "given assignee"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "727",
        "FileName": "when_update_assignee_permission.cs",
        "Description": "should not update with normal engagement but not tax contact",
        "WhenList": [
          "given assignee"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "728",
        "FileName": "when_update_assignee_permission.cs",
        "Description": "should update with global admin",
        "WhenList": [
          "given assignee"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "729",
    "FileName": "when_update_assignment_with_correct_request_under_uac_control.cs",
    "Description": "when update assignment with correct request under uac control",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "730",
        "FileName": "when_update_assignment_with_correct_request_under_uac_control.cs",
        "Description": "when update restricted assignment custom field for current user have not access to it",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "731",
            "FileName": "when_update_assignment_with_correct_request_under_uac_control.cs",
            "Description": "when update open custom field value even though stfas have no access to restricted assignment customfield value",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "732",
                "FileName": "when_update_assignment_with_correct_request_under_uac_control.cs",
                "Description": "when staff is not in responsible office but in practice type",
                "WhenList": [
                  "when"
                ],
                "ThenList": [
                  "should return ok",
                  "should restricted assignment customfiled value still exist"
                ],
                "Children": []
              },
              {
                "$id": "733",
                "FileName": "when_update_assignment_with_correct_request_under_uac_control.cs",
                "Description": "when staff is in responsible office but not in practice type",
                "WhenList": [
                  "when"
                ],
                "ThenList": [
                  "should return ok",
                  "should not get restricted assignment customfiled value"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "734",
            "FileName": "when_update_assignment_with_correct_request_under_uac_control.cs",
            "Description": "when add open custom field value even though stfas have no access to restricted assignment customfield value",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return ok",
              "should restricted assignment customfiled value still exist"
            ],
            "Children": []
          },
          {
            "$id": "735",
            "FileName": "when_update_assignment_with_correct_request_under_uac_control.cs",
            "Description": "when delete open custom field value even though stfas have no access to restricted assignment customfield value",
            "WhenList": [
              "when"
            ],
            "ThenList": [
              "should return ok",
              "should restricted assignment customfiled value still exist"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "736",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when create assignee verify process",
    "WhenList": [
      "create verify process"
    ],
    "ThenList": [
      "should keep bypass status"
    ],
    "Children": []
  },
  {
    "$id": "737",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when create assignee verify process base",
    "WhenList": [
      "create verify process"
    ],
    "ThenList": [],
    "Children": []
  },
  {
    "$id": "738",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when create assignee verify process without work record",
    "WhenList": [],
    "ThenList": [
      "should get long process"
    ],
    "Children": []
  },
  {
    "$id": "739",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when create assignee verify process with online briefing record",
    "WhenList": [],
    "ThenList": [
      "should get short process"
    ],
    "Children": []
  },
  {
    "$id": "740",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when create assignee verify process with manual briefing record",
    "WhenList": [],
    "ThenList": [
      "should get long process"
    ],
    "Children": []
  },
  {
    "$id": "741",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when create assignee verify process with briefing workrecords",
    "WhenList": [],
    "ThenList": [
      "should get short process"
    ],
    "Children": []
  },
  {
    "$id": "742",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when create assignee verify process with briefing imm workrecords",
    "WhenList": [],
    "ThenList": [
      "should get long process"
    ],
    "Children": []
  },
  {
    "$id": "743",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when create assignee verify process with briefing and other compliance",
    "WhenList": [],
    "ThenList": [
      "should get short process"
    ],
    "Children": []
  },
  {
    "$id": "744",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when assignee has no verify process record",
    "WhenList": [],
    "ThenList": [
      "should get long process"
    ],
    "Children": []
  },
  {
    "$id": "745",
    "FileName": "when_get_assignee_with_bypass_verify_information.cs",
    "Description": "when assignee attempt to create verify process record twice",
    "WhenList": [
      "create verify process"
    ],
    "ThenList": [
      "should get created and leave record unchanged"
    ],
    "Children": []
  },
  {
    "$id": "746",
    "FileName": "when_sofia_mark_assignee_as_verified.cs",
    "Description": "when sofia mark kayla as verified",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "747",
        "FileName": "when_sofia_mark_assignee_as_verified.cs",
        "Description": "when sofia mark assignee as verified",
        "WhenList": [
          "mark as verified"
        ],
        "ThenList": [
          "should mark as tiger verified",
          "should not get verify link"
        ],
        "Children": []
      },
      {
        "$id": "748",
        "FileName": "when_sofia_mark_assignee_as_verified.cs",
        "Description": "when sofia mark assignee as verified if assignee has no verify process record",
        "WhenList": [
          "mark as verified"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "749",
        "FileName": "when_sofia_mark_assignee_as_verified.cs",
        "Description": "when sofia mark assignee as verified if she does not need tiger verify",
        "WhenList": [
          "mark as verified"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "750",
        "FileName": "when_sofia_mark_assignee_as_verified.cs",
        "Description": "given sofia has no relation with kayla",
        "WhenList": [
          "mark as verified"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "751",
    "FileName": "when_delete_vip_for_assignee.cs",
    "Description": "when delete vip for assignee",
    "WhenList": [
      "set assignee to vip"
    ],
    "ThenList": [
      "should return no content",
      "should not be vip",
      "should remove modifier and date from db",
      "should not raise event"
    ],
    "Children": []
  },
  {
    "$id": "752",
    "FileName": "when_set_vip_for_assignee.cs",
    "Description": "when set vip for assignee",
    "WhenList": [
      "set assignee to vip"
    ],
    "ThenList": [
      "should return ok",
      "should be vip and set modifier date",
      "should not raise event"
    ],
    "Children": []
  },
  {
    "$id": "753",
    "FileName": "when_get_briefing_work_record_by_account_id_and_work_record_id.cs",
    "Description": "when get briefing work record by account id and work record id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "754",
        "FileName": "when_get_briefing_work_record_by_account_id_and_work_record_id.cs",
        "Description": "when get work record belongs to kayla",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should return ok",
          "should get work record"
        ],
        "Children": []
      },
      {
        "$id": "755",
        "FileName": "when_get_briefing_work_record_by_account_id_and_work_record_id.cs",
        "Description": "when get work record not belongs to kayla",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "756",
    "FileName": "when_get_immigration_work_records_by_assignee_id.cs",
    "Description": "when get immigration work records by assignee id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should get immigration work records for kayla",
      "should return basic immigration info",
      "should not contain immigration application work records"
    ],
    "Children": []
  },
  {
    "$id": "757",
    "FileName": "when_get_tax_returns_by_assignee_id.cs",
    "Description": "when get tax returns by assignee id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should return two tax returns for kayla",
      "should return basic tax return info"
    ],
    "Children": []
  },
  {
    "$id": "758",
    "FileName": "when_get_tax_return_for_questionnaire_contacts_by_account_id.cs",
    "Description": "when get tax return for questionnaire contacts by account id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should return open questionnaire for kayla"
    ],
    "Children": []
  },
  {
    "$id": "759",
    "FileName": "when_get_tax_return_work_records_resource_by_account_id.cs",
    "Description": "when get activated tax returns by account id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should return two activated tax return for kayla",
      "should return basic tax return info",
      "should return IN PROCESS resource link for NOTIFIED work record",
      "should return SUBMISSION and DECISION resource link for IN PROCESS work record",
      "should return is CPQ info for cpq work record",
      "should not return problematic service status work record",
      "should not return work record has been done over 275 days"
    ],
    "Children": []
  },
  {
    "$id": "760",
    "FileName": "when_get_tax_return_work_records_resource_by_account_id.cs",
    "Description": "should is not efile when get tax reutrns by account id given open efile country after workrecord move over delivered",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should return basic tax return info"
    ],
    "Children": []
  },
  {
    "$id": "761",
    "FileName": "when_get_tax_return_work_records_resource_by_account_id.cs",
    "Description": "when get organizer contact of notified tax returns by account id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should return corrcot contact"
    ],
    "Children": []
  },
  {
    "$id": "762",
    "FileName": "when_get_tax_return_work_records_resource_by_assignee_id.cs",
    "Description": "when get activated tax returns by assignee id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should return two activated tax return for kayla",
      "should return basic tax return info",
      "should return IN PROCESS resource link for NOTIFIED work record",
      "should return SUBMISSION and DECISION resource link for IN PROCESS work record",
      "should return is CPQ info for cpq work record"
    ],
    "Children": []
  },
  {
    "$id": "763",
    "FileName": "when_get_tax_return_work_records_resource_with_mile_stones_by_assignee_id.cs",
    "Description": "when get tax return work records resource with milestones by assignee id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return milestones for work record"
    ],
    "Children": []
  },
  {
    "$id": "764",
    "FileName": "when_get_work_records_by_account_id.cs",
    "Description": "when get work records by account id",
    "WhenList": [
      "when get work records"
    ],
    "ThenList": [
      "should return tax work record"
    ],
    "Children": []
  },
  {
    "$id": "765",
    "FileName": "when_get_work_records_by_assignee_id_with_some_of_the_work_records_inactivated.cs",
    "Description": "when get work records by assignee id with some of the work records inactivated",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return workrecords with inactive engagement without upload file link"
    ],
    "Children": []
  },
  {
    "$id": "766",
    "FileName": "when_get_work_records_resource_by_assignee_id.cs",
    "Description": "when get work records resource by assignee id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed and return list of work records"
    ],
    "Children": []
  },
  {
    "$id": "767",
    "FileName": "when_get_work_records_resource_by_assignee_id.cs",
    "Description": "when get immigration work records resource by assignee id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed and return list of work records"
    ],
    "Children": []
  },
  {
    "$id": "768",
    "FileName": "when_get_work_records_resource_by_go_migration_inactive_assignee_id.cs",
    "Description": "when get work records resource by go migration inactive assignee id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should not found assignee"
    ],
    "Children": []
  },
  {
    "$id": "769",
    "FileName": "when_upload_immigration_workrecord_assignee_file.cs",
    "Description": "when upload immigration workrecord assignee file",
    "WhenList": [
      "send valid request"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "770",
    "FileName": "should_return_404_when_sofia_search_go_migration_inactive_assignee.cs",
    "Description": "should return 404 when sofia search go migration inactive assignee",
    "WhenList": [
      "get assignee"
    ],
    "ThenList": [
      "should return 404 not found"
    ],
    "Children": []
  },
  {
    "$id": "771",
    "FileName": "when_batch_get_archive_assignees_with_pagination_links.cs",
    "Description": "when batch get archive assignees with pagination links",
    "WhenList": [
      "get the first page event"
    ],
    "ThenList": [
      "should return correct assignee",
      "should return correct next link",
      "should return no next link when no more events left",
      "should return no next link when left events less than limit",
      "should return no next link when current request with no events"
    ],
    "Children": []
  },
  {
    "$id": "772",
    "FileName": "when_batch_get_assignees.cs",
    "Description": "when batch get assignees",
    "WhenList": [],
    "ThenList": [
      "should batch get all assignees",
      "should get assignee info",
      "should return bad request if exceeds limitation",
      "should not get assignee if status is inactive GO migration"
    ],
    "Children": []
  },
  {
    "$id": "773",
    "FileName": "when_batch_get_assignees_according_to_workrecord_by_staff.cs",
    "Description": "when batch get assignees according to workrecord by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "774",
        "FileName": "when_batch_get_assignees_according_to_workrecord_by_staff.cs",
        "Description": "when search assignee by specified workrecord country",
        "WhenList": [
          "send a search request with specified workrecord country"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return assignee with IBMUS engagement",
          "should contain batch upload file link"
        ],
        "Children": []
      },
      {
        "$id": "775",
        "FileName": "when_batch_get_assignees_according_to_workrecord_by_staff.cs",
        "Description": "when search assignee by specified workrecord country and work status",
        "WhenList": [
          "send a search request with specified workrecord country"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return assignee with IBMUS engagement"
        ],
        "Children": []
      },
      {
        "$id": "776",
        "FileName": "when_batch_get_assignees_according_to_workrecord_by_staff.cs",
        "Description": "when search assignee by specified workrecord country and engagement",
        "WhenList": [
          "send a search request with specified workrecord country"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return assignee with IBMUS engagement"
        ],
        "Children": []
      },
      {
        "$id": "777",
        "FileName": "when_batch_get_assignees_according_to_workrecord_by_staff.cs",
        "Description": "when search assignee by specified workrecord country and organizer status",
        "WhenList": [
          "send a search request with specified workrecord country"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return assignee with IBMUS engagement"
        ],
        "Children": []
      },
      {
        "$id": "778",
        "FileName": "when_batch_get_assignees_according_to_workrecord_by_staff.cs",
        "Description": "when search assignee by specified workrecord country and home country",
        "WhenList": [
          "send a search request with specified workrecord country"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return assignee with IBMUS engagement"
        ],
        "Children": []
      },
      {
        "$id": "779",
        "FileName": "when_batch_get_assignees_according_to_workrecord_by_staff.cs",
        "Description": "when search assignee by specified workrecord country and host country",
        "WhenList": [
          "send a search request with specified workrecord country"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return assignee with IBMUS engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "780",
    "FileName": "when_find_assignee_by_email.cs",
    "Description": "when find assignee by email",
    "WhenList": [],
    "ThenList": [
      "should return the assignees with the given secondary email",
      "should return the assignees with the given primary email",
      "should not return assignees given non exist email address",
      "should not return assignees given email address and assignee deleted",
      "should not return assignees given email address and assignee inactive"
    ],
    "Children": []
  },
  {
    "$id": "781",
    "FileName": "when_get_inactive_assignee.cs",
    "Description": "when get inactive assignee",
    "WhenList": [
      "global admin try to get inactive assignee"
    ],
    "ThenList": [
      "should not allow global admin to edit inactive assignee"
    ],
    "Children": []
  },
  {
    "$id": "782",
    "FileName": "when_get_staff_served_assignee_with_go_migration_inactive_status.cs",
    "Description": "when get staff served assignee with go migration inactive status",
    "WhenList": [
      "when get assignees by rel"
    ],
    "ThenList": [
      "should return ok",
      "should return one assignee"
    ],
    "Children": []
  },
  {
    "$id": "783",
    "FileName": "when_get_staff_served_assignee_with_inactive_engagement.cs",
    "Description": "when get staff served assignee with inactive engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "784",
        "FileName": "when_get_staff_served_assignee_with_inactive_engagement.cs",
        "Description": "when get staff served assignee by general role",
        "WhenList": [
          "when get assignees by rel"
        ],
        "ThenList": [
          "should return ok",
          "should return one assignee"
        ],
        "Children": []
      },
      {
        "$id": "785",
        "FileName": "when_get_staff_served_assignee_with_inactive_engagement.cs",
        "Description": "when get staff served assignee by global admin",
        "WhenList": [
          "when get assignees by rel"
        ],
        "ThenList": [
          "should return one assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "786",
    "FileName": "when_get_staff_served_assignee_with_multiple_engagements.cs",
    "Description": "when get staff served assignee with multiple engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "787",
        "FileName": "when_get_staff_served_assignee_with_multiple_engagements.cs",
        "Description": "when searching assignees",
        "WhenList": [
          "get assignee by rel"
        ],
        "ThenList": [
          "should return ok",
          "should return kayla with engagement 1"
        ],
        "Children": []
      },
      {
        "$id": "788",
        "FileName": "when_get_staff_served_assignee_with_multiple_engagements.cs",
        "Description": "when getting an assignee by id",
        "WhenList": [
          "get assignee by rel"
        ],
        "ThenList": [
          "should return ok",
          "should return kayla with engagement 1",
          "should return kayla with assignments"
        ],
        "Children": []
      },
      {
        "$id": "789",
        "FileName": "when_get_staff_served_assignee_with_multiple_engagements.cs",
        "Description": "should get assignee info when assignee belongs to restricted and open engagments",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "790",
            "FileName": "when_get_staff_served_assignee_with_multiple_engagements.cs",
            "Description": "should get assignee infor without restricted engagement if staff not in restricted engagement acl",
            "WhenList": [
              "get assignee by rel"
            ],
            "ThenList": [
              "should return ok",
              "should not contains restricted engagement"
            ],
            "Children": []
          },
          {
            "$id": "791",
            "FileName": "when_get_staff_served_assignee_with_multiple_engagements.cs",
            "Description": "should search assignee infor without restricted engagement if staff not in restricted engagement acl",
            "WhenList": [
              "get assignee by rel"
            ],
            "ThenList": [
              "should return ok",
              "should not contains restricted engagements"
            ],
            "Children": []
          },
          {
            "$id": "792",
            "FileName": "when_get_staff_served_assignee_with_multiple_engagements.cs",
            "Description": "should search assignee infor with restricted engagement if staff 0 in restricted engagement acl",
            "WhenList": [
              "get assignee by rel"
            ],
            "ThenList": [
              "should return ok",
              "should contains restricted engagements"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "793",
    "FileName": "when_immigration_staff_create_assignee_with_tax_custom_field_with_correct_request.cs",
    "Description": "when immigration staff create assignee with tax custom field with correct request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "794",
        "FileName": "when_immigration_staff_create_assignee_with_tax_custom_field_with_correct_request.cs",
        "Description": "when create assignee with engagement tax custom field",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "795",
        "FileName": "when_immigration_staff_create_assignee_with_tax_custom_field_with_correct_request.cs",
        "Description": "when create country custom field",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "796",
    "FileName": "when_submit_batch_create_assignees_job_with_correct_file_format.cs",
    "Description": "when submit batch create assignees job with correct file format",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 202 accepted",
      "should be able to track progress"
    ],
    "Children": []
  },
  {
    "$id": "797",
    "FileName": "when_submit_batch_create_assignees_job_with_incorrect_file_format.cs",
    "Description": "when submit batch create assignees job with incorrect file format",
    "WhenList": [
      "create assignees"
    ],
    "ThenList": [
      "should return 400 bad request"
    ],
    "Children": []
  },
  {
    "$id": "798",
    "FileName": "when_add_assignee_immigration_document.cs",
    "Description": "when add assignee immigration document",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "799",
        "FileName": "when_add_assignee_immigration_document.cs",
        "Description": "when has reference id and expiry date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should find the reference ID and expiry date in db"
        ],
        "Children": []
      },
      {
        "$id": "800",
        "FileName": "when_add_assignee_immigration_document.cs",
        "Description": "when has reference id and not has expiry date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should find the reference ID in db"
        ],
        "Children": []
      },
      {
        "$id": "801",
        "FileName": "when_add_assignee_immigration_document.cs",
        "Description": "when not has reference id and has expiry date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should find the expiry date in db"
        ],
        "Children": []
      },
      {
        "$id": "802",
        "FileName": "when_add_assignee_immigration_document.cs",
        "Description": "when not has reference id and not has expiry date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should not find the reference ID and expiry date in db"
        ],
        "Children": []
      },
      {
        "$id": "803",
        "FileName": "when_add_assignee_immigration_document.cs",
        "Description": "when expiry date is na",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should find the expiry date is NA in db"
        ],
        "Children": []
      },
      {
        "$id": "804",
        "FileName": "when_add_assignee_immigration_document.cs",
        "Description": "when has more than one documents",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should find the reference ID and expiry date in db"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "805",
    "FileName": "when_create_and_update_assignee_immigration_documents.cs",
    "Description": "when create and update assignee immigration documents",
    "WhenList": [
      "when update and create documents"
    ],
    "ThenList": [
      "should return 200 OK",
      "should update the documents",
      "should record history for updated item",
      "should record history for created item"
    ],
    "Children": []
  },
  {
    "$id": "806",
    "FileName": "when_adding_assignment.cs",
    "Description": "when adding assignment",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "authorization items that have been finalized should block the changes",
      "authorization items that have been in draft should be affected by the changes"
    ],
    "Children": []
  },
  {
    "$id": "807",
    "FileName": "when_deleting_assignee.cs",
    "Description": "when deleting assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "authorization items that have been finalized should block the changes",
      "authorization items that have been in draft should be affected by the changes"
    ],
    "Children": []
  },
  {
    "$id": "808",
    "FileName": "when_deleting_assignment.cs",
    "Description": "when deleting assignment",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "authorization items that have been finalized should block the changes",
      "authorization items that have been in draft should be affected by the changes"
    ],
    "Children": []
  },
  {
    "$id": "809",
    "FileName": "when_deleting_assignment_type.cs",
    "Description": "when deleting assignment type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "810",
        "FileName": "when_deleting_assignment_type.cs",
        "Description": "when deleting assignment type that does not have related finalized authorization items",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "authorization items that have been finalized should block the changes",
          "authorization items that have been in draft should be affected by the changes"
        ],
        "Children": []
      },
      {
        "$id": "811",
        "FileName": "when_deleting_assignment_type.cs",
        "Description": "when deleting assignment type that has related finalized authorization items",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should keep assignment type name on items that have been finalized",
          "should remove assignment type name on items that in draft"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "812",
    "FileName": "when_finalize_authorization_country.cs",
    "Description": "when finalize authorization country",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "813",
        "FileName": "when_finalize_authorization_country.cs",
        "Description": "should record finalized country",
        "WhenList": [
          "finalized"
        ],
        "ThenList": [
          "should return ok",
          "should get us in the authorization finalized countries"
        ],
        "Children": []
      },
      {
        "$id": "814",
        "FileName": "when_finalize_authorization_country.cs",
        "Description": "should record finalized time and staff",
        "WhenList": [
          "finalized"
        ],
        "ThenList": [
          "should return ok",
          "should get us in the authorization finalized countries"
        ],
        "Children": []
      },
      {
        "$id": "815",
        "FileName": "when_finalize_authorization_country.cs",
        "Description": "should record multi finalized countries",
        "WhenList": [
          "finalized"
        ],
        "ThenList": [
          "should return ok",
          "should get us and germany in the authorization finalized countries"
        ],
        "Children": []
      },
      {
        "$id": "816",
        "FileName": "when_finalize_authorization_country.cs",
        "Description": "should filter country not related to any item",
        "WhenList": [
          "finalized"
        ],
        "ThenList": [
          "should return ok",
          "should get us and germany in the authorization finalized countries"
        ],
        "Children": []
      },
      {
        "$id": "817",
        "FileName": "when_finalize_authorization_country.cs",
        "Description": "should return ok when current user is coordinating primary contact",
        "WhenList": [
          "finalized"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "818",
        "FileName": "when_finalize_authorization_country.cs",
        "Description": "should return forbidden when user in not admin or coordinating with delegated contact",
        "WhenList": [
          "finalized"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "819",
        "FileName": "when_finalize_authorization_country.cs",
        "Description": "should not duplicate finalize a country",
        "WhenList": [
          "finalize again"
        ],
        "ThenList": [
          "should return ok",
          "should not have duplicate finalized country info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "820",
    "FileName": "when_finalize_authorization_country_should_send_notification.cs",
    "Description": "when finalize authorization country should send notification",
    "WhenList": [
      "finalized"
    ],
    "ThenList": [
      "should send notification with email template",
      "should send notification to work office contacts",
      "should send notification to coordinating office contacts",
      "should send notification with follow parameters"
    ],
    "Children": []
  },
  {
    "$id": "821",
    "FileName": "when_inactivating_assignee.cs",
    "Description": "when inactivating assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "authorization items that have been finalized should block the changes",
      "authorization items that have been in draft should be affected by the changes"
    ],
    "Children": []
  },
  {
    "$id": "822",
    "FileName": "when_update_authorization_item_related_to_finalized_country.cs",
    "Description": "when update authorization item related to finalized country",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "823",
        "FileName": "when_update_authorization_item_related_to_finalized_country.cs",
        "Description": "when non authorization admin try to update finalized authorization item authorized status",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be forbidden",
          "should throw forbiden message"
        ],
        "Children": []
      },
      {
        "$id": "824",
        "FileName": "when_update_authorization_item_related_to_finalized_country.cs",
        "Description": "when non authorization admin try to add manual authorization item to finalized country",
        "WhenList": [
          "non authorization list admin try to add manual authorization item to finalized country"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "825",
        "FileName": "when_update_authorization_item_related_to_finalized_country.cs",
        "Description": "when non authorization admin try to remove manual authorization item to finalized country",
        "WhenList": [
          "non authorization list admin try to add manual authorization item to finalized country"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "826",
    "FileName": "when_updating_assignee_home_country.cs",
    "Description": "when updating assignee home country",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "827",
        "FileName": "when_updating_assignee_home_country.cs",
        "Description": "when finalizing home country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "authorization items that have been finalized should block the changes",
          "authorization items that have been in draft should be affected by the changes"
        ],
        "Children": []
      },
      {
        "$id": "828",
        "FileName": "when_updating_assignee_home_country.cs",
        "Description": "when finalizing both home and host country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "authorization items that have been finalized should block the changes",
          "authorization items that have been in draft should be affected by the changes"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "829",
    "FileName": "when_updating_assignment_country.cs",
    "Description": "when updating assignment country",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "authorization items that have been finalized should block the changes",
      "authorization items that have been in draft should be affected by the changes"
    ],
    "Children": []
  },
  {
    "$id": "830",
    "FileName": "when_updating_assignment_duration.cs",
    "Description": "when updating assignment duration",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "authorization items that have been finalized should block the changes",
      "authorization items that have been in draft should be affected by the changes"
    ],
    "Children": []
  },
  {
    "$id": "831",
    "FileName": "when_updating_assignment_duration_and_country.cs",
    "Description": "when updating assignment duration and country",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "832",
        "FileName": "when_updating_assignment_duration_and_country.cs",
        "Description": "when finalize previous country authorization items",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "authorization items that have been finalized should block the changes",
          "authorization items that have been in draft should be affected by the changes"
        ],
        "Children": []
      },
      {
        "$id": "833",
        "FileName": "when_updating_assignment_duration_and_country.cs",
        "Description": "when finalize new country authorization items",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "authorization items that have been finalized should block the changes",
          "authorization items that have been in draft should be affected by the changes"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "834",
    "FileName": "when_updating_assignment_type.cs",
    "Description": "when updating assignment type",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "authorization items that have been finalized should block the changes",
      "authorization items that have been in draft should be affected by the changes"
    ],
    "Children": []
  },
  {
    "$id": "835",
    "FileName": "when_updating_assignment_type_name.cs",
    "Description": "when updating assignment type name",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "authorization items that have been finalized should block the changes",
      "authorization items that have been in draft should be affected by the changes"
    ],
    "Children": []
  },
  {
    "$id": "836",
    "FileName": "when_add_manual_authorization_item_after_country_finalized.cs",
    "Description": "when add manual authorization item after country finalized",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should set last updated columns for items have been finalized",
      "should not set last updated columns for items in draft"
    ],
    "Children": []
  },
  {
    "$id": "837",
    "FileName": "when_add_manual_authorization_item_by_engagement.cs",
    "Description": "when add manual authorization item by engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "838",
        "FileName": "when_add_manual_authorization_item_by_engagement.cs",
        "Description": "should create manual authorization item correctly",
        "WhenList": [
          "manual create authorization item"
        ],
        "ThenList": [
          "should be created",
          "should be get manual authorization item in autherization list",
          "should record history"
        ],
        "Children": []
      },
      {
        "$id": "839",
        "FileName": "when_add_manual_authorization_item_by_engagement.cs",
        "Description": "should return bad request when assignee who does not belong to engagement",
        "WhenList": [
          "manual create authorization item with assignee who does not belong to engagement"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "840",
        "FileName": "when_add_manual_authorization_item_by_engagement.cs",
        "Description": "should return bad request when category is home",
        "WhenList": [
          "manual create authorization item with assignee whose category is home"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "841",
        "FileName": "when_add_manual_authorization_item_by_engagement.cs",
        "Description": "should return bad request when assignee is inactive",
        "WhenList": [
          "manual create authorization item with inactive assignees",
          "manual create authorization item with pending assignees",
          "manual create authorization item with deleted assignees"
        ],
        "ThenList": [
          "should return bad request",
          "should return another bad request",
          "should return bad request again"
        ],
        "Children": []
      },
      {
        "$id": "842",
        "FileName": "when_add_manual_authorization_item_by_engagement.cs",
        "Description": "should return ok when assignee is pending deleted",
        "WhenList": [
          "manual create authorization item with pending deletion assignees"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "843",
        "FileName": "when_add_manual_authorization_item_by_engagement.cs",
        "Description": "should return bad request and non is saved when any item failed",
        "WhenList": [
          "manual create authorization item with assignee who category is home"
        ],
        "ThenList": [
          "should return bad request",
          "should not save any item"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "844",
    "FileName": "when_change_authorization_rules.cs",
    "Description": "when change authorization rules",
    "WhenList": [
      "apply authorization rules from all years plus one to all years"
    ],
    "ThenList": [
      "should remove all authorization items according to new rule",
      "should record history for authorization item"
    ],
    "Children": []
  },
  {
    "$id": "845",
    "FileName": "when_check_if_assignee_has_authorization_list.cs",
    "Description": "when check if assignee has authorization list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "846",
        "FileName": "when_check_if_assignee_has_authorization_list.cs",
        "Description": "when kayla does NOT related to any authorization list",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return kayla with has authorization list as false"
        ],
        "Children": []
      },
      {
        "$id": "847",
        "FileName": "when_check_if_assignee_has_authorization_list.cs",
        "Description": "when kayla related to authorization list",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return kayla with has authorization list as true"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "848",
    "FileName": "when_delete_manual_autherization_item_by_engagement.cs",
    "Description": "when delete manual autherization item by engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "849",
        "FileName": "when_delete_manual_autherization_item_by_engagement.cs",
        "Description": "should delete manual authorization item correctly",
        "WhenList": [
          "sophia first adds a manual authorization item and then deletes it"
        ],
        "ThenList": [
          "should return ok",
          "should be successfully deleted",
          "should record history"
        ],
        "Children": []
      },
      {
        "$id": "850",
        "FileName": "when_delete_manual_autherization_item_by_engagement.cs",
        "Description": "should return forbidden if requested by staff not in any office subscribing to engagement",
        "WhenList": [
          "given staff whose office not subscribed to engagement to delete manual item"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "851",
    "FileName": "when_export_engagement_authorization_list.cs",
    "Description": "when export engagement authorization list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "852",
        "FileName": "when_export_engagement_authorization_list.cs",
        "Description": "when no filter",
        "WhenList": [
          "download"
        ],
        "ThenList": [
          "should return 200",
          "should return excel sheet",
          "should return csv sheet headers",
          "should return correctly rows count",
          "should return correctly table header",
          "should return csv file in correct format"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "853",
    "FileName": "when_export_engagement_authorization_list.cs",
    "Description": "when all filter",
    "WhenList": [
      "download"
    ],
    "ThenList": [
      "should return 200",
      "should return excel sheet",
      "should return csv sheet headers",
      "should return correctly rows count",
      "should return correctly table header",
      "should return zero result"
    ],
    "Children": []
  },
  {
    "$id": "854",
    "FileName": "when_generate_authorization_list.cs",
    "Description": "when generate authorization list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "855",
        "FileName": "when_generate_authorization_list.cs",
        "Description": "when generate authorization list by engagement",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should be created",
          "should return correct number of authorization items",
          "should return created authorization list correctly",
          "should return bad request if create authorization list with same engagement id and year"
        ],
        "Children": []
      },
      {
        "$id": "856",
        "FileName": "when_generate_authorization_list.cs",
        "Description": "when generate authorization list for restricted engagement and engagement is administered by the principal",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "857",
        "FileName": "when_generate_authorization_list.cs",
        "Description": "when generate authorization list for restricted engagement and engagement is not administered by the principal",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "858",
        "FileName": "when_generate_authorization_list.cs",
        "Description": "when generate authorization list current user is global admin",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "859",
        "FileName": "when_generate_authorization_list.cs",
        "Description": "when generate authorization list current user is authorization administrator",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "860",
        "FileName": "when_generate_authorization_list.cs",
        "Description": "when generate authorization list current user is coordinating primary contact",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "861",
        "FileName": "when_generate_authorization_list.cs",
        "Description": "when generate authorization list current user is coordinating primary contact and subscribe contact",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "862",
    "FileName": "when_get_assignee_with_authorization_list_info.cs",
    "Description": "when get assignee with authorization list info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "863",
        "FileName": "when_get_assignee_with_authorization_list_info.cs",
        "Description": "when kayla does NOT related to any authorization list",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return kayla with has authorization list as false"
        ],
        "Children": []
      },
      {
        "$id": "864",
        "FileName": "when_get_assignee_with_authorization_list_info.cs",
        "Description": "when kayla related to authorization list",
        "WhenList": [
          "load assignee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return kayla with has authorization list as true"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "865",
    "FileName": "when_get_authorization_list_activity_history.cs",
    "Description": "when get authorization list activity history",
    "WhenList": [
      "request to get authorization list history"
    ],
    "ThenList": [
      "should be ok",
      "should have history items"
    ],
    "Children": []
  },
  {
    "$id": "866",
    "FileName": "when_get_authorization_list_by_engagement_and_year.cs",
    "Description": "when get authorization list by engagement and year",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "867",
        "FileName": "when_get_authorization_list_by_engagement_and_year.cs",
        "Description": "when get authorization list with engagement admin",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should return created authorization list correctly"
        ],
        "Children": []
      },
      {
        "$id": "868",
        "FileName": "when_get_authorization_list_by_engagement_and_year.cs",
        "Description": "when get authorization list with engagement coordinating primary contact",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should return created authorization list correctly"
        ],
        "Children": []
      },
      {
        "$id": "869",
        "FileName": "when_get_authorization_list_by_engagement_and_year.cs",
        "Description": "when get authorization list from restricted engagement as who can manage the engagement",
        "WhenList": [
          "request to get authorization list given engagement and year"
        ],
        "ThenList": [
          "should be ok"
        ],
        "Children": []
      },
      {
        "$id": "870",
        "FileName": "when_get_authorization_list_by_engagement_and_year.cs",
        "Description": "when get authorization list from restricted engagement as who cannot manage the engagement",
        "WhenList": [
          "request to get authorization list given engagement and year"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "871",
        "FileName": "when_get_authorization_list_by_engagement_and_year.cs",
        "Description": "when get authorization list by staff not authorization administrator",
        "WhenList": [
          "request to get authorization list given engagement and year"
        ],
        "ThenList": [
          "should not return finalize link or update finalized items link"
        ],
        "Children": []
      },
      {
        "$id": "872",
        "FileName": "when_get_authorization_list_by_engagement_and_year.cs",
        "Description": "when get authorization list which belongs to inactive engagement",
        "WhenList": [
          "request to get authorization list given engagement and year"
        ],
        "ThenList": [
          "should not return finalize link or update finalized items link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "873",
    "FileName": "when_get_generated_authorization_lists_by_engagements.cs",
    "Description": "when get generated authorization lists by engagements",
    "WhenList": [
      "request to get all authorization list for engagement"
    ],
    "ThenList": [
      "should be ok",
      "should return all lists with countries"
    ],
    "Children": []
  },
  {
    "$id": "874",
    "FileName": "when_update_authorization_item_comments.cs",
    "Description": "when update authorization item comments",
    "WhenList": [
      "update authorization item comments"
    ],
    "ThenList": [
      "should be created",
      "should be update authorization item comments and not update last updated on and last updated by",
      "should record history"
    ],
    "Children": []
  },
  {
    "$id": "875",
    "FileName": "when_update_authorization_item_status.cs",
    "Description": "when update authorization item status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "876",
        "FileName": "when_update_authorization_item_status.cs",
        "Description": "when update authorization item from authorized to unauthorized",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be created",
          "should be update authorization item in autherization list",
          "should record history"
        ],
        "Children": []
      },
      {
        "$id": "877",
        "FileName": "when_update_authorization_item_status.cs",
        "Description": "when update authorization item from unauthorized to authorized",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should record history"
        ],
        "Children": []
      },
      {
        "$id": "878",
        "FileName": "when_update_authorization_item_status.cs",
        "Description": "when update finalized authorization item authorized status",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "879",
            "FileName": "when_update_authorization_item_status.cs",
            "Description": "when authorization admin update finalized authorization item authorized status",
            "WhenList": [
              "update authorization item"
            ],
            "ThenList": [
              "should be return ok",
              "should be update authorization item in autherization list"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "880",
    "FileName": "when_update_authorization_list_by_contact.cs",
    "Description": "when update authorization list by contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "881",
        "FileName": "when_update_authorization_list_by_contact.cs",
        "Description": "when update authorization list by coordinating primary contact",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "882",
        "FileName": "when_update_authorization_list_by_contact.cs",
        "Description": "when update authorization list by coordinating primary contact and subscribe contact",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "883",
    "FileName": "when_update_authorization_list_caused_by_adding_assignments_perriod_from_Tiger.cs",
    "Description": "when update authorization list caused by adding assignments perriod from tiger",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "884",
        "FileName": "when_update_authorization_list_caused_by_adding_assignments_perriod_from_Tiger.cs",
        "Description": "when assignee does not have any assignment",
        "WhenList": [
          "add new assignment"
        ],
        "ThenList": [
          "should return one host authorizationlist item",
          "should return host and home authorization items for 2 authorization list",
          "should record history for authorization list"
        ],
        "Children": []
      },
      {
        "$id": "885",
        "FileName": "when_update_authorization_list_caused_by_adding_assignments_perriod_from_Tiger.cs",
        "Description": "when assignee already has assignment",
        "WhenList": [
          "add new assignment"
        ],
        "ThenList": [
          "should record add history for authorization list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "886",
    "FileName": "when_update_authorization_list_caused_by_creating_assignee.cs",
    "Description": "when update authorization list caused by creating assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "887",
        "FileName": "when_update_authorization_list_caused_by_creating_assignee.cs",
        "Description": "when single create assignee",
        "WhenList": [
          "single create assignee"
        ],
        "ThenList": [
          "should return 201 created",
          "should generate authorization item in related authorization list",
          "should record history item for authorization list"
        ],
        "Children": []
      },
      {
        "$id": "888",
        "FileName": "when_update_authorization_list_caused_by_creating_assignee.cs",
        "Description": "when batch create assignee",
        "WhenList": [
          "batch create assignees"
        ],
        "ThenList": [
          "should return 200 ok",
          "should generate authorization item in related authorization list",
          "should record history item for authorization list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "889",
    "FileName": "when_update_authorization_list_caused_by_deleting_assignee.cs",
    "Description": "when update authorization list caused by deleting assignee",
    "WhenList": [
      "delete kayla"
    ],
    "ThenList": [
      "should remove all the authorization items for kayla",
      "should record delete history"
    ],
    "Children": []
  },
  {
    "$id": "890",
    "FileName": "when_update_authorization_list_caused_by_deleting_assignment_type.cs",
    "Description": "when update authorization list caused by deleting assignment type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "891",
        "FileName": "when_update_authorization_list_caused_by_deleting_assignment_type.cs",
        "Description": "authorization item is updated after delete assignment type",
        "WhenList": [
          "delete assignment type"
        ],
        "ThenList": [
          "should use all years plus one rule to regenerate the affected authorization lists",
          "should record history for authorization item"
        ],
        "Children": []
      },
      {
        "$id": "892",
        "FileName": "when_update_authorization_list_caused_by_deleting_assignment_type.cs",
        "Description": "authorization item is added after delete assignment type",
        "WhenList": [
          "delete assignment type"
        ],
        "ThenList": [
          "should use all years plus one rule to regenerate the affected authorization lists",
          "should record history for authorization item"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "893",
    "FileName": "when_update_authorization_list_caused_by_importing_assignment.cs",
    "Description": "when update authorization list caused by importing assignment",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should success",
      "should update authorization list"
    ],
    "Children": []
  },
  {
    "$id": "894",
    "FileName": "when_update_authorization_list_caused_by_updating_assignee.cs",
    "Description": "when update authorization list caused by updating assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "895",
        "FileName": "when_update_authorization_list_caused_by_updating_assignee.cs",
        "Description": "when only update kayla home country",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "896",
            "FileName": "when_update_authorization_list_caused_by_updating_assignee.cs",
            "Description": "should related authorization item home country name change",
            "WhenList": [
              "change assignee home country from china to singpore"
            ],
            "ThenList": [
              "should the name of home authorization item changed from china to singpore",
              "should record add and delete history for authorization list"
            ],
            "Children": []
          },
          {
            "$id": "897",
            "FileName": "when_update_authorization_list_caused_by_updating_assignee.cs",
            "Description": "should persist authorized status",
            "WhenList": [
              "change home country"
            ],
            "ThenList": [
              "should home country authorization item authorized"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "898",
        "FileName": "when_update_authorization_list_caused_by_updating_assignee.cs",
        "Description": "when only update kayla employee id",
        "WhenList": [
          "change assignee employee id"
        ],
        "ThenList": [
          "should change employee id for related authorization item",
          "should record authorization list history"
        ],
        "Children": []
      },
      {
        "$id": "899",
        "FileName": "when_update_authorization_list_caused_by_updating_assignee.cs",
        "Description": "when change kayla status from active to inactive",
        "WhenList": [
          "change kayla status to be inactive"
        ],
        "ThenList": [
          "should remove all the authorization item for kayla"
        ],
        "Children": []
      },
      {
        "$id": "900",
        "FileName": "when_update_authorization_list_caused_by_updating_assignee.cs",
        "Description": "when only update kayla effective date",
        "WhenList": [
          "change kayla effective date"
        ],
        "ThenList": [
          "should remove all the authorization item from oracle authorization list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "901",
    "FileName": "when_update_authorization_list_caused_by_updating_assignee_assignments.cs",
    "Description": "when update authorization list caused by updating assignee assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "902",
        "FileName": "when_update_authorization_list_caused_by_updating_assignee_assignments.cs",
        "Description": "when change assignment type",
        "WhenList": [
          "change assignment within one engagement"
        ],
        "ThenList": [
          "should the authorzation item assignment type synchronized",
          "should keep authorization item comments",
          "should record history for authorization item"
        ],
        "Children": []
      },
      {
        "$id": "903",
        "FileName": "when_update_authorization_list_caused_by_updating_assignee_assignments.cs",
        "Description": "when delete assignee assigment",
        "WhenList": [
          "change assignment within one engagement"
        ],
        "ThenList": [
          "should delete related authorzation item",
          "should record delete history for authorization list"
        ],
        "Children": []
      },
      {
        "$id": "904",
        "FileName": "when_update_authorization_list_caused_by_updating_assignee_assignments.cs",
        "Description": "when only update assignment",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "905",
            "FileName": "when_update_authorization_list_caused_by_updating_assignee_assignments.cs",
            "Description": "when update start date",
            "WhenList": [
              "change assignment start date"
            ],
            "ThenList": [
              "should return ok",
              "should keep authorizaion item authorized status and comments",
              "should record update history for authorization list",
              "should keep updated by"
            ],
            "Children": []
          },
          {
            "$id": "906",
            "FileName": "when_update_authorization_list_caused_by_updating_assignee_assignments.cs",
            "Description": "when update actual end date",
            "WhenList": [
              "change assignment actual end date"
            ],
            "ThenList": [
              "should record update history for authorization list"
            ],
            "Children": []
          },
          {
            "$id": "907",
            "FileName": "when_update_authorization_list_caused_by_updating_assignee_assignments.cs",
            "Description": "when update host country of assignment",
            "WhenList": [
              "change assignment start date and host country but still in this auth list"
            ],
            "ThenList": [
              "should reset host auth item authorized status but keep comments when change to another country",
              "should keep home auth item authorized status and comments when change host country to another country",
              "should keep manual authorization item",
              "should record add and delete history for authorization list"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "908",
    "FileName": "when_update_authorization_list_caused_by_updating_assignee_assignments_from_myMobility.cs",
    "Description": "when update authorization list caused by updating assignee assignments from my mobility",
    "WhenList": [
      "change assignment start date from my mobility"
    ],
    "ThenList": [
      "should return ok",
      "should keep the changed assignment related authorizaion item as unauthorized",
      "should record history item for authorization list"
    ],
    "Children": []
  },
  {
    "$id": "909",
    "FileName": "when_update_authorization_list_caused_by_updating_assignee_who_has_two_clients.cs",
    "Description": "when update authorization list caused by updating assignee who has two clients",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "910",
        "FileName": "when_update_authorization_list_caused_by_updating_assignee_who_has_two_clients.cs",
        "Description": "when only update kayla employee id",
        "WhenList": [
          "change assignee employee id"
        ],
        "ThenList": [
          "should change employee id for related authorization item"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "911",
    "FileName": "when_create_briefing_video.cs",
    "Description": "when create briefing video",
    "WhenList": [
      "create briefing video"
    ],
    "ThenList": [
      "should return ok",
      "should have briefing video in database"
    ],
    "Children": []
  },
  {
    "$id": "912",
    "FileName": "when_create_briefing_video.cs",
    "Description": "when show briefing video",
    "WhenList": [
      "find briefing video"
    ],
    "ThenList": [
      "should return ok when get all briefing videos",
      "should show searched briefing videos"
    ],
    "Children": []
  },
  {
    "$id": "913",
    "FileName": "when_create_briefing_video.cs",
    "Description": "when create briefing video about uac",
    "WhenList": [
      "create briefing video"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "914",
    "FileName": "when_create_briefing_video.cs",
    "Description": "when view briefing video about uac",
    "WhenList": [
      "country level staff want to view videos"
    ],
    "ThenList": [
      "should return forbidden when get all briefing videos"
    ],
    "Children": []
  },
  {
    "$id": "915",
    "FileName": "when_get_briefing_videos.cs",
    "Description": "when get briefing videos",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return briefing videos in alphabetical order"
    ],
    "Children": []
  },
  {
    "$id": "916",
    "FileName": "when_search_checklist_item_of_deleted_assignee.cs",
    "Description": "when search checklist item of deleted assignee",
    "WhenList": [
      "search for checklist item"
    ],
    "ThenList": [
      "should be ok",
      "should search out only checklist items for active assignee"
    ],
    "Children": []
  },
  {
    "$id": "917",
    "FileName": "when_search_checklist_item_of_inactive_assignee.cs",
    "Description": "when search checklist item of inactive assignee",
    "WhenList": [
      "search for checklist item"
    ],
    "ThenList": [
      "should be ok",
      "should search out only checklist items for active assignee"
    ],
    "Children": []
  },
  {
    "$id": "918",
    "FileName": "when_search_checklist_item_of_assignee_in_inactive_engagement.cs",
    "Description": "when search checklist item of assignee in inactive engagement",
    "WhenList": [
      "search for checklist item"
    ],
    "ThenList": [
      "should be ok",
      "should search out only checklist items for active assignee"
    ],
    "Children": []
  },
  {
    "$id": "919",
    "FileName": "when_country_level_user_update_checklist_template_which_is_not_for_eagagement.cs",
    "Description": "when country level user update checklist template which is not for eagagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "920",
        "FileName": "when_country_level_user_update_checklist_template_which_is_not_for_eagagement.cs",
        "Description": "when the user is a country user and is not the template owner",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "921",
            "FileName": "when_country_level_user_update_checklist_template_which_is_not_for_eagagement.cs",
            "Description": "when updating the template name",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "922",
            "FileName": "when_country_level_user_update_checklist_template_which_is_not_for_eagagement.cs",
            "Description": "when updating task definitions",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "923",
            "FileName": "when_country_level_user_update_checklist_template_which_is_not_for_eagagement.cs",
            "Description": "when adding a new task definition",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "924",
            "FileName": "when_country_level_user_update_checklist_template_which_is_not_for_eagagement.cs",
            "Description": "when updating subscriptions with a different country office",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "925",
            "FileName": "when_country_level_user_update_checklist_template_which_is_not_for_eagagement.cs",
            "Description": "when adding new subscriptions with same country office",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "926",
        "FileName": "when_country_level_user_update_checklist_template_which_is_not_for_eagagement.cs",
        "Description": "when the user is a country user and is the template owner",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "927",
            "FileName": "when_country_level_user_update_checklist_template_which_is_not_for_eagagement.cs",
            "Description": "when updating the template",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "928",
    "FileName": "when_create_checklist_template_for_engagement.cs",
    "Description": "when create checklist template for engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "929",
        "FileName": "when_create_checklist_template_for_engagement.cs",
        "Description": "when is global admin",
        "WhenList": [
          "create checklist template with valid request"
        ],
        "ThenList": [
          "should get 201",
          "should return uri of created checklist template in location header",
          "should create checklist"
        ],
        "Children": []
      },
      {
        "$id": "930",
        "FileName": "when_create_checklist_template_for_engagement.cs",
        "Description": "when is engagement admin",
        "WhenList": [
          "create checklist template with valid request"
        ],
        "ThenList": [
          "should get 201"
        ],
        "Children": []
      },
      {
        "$id": "931",
        "FileName": "when_create_checklist_template_for_engagement.cs",
        "Description": "when is not engagement admin",
        "WhenList": [
          "create checklist template with valid request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "932",
        "FileName": "when_create_checklist_template_for_engagement.cs",
        "Description": "show create task template when staff is coordinating primary contact",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "933",
        "FileName": "when_create_checklist_template_for_engagement.cs",
        "Description": "show create task template when staff is coordinating secondary contact",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "934",
        "FileName": "when_create_checklist_template_for_engagement.cs",
        "Description": "show create task template when staff is delegated primary contact",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "935",
        "FileName": "when_create_checklist_template_for_engagement.cs",
        "Description": "show create task template when staff is delegated secondary contact",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "936",
    "FileName": "when_create_checklist_template_not_for_engagement.cs",
    "Description": "when create checklist template not for engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "937",
        "FileName": "when_create_checklist_template_not_for_engagement.cs",
        "Description": "when create checklist template with valid request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "938",
            "FileName": "when_create_checklist_template_not_for_engagement.cs",
            "Description": "when general user create checklist template not for engagement",
            "WhenList": [
              "create checklist template with valid request"
            ],
            "ThenList": [
              "should get forbidden"
            ],
            "Children": []
          },
          {
            "$id": "939",
            "FileName": "when_create_checklist_template_not_for_engagement.cs",
            "Description": "when country level user create country checklist template for other country",
            "WhenList": [
              "create checklist template with valid request"
            ],
            "ThenList": [
              "should get forbidden"
            ],
            "Children": []
          },
          {
            "$id": "940",
            "FileName": "when_create_checklist_template_not_for_engagement.cs",
            "Description": "when country level user create country checklist template for other country subscription",
            "WhenList": [
              "create checklist template with valid request"
            ],
            "ThenList": [
              "should get forbidden"
            ],
            "Children": []
          },
          {
            "$id": "941",
            "FileName": "when_create_checklist_template_not_for_engagement.cs",
            "Description": "when country level user create country checklist template for same country subscription",
            "WhenList": [
              "create checklist template with valid request"
            ],
            "ThenList": [
              "should get 201"
            ],
            "Children": []
          },
          {
            "$id": "942",
            "FileName": "when_create_checklist_template_not_for_engagement.cs",
            "Description": "when global admin create checklist template for country",
            "WhenList": [
              "create checklist template with valid request"
            ],
            "ThenList": [
              "should get 201",
              "should return uri of created checklist template in location header",
              "should create checklist"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "943",
        "FileName": "when_create_checklist_template_not_for_engagement.cs",
        "Description": "when create checklist template with invalid request",
        "WhenList": [
          "create checklist template with invalid request"
        ],
        "ThenList": [
          "should return 400 BAD REQUEST as status code",
          "should not create checklist template"
        ],
        "Children": []
      },
      {
        "$id": "944",
        "FileName": "when_create_checklist_template_not_for_engagement.cs",
        "Description": "when create checklist template with duplicate tempalte name",
        "WhenList": [
          "create checklist template with duplicate tempalte name"
        ],
        "ThenList": [
          "should return 409 conflict as status code",
          "should not create checklist template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "945",
    "FileName": "when_general_user_update_engagement_checklist_template.cs",
    "Description": "when general user update engagement checklist template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "946",
        "FileName": "when_general_user_update_engagement_checklist_template.cs",
        "Description": "when update engagement checklist template with valid request",
        "WhenList": [
          "when update checklist template"
        ],
        "ThenList": [
          "should return 200 OK as status code"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "947",
    "FileName": "when_get_checklist_template_details.cs",
    "Description": "when get checklist template details not for engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "948",
        "FileName": "when_get_checklist_template_details.cs",
        "Description": "when get details of checklist template not for engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "949",
            "FileName": "when_get_checklist_template_details.cs",
            "Description": "when is general user",
            "WhenList": [
              "get checklist template details"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should return details"
            ],
            "Children": []
          },
          {
            "$id": "950",
            "FileName": "when_get_checklist_template_details.cs",
            "Description": "when is country level",
            "WhenList": [
              "get checklist template details"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should return details"
            ],
            "Children": []
          },
          {
            "$id": "951",
            "FileName": "when_get_checklist_template_details.cs",
            "Description": "when is office level",
            "WhenList": [
              "get checklist template details"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should return details"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "952",
        "FileName": "when_get_checklist_template_details.cs",
        "Description": "when get details of not existing checklist template",
        "WhenList": [
          "get checklist template details"
        ],
        "ThenList": [
          "should return 404 not found as status code"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "953",
    "FileName": "when_get_checklist_template_details_for_engagement.cs",
    "Description": "when get checklist template details for engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "954",
        "FileName": "when_get_checklist_template_details_for_engagement.cs",
        "Description": "when is global admin",
        "WhenList": [
          "get checklist template details"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return details"
        ],
        "Children": []
      },
      {
        "$id": "955",
        "FileName": "when_get_checklist_template_details_for_engagement.cs",
        "Description": "when is engagement admin",
        "WhenList": [
          "get checklist template details"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should contain the edit link"
        ],
        "Children": []
      },
      {
        "$id": "956",
        "FileName": "when_get_checklist_template_details_for_engagement.cs",
        "Description": "when is not engagement admin",
        "WhenList": [
          "get checklist template details"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should not contain the edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "957",
    "FileName": "when_get_checklist_template_details_for_inactive_engagement.cs",
    "Description": "when get checklist template details for inactive engagement",
    "WhenList": [
      "get checklist template details"
    ],
    "ThenList": [
      "should contain the edit link"
    ],
    "Children": []
  },
  {
    "$id": "958",
    "FileName": "when_global_admin_update_checklist_template_which_is_not_for_engagement.cs",
    "Description": "when global admin update checklist template which is not for engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "959",
        "FileName": "when_global_admin_update_checklist_template_which_is_not_for_engagement.cs",
        "Description": "when update checklist template with valid request",
        "WhenList": [
          "when update checklist template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return checklist template details info"
        ],
        "Children": []
      },
      {
        "$id": "960",
        "FileName": "when_global_admin_update_checklist_template_which_is_not_for_engagement.cs",
        "Description": "when update checklist template with empty tasks",
        "WhenList": [
          "when update checklist template"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should not change template info"
        ],
        "Children": []
      },
      {
        "$id": "961",
        "FileName": "when_global_admin_update_checklist_template_which_is_not_for_engagement.cs",
        "Description": "when update checklist template without subscription",
        "WhenList": [
          "when update checklist template"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should not change template info"
        ],
        "Children": []
      },
      {
        "$id": "962",
        "FileName": "when_global_admin_update_checklist_template_which_is_not_for_engagement.cs",
        "Description": "when update task template with existing template name",
        "WhenList": [
          "when get task template details"
        ],
        "ThenList": [
          "should return 409 conflict as status code",
          "should not change template info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "963",
    "FileName": "when_search_for_checklist_item.cs",
    "Description": "when search for checklist item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "964",
        "FileName": "when_search_for_checklist_item.cs",
        "Description": "when checklist items are not done",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be ok",
          "should search out sepecified work record check list items"
        ],
        "Children": []
      },
      {
        "$id": "965",
        "FileName": "when_search_for_checklist_item.cs",
        "Description": "when some of checklist items are done",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should only search out created checklist item"
        ],
        "Children": []
      },
      {
        "$id": "966",
        "FileName": "when_search_for_checklist_item.cs",
        "Description": "when search with work record type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "967",
            "FileName": "when_search_for_checklist_item.cs",
            "Description": "should return all tax return work record with service status",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return checklist item of tax return workrecord"
            ],
            "Children": []
          },
          {
            "$id": "968",
            "FileName": "when_search_for_checklist_item.cs",
            "Description": "should return other compliance work record",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return checklist item of workrecord"
            ],
            "Children": []
          },
          {
            "$id": "969",
            "FileName": "when_search_for_checklist_item.cs",
            "Description": "should return immigration work record",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return checklist item of workrecord"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "970",
        "FileName": "when_search_for_checklist_item.cs",
        "Description": "when search with engagement uris",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should only search out created checklist item"
        ],
        "Children": []
      },
      {
        "$id": "971",
        "FileName": "when_search_for_checklist_item.cs",
        "Description": "when search with team uri",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "972",
            "FileName": "when_search_for_checklist_item.cs",
            "Description": "when donot specify team as search criteria",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should only search out checklist item for work record with team"
            ],
            "Children": []
          },
          {
            "$id": "973",
            "FileName": "when_search_for_checklist_item.cs",
            "Description": "when specify team as search criteria",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should only search out checklist item for work record with team"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "974",
        "FileName": "when_search_for_checklist_item.cs",
        "Description": "when search immigration workrecords checklist item",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should raise bad request"
        ],
        "Children": []
      },
      {
        "$id": "975",
        "FileName": "when_search_for_checklist_item.cs",
        "Description": "when from workrecords of restricted engagements",
        "WhenList": [],
        "ThenList": [
          "should not be searched out by staff not on acl",
          "should be searched out by staff on acl"
        ],
        "Children": []
      },
      {
        "$id": "976",
        "FileName": "when_search_for_checklist_item.cs",
        "Description": "when from workrecords of restricted assignee",
        "WhenList": [],
        "ThenList": [
          "should not be searched out by staff not on acl",
          "should be searchout by staff on acl"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "977",
    "FileName": "when_search_for_checklist_templates_by_name.cs",
    "Description": "when search for checklist templates by name",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should get one task templates"
    ],
    "Children": []
  },
  {
    "$id": "978",
    "FileName": "when_search_for_country_checklist_templates.cs",
    "Description": "when search for country checklist templates",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "979",
        "FileName": "when_search_for_country_checklist_templates.cs",
        "Description": "when search country checklist templates by office uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get specific country task templates subscribed by office"
        ],
        "Children": []
      },
      {
        "$id": "980",
        "FileName": "when_search_for_country_checklist_templates.cs",
        "Description": "when search country checklist templates with different practice types",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get specific country task templates"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "981",
    "FileName": "when_search_for_engagement_checklist_templates.cs",
    "Description": "when search for engagement checklist templates",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should get one task templates"
    ],
    "Children": []
  },
  {
    "$id": "982",
    "FileName": "when_update_engagement_checklist_template.cs",
    "Description": "when update engagement checklist template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "983",
        "FileName": "when_update_engagement_checklist_template.cs",
        "Description": "when update engagement checklist template with valid request",
        "WhenList": [
          "when update checklist template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return checklist template details info"
        ],
        "Children": []
      },
      {
        "$id": "984",
        "FileName": "when_update_engagement_checklist_template.cs",
        "Description": "when update checklist template",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "985",
            "FileName": "when_update_engagement_checklist_template.cs",
            "Description": "when by engament role",
            "WhenList": [
              "when update"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "986",
            "FileName": "when_update_engagement_checklist_template.cs",
            "Description": "when by global admin",
            "WhenList": [
              "when update"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "987",
            "FileName": "when_update_engagement_checklist_template.cs",
            "Description": "when not by engagement admin or global admin",
            "WhenList": [
              "when update"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "988",
    "FileName": "when_create_client.cs",
    "Description": "when create client",
    "WhenList": [
      "create client"
    ],
    "ThenList": [
      "should succeed",
      "should save create event"
    ],
    "Children": []
  },
  {
    "$id": "989",
    "FileName": "when_update_client.cs",
    "Description": "when update client",
    "WhenList": [
      "update client"
    ],
    "ThenList": [
      "should succeed",
      "should update client"
    ],
    "Children": []
  },
  {
    "$id": "990",
    "FileName": "when_create_client.cs",
    "Description": "when create client",
    "WhenList": [
      "create client"
    ],
    "ThenList": [
      "should succeed",
      "should save create event"
    ],
    "Children": []
  },
  {
    "$id": "991",
    "FileName": "when_update_client.cs",
    "Description": "when update client",
    "WhenList": [
      "update client"
    ],
    "ThenList": [
      "should succeed",
      "should update client"
    ],
    "Children": []
  },
  {
    "$id": "992",
    "FileName": "when_approve_client_request_with_pwc_channel_not_filled.cs",
    "Description": "when approve client request with pwc channel not filled",
    "WhenList": [
      "patch with id"
    ],
    "ThenList": [
      "should return bad request",
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "993",
    "FileName": "when_approve_client_request_with_valid_request.cs",
    "Description": "when approve client request with valid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "994",
        "FileName": "when_approve_client_request_with_valid_request.cs",
        "Description": "when current user is evelyn",
        "WhenList": [
          "approve client request"
        ],
        "ThenList": [
          "should return no content",
          "should update client status to active",
          "should save approve date"
        ],
        "Children": []
      },
      {
        "$id": "995",
        "FileName": "when_approve_client_request_with_valid_request.cs",
        "Description": "when current user is general user",
        "WhenList": [
          "approve client request"
        ],
        "ThenList": [
          "should return bad request",
          "should not update client status to active"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "996",
    "FileName": "when_back_to_pending_from_rejected_client_with_no_pwc_channel_request.cs",
    "Description": "when back to pending from rejected client with no pwc channel request",
    "WhenList": [
      "patch with id"
    ],
    "ThenList": [
      "should return no content",
      "should update client status to active"
    ],
    "Children": []
  },
  {
    "$id": "997",
    "FileName": "when_create_client.cs",
    "Description": "when create client",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "998",
        "FileName": "when_create_client.cs",
        "Description": "should create pending client",
        "WhenList": [
          "create client"
        ],
        "ThenList": [
          "should succeed",
          "should be able to get the new client",
          "should store client code with same value to short name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "999",
    "FileName": "when_create_client_with_invalid_request.cs",
    "Description": "when create client with invalid request",
    "WhenList": [
      "create client"
    ],
    "ThenList": [
      "should return 400"
    ],
    "Children": []
  },
  {
    "$id": "1000",
    "FileName": "when_create_client_with_invalid_request.cs",
    "Description": "when create client with duplicate long name",
    "WhenList": [
      "create client"
    ],
    "ThenList": [
      "should return 400"
    ],
    "Children": []
  },
  {
    "$id": "1001",
    "FileName": "when_create_client_with_invalid_request.cs",
    "Description": "when create client with duplicate short name",
    "WhenList": [
      "create client"
    ],
    "ThenList": [
      "should return 400"
    ],
    "Children": []
  },
  {
    "$id": "1002",
    "FileName": "when_create_client_with_invalid_request.cs",
    "Description": "when create client with same name",
    "WhenList": [
      "create client"
    ],
    "ThenList": [
      "should return 400"
    ],
    "Children": []
  },
  {
    "$id": "1003",
    "FileName": "when_get_active_client_by_id.cs",
    "Description": "when get active client by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1004",
        "FileName": "when_get_active_client_by_id.cs",
        "Description": "when current user is evelyn",
        "WhenList": [
          "get client"
        ],
        "ThenList": [
          "should succeed",
          "should return edit link",
          "should return the client",
          "should contain fields in notes section"
        ],
        "Children": []
      },
      {
        "$id": "1005",
        "FileName": "when_get_active_client_by_id.cs",
        "Description": "when current user is global admin",
        "WhenList": [
          "get client"
        ],
        "ThenList": [
          "should succeed",
          "should return edit link",
          "should return the client",
          "should contain fields in notes section"
        ],
        "Children": []
      },
      {
        "$id": "1006",
        "FileName": "when_get_active_client_by_id.cs",
        "Description": "when current user is general user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1007",
            "FileName": "when_get_active_client_by_id.cs",
            "Description": "when client request status is pending",
            "WhenList": [
              "get client"
            ],
            "ThenList": [
              "should succeed",
              "should not return edit link",
              "should return the client",
              "should not contain fields in notes section"
            ],
            "Children": []
          },
          {
            "$id": "1008",
            "FileName": "when_get_active_client_by_id.cs",
            "Description": "when client request status is rejected",
            "WhenList": [
              "get client"
            ],
            "ThenList": [
              "should succeed",
              "should return edit link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1009",
        "FileName": "when_get_active_client_by_id.cs",
        "Description": "when getting client with incorrect id",
        "WhenList": [
          "get client"
        ],
        "ThenList": [
          "should return 404"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1010",
    "FileName": "when_get_all_clients.cs",
    "Description": "when get all clients",
    "WhenList": [
      "send request"
    ],
    "ThenList": [
      "should return clients"
    ],
    "Children": []
  },
  {
    "$id": "1011",
    "FileName": "when_get_client_by_id.cs",
    "Description": "when get client by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1012",
        "FileName": "when_get_client_by_id.cs",
        "Description": "when current user is evelyn",
        "WhenList": [
          "get client"
        ],
        "ThenList": [
          "should succeed",
          "should return approve reject and edit links",
          "should return the client"
        ],
        "Children": []
      },
      {
        "$id": "1013",
        "FileName": "when_get_client_by_id.cs",
        "Description": "when current user is global admin",
        "WhenList": [
          "get client"
        ],
        "ThenList": [
          "should succeed",
          "should return approve reject and edit links",
          "should return the client",
          "should contain notes"
        ],
        "Children": []
      },
      {
        "$id": "1014",
        "FileName": "when_get_client_by_id.cs",
        "Description": "when current user is general user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1015",
            "FileName": "when_get_client_by_id.cs",
            "Description": "when client request status is pending",
            "WhenList": [
              "get client"
            ],
            "ThenList": [
              "should succeed",
              "should not return approve reject and edit links",
              "should return the client"
            ],
            "Children": []
          },
          {
            "$id": "1016",
            "FileName": "when_get_client_by_id.cs",
            "Description": "when client request status is rejected",
            "WhenList": [
              "get client"
            ],
            "ThenList": [
              "should succeed",
              "should return edit link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1017",
        "FileName": "when_get_client_by_id.cs",
        "Description": "when getting client with incorrect id",
        "WhenList": [
          "get client"
        ],
        "ThenList": [
          "should return 404"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1018",
    "FileName": "when_list_all_clients_success.cs",
    "Description": "when list all clients success",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1019",
        "FileName": "when_list_all_clients_success.cs",
        "Description": "when list all clients by global admin",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return clients",
          "should return clients with minimum info"
        ],
        "Children": []
      },
      {
        "$id": "1020",
        "FileName": "when_list_all_clients_success.cs",
        "Description": "when try to list all clients by other role",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1021",
    "FileName": "when_list_all_engagements_by_client_id.cs",
    "Description": "when list all engagements by client id",
    "WhenList": [
      "send request"
    ],
    "ThenList": [
      "should return clients",
      "should contains practice type in engagements"
    ],
    "Children": []
  },
  {
    "$id": "1022",
    "FileName": "when_patch_client_by_id.cs",
    "Description": "when patch client by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1023",
        "FileName": "when_patch_client_by_id.cs",
        "Description": "when evelyn approve the client request",
        "WhenList": [
          "approve the client request"
        ],
        "ThenList": [
          "should succeed",
          "should update the client request status to active"
        ],
        "Children": []
      },
      {
        "$id": "1024",
        "FileName": "when_patch_client_by_id.cs",
        "Description": "when general user approve the client request",
        "WhenList": [
          "approve the client request"
        ],
        "ThenList": [
          "should return bad request",
          "should not update the client request status"
        ],
        "Children": []
      },
      {
        "$id": "1025",
        "FileName": "when_patch_client_by_id.cs",
        "Description": "when global admin approve the client request",
        "WhenList": [
          "approve the client request"
        ],
        "ThenList": [
          "should succeed",
          "should update the client request status to active",
          "should keep the note"
        ],
        "Children": []
      },
      {
        "$id": "1026",
        "FileName": "when_patch_client_by_id.cs",
        "Description": "when global admin update the client note",
        "WhenList": [
          "update the client note"
        ],
        "ThenList": [
          "should succeed",
          "should update the client note"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1027",
    "FileName": "when_patch_client_by_id_with_invalid_request_param.cs",
    "Description": "when patch client by id with invalid request param",
    "WhenList": [
      "patch with id"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "1028",
    "FileName": "when_search_clients_by_fuzzy_name.cs",
    "Description": "when search clients by fuzzy name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1029",
        "FileName": "when_search_clients_by_fuzzy_name.cs",
        "Description": "select active client by fuzzy name",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return clients",
          "should return clients with only basic info"
        ],
        "Children": []
      },
      {
        "$id": "1030",
        "FileName": "when_search_clients_by_fuzzy_name.cs",
        "Description": "select approved clients by fuzzy long name",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return clients"
        ],
        "Children": []
      },
      {
        "$id": "1031",
        "FileName": "when_search_clients_by_fuzzy_name.cs",
        "Description": "return approved clients with active engagement count",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return active engagement count"
        ],
        "Children": []
      },
      {
        "$id": "1032",
        "FileName": "when_search_clients_by_fuzzy_name.cs",
        "Description": "select approved clients by fuzzy short name",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return clients"
        ],
        "Children": []
      },
      {
        "$id": "1033",
        "FileName": "when_search_clients_by_fuzzy_name.cs",
        "Description": "try to select approved clients by only one character",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1034",
    "FileName": "when_update_active_client.cs",
    "Description": "when update active client",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1035",
        "FileName": "when_update_active_client.cs",
        "Description": "when current user is evelyn",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should success",
          "should update client"
        ],
        "Children": []
      },
      {
        "$id": "1036",
        "FileName": "when_update_active_client.cs",
        "Description": "when current user is global admin and update note",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should succeed",
          "should update client"
        ],
        "Children": []
      },
      {
        "$id": "1037",
        "FileName": "when_update_active_client.cs",
        "Description": "when current user is global admin and update requested by",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should succeed",
          "should update client"
        ],
        "Children": []
      },
      {
        "$id": "1038",
        "FileName": "when_update_active_client.cs",
        "Description": "when current user is global admin and update reason for request",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should succeed",
          "should update client"
        ],
        "Children": []
      },
      {
        "$id": "1039",
        "FileName": "when_update_active_client.cs",
        "Description": "when current user is global admin and update pwc channel",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should succeed",
          "should update client"
        ],
        "Children": []
      },
      {
        "$id": "1040",
        "FileName": "when_update_active_client.cs",
        "Description": "when current user is global admin and update is private client",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should succeed",
          "should update client"
        ],
        "Children": []
      },
      {
        "$id": "1041",
        "FileName": "when_update_active_client.cs",
        "Description": "when current user is general user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1042",
            "FileName": "when_update_active_client.cs",
            "Description": "when updating pwc channel",
            "WhenList": [
              "update client"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1043",
    "FileName": "when_update_active_client_with_invalid_request.cs",
    "Description": "when update active client with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1044",
        "FileName": "when_update_active_client_with_invalid_request.cs",
        "Description": "when note to save is longer than 2000 characters",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "1045",
        "FileName": "when_update_active_client_with_invalid_request.cs",
        "Description": "when save invalid requested by",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "1046",
        "FileName": "when_update_active_client_with_invalid_request.cs",
        "Description": "when save reason for request longer than 2000 charaters",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "1047",
        "FileName": "when_update_active_client_with_invalid_request.cs",
        "Description": "when save invalid pwc channel",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1048",
    "FileName": "when_update_an_active_client.cs",
    "Description": "when update an active client",
    "WhenList": [
      "update client"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "1049",
    "FileName": "when_update_client_with_event_store.cs",
    "Description": "when update client with event store",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1050",
        "FileName": "when_update_client_with_event_store.cs",
        "Description": "should send client updated event after feature toggle on",
        "WhenList": [
          "update by id"
        ],
        "ThenList": [
          "should return 200",
          "should update client with valid request"
        ],
        "Children": []
      },
      {
        "$id": "1051",
        "FileName": "when_update_client_with_event_store.cs",
        "Description": "should not send modified client updated event after feature toggle on",
        "WhenList": [
          "update by id"
        ],
        "ThenList": [
          "should return 200",
          "should update client with valid request"
        ],
        "Children": []
      },
      {
        "$id": "1052",
        "FileName": "when_update_client_with_event_store.cs",
        "Description": "should not send client updated event after feature toggle off",
        "WhenList": [
          "update by id"
        ],
        "ThenList": [
          "should return 200",
          "should update client with valid request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1053",
    "FileName": "when_update_client_with_invalid_PwC_channel.cs",
    "Description": "when update client with invalid pw c channel",
    "WhenList": [
      "update client"
    ],
    "ThenList": [
      "should return bad request",
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "1054",
    "FileName": "when_update_client_with_invalid_request.cs",
    "Description": "when update client with invalid request",
    "WhenList": [
      "update by id"
    ],
    "ThenList": [
      "should return 400"
    ],
    "Children": []
  },
  {
    "$id": "1055",
    "FileName": "when_update_client_with_invalid_request_without_PwC_channel_at_pending_status.cs",
    "Description": "when update client with invalid request without pw c channel at pending status",
    "WhenList": [
      "update client"
    ],
    "ThenList": [
      "should return bad request",
      "should return error message",
      "should not update client"
    ],
    "Children": []
  },
  {
    "$id": "1056",
    "FileName": "when_update_client_with_valid_request_at_pending_status.cs",
    "Description": "when update client with valid request at pending status",
    "WhenList": [
      "update by id"
    ],
    "ThenList": [
      "should return 200",
      "should return client uri",
      "should update client with valid request"
    ],
    "Children": []
  },
  {
    "$id": "1057",
    "FileName": "when_update_pending_client.cs",
    "Description": "when update pending client",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1058",
        "FileName": "when_update_pending_client.cs",
        "Description": "when current user is evelyn",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should succeed",
          "should return client uri",
          "should update client"
        ],
        "Children": []
      },
      {
        "$id": "1059",
        "FileName": "when_update_pending_client.cs",
        "Description": "when current user is global admin",
        "WhenList": [
          "update client"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1060",
        "FileName": "when_update_pending_client.cs",
        "Description": "when current user is general user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1061",
            "FileName": "when_update_pending_client.cs",
            "Description": "when updating pwc channel",
            "WhenList": [
              "update client"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "1062",
            "FileName": "when_update_pending_client.cs",
            "Description": "when updating client but no pwc channel",
            "WhenList": [
              "update client"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1063",
    "FileName": "when_update_rejected_client.cs",
    "Description": "when update rejected client",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1064",
        "FileName": "when_update_rejected_client.cs",
        "Description": "when current user is evelyn",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1065",
            "FileName": "when_update_rejected_client.cs",
            "Description": "when update pwc channel",
            "WhenList": [
              "update client"
            ],
            "ThenList": [
              "should return bad request",
              "should return error message",
              "should not update client"
            ],
            "Children": []
          },
          {
            "$id": "1066",
            "FileName": "when_update_rejected_client.cs",
            "Description": "when not update pwc channel",
            "WhenList": [
              "update client"
            ],
            "ThenList": [
              "should succeed",
              "should update client"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1067",
        "FileName": "when_update_rejected_client.cs",
        "Description": "when current user is global admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1068",
            "FileName": "when_update_rejected_client.cs",
            "Description": "when update pwc channel",
            "WhenList": [
              "update client"
            ],
            "ThenList": [
              "should return bad request",
              "should return error message",
              "should not update client"
            ],
            "Children": []
          },
          {
            "$id": "1069",
            "FileName": "when_update_rejected_client.cs",
            "Description": "when not update pwc channel",
            "WhenList": [
              "update client"
            ],
            "ThenList": [
              "should succeed",
              "should update client"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1070",
        "FileName": "when_update_rejected_client.cs",
        "Description": "when current user is general user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1071",
            "FileName": "when_update_rejected_client.cs",
            "Description": "when update pwc channel",
            "WhenList": [
              "update client"
            ],
            "ThenList": [
              "should return bad request",
              "should return error message",
              "should not update client"
            ],
            "Children": []
          },
          {
            "$id": "1072",
            "FileName": "when_update_rejected_client.cs",
            "Description": "when not update pwc channel",
            "WhenList": [
              "update client"
            ],
            "ThenList": [
              "should succeed",
              "should update client"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1073",
    "FileName": "should_get_accesslist_by_assignee.cs",
    "Description": "should get accesslist by assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1074",
        "FileName": "should_get_accesslist_by_assignee.cs",
        "Description": "with out pw c contact",
        "WhenList": [
          "get assignee by url"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee accesslist"
        ],
        "Children": []
      },
      {
        "$id": "1075",
        "FileName": "should_get_accesslist_by_assignee.cs",
        "Description": "with pw c contact",
        "WhenList": [
          "get assignee by url"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee accesslist"
        ],
        "Children": []
      },
      {
        "$id": "1076",
        "FileName": "should_get_accesslist_by_assignee.cs",
        "Description": "with pw c contact and acl",
        "WhenList": [
          "get assignee by url"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee accesslist"
        ],
        "Children": []
      },
      {
        "$id": "1077",
        "FileName": "should_get_accesslist_by_assignee.cs",
        "Description": "when assignee is not restricted",
        "WhenList": [
          "get assignee by url"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1078",
    "FileName": "should_get_assignee_by_go_id_for_country_based_resource.cs",
    "Description": "should get assignee by go id for country based resource",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee"
    ],
    "Children": []
  },
  {
    "$id": "1079",
    "FileName": "should_get_assignee_by_go_id_for_country_based_resource.cs",
    "Description": "should get restricted assignee by go id for country based resource",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee access list link"
    ],
    "Children": []
  },
  {
    "$id": "1080",
    "FileName": "should_get_assignee_by_go_id_for_country_based_resource.cs",
    "Description": "should get assignee by go id for country based resource with associated client",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee"
    ],
    "Children": []
  },
  {
    "$id": "1081",
    "FileName": "should_get_assignee_by_tiger_id_for_country_based_resource.cs",
    "Description": "should get assignee by tiger id for country based resource",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee"
    ],
    "Children": []
  },
  {
    "$id": "1082",
    "FileName": "should_get_assignee_by_tiger_id_for_country_based_resource.cs",
    "Description": "should get assignee by tiger id for country based resource with associated client",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee"
    ],
    "Children": []
  },
  {
    "$id": "1083",
    "FileName": "should_get_assignee_by_tiger_id_for_country_based_resource.cs",
    "Description": "should get assignee by tiger id for country based resource with multi engagements under same client",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee"
    ],
    "Children": []
  },
  {
    "$id": "1084",
    "FileName": "should_get_assignee_country_custom_fields_by_tiger_id_for_engagement_base_resourse.cs",
    "Description": "should get assignee country custom fields by tiger id for engagement base resourse",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1085",
        "FileName": "should_get_assignee_country_custom_fields_by_tiger_id_for_engagement_base_resourse.cs",
        "Description": "should get assignee sucessfully",
        "WhenList": [
          "get assignee by url"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1086",
    "FileName": "should_get_assignee_information_filter_by_responsible_office.cs",
    "Description": "should get assignee information filter by responsible office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1087",
        "FileName": "should_get_assignee_information_filter_by_responsible_office.cs",
        "Description": "get assignee",
        "WhenList": [
          "get assignee by url"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1088",
        "FileName": "should_get_assignee_information_filter_by_responsible_office.cs",
        "Description": "get assignee access control list",
        "WhenList": [
          "get assignee by url"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1089",
        "FileName": "should_get_assignee_information_filter_by_responsible_office.cs",
        "Description": "get assignee wrok records",
        "WhenList": [
          "get assignee work records"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1090",
    "FileName": "should_get_assignee_information_filter_by_work_record.cs",
    "Description": "should get assignee information filter by work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1091",
        "FileName": "should_get_assignee_information_filter_by_work_record.cs",
        "Description": "get assignee by tiger id",
        "WhenList": [
          "get assignee by url"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1092",
        "FileName": "should_get_assignee_information_filter_by_work_record.cs",
        "Description": "get assignee by go id",
        "WhenList": [
          "get assignee by global office id"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1093",
        "FileName": "should_get_assignee_information_filter_by_work_record.cs",
        "Description": "get assignee access control list",
        "WhenList": [
          "get assignee by url"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1094",
        "FileName": "should_get_assignee_information_filter_by_work_record.cs",
        "Description": "get assignee wrok records",
        "WhenList": [
          "get assignee work records"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1095",
    "FileName": "should_get_assignee_is_belong_country_list.cs",
    "Description": "should get assignee related countries",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1096",
        "FileName": "should_get_assignee_is_belong_country_list.cs",
        "Description": "when assignee does NOT have work record",
        "WhenList": [
          "get assignee is belong to"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee related countries"
        ],
        "Children": []
      },
      {
        "$id": "1097",
        "FileName": "should_get_assignee_is_belong_country_list.cs",
        "Description": "when assignee has tax work record",
        "WhenList": [
          "get assignee is belong to"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee accesslist"
        ],
        "Children": []
      },
      {
        "$id": "1098",
        "FileName": "should_get_assignee_is_belong_country_list.cs",
        "Description": "when assignee has all practice type work record",
        "WhenList": [
          "get assignee is belong to"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee accesslist"
        ],
        "Children": []
      },
      {
        "$id": "1099",
        "FileName": "should_get_assignee_is_belong_country_list.cs",
        "Description": "when assignee has work record with other responsible office",
        "WhenList": [
          "get assignee is belong to"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee accesslist"
        ],
        "Children": []
      },
      {
        "$id": "1100",
        "FileName": "should_get_assignee_is_belong_country_list.cs",
        "Description": "when assignee is in subscribed list but assignee is deleted",
        "WhenList": [
          "get assignee is belong to"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee related countries"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1101",
    "FileName": "should_get_assignee_restricted_custom_filed_for_engagement_based_system.cs",
    "Description": "should get assignee restricted custom filed for engagement based system",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1102",
        "FileName": "should_get_assignee_restricted_custom_filed_for_engagement_based_system.cs",
        "Description": "have access for non restricted custom field even if not susbcribed",
        "WhenList": [
          "when get assignee as engagement system"
        ],
        "ThenList": [
          "should return ok",
          "should get engagement custom fields"
        ],
        "Children": []
      },
      {
        "$id": "1103",
        "FileName": "should_get_assignee_restricted_custom_filed_for_engagement_based_system.cs",
        "Description": "have no access for private custom fields when not subscribed engagements",
        "WhenList": [
          "when get assignee as engagement system"
        ],
        "ThenList": [
          "should return ok",
          "should get engagement custom fields"
        ],
        "Children": []
      },
      {
        "$id": "1104",
        "FileName": "should_get_assignee_restricted_custom_filed_for_engagement_based_system.cs",
        "Description": "have access for private custom fields if subscribed",
        "WhenList": [
          "when get assignee as engagement system"
        ],
        "ThenList": [
          "should return ok",
          "should get engagement custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1105",
    "FileName": "should_get_assignee_workrecords.cs",
    "Description": "should get assignee work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1106",
        "FileName": "should_get_assignee_workrecords.cs",
        "Description": "given authorized request for country system",
        "WhenList": [
          "get assignee workrecords by url"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee workrecords"
        ],
        "Children": []
      },
      {
        "$id": "1107",
        "FileName": "should_get_assignee_workrecords.cs",
        "Description": "given just responsible office in subscribled",
        "WhenList": [
          "get assignee workrecords by url"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee workrecords"
        ],
        "Children": []
      },
      {
        "$id": "1108",
        "FileName": "should_get_assignee_workrecords.cs",
        "Description": "given unauthorized list",
        "WhenList": [
          "get assignee workrecords by be"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1109",
        "FileName": "should_get_assignee_workrecords.cs",
        "Description": "given authorized request for engagement system",
        "WhenList": [
          "get assignee workrecords by url"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee workrecords"
        ],
        "Children": []
      },
      {
        "$id": "1110",
        "FileName": "should_get_assignee_workrecords.cs",
        "Description": "given unauthorized list for engagement system",
        "WhenList": [
          "get assignee workrecords by oracle CN"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1111",
    "FileName": "should_get_country_custom_fields_by_go_id.cs",
    "Description": "should get country custom fields by go id",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee"
    ],
    "Children": []
  },
  {
    "$id": "1112",
    "FileName": "should_get_country_custom_fields_by_tiger_id.cs",
    "Description": "should get country custom fields by tiger id",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return country custom fields"
    ],
    "Children": []
  },
  {
    "$id": "1113",
    "FileName": "should_get_engagement_custom_fields_by_tiger_id.cs",
    "Description": "should get engagement custom fields by tiger id",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return engagement custom fields"
    ],
    "Children": []
  },
  {
    "$id": "1114",
    "FileName": "should_get_ias_platform_user_id_by_assignee_id.cs",
    "Description": "should return forriden when request not from externalapi",
    "WhenList": [
      "get account id"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "1115",
    "FileName": "should_get_ias_platform_user_id_by_assignee_id.cs",
    "Description": "should get ias platform user id by assignee id",
    "WhenList": [],
    "ThenList": [
      "should get acount id",
      "should return 404 when assignee is not existed"
    ],
    "Children": []
  },
  {
    "$id": "1116",
    "FileName": "should_get_migrated_assignee_by_tiger_id_for_external_api.cs",
    "Description": "should get migrated assignee by tiger id for country based resource",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee"
    ],
    "Children": []
  },
  {
    "$id": "1117",
    "FileName": "should_get_migrated_assignee_by_tiger_id_for_external_api.cs",
    "Description": "should not get go id if assignee is not migrated from GO",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee"
    ],
    "Children": []
  },
  {
    "$id": "1118",
    "FileName": "should_get_restricted_assignee_by_tiger_id_for_country_based_resource.cs",
    "Description": "should get restricted assignee by tiger id for country based resource",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return ok",
      "should return assignee access list link"
    ],
    "Children": []
  },
  {
    "$id": "1119",
    "FileName": "should_return_404_if_assignee_not_found.cs",
    "Description": "should return 404 if assignee not found",
    "WhenList": [
      "send get belgium assignee request"
    ],
    "ThenList": [
      "should return not found"
    ],
    "Children": []
  },
  {
    "$id": "1120",
    "FileName": "should_return_forbidden_when_get_assignee_not_belongs_to_authorized_list.cs",
    "Description": "should return forbidden when get assignee not belongs to authorized list",
    "WhenList": [
      "get assignee by url"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "1121",
    "FileName": "should_return_not_found_given_assignee_not_exist.cs",
    "Description": "should return not found given assignee not exist",
    "WhenList": [
      "send get belgium assignee request"
    ],
    "ThenList": [
      "should return not found"
    ],
    "Children": []
  },
  {
    "$id": "1122",
    "FileName": "should_return_not_found_given_request_by_go_id_for.cs",
    "Description": "should return not found given request by go id for",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1123",
        "FileName": "should_return_not_found_given_request_by_go_id_for.cs",
        "Description": "assignee in actived go migration status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no found"
        ],
        "Children": []
      },
      {
        "$id": "1124",
        "FileName": "should_return_not_found_given_request_by_go_id_for.cs",
        "Description": "assignee not exist",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1125",
    "FileName": "when_create_external_links_for_work_record.cs",
    "Description": "when create external links for work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1126",
        "FileName": "when_create_external_links_for_work_record.cs",
        "Description": "with valid data for country base",
        "WhenList": [
          "us dms create links from own system"
        ],
        "ThenList": [
          "should return ok",
          "should create external links"
        ],
        "Children": []
      },
      {
        "$id": "1127",
        "FileName": "when_create_external_links_for_work_record.cs",
        "Description": "with valid data for engagement base",
        "WhenList": [
          "us dms create links from own system"
        ],
        "ThenList": [
          "should return ok",
          "should create external links"
        ],
        "Children": []
      },
      {
        "$id": "1128",
        "FileName": "when_create_external_links_for_work_record.cs",
        "Description": "should return forbidden for unauthorized engagement list",
        "WhenList": [
          "us dms create links from own system"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1129",
        "FileName": "when_create_external_links_for_work_record.cs",
        "Description": "country based access control",
        "WhenList": [
          "us dms create links from own system"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1130",
        "FileName": "when_create_external_links_for_work_record.cs",
        "Description": "validation of display name",
        "WhenList": [
          "us dms create links from own system"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "1131",
        "FileName": "when_create_external_links_for_work_record.cs",
        "Description": "should clear previous external links of current system",
        "WhenList": [
          "us dms create links from own system"
        ],
        "ThenList": [
          "should return ok",
          "should have no duplicate requests"
        ],
        "Children": []
      },
      {
        "$id": "1132",
        "FileName": "when_create_external_links_for_work_record.cs",
        "Description": "should not clear links from other system",
        "WhenList": [
          "us dms create links from own system"
        ],
        "ThenList": [
          "should return ok",
          "should have no duplicate requests"
        ],
        "Children": []
      },
      {
        "$id": "1133",
        "FileName": "when_create_external_links_for_work_record.cs",
        "Description": "should return forbidden when engagement is inactive",
        "WhenList": [
          "us dms create links from own system"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1134",
        "FileName": "when_create_external_links_for_work_record.cs",
        "Description": "should return forbidden when assignee is inactived",
        "WhenList": [
          "us dms create links from own system"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1135",
    "FileName": "when_create_external_links_for_work_record_about_responsible_office_country_based_resource_.cs",
    "Description": "when create external links for work record about responsible office country based resource",
    "WhenList": [
      "us dms create links from own system"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "1136",
    "FileName": "when_create_assignee_file_upload_event.cs",
    "Description": "when create assignee file upload event",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return assignee personal detail changed events"
    ],
    "Children": []
  },
  {
    "$id": "1137",
    "FileName": "when_get_assignee_personal_details_changed_events.cs",
    "Description": "when get assignee personal detail changed events",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return assignee personal detail changed events"
    ],
    "Children": []
  },
  {
    "$id": "1138",
    "FileName": "when_get_country_based_assignees_events.cs",
    "Description": "when get country based assignees events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1139",
        "FileName": "when_get_country_based_assignees_events.cs",
        "Description": "when has events",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return both assignees"
        ],
        "Children": []
      },
      {
        "$id": "1140",
        "FileName": "when_get_country_based_assignees_events.cs",
        "Description": "when the staff who created the assignee separated",
        "WhenList": [
          "of lou inactive john"
        ],
        "ThenList": [
          "should still return event with modifier john"
        ],
        "Children": []
      },
      {
        "$id": "1141",
        "FileName": "when_get_country_based_assignees_events.cs",
        "Description": "when has no events",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return empty pagination"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1142",
    "FileName": "when_get_country_based_assignees_types_of_event.cs",
    "Description": "when get country based assignees types of event",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 200 OK",
      "should contains all of the events"
    ],
    "Children": []
  },
  {
    "$id": "1143",
    "FileName": "when_get_country_based_assignee_events_with_pagination_links.cs",
    "Description": "when get country based assignee events with pagination links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1144",
        "FileName": "when_get_country_based_assignee_events_with_pagination_links.cs",
        "Description": "when query by after",
        "WhenList": [],
        "ThenList": [
          "should return correct event for after api",
          "should return correct pagination links",
          "should return no pagination links",
          "should return only previous link when no more events left",
          "should return only next link when no more events before",
          "should return only previous link when event id not exist",
          "should return default limit when limit less than 0 in after api",
          "should return default limit when limit more than 2000 in after api",
          "should return default limit when limit is 0 in after api"
        ],
        "Children": []
      },
      {
        "$id": "1145",
        "FileName": "when_get_country_based_assignee_events_with_pagination_links.cs",
        "Description": "when query by before",
        "WhenList": [],
        "ThenList": [
          "should return correct event for before api",
          "should return correct pagination links",
          "should return no pagination link",
          "should return only previous link when no more events left",
          "should return only next link when no more events before",
          "should return only previous link when event id not exist",
          "should return default limit when limit more than 2000 in before api",
          "should return default limit when limit is 0 in before api",
          "should return default limit when limit less than 0 in before api"
        ],
        "Children": []
      },
      {
        "$id": "1146",
        "FileName": "when_get_country_based_assignee_events_with_pagination_links.cs",
        "Description": "when query with invalid params",
        "WhenList": [],
        "ThenList": [
          "should return bad request with after less than 0 in after api",
          "should return bad request with after less than 0 in before api"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1147",
    "FileName": "when_get_recent_assignee_events_with_pagination_links.cs",
    "Description": "when get recent assignee events with pagination links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1148",
        "FileName": "when_get_recent_assignee_events_with_pagination_links.cs",
        "Description": "which has prev link",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1149",
        "FileName": "when_get_recent_assignee_events_with_pagination_links.cs",
        "Description": "which does not have prev link",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1150",
        "FileName": "when_get_recent_assignee_events_with_pagination_links.cs",
        "Description": "which get recent with default limit",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1151",
    "FileName": "when_upload_file_successed_not_require_email_notification.cs",
    "Description": "when upload file successed not require email notification",
    "WhenList": [
      "post upload file event"
    ],
    "ThenList": [
      "should return 200 ok",
      "should not send email",
      "should not save email history"
    ],
    "Children": []
  },
  {
    "$id": "1152",
    "FileName": "when_upload_file_successed_require_email_notification.cs",
    "Description": "when upload file successed require email notification",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1153",
        "FileName": "when_upload_file_successed_require_email_notification.cs",
        "Description": "with exists country",
        "WhenList": [
          "post upload file event"
        ],
        "ThenList": [
          "should return 200 ok",
          "should send email",
          "should save email history"
        ],
        "Children": []
      },
      {
        "$id": "1154",
        "FileName": "when_upload_file_successed_require_email_notification.cs",
        "Description": "with empty country",
        "WhenList": [
          "post upload file event"
        ],
        "ThenList": [
          "should return 200 ok",
          "should send email",
          "should save email history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1155",
    "FileName": "when_changed_work_record_checklist_item.cs",
    "Description": "when changed work record checklist item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1156",
        "FileName": "when_changed_work_record_checklist_item.cs",
        "Description": "when updating work record checklist responsibility from non staff to staff",
        "WhenList": [
          "create the work record then get work record events"
        ],
        "ThenList": [
          "should contain checklistitem changed event"
        ],
        "Children": []
      },
      {
        "$id": "1157",
        "FileName": "when_changed_work_record_checklist_item.cs",
        "Description": "when updating work record checklist responsibility only change office",
        "WhenList": [
          "create the work record then get work record events"
        ],
        "ThenList": [
          "should contain checklistitem changed event"
        ],
        "Children": []
      },
      {
        "$id": "1158",
        "FileName": "when_changed_work_record_checklist_item.cs",
        "Description": "when updating work record checklist responsibility to another staff",
        "WhenList": [
          "create the work record then get work record events"
        ],
        "ThenList": [
          "should contain checklistitem changed event"
        ],
        "Children": []
      },
      {
        "$id": "1159",
        "FileName": "when_changed_work_record_checklist_item.cs",
        "Description": "when updating work record checklist responsibility to staff to only office",
        "WhenList": [
          "create the work record then get work record events"
        ],
        "ThenList": [
          "should contain checklistitem changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1160",
    "FileName": "when_creating_work_record_with_checklist_item.cs",
    "Description": "when creating work record with checklist item",
    "WhenList": [
      "create the work record then get work record events"
    ],
    "ThenList": [
      "should contain checklistitem changed event",
      "should contain common values for work record event",
      "should contain checklist items"
    ],
    "Children": []
  },
  {
    "$id": "1161",
    "FileName": "when_updating_work_record_checklist_item_without_actual_change.cs",
    "Description": "when updating work record checklist item without actual change",
    "WhenList": [
      "create the work record then get work record events"
    ],
    "ThenList": [
      "should not publish checklistitem changed event when updating checklist item"
    ],
    "Children": []
  },
  {
    "$id": "1162",
    "FileName": "when_contains_legacy_engagement_events.cs",
    "Description": "when contains legacy engagement events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1163",
        "FileName": "when_contains_legacy_engagement_events.cs",
        "Description": "when get current engagement events",
        "WhenList": [
          "when get engagement events"
        ],
        "ThenList": [
          "should return 200",
          "should not get legacy event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1164",
    "FileName": "when_create_engagement.cs",
    "Description": "when create engagement",
    "WhenList": [
      "when create"
    ],
    "ThenList": [
      "should raise an engagement office list changed event"
    ],
    "Children": []
  },
  {
    "$id": "1165",
    "FileName": "when_remove_contact_who_is_auth_admin_from_engagement_work_office.cs",
    "Description": "when remove contact who is auth admin from engagement work office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1166",
        "FileName": "when_remove_contact_who_is_auth_admin_from_engagement_work_office.cs",
        "Description": "from restricted engagement",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should remove manual auth admin"
        ],
        "Children": []
      },
      {
        "$id": "1167",
        "FileName": "when_remove_contact_who_is_auth_admin_from_engagement_work_office.cs",
        "Description": "from not restricted engagement",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should keep manual auth admin"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1168",
    "FileName": "when_update_engagement_admin.cs",
    "Description": "when update engagement admin",
    "WhenList": [
      "update engagement admin"
    ],
    "ThenList": [
      "should return 204",
      "should raise an engagement office list changed event",
      "should contain admin office as work office"
    ],
    "Children": []
  },
  {
    "$id": "1169",
    "FileName": "when_update_engagement_admin_who_belongs_to_auth_admins.cs",
    "Description": "when update engagement admin who belongs to auth admins",
    "WhenList": [
      "update engagement admin"
    ],
    "ThenList": [
      "should return 204",
      "should update engagment admin and remove the manual auth admin"
    ],
    "Children": []
  },
  {
    "$id": "1170",
    "FileName": "when_update_engagement_work_office.cs",
    "Description": "when update engagement work office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1171",
        "FileName": "when_update_engagement_work_office.cs",
        "Description": "when add work office",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should create office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "1172",
        "FileName": "when_update_engagement_work_office.cs",
        "Description": "when not change work office",
        "WhenList": [
          "not change engagement work offices"
        ],
        "ThenList": [
          "should not create events"
        ],
        "Children": [
          {
            "$id": "1173",
            "FileName": "when_update_engagement_work_office.cs",
            "Description": "when questionnaire contact is valid",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should success",
              "should update organizer"
            ],
            "Children": []
          },
          {
            "$id": "1174",
            "FileName": "when_update_engagement_work_office.cs",
            "Description": "when questionnaire contact is invalid",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return conflict"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1175",
    "FileName": "when_get_questionnaire_restarted_events.cs",
    "Description": "when get questionnaire restarted events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1176",
        "FileName": "when_get_questionnaire_restarted_events.cs",
        "Description": "and restarted tax questionnaire request by staff",
        "WhenList": [
          "do restarted"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1177",
        "FileName": "when_get_questionnaire_restarted_events.cs",
        "Description": "and restarted immigration questionnaire request by staff",
        "WhenList": [
          "do activated"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1178",
    "FileName": "when_get_questionnaire_started_events.cs",
    "Description": "when get questionnaire started events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1179",
        "FileName": "when_get_questionnaire_started_events.cs",
        "Description": "and started tax questionnaire request by assignee",
        "WhenList": [
          "do restarted"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1180",
        "FileName": "when_get_questionnaire_started_events.cs",
        "Description": "and started immigration questionnaire request by assignee",
        "WhenList": [
          "do activated"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1181",
    "FileName": "when_get_questionnaire_submitted_events.cs",
    "Description": "when get questionnaire submitted events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1182",
        "FileName": "when_get_questionnaire_submitted_events.cs",
        "Description": "and submit tax questionnaire request by staff",
        "WhenList": [
          "do submission"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1183",
        "FileName": "when_get_questionnaire_submitted_events.cs",
        "Description": "and submit tax questionnaire request by mytaxes",
        "WhenList": [
          "do submission"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1184",
        "FileName": "when_get_questionnaire_submitted_events.cs",
        "Description": "and submit immigration questionnaire request by assignee",
        "WhenList": [
          "do submission"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1185",
    "FileName": "when_batch_create_work_record_with_task_responsibility.cs",
    "Description": "when batch create work record responsibilities changed test",
    "WhenList": [
      "creating the work record then get work record events"
    ],
    "ThenList": [
      "response should contain work record responsibility changed event"
    ],
    "Children": []
  },
  {
    "$id": "1186",
    "FileName": "when_batch_re_assign_work_record_task_responsibilities.cs",
    "Description": "when batch re assign work record responsibilities",
    "WhenList": [
      "creating the work record and updating task responsibilities then get work record events"
    ],
    "ThenList": [
      "response should contain work record responsibility changed event"
    ],
    "Children": []
  },
  {
    "$id": "1187",
    "FileName": "when_create_work_record_revision_task.cs",
    "Description": "when add a revision task to work record",
    "WhenList": [
      "add a revision task"
    ],
    "ThenList": [
      "response should contain work record responsibility changed event",
      "revision task name should be revisions task"
    ],
    "Children": []
  },
  {
    "$id": "1188",
    "FileName": "when_creating_work_record_without_task_responsibility.cs",
    "Description": "when creating work record without responsibility",
    "WhenList": [
      "creating the work record then get work record events"
    ],
    "ThenList": [
      "response should also contain work record responsibility changed event"
    ],
    "Children": []
  },
  {
    "$id": "1189",
    "FileName": "when_creating_work_record_with_task_responsibility.cs",
    "Description": "when creating work record with responsibility",
    "WhenList": [
      "creating the work record then get work record events"
    ],
    "ThenList": [
      "response should contain work record responsibility changed event",
      "should contain common values for work record event",
      "should contain milestones with task assignment",
      "should go after work record created event"
    ],
    "Children": []
  },
  {
    "$id": "1190",
    "FileName": "when_update_work_record_task_assignments_without_actual_change.cs",
    "Description": "when update work record task assignments without actual change",
    "WhenList": [
      "update work record task assignment and get work record events"
    ],
    "ThenList": [
      "response should not contain work record responsibility changed event"
    ],
    "Children": []
  },
  {
    "$id": "1191",
    "FileName": "when_update_work_record_task_responsibilities.cs",
    "Description": "when update work record responsibilities",
    "WhenList": [
      "creating the work record and updating task responsibilities then get work record events"
    ],
    "ThenList": [
      "response should contain work record responsibility changed event"
    ],
    "Children": []
  },
  {
    "$id": "1192",
    "FileName": "when_get_assignee_access_granted_event.cs",
    "Description": "when get assignee access granted event",
    "WhenList": [
      "get staff events"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return assignee access granted event"
    ],
    "Children": []
  },
  {
    "$id": "1193",
    "FileName": "when_get_staff_events_with_links.cs",
    "Description": "when get staff events with links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1194",
        "FileName": "when_get_staff_events_with_links.cs",
        "Description": "when get staff events within one page",
        "WhenList": [
          "get staff events"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return uri"
        ],
        "Children": []
      },
      {
        "$id": "1195",
        "FileName": "when_get_staff_events_with_links.cs",
        "Description": "when get staff events within three pages",
        "WhenList": [
          "get staff event of last page"
        ],
        "ThenList": [
          "should return 200 OK",
          "should get the last event",
          "should can turn to the second page backward",
          "should can turn to the first page backward",
          "should can turn to the second page forward",
          "should can turn to the third page forward",
          "should can turn to the second page backward again"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1196",
    "FileName": "when_inactive_staff.cs",
    "Description": "when inactive staff",
    "WhenList": [
      "lou send request to inactive sofia"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return staff separated event"
    ],
    "Children": []
  },
  {
    "$id": "1197",
    "FileName": "when_staff_self_nominate_to_work_record.cs",
    "Description": "when staff self nominate to work record",
    "WhenList": [
      "get staff events"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return work record access granted event"
    ],
    "Children": []
  },
  {
    "$id": "1198",
    "FileName": "when_all_tasks_finished_milestone_should_move_to_next.cs",
    "Description": "when all tasks finished milestone should move to next",
    "WhenList": [
      "feinish all task of current milstone"
    ],
    "ThenList": [
      "should succeed",
      "should move milestone next"
    ],
    "Children": []
  },
  {
    "$id": "1199",
    "FileName": "when_get_country_based_work_record_events.cs",
    "Description": "when get country based work record events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1200",
        "FileName": "when_get_country_based_work_record_events.cs",
        "Description": "when get recent events",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1201",
        "FileName": "when_get_country_based_work_record_events.cs",
        "Description": "when get briefing work record events",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not has events of briefing work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1202",
    "FileName": "when_get_current_work_record_events_with_pagination_links.cs",
    "Description": "when get current work record events with pagination links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1203",
        "FileName": "when_get_current_work_record_events_with_pagination_links.cs",
        "Description": "which has prev link",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1204",
        "FileName": "when_get_current_work_record_events_with_pagination_links.cs",
        "Description": "which does not have prev link",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "1205",
        "FileName": "when_get_current_work_record_events_with_pagination_links.cs",
        "Description": "which get recent with default limit",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1206",
    "FileName": "when_get_work_record_events_with_pagination_links.cs",
    "Description": "when get work record events with pagination links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1207",
        "FileName": "when_get_work_record_events_with_pagination_links.cs",
        "Description": "when query by after",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct events",
          "should only return correct next link",
          "should return no pagination links when no more events left",
          "should return only prev link when left events less than limit",
          "should return no next link when current request with no events",
          "should return correct pagination link"
        ],
        "Children": []
      },
      {
        "$id": "1208",
        "FileName": "when_get_work_record_events_with_pagination_links.cs",
        "Description": "when query by before",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct events",
          "should only return correct next link",
          "should return no pagination links when no more events left",
          "should return only prev link when left events less than limit",
          "should return correct pagination link"
        ],
        "Children": []
      },
      {
        "$id": "1209",
        "FileName": "when_get_work_record_events_with_pagination_links.cs",
        "Description": "when query with invalid params",
        "WhenList": [],
        "ThenList": [
          "should return bad request with after less than 0",
          "should return bad request with before less than 0"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1210",
    "FileName": "when_upload_file_for_tax_briefing_workrecord.cs",
    "Description": "when upload file for tax briefing workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1211",
        "FileName": "when_upload_file_for_tax_briefing_workrecord.cs",
        "Description": "when upload other file successed require email notification",
        "WhenList": [
          "post upload file event"
        ],
        "ThenList": [
          "should return 200 ok",
          "should send email",
          "should save email history"
        ],
        "Children": []
      },
      {
        "$id": "1212",
        "FileName": "when_upload_file_for_tax_briefing_workrecord.cs",
        "Description": "when upload other file successed not require email notification",
        "WhenList": [
          "post upload file event"
        ],
        "ThenList": [
          "should return 200 ok",
          "should not send email",
          "should save email history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1213",
    "FileName": "when_upload_taxreturn_file_successed.cs",
    "Description": "when upload taxreturn file successed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1214",
        "FileName": "when_upload_taxreturn_file_successed.cs",
        "Description": "when upload taxreturn file successed require email notification",
        "WhenList": [
          "post upload file event"
        ],
        "ThenList": [
          "should return 200 ok",
          "should send email",
          "should save email history"
        ],
        "Children": []
      },
      {
        "$id": "1215",
        "FileName": "when_upload_taxreturn_file_successed.cs",
        "Description": "when upload taxreturn file successed not require email notification",
        "WhenList": [
          "post upload file event"
        ],
        "ThenList": [
          "should return 200 ok",
          "should not send email",
          "should save email history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1216",
    "FileName": "when_upload_workrecord_other_file_successed.cs",
    "Description": "when upload workrecord other file successed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1217",
        "FileName": "when_upload_workrecord_other_file_successed.cs",
        "Description": "when upload workrecord other file successed required email",
        "WhenList": [
          "post upload file event"
        ],
        "ThenList": [
          "should return 200 ok",
          "should send email",
          "should save email history"
        ],
        "Children": []
      },
      {
        "$id": "1218",
        "FileName": "when_upload_workrecord_other_file_successed.cs",
        "Description": "when upload workrecord other file successed not required email",
        "WhenList": [
          "post upload file event"
        ],
        "ThenList": [
          "should return 200 ok",
          "should not send email",
          "should not save email history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1219",
    "FileName": "when_get_assignees_events.cs",
    "Description": "when get assignees events",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return both assignees"
    ],
    "Children": []
  },
  {
    "$id": "1220",
    "FileName": "should_get_team_info_by_id.cs",
    "Description": "should get team info by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1221",
        "FileName": "should_get_team_info_by_id.cs",
        "Description": "when get a existing team",
        "WhenList": [
          "get team info by team id"
        ],
        "ThenList": [
          "should return ok",
          "should return team info"
        ],
        "Children": []
      },
      {
        "$id": "1222",
        "FileName": "should_get_team_info_by_id.cs",
        "Description": "when get team and header have not application id",
        "WhenList": [
          "get team info by team id"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1223",
        "FileName": "should_get_team_info_by_id.cs",
        "Description": "when request a not existing team",
        "WhenList": [
          "request a team not existing"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "1224",
        "FileName": "should_get_team_info_by_id.cs",
        "Description": "when get a team with multi administrators",
        "WhenList": [
          "get team info by team id"
        ],
        "ThenList": [
          "should return ok",
          "should return team info"
        ],
        "Children": []
      },
      {
        "$id": "1225",
        "FileName": "should_get_team_info_by_id.cs",
        "Description": "when get a team with multi members",
        "WhenList": [
          "get team info by team id"
        ],
        "ThenList": [
          "should return ok",
          "should return team info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1226",
    "FileName": "should_return_forbidden_for_invalid_status.cs",
    "Description": "should return forbidden for",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1227",
        "FileName": "should_return_forbidden_for_invalid_status.cs",
        "Description": "work record not exist",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1228",
        "FileName": "should_return_forbidden_for_invalid_status.cs",
        "Description": "work record milestone completed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1229",
        "FileName": "should_return_forbidden_for_invalid_status.cs",
        "Description": "work record milestone with questionnaire in process",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1230",
        "FileName": "should_return_forbidden_for_invalid_status.cs",
        "Description": "work record milestone with questionnaire created",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1231",
        "FileName": "should_return_forbidden_for_invalid_status.cs",
        "Description": "work record milestone with questionnaire notified",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1232",
        "FileName": "should_return_forbidden_for_invalid_status.cs",
        "Description": "work record in unauthorized subscription list for engagement base",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1233",
        "FileName": "should_return_forbidden_for_invalid_status.cs",
        "Description": "work record in unauthorized subscription list for country base",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1234",
        "FileName": "should_return_forbidden_for_invalid_status.cs",
        "Description": "work record in inactived engagement",
        "WhenList": [
          "move milestone"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1235",
        "FileName": "should_return_forbidden_for_invalid_status.cs",
        "Description": "work record in inactived assignee",
        "WhenList": [
          "move milestone"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1236",
    "FileName": "when_move_milestone_for_workrecord_with_questionnaire.cs",
    "Description": "when move milestone for workrecord with questionnaire",
    "WhenList": [
      "move work record milestone forward"
    ],
    "ThenList": [
      "should be success"
    ],
    "Children": [
      {
        "$id": "1237",
        "FileName": "when_move_milestone_for_workrecord_with_questionnaire.cs",
        "Description": "when questionaire un submmitted",
        "WhenList": [
          "move work record milestone forward"
        ],
        "ThenList": [
          "should reponse forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1238",
    "FileName": "when_move_milestone_with_invalid_parmas.cs",
    "Description": "when move milestone with invalid parmas",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1239",
        "FileName": "when_move_milestone_with_invalid_parmas.cs",
        "Description": "when move milestone for workrecord with invalid mile stone id",
        "WhenList": [
          "move work record milestone forward with invalid mile stone id"
        ],
        "ThenList": [
          "should be bad request"
        ],
        "Children": []
      },
      {
        "$id": "1240",
        "FileName": "when_move_milestone_with_invalid_parmas.cs",
        "Description": "when move milestone for workrecord with invalid work record id",
        "WhenList": [
          "move work record milestone forward with invalid work record id"
        ],
        "ThenList": [
          "should be not found"
        ],
        "Children": []
      },
      {
        "$id": "1241",
        "FileName": "when_move_milestone_with_invalid_parmas.cs",
        "Description": "when move milestone for workrecord with invalid employee id",
        "WhenList": [
          "move work record milestone forward with invalid employee id"
        ],
        "ThenList": [
          "should be bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1242",
    "FileName": "when_move_mile_stone_back.cs",
    "Description": "when move mile stone back",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1243",
        "FileName": "when_move_mile_stone_back.cs",
        "Description": "move tax work record for country base",
        "WhenList": [
          "move work record milestone back to intitated"
        ],
        "ThenList": [
          "should reponse ok",
          "should move work record milestone"
        ],
        "Children": []
      },
      {
        "$id": "1244",
        "FileName": "when_move_mile_stone_back.cs",
        "Description": "move tax work record for engagement base",
        "WhenList": [
          "move work record milestone back to intitated"
        ],
        "ThenList": [
          "should reponse ok",
          "should move work record milestone"
        ],
        "Children": []
      },
      {
        "$id": "1245",
        "FileName": "when_move_mile_stone_back.cs",
        "Description": "should return forbidden when briefing online work record move to notify",
        "WhenList": [
          "move milestone"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1246",
    "FileName": "when_move_mile_stone_forward_one_step.cs",
    "Description": "when move mile stone forward one step",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1247",
        "FileName": "when_move_mile_stone_forward_one_step.cs",
        "Description": "move tax work record for country base",
        "WhenList": [
          "move work record milestone forward to in preparation"
        ],
        "ThenList": [
          "should reponse OK",
          "should move work record milestone to in preparation",
          "should initiated task auto completed",
          "should preparation task auto created",
          "should raise event"
        ],
        "Children": []
      },
      {
        "$id": "1248",
        "FileName": "when_move_mile_stone_forward_one_step.cs",
        "Description": "move tax work record for engagement base",
        "WhenList": [
          "move work record milestone forward to in preparation"
        ],
        "ThenList": [
          "should reponse OK",
          "should move work record milestone to in preparation",
          "should initiated task auto completed",
          "should preparation task auto created",
          "should raise event"
        ],
        "Children": []
      },
      {
        "$id": "1249",
        "FileName": "when_move_mile_stone_forward_one_step.cs",
        "Description": "should return forbidden when briefing online work record current milestone is notify",
        "WhenList": [
          "move milestone"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1250",
        "FileName": "when_move_mile_stone_forward_one_step.cs",
        "Description": "should return forbidden when briefing online work record current milestone is schedule",
        "WhenList": [
          "move milestone"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1251",
        "FileName": "when_move_mile_stone_forward_one_step.cs",
        "Description": "when copy task from task template",
        "WhenList": [
          "move work record milestone forward to in preparation"
        ],
        "ThenList": [
          "should preparation task auto created",
          "should have correct task assignment and task in db"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1252",
    "FileName": "when_post_update_work_record_milestone_move_forward_by_id.cs",
    "Description": "when post update work record milestone move forward by id for country based resource",
    "WhenList": [
      "move work record milestone forward"
    ],
    "ThenList": [
      "should get 200 OK",
      "should publish move milestone event",
      "should move milestone forward",
      "should only update complete date for started revisions task",
      "should update both start and complete date to now for created revisions task",
      "should not update date for cross out task",
      "should not update date for done task"
    ],
    "Children": []
  },
  {
    "$id": "1253",
    "FileName": "when_update_work_record_milestone_by_external_api.cs",
    "Description": "when update work record milestone by external api",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1254",
        "FileName": "when_update_work_record_milestone_by_external_api.cs",
        "Description": "given active engagement should update successfully",
        "WhenList": [
          "move milestone by external api"
        ],
        "ThenList": [
          "should get mile stone move events"
        ],
        "Children": []
      },
      {
        "$id": "1255",
        "FileName": "when_update_work_record_milestone_by_external_api.cs",
        "Description": "given inactive engagement should return forbidden",
        "WhenList": [
          "move milestone by external api"
        ],
        "ThenList": [
          "should return forbidden",
          "should not raise update milestone event"
        ],
        "Children": []
      },
      {
        "$id": "1256",
        "FileName": "when_update_work_record_milestone_by_external_api.cs",
        "Description": "given inactive assignee should return forbidden",
        "WhenList": [
          "move milestone by external api"
        ],
        "ThenList": [
          "should return forbidden",
          "should not raise update milestone event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1257",
    "FileName": "should_get_briefing_workrecord_by_id_for_external_system.cs",
    "Description": "when get briefing workrecord by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1258",
        "FileName": "should_get_briefing_workrecord_by_id_for_external_system.cs",
        "Description": "should get tax online briefing workrecord by id for external system",
        "WhenList": [
          "get briefing work record"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1259",
        "FileName": "should_get_briefing_workrecord_by_id_for_external_system.cs",
        "Description": "should not get briefing coordinator uri when get manually briefing workrecord for external system",
        "WhenList": [
          "get briefing work record"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1260",
        "FileName": "should_get_briefing_workrecord_by_id_for_external_system.cs",
        "Description": "should get immigration briefing workrecord by id for external system",
        "WhenList": [
          "get briefing work record"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1261",
        "FileName": "should_get_briefing_workrecord_by_id_for_external_system.cs",
        "Description": "should get tax online briefing workrecord by id with task id for external system",
        "WhenList": [
          "get work record api"
        ],
        "ThenList": [
          "should return ok",
          "should contain tasks id"
        ],
        "Children": []
      },
      {
        "$id": "1262",
        "FileName": "should_get_briefing_workrecord_by_id_for_external_system.cs",
        "Description": "given briefing workrecord with team for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return work record with team uri"
        ],
        "Children": []
      },
      {
        "$id": "1263",
        "FileName": "should_get_briefing_workrecord_by_id_for_external_system.cs",
        "Description": "given briefing workrecord without team for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with team uri"
        ],
        "Children": []
      },
      {
        "$id": "1264",
        "FileName": "should_get_briefing_workrecord_by_id_for_external_system.cs",
        "Description": "given briefing workrecord with inactived engagement for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1265",
        "FileName": "should_get_briefing_workrecord_by_id_for_external_system.cs",
        "Description": "given briefing workrecord with inactived assignee for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1266",
    "FileName": "should_return_forbidden_when_get_work_records_for_unauthorized_list.cs",
    "Description": "should return forbidden when get work records for unauthorized list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1267",
        "FileName": "should_return_forbidden_when_get_work_records_for_unauthorized_list.cs",
        "Description": "on country level",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1268",
        "FileName": "should_return_forbidden_when_get_work_records_for_unauthorized_list.cs",
        "Description": "on engagement level",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1269",
    "FileName": "when_complete_task.cs",
    "Description": "when complete task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1270",
        "FileName": "when_complete_task.cs",
        "Description": "should return ok when task status is created on tax work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok",
          "should complete task"
        ],
        "Children": []
      },
      {
        "$id": "1271",
        "FileName": "when_complete_task.cs",
        "Description": "should return ok when task status is created on social security work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok",
          "should complete task"
        ],
        "Children": []
      },
      {
        "$id": "1272",
        "FileName": "when_complete_task.cs",
        "Description": "should return ok when task status is created on immigration work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok",
          "should complete task"
        ],
        "Children": []
      },
      {
        "$id": "1273",
        "FileName": "when_complete_task.cs",
        "Description": "should return ok when task status is created on manual briefing work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok",
          "should complete task"
        ],
        "Children": []
      },
      {
        "$id": "1274",
        "FileName": "when_complete_task.cs",
        "Description": "should return ok when task status is started on manual briefing work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok",
          "should complete task"
        ],
        "Children": []
      },
      {
        "$id": "1275",
        "FileName": "when_complete_task.cs",
        "Description": "should return ok when current milestone is scheduler on manual briefing work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok",
          "should complete task"
        ],
        "Children": []
      },
      {
        "$id": "1276",
        "FileName": "when_complete_task.cs",
        "Description": "should return ok when task status is started on tax work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok",
          "should complete task"
        ],
        "Children": []
      },
      {
        "$id": "1277",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when task status is done on tax work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1278",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when task status is done on briefing work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1279",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when task status is crossed out on tax work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1280",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when complete template task but revision task has not been done",
        "WhenList": [
          "complete revision task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1281",
        "FileName": "when_complete_task.cs",
        "Description": "should return ok when complete template task but current milestone revision task has been crossed out",
        "WhenList": [
          "complete revision task"
        ],
        "ThenList": [
          "should return ok",
          "should complete task"
        ],
        "Children": []
      },
      {
        "$id": "1282",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when complete second template task but first template task has not been done",
        "WhenList": [
          "complete the second template task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1283",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when complete notify task of online briefing work record",
        "WhenList": [
          "complete notify task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1284",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when complete schedule task of online briefing work record",
        "WhenList": [
          "complete notify task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1285",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when complete task not in current milestone",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1286",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when task not belong to work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1287",
        "FileName": "when_complete_task.cs",
        "Description": "should return bad request when request with invalid employee id",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should be bad request"
        ],
        "Children": []
      },
      {
        "$id": "1288",
        "FileName": "when_complete_task.cs",
        "Description": "should return bad request when request with inactive employee id",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should be bad request"
        ],
        "Children": []
      },
      {
        "$id": "1289",
        "FileName": "when_complete_task.cs",
        "Description": "should return bad request when complete delivered task but workrecord have missing item",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1290",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when complete task in inactive engagement",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1291",
        "FileName": "when_complete_task.cs",
        "Description": "should return forbidden when complete task in inactived assignee",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1292",
    "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
    "Description": "when complete task for responsible office country based resource",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1293",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when task status is created on tax work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "1294",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when task status is created on social security work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "1295",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when task status is created on immigration work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "1296",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when task status is created on manual briefing work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "1297",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when task status is started on manual briefing work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "1298",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when current milestone is scheduler on manual briefing work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "1299",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when task status is started on tax work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "1300",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when task status is done on tax work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1301",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when task status is done on briefing work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1302",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when task status is crossed out on tax work record",
        "WhenList": [
          "complete task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1303",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when complete template task but revision task has not been done",
        "WhenList": [
          "complete revision task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1304",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when complete template task but current milestone revision task has been crossed out",
        "WhenList": [
          "complete revision task"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1305",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when complete second template task but first template task has not been done",
        "WhenList": [
          "complete the second template task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1306",
        "FileName": "when_complete_task_for_responsible_office_country_based_resource.cs",
        "Description": "when complete notify task of online briefing work record",
        "WhenList": [
          "complete notify task"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1307",
    "FileName": "when_create_upload_file_token_for_workrecord.cs",
    "Description": "when create upload file token for workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1308",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when request is valid for country base",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "1309",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when request is valid for engagement base",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1310",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "work record in unauthorized subscription list for engagement base",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return fobbiden"
        ],
        "Children": []
      },
      {
        "$id": "1311",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when uploadedby is empty",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request code"
        ],
        "Children": []
      },
      {
        "$id": "1312",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when uploadedby is not a valid staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request code"
        ],
        "Children": []
      },
      {
        "$id": "1313",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when related workrecord is not exist",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not found code"
        ],
        "Children": []
      },
      {
        "$id": "1314",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when practice type of workrecord is immigration",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not implemented code"
        ],
        "Children": []
      },
      {
        "$id": "1315",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when practice type of workrecord is social security",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not implemented code"
        ],
        "Children": []
      },
      {
        "$id": "1316",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when workrecord type is tax briefing",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not implemented code"
        ],
        "Children": []
      },
      {
        "$id": "1317",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when workrecord type is tax briefing with invalid document type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not implemented code"
        ],
        "Children": []
      },
      {
        "$id": "1318",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when workrecord type is tax other compliance",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not implemented code"
        ],
        "Children": []
      },
      {
        "$id": "1319",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when asssignee in country list but work record is not in country list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return fobbiden"
        ],
        "Children": []
      },
      {
        "$id": "1320",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when work record is not belongs to assignee",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not implemented code"
        ],
        "Children": []
      },
      {
        "$id": "1321",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when related workrecord without questionnaire",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden code"
        ],
        "Children": []
      },
      {
        "$id": "1322",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when related workrecord has questionnaire but questionnaire status is not submitted",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden code"
        ],
        "Children": []
      },
      {
        "$id": "1323",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when related work record in inactived engagement",
        "WhenList": [
          "upload file"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1324",
        "FileName": "when_create_upload_file_token_for_workrecord.cs",
        "Description": "when related work record in inactived assignee",
        "WhenList": [
          "upload file"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1325",
    "FileName": "when_create_upload_file_token_for_work_record_about_responsible_office_country_based_resource.cs",
    "Description": "when create upload file token for work record about responsible office country based resource",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1326",
        "FileName": "when_create_upload_file_token_for_work_record_about_responsible_office_country_based_resource.cs",
        "Description": "when request is valid for country base",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "1327",
        "FileName": "when_create_upload_file_token_for_work_record_about_responsible_office_country_based_resource.cs",
        "Description": "when practice type of workrecord is immigration",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not implemented code"
        ],
        "Children": []
      },
      {
        "$id": "1328",
        "FileName": "when_create_upload_file_token_for_work_record_about_responsible_office_country_based_resource.cs",
        "Description": "when practice type of workrecord is social security",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not implemented code"
        ],
        "Children": []
      },
      {
        "$id": "1329",
        "FileName": "when_create_upload_file_token_for_work_record_about_responsible_office_country_based_resource.cs",
        "Description": "when workrecord type is tax briefing",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "1330",
        "FileName": "when_create_upload_file_token_for_work_record_about_responsible_office_country_based_resource.cs",
        "Description": "when workrecord type is tax other compliance",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1331",
    "FileName": "when_get_immigration_work_record_without_contact_by_id_for_country_based_resource.cs",
    "Description": "when get immigration work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1332",
        "FileName": "when_get_immigration_work_record_without_contact_by_id_for_country_based_resource.cs",
        "Description": "when get immigration work record by id for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1333",
        "FileName": "when_get_immigration_work_record_without_contact_by_id_for_country_based_resource.cs",
        "Description": "when get immigration work record with organizer by id for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1334",
        "FileName": "when_get_immigration_work_record_without_contact_by_id_for_country_based_resource.cs",
        "Description": "when get immigration work record by id for engagement based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1335",
        "FileName": "when_get_immigration_work_record_without_contact_by_id_for_country_based_resource.cs",
        "Description": "when get immigration work record by id with default tasks for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with init milestone task id"
        ],
        "Children": []
      },
      {
        "$id": "1336",
        "FileName": "when_get_immigration_work_record_without_contact_by_id_for_country_based_resource.cs",
        "Description": "given immigration workrecord with team for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return work record with team uri"
        ],
        "Children": []
      },
      {
        "$id": "1337",
        "FileName": "when_get_immigration_work_record_without_contact_by_id_for_country_based_resource.cs",
        "Description": "given immigration workrecord without team for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with team uri"
        ],
        "Children": []
      },
      {
        "$id": "1338",
        "FileName": "when_get_immigration_work_record_without_contact_by_id_for_country_based_resource.cs",
        "Description": "given immigration workrecord with inactived engagement for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1339",
        "FileName": "when_get_immigration_work_record_without_contact_by_id_for_country_based_resource.cs",
        "Description": "given immigration workrecord with inactived assignee for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1340",
    "FileName": "when_get_social_security_work_record_by_id_for_country_based_resource.cs",
    "Description": "when get social security work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1341",
        "FileName": "when_get_social_security_work_record_by_id_for_country_based_resource.cs",
        "Description": "should return succeed for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1342",
        "FileName": "when_get_social_security_work_record_by_id_for_country_based_resource.cs",
        "Description": "should return succeed for engagement based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1343",
        "FileName": "when_get_social_security_work_record_by_id_for_country_based_resource.cs",
        "Description": "given wrong type of work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 404"
        ],
        "Children": []
      },
      {
        "$id": "1344",
        "FileName": "when_get_social_security_work_record_by_id_for_country_based_resource.cs",
        "Description": "should return succeed with default tasks for engagement based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return work reocrd with default tasks"
        ],
        "Children": []
      },
      {
        "$id": "1345",
        "FileName": "when_get_social_security_work_record_by_id_for_country_based_resource.cs",
        "Description": "given social security workrecord with team for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return work record with team uri"
        ],
        "Children": []
      },
      {
        "$id": "1346",
        "FileName": "when_get_social_security_work_record_by_id_for_country_based_resource.cs",
        "Description": "given social security workrecord without team for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with team uri"
        ],
        "Children": []
      },
      {
        "$id": "1347",
        "FileName": "when_get_social_security_work_record_by_id_for_country_based_resource.cs",
        "Description": "given social security workrecord with inactived engagement for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1348",
        "FileName": "when_get_social_security_work_record_by_id_for_country_based_resource.cs",
        "Description": "given social security workrecord with inactived assignee for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1349",
    "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
    "Description": "when get tax work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1350",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with questionnaire for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1351",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with custom field for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1352",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with inactived engagement for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1353",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with inactived assignee for country based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1354",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with custom field for engagement based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1355",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with questionnaire for engagement based resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "1356",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with default tasks for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with init milestone task id"
        ],
        "Children": []
      },
      {
        "$id": "1357",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with custom tasks for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with init milestone task id"
        ],
        "Children": []
      },
      {
        "$id": "1358",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord and move milestone for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with init milestone task id"
        ],
        "Children": []
      },
      {
        "$id": "1359",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with revision task for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with init milestone task id"
        ],
        "Children": []
      },
      {
        "$id": "1360",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord with team for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return work record with team uri"
        ],
        "Children": []
      },
      {
        "$id": "1361",
        "FileName": "when_get_tax_work_record_by_id_for_country_based_resource.cs",
        "Description": "given tax workrecord without team for engagement based resource",
        "WhenList": [
          "get work recrod api"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with team uri"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1362",
    "FileName": "when_get_work_record_by_responsible_office_based_country_resource.cs",
    "Description": "when get work record by responsible office for country based resource",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1363",
        "FileName": "when_get_work_record_by_responsible_office_based_country_resource.cs",
        "Description": "given tax workrecord",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1364",
        "FileName": "when_get_work_record_by_responsible_office_based_country_resource.cs",
        "Description": "given immi workrecord",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1365",
        "FileName": "when_get_work_record_by_responsible_office_based_country_resource.cs",
        "Description": "given social security workrecord",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1366",
        "FileName": "when_get_work_record_by_responsible_office_based_country_resource.cs",
        "Description": "given briefing workrecord",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1367",
    "FileName": "should_get_client_by_api_controller.cs",
    "Description": "should get client by api controller",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1368",
        "FileName": "should_get_client_by_api_controller.cs",
        "Description": "when request from externalapi",
        "WhenList": [
          "get client by url"
        ],
        "ThenList": [
          "should return ok",
          "should have correct content"
        ],
        "Children": []
      },
      {
        "$id": "1369",
        "FileName": "should_get_client_by_api_controller.cs",
        "Description": "when request not from externalapi",
        "WhenList": [
          "get client by url"
        ],
        "ThenList": [
          "should return unauthorized"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1370",
    "FileName": "should_get_office_for_external_system.cs",
    "Description": "should get office when request from external system",
    "WhenList": [
      "get office by url"
    ],
    "ThenList": [
      "should have correct content",
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "1371",
    "FileName": "should_get_office_for_external_system.cs",
    "Description": "should return forbidden when not request from exteral api",
    "WhenList": [
      "get office by url"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "1372",
    "FileName": "should_get_staff_by_api_controller.cs",
    "Description": "should forbidden not request from external api",
    "WhenList": [
      "get staff by url"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "1373",
    "FileName": "should_get_staff_by_api_controller.cs",
    "Description": "should get staff by api controller",
    "WhenList": [
      "get staff by url"
    ],
    "ThenList": [
      "should return ok",
      "should have correct content"
    ],
    "Children": []
  },
  {
    "$id": "1374",
    "FileName": "should_get_staff_by_api_controller.cs",
    "Description": "should get inactivate staff by api controller",
    "WhenList": [
      "get staff by url"
    ],
    "ThenList": [
      "should return ok",
      "should return inactive status content"
    ],
    "Children": []
  },
  {
    "$id": "1375",
    "FileName": "should_get_staff_by_api_controller.cs",
    "Description": "should get pending staff by api controller",
    "WhenList": [
      "get staff by url"
    ],
    "ThenList": [
      "should return ok",
      "should return pending status content"
    ],
    "Children": []
  },
  {
    "$id": "1376",
    "FileName": "should_get_staff_by_api_controller.cs",
    "Description": "should get not found when request not existing staff",
    "WhenList": [
      "request staff by not existing id"
    ],
    "ThenList": [
      "should return not found"
    ],
    "Children": []
  },
  {
    "$id": "1377",
    "FileName": "when_get_country_currencies.cs",
    "Description": "when get country currencies",
    "WhenList": [
      "get country currencies"
    ],
    "ThenList": [
      "should get country currencies"
    ],
    "Children": []
  },
  {
    "$id": "1378",
    "FileName": "when_get_engagement_access_control_list_by_api.cs",
    "Description": "when request restricted engagement access control listnot from externalapi",
    "WhenList": [
      "get engagement by api"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "1379",
    "FileName": "when_get_engagement_access_control_list_by_api.cs",
    "Description": "when get restricted engagement access control list by api",
    "WhenList": [
      "get engagement acl by api"
    ],
    "ThenList": [
      "should return ok",
      "should return the engagement acl"
    ],
    "Children": []
  },
  {
    "$id": "1380",
    "FileName": "when_get_engagement_access_control_list_by_api.cs",
    "Description": "when get non restricted engagement access control list by api",
    "WhenList": [
      "get engagement access control list by api"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "1381",
    "FileName": "when_get_engagement_by_api.cs",
    "Description": "when request not from externalapi",
    "WhenList": [
      "get engagement by api"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "1382",
    "FileName": "when_get_engagement_by_api.cs",
    "Description": "when get engagement by api",
    "WhenList": [
      "get engagement by api"
    ],
    "ThenList": [
      "should return ok",
      "should return the engagement"
    ],
    "Children": []
  },
  {
    "$id": "1383",
    "FileName": "when_get_engagement_by_api.cs",
    "Description": "when get restricted engagement with acl link by api",
    "WhenList": [
      "get engagement by api"
    ],
    "ThenList": [
      "should return ok",
      "should return the engagement"
    ],
    "Children": []
  },
  {
    "$id": "1384",
    "FileName": "when_get_team_mailbox_by_assignee_and_engaged_office_for_responsible_office_country_bassed_resource.cs",
    "Description": "when get team mailbox by assignee and engaged office for responsible office country bassed resource",
    "WhenList": [
      "get team mailbox by api"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "1385",
    "FileName": "when_get_team_mailbox_by_assignee_engaged_office_from_api.cs",
    "Description": "when get team mailbox by assignee engaged office from api",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1386",
        "FileName": "when_get_team_mailbox_by_assignee_engaged_office_from_api.cs",
        "Description": "when team mailbox exist",
        "WhenList": [
          "get team mailbox by api"
        ],
        "ThenList": [
          "should return ok",
          "should return team mailbox"
        ],
        "Children": []
      },
      {
        "$id": "1387",
        "FileName": "when_get_team_mailbox_by_assignee_engaged_office_from_api.cs",
        "Description": "when team mailbox not exist",
        "WhenList": [
          "get team mailbox by api"
        ],
        "ThenList": [
          "should return ok",
          "should return empty"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1388",
    "FileName": "when_get_team_mailbox_by_workrecord_for_responsible_office_country_based_resource.cs",
    "Description": "when get team mailbox by workrecord for responsible office country based resource",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1389",
        "FileName": "when_get_team_mailbox_by_workrecord_for_responsible_office_country_based_resource.cs",
        "Description": "when team mailbox exist",
        "WhenList": [
          "get team mailbox by api"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1390",
    "FileName": "when_get_team_mailbox_by_workrecord_from_api.cs",
    "Description": "when get team mailbox by workrecord from api",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1391",
        "FileName": "when_get_team_mailbox_by_workrecord_from_api.cs",
        "Description": "when team mailbox exist",
        "WhenList": [
          "get team mailbox by api"
        ],
        "ThenList": [
          "should return ok",
          "should return team mailbox"
        ],
        "Children": []
      },
      {
        "$id": "1392",
        "FileName": "when_get_team_mailbox_by_workrecord_from_api.cs",
        "Description": "when team mailbox not exist",
        "WhenList": [
          "get team mailbox by api"
        ],
        "ThenList": [
          "should return ok",
          "should return empty"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1393",
    "FileName": "when_get_all_countries.cs",
    "Description": "when get all countries",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should succeed"
    ],
    "Children": []
  },
  {
    "$id": "1394",
    "FileName": "when_get_countries_by_fuzzy_name.cs",
    "Description": "when get countries by fuzzy name",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should get forward matching countries in order"
    ],
    "Children": []
  },
  {
    "$id": "1395",
    "FileName": "when_get_countries_which_have_offices.cs",
    "Description": "when get countries which have offices",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should get country that has office",
      "should not get country that without office"
    ],
    "Children": []
  },
  {
    "$id": "1396",
    "FileName": "when_get_all_currencies.cs",
    "Description": "when get all currencies",
    "WhenList": [
      "when get all"
    ],
    "ThenList": [
      "should succeed",
      "should return all currencies"
    ],
    "Children": []
  },
  {
    "$id": "1397",
    "FileName": "when_batch_import_country_assignee_custom_field.cs",
    "Description": "when batch import country assignee custom field",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1398",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with correct information text type",
        "WhenList": [
          "import"
        ],
        "ThenList": [
          "should success",
          "should import assignee custom fields"
        ],
        "Children": []
      },
      {
        "$id": "1399",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with space",
        "WhenList": [
          "import"
        ],
        "ThenList": [
          "should success",
          "should remove space"
        ],
        "Children": []
      },
      {
        "$id": "1400",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with empty value",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1401",
            "FileName": "when_batch_import_country_assignee_custom_field.cs",
            "Description": "for date",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should remove old value"
            ],
            "Children": []
          },
          {
            "$id": "1402",
            "FileName": "when_batch_import_country_assignee_custom_field.cs",
            "Description": "for number",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should remove old value"
            ],
            "Children": []
          },
          {
            "$id": "1403",
            "FileName": "when_batch_import_country_assignee_custom_field.cs",
            "Description": "for text",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should remove old value"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1404",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with custom field id from file not match with custom field",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1405",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with invalid assignee id",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error messsage"
        ],
        "Children": []
      },
      {
        "$id": "1406",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with not matched assignee id",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error messsage"
        ],
        "Children": []
      },
      {
        "$id": "1407",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with value more than 255 characters",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1408",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with invalid number format",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1409",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with valid number format",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1410",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with different number format settings",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1411",
        "FileName": "when_batch_import_country_assignee_custom_field.cs",
        "Description": "with date type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1412",
            "FileName": "when_batch_import_country_assignee_custom_field.cs",
            "Description": "with correct information",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should import date type"
            ],
            "Children": []
          },
          {
            "$id": "1413",
            "FileName": "when_batch_import_country_assignee_custom_field.cs",
            "Description": "with single number as day",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should import date type"
            ],
            "Children": []
          },
          {
            "$id": "1414",
            "FileName": "when_batch_import_country_assignee_custom_field.cs",
            "Description": "with invalid date",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should return 200",
              "should import assignee custom fields"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1415",
    "FileName": "when_batch_import_country_assignee_custom_field_with_invalid_header_or_format.cs",
    "Description": "when batch import country assignee custom field with invalid header or format",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1416",
        "FileName": "when_batch_import_country_assignee_custom_field_with_invalid_header_or_format.cs",
        "Description": "with invalid column header",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1417",
        "FileName": "when_batch_import_country_assignee_custom_field_with_invalid_header_or_format.cs",
        "Description": "with non number in id requred field",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1418",
    "FileName": "when_batch_import_country_workrecord_custom_field_value.cs",
    "Description": "when batch import country workrecord custom field value",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1419",
        "FileName": "when_batch_import_country_workrecord_custom_field_value.cs",
        "Description": "when import workrecord custom field",
        "WhenList": [
          "import work record custom field"
        ],
        "ThenList": [
          "should return 200",
          "should import work record custom fields"
        ],
        "Children": []
      },
      {
        "$id": "1420",
        "FileName": "when_batch_import_country_workrecord_custom_field_value.cs",
        "Description": "with practice type not matched work record",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error messsage"
        ],
        "Children": []
      },
      {
        "$id": "1421",
        "FileName": "when_batch_import_country_workrecord_custom_field_value.cs",
        "Description": "with country not matched work record",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error messsage"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1422",
    "FileName": "when_batch_import_country_workrecord_custom_field_value_with_non_number_in_id_requred_field.cs",
    "Description": "when batch import country workrecord custom field value with non number in id requred field",
    "WhenList": [
      "import work record custom field"
    ],
    "ThenList": [
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "1423",
    "FileName": "when_batch_import_country_work_record_custom_field_with_invalid_column_header.cs",
    "Description": "when batch import country work record custom field with invalid column header",
    "WhenList": [
      "send batch import work record custom field request"
    ],
    "ThenList": [
      "should return 400",
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "1424",
    "FileName": "when_batch_import_engagement_assignee_assignment_custom_field.cs",
    "Description": "when batch import engagement assignee assignment custom field",
    "WhenList": [
      "import"
    ],
    "ThenList": [
      "should return success",
      "should import assignment custom value"
    ],
    "Children": []
  },
  {
    "$id": "1425",
    "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
    "Description": "when batch import engagement assignee custom field",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1426",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with correct information text type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1427",
            "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
            "Description": "import new value",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should import assignee custom fields"
            ],
            "Children": []
          },
          {
            "$id": "1428",
            "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
            "Description": "import value overwrite corresponding existed value",
            "WhenList": [
              "import same custom field again to overwrite"
            ],
            "ThenList": [
              "should success",
              "should overwrite old value"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1429",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with space",
        "WhenList": [
          "import"
        ],
        "ThenList": [
          "should success",
          "should remove space"
        ],
        "Children": []
      },
      {
        "$id": "1430",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with empty value",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1431",
            "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
            "Description": "for date",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should remove old value"
            ],
            "Children": []
          },
          {
            "$id": "1432",
            "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
            "Description": "for number",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should remove old value"
            ],
            "Children": []
          },
          {
            "$id": "1433",
            "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
            "Description": "for text",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should remove old value"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1434",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with custom field id from file not match with custom field",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1435",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with invalid assignee id",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error messsage"
        ],
        "Children": []
      },
      {
        "$id": "1436",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with not matched assignee id",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error messsage"
        ],
        "Children": []
      },
      {
        "$id": "1437",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with value more than 255 characters",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1438",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with invalid number format",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1439",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with valid number format",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1440",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with different number format settings",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1441",
        "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
        "Description": "with date type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1442",
            "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
            "Description": "with correct information",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should import date type"
            ],
            "Children": []
          },
          {
            "$id": "1443",
            "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
            "Description": "with single number as day",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should success",
              "should import date type"
            ],
            "Children": []
          },
          {
            "$id": "1444",
            "FileName": "when_batch_import_engagement_assignee_custom_field.cs",
            "Description": "with invalid date",
            "WhenList": [
              "import"
            ],
            "ThenList": [
              "should return 200",
              "should import assignee custom fields"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1445",
    "FileName": "when_batch_import_engagement_assignee_custom_field_with_invalid_header_or_format.cs",
    "Description": "when batch import engagement assignee custom field with invalid header or format",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1446",
        "FileName": "when_batch_import_engagement_assignee_custom_field_with_invalid_header_or_format.cs",
        "Description": "with invalid column header",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "1447",
        "FileName": "when_batch_import_engagement_assignee_custom_field_with_invalid_header_or_format.cs",
        "Description": "with non number in id requred field",
        "WhenList": [
          "send batch import assginee custom field request"
        ],
        "ThenList": [
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1448",
    "FileName": "when_batch_import_engagement_other_work_record_custom_field_with_invalid_column_header.cs",
    "Description": "when batch import engagement other work record custom field with invalid column header",
    "WhenList": [
      "send batch import work record custom field request"
    ],
    "ThenList": [
      "should return 400",
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "1449",
    "FileName": "when_batch_import_engagement_workrecord_custom_field_value.cs",
    "Description": "when batch import engagement workrecord custom field value",
    "WhenList": [
      "import work record custom field"
    ],
    "ThenList": [
      "should return 200",
      "should import work record custom fields"
    ],
    "Children": []
  },
  {
    "$id": "1450",
    "FileName": "when_batch_import_engagement_workrecord_custom_field_value_with_non_number_in_id_requred_field.cs",
    "Description": "when batch import engagement workrecord custom field value with non number in id requred field",
    "WhenList": [
      "import work record custom field"
    ],
    "ThenList": [
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "1451",
    "FileName": "when_batch_import_engagement_workrecord_custom_field_with_different_role.cs",
    "Description": "when batch import engagement workrecord custom field with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1452",
        "FileName": "when_batch_import_engagement_workrecord_custom_field_with_different_role.cs",
        "Description": "when staff is engagement admin",
        "WhenList": [
          "import work record custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1453",
        "FileName": "when_batch_import_engagement_workrecord_custom_field_with_different_role.cs",
        "Description": "when staff is not engagement admin but is in coordinating office",
        "WhenList": [
          "import work record custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1454",
        "FileName": "when_batch_import_engagement_workrecord_custom_field_with_different_role.cs",
        "Description": "when staff is not engagement admin and is not in coordinating office",
        "WhenList": [
          "import work record custom field"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1455",
        "FileName": "when_batch_import_engagement_workrecord_custom_field_with_different_role.cs",
        "Description": "when staff in global admin",
        "WhenList": [
          "import work record custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1456",
        "FileName": "when_batch_import_engagement_workrecord_custom_field_with_different_role.cs",
        "Description": "when staff is coordinating primary contact",
        "WhenList": [
          "import work record custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1457",
        "FileName": "when_batch_import_engagement_workrecord_custom_field_with_different_role.cs",
        "Description": "when staff is coordinating secondary contact",
        "WhenList": [
          "import work record custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1458",
        "FileName": "when_batch_import_engagement_workrecord_custom_field_with_different_role.cs",
        "Description": "when staff is delegated primary contact",
        "WhenList": [
          "import work record custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1459",
        "FileName": "when_batch_import_engagement_workrecord_custom_field_with_different_role.cs",
        "Description": "when staff is delegated secondary contact",
        "WhenList": [
          "import work record custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1460",
    "FileName": "when_batch_import_other_workrecord_custom_field_value.cs",
    "Description": "when batch import other workrecord custom field value",
    "WhenList": [
      "import work record custom field"
    ],
    "ThenList": [
      "should return 200",
      "should import work record custom fields"
    ],
    "Children": []
  },
  {
    "$id": "1461",
    "FileName": "when_export_country_assignee_custom_fields_in_request.cs",
    "Description": "when export country assignee custom fields in request",
    "WhenList": [
      "send batch export assginee custom field request"
    ],
    "ThenList": [
      "should return file in correct format and filter by engagement",
      "should filter country custom field by practice type",
      "should return bad request without engagement filter"
    ],
    "Children": []
  },
  {
    "$id": "1462",
    "FileName": "when_export_country_work_record_custom_fields_in_request.cs",
    "Description": "when export country work record custom fields in request",
    "WhenList": [
      "export work record custom field filter by engagement"
    ],
    "ThenList": [
      "should return 200",
      "should return csv file in correct format and filtered by year",
      "should return csv file in correct format and filtered by work record type",
      "should filter country custom field by practice type is immi",
      "should filter country custom field by work record type when practice type is immi",
      "should not filter country custom field with engagement is ss but cf not ss",
      "should filter country custom field by practice type is ss",
      "should filter country custom field by practice type is ss with other compliance work record type",
      "should return bad request when not filtered by engagement"
    ],
    "Children": []
  },
  {
    "$id": "1463",
    "FileName": "when_export_engagement_assignee_custom_fields_for_inactive_assignee.cs",
    "Description": "when export engagement assignee custom fields for inactive assignee",
    "WhenList": [
      "send batch export assginee custom field request"
    ],
    "ThenList": [
      "should return 200",
      "should return file in correct format"
    ],
    "Children": []
  },
  {
    "$id": "1464",
    "FileName": "when_export_engagement_assignee_custom_fields_in_request.cs",
    "Description": "when export engagement assignee custom fields in request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1465",
        "FileName": "when_export_engagement_assignee_custom_fields_in_request.cs",
        "Description": "when export assignee profile custom field",
        "WhenList": [
          "send batch export assginee custom field request"
        ],
        "ThenList": [
          "should return 200",
          "should return file in correct format"
        ],
        "Children": []
      },
      {
        "$id": "1466",
        "FileName": "when_export_engagement_assignee_custom_fields_in_request.cs",
        "Description": "when export assignment custom field",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1467",
            "FileName": "when_export_engagement_assignee_custom_fields_in_request.cs",
            "Description": "when another assignee has only one assignment and has no assignment custom field value",
            "WhenList": [
              "send batch export assginee custom field request"
            ],
            "ThenList": [
              "should return 200",
              "should return file in correct format"
            ],
            "Children": []
          },
          {
            "$id": "1468",
            "FileName": "when_export_engagement_assignee_custom_fields_in_request.cs",
            "Description": "when another assignee has two assignment and one has assignment custom field value but the other does not",
            "WhenList": [
              "send batch export assginee custom field request"
            ],
            "ThenList": [
              "should return 200",
              "should return file in correct format"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1469",
    "FileName": "when_export_engagement_cf.cs",
    "Description": "when export engagement cf",
    "WhenList": [
      "get"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "1470",
    "FileName": "when_export_engagement_custom_fields_with_invalid_filename.cs",
    "Description": "when export engagement custom fields with invalid filename",
    "WhenList": [
      "when send export custom field request"
    ],
    "ThenList": [
      "should return empty response"
    ],
    "Children": []
  },
  {
    "$id": "1471",
    "FileName": "when_export_engagement_other_work_record_custom_fields_in_request.cs",
    "Description": "when export engagement other work record custom fields in request",
    "WhenList": [
      "send batch export work record custom field request"
    ],
    "ThenList": [
      "should return 200",
      "should return csv file in correct format"
    ],
    "Children": []
  },
  {
    "$id": "1472",
    "FileName": "when_export_engagement_tax_work_record_custom_fields_in_request.cs",
    "Description": "when export engagement tax work record custom fields in request",
    "WhenList": [
      "send batch export work record custom field request"
    ],
    "ThenList": [
      "should return 200",
      "should return csv file in correct format"
    ],
    "Children": []
  },
  {
    "$id": "1473",
    "FileName": "when_export_engagement_tax_work_record_custom_fields_with_different_role.cs",
    "Description": "when export engagement tax work record custom fields with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1474",
        "FileName": "when_export_engagement_tax_work_record_custom_fields_with_different_role.cs",
        "Description": "when staff is engagement admin",
        "WhenList": [
          "export custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1475",
        "FileName": "when_export_engagement_tax_work_record_custom_fields_with_different_role.cs",
        "Description": "when staff is not engagement admin but is in coordinating office",
        "WhenList": [
          "export custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1476",
        "FileName": "when_export_engagement_tax_work_record_custom_fields_with_different_role.cs",
        "Description": "when staff is not engagement admin and not in coordinating office",
        "WhenList": [
          "export custom field"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1477",
        "FileName": "when_export_engagement_tax_work_record_custom_fields_with_different_role.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "export custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1478",
        "FileName": "when_export_engagement_tax_work_record_custom_fields_with_different_role.cs",
        "Description": "when staff is coordinating primary contact",
        "WhenList": [
          "export custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1479",
        "FileName": "when_export_engagement_tax_work_record_custom_fields_with_different_role.cs",
        "Description": "when staff is coordinating secondary contact",
        "WhenList": [
          "export custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1480",
        "FileName": "when_export_engagement_tax_work_record_custom_fields_with_different_role.cs",
        "Description": "when staff is delegated primary contact",
        "WhenList": [
          "export custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1481",
        "FileName": "when_export_engagement_tax_work_record_custom_fields_with_different_role.cs",
        "Description": "when staff is delegated secondary contact",
        "WhenList": [
          "export custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1482",
    "FileName": "when_export_engagement_work_record_custom_fields_with_inactive_assignee.cs",
    "Description": "when export engagement work record custom fields with inactive assignee",
    "WhenList": [
      "send batch export work record custom field request"
    ],
    "ThenList": [
      "should return 200",
      "should return csv file in correct format"
    ],
    "Children": []
  },
  {
    "$id": "1483",
    "FileName": "when_create_country_custom_field.cs",
    "Description": "when create country custom field",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1484",
        "FileName": "when_create_country_custom_field.cs",
        "Description": "when current users role is global admin role",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return created",
          "should create custom field",
          "should create the custom field"
        ],
        "Children": []
      },
      {
        "$id": "1485",
        "FileName": "when_create_country_custom_field.cs",
        "Description": "when current users role is country level and create custom field belongs to other country",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1486",
        "FileName": "when_create_country_custom_field.cs",
        "Description": "when current users role is country level and create custom field belongs to his own country",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return created",
          "should create custom field"
        ],
        "Children": []
      },
      {
        "$id": "1487",
        "FileName": "when_create_country_custom_field.cs",
        "Description": "when current users role is below country level",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1488",
    "FileName": "when_create_country_custom_field_with_incorrect_request.cs",
    "Description": "when create country custom field with incorrect request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1489",
        "FileName": "when_create_country_custom_field_with_incorrect_request.cs",
        "Description": "with empty practice type",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "1490",
        "FileName": "when_create_country_custom_field_with_incorrect_request.cs",
        "Description": "with invalid practice type",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1491",
    "FileName": "when_create_custom_field.cs",
    "Description": "when create custom field",
    "WhenList": [
      "create custom field"
    ],
    "ThenList": [
      "should return 201",
      "should create custom field successfully"
    ],
    "Children": []
  },
  {
    "$id": "1492",
    "FileName": "when_create_custom_field_with_assignee_assignments_location.cs",
    "Description": "when create custom field with assignee assignments location",
    "WhenList": [
      "create custom field with location"
    ],
    "ThenList": [
      "should return 201",
      "should create custom field successfully"
    ],
    "Children": []
  },
  {
    "$id": "1493",
    "FileName": "when_create_custom_field_with_date_type.cs",
    "Description": "when create custom field with date type",
    "WhenList": [
      "create custom field with type"
    ],
    "ThenList": [
      "should return 201",
      "should create custom field successfully"
    ],
    "Children": []
  },
  {
    "$id": "1494",
    "FileName": "when_create_custom_field_with_different_role.cs",
    "Description": "when create custom field with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1495",
        "FileName": "when_create_custom_field_with_different_role.cs",
        "Description": "when staff is engagement admin",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "1496",
        "FileName": "when_create_custom_field_with_different_role.cs",
        "Description": "when staff is not engagement admin or coordinating contact or delegated contact",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1497",
        "FileName": "when_create_custom_field_with_different_role.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "1498",
        "FileName": "when_create_custom_field_with_different_role.cs",
        "Description": "should create custom fields when staff is coordinating primary contact",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "1499",
        "FileName": "when_create_custom_field_with_different_role.cs",
        "Description": "should create custom fields when staff is coordinating secondary contact",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "1500",
        "FileName": "when_create_custom_field_with_different_role.cs",
        "Description": "should create custom fields when staff is delegated primary contact",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "1501",
        "FileName": "when_create_custom_field_with_different_role.cs",
        "Description": "should create custom fields when staff is delegated secondary contact",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1502",
    "FileName": "when_create_custom_field_with_duplicate_name_location_type.cs",
    "Description": "when create custom field with duplicate name location type",
    "WhenList": [
      "create custom field with same name"
    ],
    "ThenList": [
      "should return conflict"
    ],
    "Children": []
  },
  {
    "$id": "1503",
    "FileName": "when_create_custom_field_with_invalid_request.cs",
    "Description": "when create custom field with invalid request",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "1504",
    "FileName": "when_create_custom_field_with_list_type.cs",
    "Description": "when create custom field with list type",
    "WhenList": [
      "create custom field"
    ],
    "ThenList": [
      "should return 201",
      "should create custom field successfully"
    ],
    "Children": []
  },
  {
    "$id": "1505",
    "FileName": "when_create_list_custom_field_with_invalid_contents.cs",
    "Description": "when create list custom field with invalid contents",
    "WhenList": [
      "create custom field"
    ],
    "ThenList": [
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "1506",
    "FileName": "when_create_or_subscribe_country_custom_field_more_than_limit_number.cs",
    "Description": "when create or subscribe country custom field more than limit number",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1507",
        "FileName": "when_create_or_subscribe_country_custom_field_more_than_limit_number.cs",
        "Description": "when create country custom field more than limit number for a country by tax",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "1508",
        "FileName": "when_create_or_subscribe_country_custom_field_more_than_limit_number.cs",
        "Description": "when create country custom field more than limit number for a country by immigration",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "1509",
        "FileName": "when_create_or_subscribe_country_custom_field_more_than_limit_number.cs",
        "Description": "when create country custom field more than limit number for a country by social security",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "1510",
        "FileName": "when_create_or_subscribe_country_custom_field_more_than_limit_number.cs",
        "Description": "when create country custom field more than limit number for a country but not reach limit for practice type",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "1511",
        "FileName": "when_create_or_subscribe_country_custom_field_more_than_limit_number.cs",
        "Description": "when subscribe a practice type for country custom field when reach the limit number",
        "WhenList": [
          "create custom field"
        ],
        "ThenList": [
          "should return created",
          "and update custom field"
        ],
        "Children": []
      },
      {
        "$id": "1512",
        "FileName": "when_create_or_subscribe_country_custom_field_more_than_limit_number.cs",
        "Description": "when country custom fields reach the limit number and update existing custom field",
        "WhenList": [
          "update country custom field"
        ],
        "ThenList": [
          "update custom field"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1513",
    "FileName": "when_delete_country_custom_field.cs",
    "Description": "when delete country custom field",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1514",
        "FileName": "when_delete_country_custom_field.cs",
        "Description": "when user delete with no auth",
        "WhenList": [],
        "ThenList": [
          "should return 403 when delete with no auth"
        ],
        "Children": []
      },
      {
        "$id": "1515",
        "FileName": "when_delete_country_custom_field.cs",
        "Description": "when current users role is above country level",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return no content",
          "should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "1516",
        "FileName": "when_delete_country_custom_field.cs",
        "Description": "when current users role is below country level",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1517",
    "FileName": "when_delete_engagement_custom_field_with_different_user.cs",
    "Description": "when delete engagement custom field with different user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1518",
        "FileName": "when_delete_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is engagement admin",
        "WhenList": [
          "request delete custom field"
        ],
        "ThenList": [
          "should return no content",
          "should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "1519",
        "FileName": "when_delete_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is not engagement admin",
        "WhenList": [
          "request delete custom field"
        ],
        "ThenList": [
          "should return fobidden",
          "should not be deleted"
        ],
        "Children": []
      },
      {
        "$id": "1520",
        "FileName": "when_delete_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "request delete custom field"
        ],
        "ThenList": [
          "should return no content",
          "should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "1521",
        "FileName": "when_delete_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is the coordinating primary contact",
        "WhenList": [
          "delete custom field"
        ],
        "ThenList": [
          "should return no content",
          "should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "1522",
        "FileName": "when_delete_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is the coordinating secondary contact",
        "WhenList": [
          "delete custom field"
        ],
        "ThenList": [
          "should return no content",
          "should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "1523",
        "FileName": "when_delete_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is the delegated primary contact",
        "WhenList": [
          "delete custom field"
        ],
        "ThenList": [
          "should return no content",
          "should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "1524",
        "FileName": "when_delete_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is the delegated secondary contact",
        "WhenList": [
          "delete custom field"
        ],
        "ThenList": [
          "should return no content",
          "should be deleted"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1525",
    "FileName": "when_delete_engagement_custom_field_with_have_been_subscribed_by_other_engagement.cs",
    "Description": "when delete engagement custom field with have been subscribed by other engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1526",
        "FileName": "when_delete_engagement_custom_field_with_have_been_subscribed_by_other_engagement.cs",
        "Description": "when staff is engagement admin",
        "WhenList": [
          "request delete custom field"
        ],
        "ThenList": [
          "should return no content",
          "should be deleted"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1527",
    "FileName": "when_delete_engagement_custom_field_with_mymobility_segmentation_is_true.cs",
    "Description": "when delete engagement custom field with mymobility segmentation is true",
    "WhenList": [
      "request delete custom field"
    ],
    "ThenList": [
      "should return no content",
      "should call my mobility to remove all filters base on custom field"
    ],
    "Children": []
  },
  {
    "$id": "1528",
    "FileName": "when_delete_engagement_custom_field_with_no_related_custom_field_value.cs",
    "Description": "when delete engagement custom field with no related custom field value",
    "WhenList": [
      "request delete custom field"
    ],
    "ThenList": [
      "should return no content",
      "should be deleted"
    ],
    "Children": []
  },
  {
    "$id": "1529",
    "FileName": "when_delete_engagement_custom_field_with_related_assignee_assignment_custom_field_value.cs",
    "Description": "when delete engagement custom field with related assignee assignment custom field value",
    "WhenList": [
      "request delete custom field"
    ],
    "ThenList": [
      "should return no content",
      "should be deleted"
    ],
    "Children": []
  },
  {
    "$id": "1530",
    "FileName": "when_delete_engagement_custom_field_with_related_assignee_custom_field_value.cs",
    "Description": "when delete engagement custom field with related assignee custom field value",
    "WhenList": [
      "request delete custom field"
    ],
    "ThenList": [
      "should return no content",
      "should be deleted"
    ],
    "Children": []
  },
  {
    "$id": "1531",
    "FileName": "when_delete_engagement_custom_field_with_related_workrecord_custom_field_value.cs",
    "Description": "when delete engagement custom field with related workrecord custom field value",
    "WhenList": [
      "request delete custom field"
    ],
    "ThenList": [
      "should return no content",
      "should be deleted"
    ],
    "Children": []
  },
  {
    "$id": "1532",
    "FileName": "when_delete_engagement_custom_field_with_sub_custom_filed_mymobility_segmentation_is_true.cs",
    "Description": "when delete engagement custom field with sub custom filed mymobility segmentation is true",
    "WhenList": [
      "request delete custom field"
    ],
    "ThenList": [
      "should return no content",
      "should call my mobility to remove all filters base on custom field"
    ],
    "Children": []
  },
  {
    "$id": "1533",
    "FileName": "when_delete_custom_field_list_options_which_already_map_to_myMobility.cs",
    "Description": "when delete custom field list options which already map to my mobility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1534",
        "FileName": "when_delete_custom_field_list_options_which_already_map_to_myMobility.cs",
        "Description": "when delete single options",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should call my mobility to remove all options in rebecca"
        ],
        "Children": []
      },
      {
        "$id": "1535",
        "FileName": "when_delete_custom_field_list_options_which_already_map_to_myMobility.cs",
        "Description": "when delete single options and map to no at the same time",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should call my mobility to remove all options in rebecca"
        ],
        "Children": []
      },
      {
        "$id": "1536",
        "FileName": "when_delete_custom_field_list_options_which_already_map_to_myMobility.cs",
        "Description": "when delete mutli options",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should call my mobility to remove all options in rebecca"
        ],
        "Children": []
      },
      {
        "$id": "1537",
        "FileName": "when_delete_custom_field_list_options_which_already_map_to_myMobility.cs",
        "Description": "when not delete any options",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should call my mobility to remove all options in rebecca"
        ],
        "Children": []
      },
      {
        "$id": "1538",
        "FileName": "when_delete_custom_field_list_options_which_already_map_to_myMobility.cs",
        "Description": "when delete all options",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should call my mobility to remove all options in rebecca"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1539",
    "FileName": "when_patch_country_custom_field.cs",
    "Description": "when patch country custom field",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1540",
        "FileName": "when_patch_country_custom_field.cs",
        "Description": "when close role feature",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should be not authorized by staff of another country"
        ],
        "Children": []
      },
      {
        "$id": "1541",
        "FileName": "when_patch_country_custom_field.cs",
        "Description": "when current users role is above country level",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return ok",
          "and update custom field content"
        ],
        "Children": []
      },
      {
        "$id": "1542",
        "FileName": "when_patch_country_custom_field.cs",
        "Description": "when current users role is below country level",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1543",
    "FileName": "when_patch_country_custom_field_with_duplicated_name.cs",
    "Description": "when patch country custom field with duplicated name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1544",
        "FileName": "when_patch_country_custom_field_with_duplicated_name.cs",
        "Description": "when change to existed name",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should conflict"
        ],
        "Children": []
      },
      {
        "$id": "1545",
        "FileName": "when_patch_country_custom_field_with_duplicated_name.cs",
        "Description": "when change other except name",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should update successfully"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1546",
    "FileName": "when_patch_custom_field_by_staff_not_under_coordinating_office_invalid_request.cs",
    "Description": "when patch custom field by staff not under coordinating office invalid request",
    "WhenList": [
      "patch custom field with unauthorized user"
    ],
    "ThenList": [
      "should return 403",
      "should get no patched custom field"
    ],
    "Children": []
  },
  {
    "$id": "1547",
    "FileName": "when_patch_custom_field_correct_request.cs",
    "Description": "when patch custom field correct request",
    "WhenList": [
      "patch custom field"
    ],
    "ThenList": [
      "should return successful",
      "should get latest custom field"
    ],
    "Children": []
  },
  {
    "$id": "1548",
    "FileName": "when_patch_custom_field_map_to_myMobility_for_subscribed_engagement.cs",
    "Description": "when patch custom field map to my mobility for subscribed engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1549",
        "FileName": "when_patch_custom_field_map_to_myMobility_for_subscribed_engagement.cs",
        "Description": "when custom field is related to assignee profile",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1550",
            "FileName": "when_patch_custom_field_map_to_myMobility_for_subscribed_engagement.cs",
            "Description": "yes to no",
            "WhenList": [
              "patch custom field"
            ],
            "ThenList": [
              "should return successful",
              "should call my mobility to remove all filters base on custom field"
            ],
            "Children": []
          },
          {
            "$id": "1551",
            "FileName": "when_patch_custom_field_map_to_myMobility_for_subscribed_engagement.cs",
            "Description": "no to yes",
            "WhenList": [
              "patch custom field"
            ],
            "ThenList": [
              "should return successful",
              "should call my mobility to remove all filters base on custom field"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1552",
        "FileName": "when_patch_custom_field_map_to_myMobility_for_subscribed_engagement.cs",
        "Description": "when custom field is related to assignee assignments",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should update publication status for the custom field"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1553",
    "FileName": "when_patch_custom_field_map_to_myMobility_from_yes_to_no.cs",
    "Description": "when patch custom field map to my mobility from yes to no",
    "WhenList": [
      "patch custom field"
    ],
    "ThenList": [
      "should return successful",
      "should call my mobility to remove all filters base on custom field"
    ],
    "Children": []
  },
  {
    "$id": "1554",
    "FileName": "when_patch_custom_field_without_name_in_request.cs",
    "Description": "when patch custom field without name in request",
    "WhenList": [
      "patch custom field without name"
    ],
    "ThenList": [
      "should return 400",
      "should get latest custom field"
    ],
    "Children": []
  },
  {
    "$id": "1555",
    "FileName": "when_patch_custom_field_with_different_role.cs",
    "Description": "when patch custom field with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1556",
        "FileName": "when_patch_custom_field_with_different_role.cs",
        "Description": "when staff is engagement admin",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful"
        ],
        "Children": []
      },
      {
        "$id": "1557",
        "FileName": "when_patch_custom_field_with_different_role.cs",
        "Description": "when staff is not engagement admin",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1558",
        "FileName": "when_patch_custom_field_with_different_role.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful"
        ],
        "Children": []
      },
      {
        "$id": "1559",
        "FileName": "when_patch_custom_field_with_different_role.cs",
        "Description": "when staff is coordinating primary contact",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful"
        ],
        "Children": []
      },
      {
        "$id": "1560",
        "FileName": "when_patch_custom_field_with_different_role.cs",
        "Description": "when staff is coordinating secondary contact",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful"
        ],
        "Children": []
      },
      {
        "$id": "1561",
        "FileName": "when_patch_custom_field_with_different_role.cs",
        "Description": "when staff is deletgated primary contact",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful"
        ],
        "Children": []
      },
      {
        "$id": "1562",
        "FileName": "when_patch_custom_field_with_different_role.cs",
        "Description": "when staff is deletgated secondary contact",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1563",
    "FileName": "when_patch_custom_field_with_mymobility_publication.cs",
    "Description": "when patch custom field with mymobility publication",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1564",
        "FileName": "when_patch_custom_field_with_mymobility_publication.cs",
        "Description": "should able to change mymobility publication when can publish to mymobility",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should change mymobility publication"
        ],
        "Children": []
      },
      {
        "$id": "1565",
        "FileName": "when_patch_custom_field_with_mymobility_publication.cs",
        "Description": "should unable to change mymobility publication when cannot publish to mymobility",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1566",
            "FileName": "when_patch_custom_field_with_mymobility_publication.cs",
            "Description": "when custom field display on workrecord",
            "WhenList": [
              "patch custom field"
            ],
            "ThenList": [
              "should return successful",
              "should not change mymobility publication"
            ],
            "Children": []
          },
          {
            "$id": "1567",
            "FileName": "when_patch_custom_field_with_mymobility_publication.cs",
            "Description": "when custom field is restricted",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "1568",
                "FileName": "when_patch_custom_field_with_mymobility_publication.cs",
                "Description": "when current not displayed on mymobility",
                "WhenList": [
                  "patch custom field"
                ],
                "ThenList": [
                  "should return successful",
                  "should not change mymobility publication"
                ],
                "Children": []
              },
              {
                "$id": "1569",
                "FileName": "when_patch_custom_field_with_mymobility_publication.cs",
                "Description": "when current displayed on mymobility",
                "WhenList": [
                  "patch custom field"
                ],
                "ThenList": [
                  "should return successful",
                  "should not change mymobility publication"
                ],
                "Children": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "$id": "1570",
    "FileName": "when_patch_custom_field_with_restricted.cs",
    "Description": "when patch custom field with restricted",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1571",
        "FileName": "when_patch_custom_field_with_restricted.cs",
        "Description": "should disabled subscribed mymobility publication when custom field change to restricted",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should change mymobility publication"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1572",
    "FileName": "when_patch_engagement_custom_field_with_name_that_has_been_used_in_other_engagement_in_the_same_client.cs",
    "Description": "when patch engagement custom field with name that has been used in other engagement in the same client",
    "WhenList": [
      "rename cost centre to division"
    ],
    "ThenList": [
      "should return conflict",
      "should with error"
    ],
    "Children": []
  },
  {
    "$id": "1573",
    "FileName": "when_patch_list_type_custom_field_when_map_to_myMobility_is_false.cs",
    "Description": "when patch list type custom field when map to my mobility is false",
    "WhenList": [
      "patch custom field"
    ],
    "ThenList": [
      "should return successful",
      "should get latest custom field"
    ],
    "Children": []
  },
  {
    "$id": "1574",
    "FileName": "when_remove_custom_field_list_content.cs",
    "Description": "when remove custom field list content",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1575",
        "FileName": "when_remove_custom_field_list_content.cs",
        "Description": "when remove list option which is used as assignee profile custom field value",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should remove list option and clear custom field value for all assignees"
        ],
        "Children": []
      },
      {
        "$id": "1576",
        "FileName": "when_remove_custom_field_list_content.cs",
        "Description": "when remove list option which is NOT used as assignee profile custom field value",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should remove list option without clear custom field value"
        ],
        "Children": []
      },
      {
        "$id": "1577",
        "FileName": "when_remove_custom_field_list_content.cs",
        "Description": "when remove list option which is used as work record custom field value",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should remove list option and clear work record custom field value"
        ],
        "Children": []
      },
      {
        "$id": "1578",
        "FileName": "when_remove_custom_field_list_content.cs",
        "Description": "when remove list option whick is NOT used as work record custom field value",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should remove list content without change custom field value"
        ],
        "Children": []
      },
      {
        "$id": "1579",
        "FileName": "when_remove_custom_field_list_content.cs",
        "Description": "when remove list option which is used as assignee assignment custom field value",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should remove list content and clear value"
        ],
        "Children": []
      },
      {
        "$id": "1580",
        "FileName": "when_remove_custom_field_list_content.cs",
        "Description": "when remove list option whick is NOT used as assignee assignment custom field value",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should reserve assignment related custome field value and remove list option"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1581",
    "FileName": "when_update_custom_field_list_content.cs",
    "Description": "when update custom field list content",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1582",
        "FileName": "when_update_custom_field_list_content.cs",
        "Description": "when update list content which is used as assignee assignment custom field value",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should update assignment custome field list content name",
          "should update assignment related custome field value"
        ],
        "Children": []
      },
      {
        "$id": "1583",
        "FileName": "when_update_custom_field_list_content.cs",
        "Description": "when update list content which is used as assignee profile custom field value",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should update assignee profile custome field list content name",
          "should update assignee profile related custome field value"
        ],
        "Children": []
      },
      {
        "$id": "1584",
        "FileName": "when_update_custom_field_list_content.cs",
        "Description": "when update list content which is used as work record custom field value",
        "WhenList": [
          "patch custom field"
        ],
        "ThenList": [
          "should return successful",
          "should update work record custome field list content name",
          "should update work record related custome field value"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1585",
    "FileName": "when_get_country_custom_field_with_list_content_and_not_used.cs",
    "Description": "when get country custom field with list content and not used",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return 200",
      "should return custom field with content"
    ],
    "Children": []
  },
  {
    "$id": "1586",
    "FileName": "when_get_country_custom_field_with_list_content_and_used_by_assignee_value.cs",
    "Description": "when get country custom field with list content and used by assignee value",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return 200",
      "should return custom field with content"
    ],
    "Children": []
  },
  {
    "$id": "1587",
    "FileName": "when_get_country_custom_field_with_list_content_and_used_by_workrecord_value.cs",
    "Description": "when get country custom field with list content and used by workrecord value",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return 200",
      "should return custom field with content"
    ],
    "Children": []
  },
  {
    "$id": "1588",
    "FileName": "when_get_engagement_custom_field_with_list_content_and_not_used.cs",
    "Description": "when get engagement custom field with list content and not used",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return 200",
      "should return custom field with content"
    ],
    "Children": []
  },
  {
    "$id": "1589",
    "FileName": "when_get_engagement_custom_field_with_list_content_and_used_by_assignee_value.cs",
    "Description": "when get engagement custom field with list content and used by assignee value",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return 200",
      "should return custom field with content"
    ],
    "Children": []
  },
  {
    "$id": "1590",
    "FileName": "when_get_engagement_custom_field_with_list_content_and_used_by_workrecord_value.cs",
    "Description": "when get engagement custom field with list content and used by workrecord value",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return 200",
      "should return custom field with content"
    ],
    "Children": []
  },
  {
    "$id": "1591",
    "FileName": "when_get_country_custom_field.cs",
    "Description": "when get country custom field",
    "WhenList": [
      "get"
    ],
    "ThenList": [
      "should success",
      "should be not authorized by staff of another country"
    ],
    "Children": []
  },
  {
    "$id": "1592",
    "FileName": "when_get_custom_field_by_id_with_different_role.cs",
    "Description": "when get custom field by id with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1593",
        "FileName": "when_get_custom_field_by_id_with_different_role.cs",
        "Description": "when staff is the engagement administrator",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return ok",
          "should return edit and delete links"
        ],
        "Children": []
      },
      {
        "$id": "1594",
        "FileName": "when_get_custom_field_by_id_with_different_role.cs",
        "Description": "when staff is not the engagement administrator but in coordinating office",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return ok",
          "should not return edit and delete links"
        ],
        "Children": []
      },
      {
        "$id": "1595",
        "FileName": "when_get_custom_field_by_id_with_different_role.cs",
        "Description": "when staff is not the engagement administrator and not in coordinating office",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return ok",
          "should not return edit and delete links"
        ],
        "Children": []
      },
      {
        "$id": "1596",
        "FileName": "when_get_custom_field_by_id_with_different_role.cs",
        "Description": "when staff is global administrator",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return ok",
          "should return edit and delete links"
        ],
        "Children": []
      },
      {
        "$id": "1597",
        "FileName": "when_get_custom_field_by_id_with_different_role.cs",
        "Description": "when staff is the coordinating primary contact",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return ok",
          "should return edit and delete links"
        ],
        "Children": []
      },
      {
        "$id": "1598",
        "FileName": "when_get_custom_field_by_id_with_different_role.cs",
        "Description": "when staff is the coordinating secondary contact",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return ok",
          "should return edit and delete links"
        ],
        "Children": []
      },
      {
        "$id": "1599",
        "FileName": "when_get_custom_field_by_id_with_different_role.cs",
        "Description": "when staff is the delegated primary contact",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return ok",
          "should return edit and delete links"
        ],
        "Children": []
      },
      {
        "$id": "1600",
        "FileName": "when_get_custom_field_by_id_with_different_role.cs",
        "Description": "when staff is the delegated secondary contact",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return ok",
          "should return edit and delete links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1601",
    "FileName": "when_get_custom_field_by_id_with_value.cs",
    "Description": "when get custom field by id with value",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return 200",
      "should return custom field has value"
    ],
    "Children": []
  },
  {
    "$id": "1602",
    "FileName": "when_get_custom_field_which_map_to_my_mobility.cs",
    "Description": "when get custom field which map to my mobility",
    "WhenList": [
      "get mapped custom fields"
    ],
    "ThenList": [
      "should return 200",
      "should return custom field with content"
    ],
    "Children": []
  },
  {
    "$id": "1603",
    "FileName": "when_get_custom_field_which_published_to_my_mobility.cs",
    "Description": "when get custom field which published to my mobility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1604",
        "FileName": "when_get_custom_field_which_published_to_my_mobility.cs",
        "Description": "when my mobility user is administrator",
        "WhenList": [
          "get published custom field"
        ],
        "ThenList": [
          "should return 200",
          "should return all published custom fields"
        ],
        "Children": []
      },
      {
        "$id": "1605",
        "FileName": "when_get_custom_field_which_published_to_my_mobility.cs",
        "Description": "when my mobility user is general user",
        "WhenList": [
          "get published custom field"
        ],
        "ThenList": [
          "should return 200",
          "should return all published custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1606",
    "FileName": "when_get_engagement_custom_field_by_id.cs",
    "Description": "when get engagement custom field by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1607",
        "FileName": "when_get_engagement_custom_field_by_id.cs",
        "Description": "when get list on assignee",
        "WhenList": [
          "get list on assignee custom field"
        ],
        "ThenList": [
          "should return 200",
          "should return the custom field"
        ],
        "Children": []
      },
      {
        "$id": "1608",
        "FileName": "when_get_engagement_custom_field_by_id.cs",
        "Description": "when get text on assignee",
        "WhenList": [
          "get text on assignee custom field"
        ],
        "ThenList": [
          "should return 200",
          "should return the custom field"
        ],
        "Children": []
      },
      {
        "$id": "1609",
        "FileName": "when_get_engagement_custom_field_by_id.cs",
        "Description": "when get text on assignee assignment",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1610",
            "FileName": "when_get_engagement_custom_field_by_id.cs",
            "Description": "when get text custom field without value",
            "WhenList": [
              "get text on assignee assignment custom field"
            ],
            "ThenList": [
              "should return 200",
              "should return the custom field with has value is false"
            ],
            "Children": []
          },
          {
            "$id": "1611",
            "FileName": "when_get_engagement_custom_field_by_id.cs",
            "Description": "when get text custom field with value",
            "WhenList": [
              "get text on assignee assignment custom field"
            ],
            "ThenList": [
              "should return 200",
              "should return the custom field with has value is true"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1612",
        "FileName": "when_get_engagement_custom_field_by_id.cs",
        "Description": "when get list on assignee assignment",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1613",
            "FileName": "when_get_engagement_custom_field_by_id.cs",
            "Description": "when get list custom field without value",
            "WhenList": [
              "get list on assignee assignment custom field"
            ],
            "ThenList": [
              "should return 200",
              "should return the custom field with used is false"
            ],
            "Children": []
          },
          {
            "$id": "1614",
            "FileName": "when_get_engagement_custom_field_by_id.cs",
            "Description": "when get list custom field with value",
            "WhenList": [
              "get list on assignee assignment custom field"
            ],
            "ThenList": [
              "should return 200",
              "should return the custom field with used is true"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1615",
        "FileName": "when_get_engagement_custom_field_by_id.cs",
        "Description": "when get list on workrecord",
        "WhenList": [
          "get list on workrecord custom field"
        ],
        "ThenList": [
          "should return 200",
          "should return list on workrecord custom field"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1616",
    "FileName": "when_get_engagement_custom_field_by_id_about_used_in_my_mobility.cs",
    "Description": "when get engagement custom field by id about used in my mobility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1617",
        "FileName": "when_get_engagement_custom_field_by_id_about_used_in_my_mobility.cs",
        "Description": "when localtion is assignee profile",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1618",
            "FileName": "when_get_engagement_custom_field_by_id_about_used_in_my_mobility.cs",
            "Description": "when exist",
            "WhenList": [
              "get list on assignee custom field"
            ],
            "ThenList": [
              "should return 200",
              "should return the custom field"
            ],
            "Children": []
          },
          {
            "$id": "1619",
            "FileName": "when_get_engagement_custom_field_by_id_about_used_in_my_mobility.cs",
            "Description": "when not exist",
            "WhenList": [
              "get list on assignee custom field"
            ],
            "ThenList": [
              "should return 200",
              "should return the custom field"
            ],
            "Children": []
          },
          {
            "$id": "1620",
            "FileName": "when_get_engagement_custom_field_by_id_about_used_in_my_mobility.cs",
            "Description": "when error",
            "WhenList": [
              "get list on assignee custom field"
            ],
            "ThenList": [
              "should return 500"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1621",
        "FileName": "when_get_engagement_custom_field_by_id_about_used_in_my_mobility.cs",
        "Description": "when localtion is assignee assignments",
        "WhenList": [
          "get list on assignee custom field"
        ],
        "ThenList": [
          "should return 200",
          "should return the custom field"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1622",
    "FileName": "when_get_engagement_custom_field_by_id_without_any_value.cs",
    "Description": "when get engagement custom field by id without value",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return 200",
      "should return the custom field"
    ],
    "Children": []
  },
  {
    "$id": "1623",
    "FileName": "when_get_engagement_custom_field_has_subscribed.cs",
    "Description": "when get engagement custom field has subscribed",
    "WhenList": [
      "subscribe custom field"
    ],
    "ThenList": [
      "subscribed custom field should hold owner engagement info",
      "owner of custom field should retrieve subscription with owner info of self"
    ],
    "Children": []
  },
  {
    "$id": "1624",
    "FileName": "when_search_country_custom_field_by_current_user_country.cs",
    "Description": "when search country custom field by current user country",
    "WhenList": [
      "get custom fields"
    ],
    "ThenList": [
      "should return 200",
      "should return country custom fields subscribed to given search criteria"
    ],
    "Children": []
  },
  {
    "$id": "1625",
    "FileName": "when_search_engagement_custom_field.cs",
    "Description": "when search engagement custom field",
    "WhenList": [
      "get custom fields"
    ],
    "ThenList": [
      "should return 200",
      "should return custom fields subscribed to given search criteria"
    ],
    "Children": []
  },
  {
    "$id": "1626",
    "FileName": "when_search_engagement_custom_field_by_client_id.cs",
    "Description": "when search engagement custom field by client id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1627",
        "FileName": "when_search_engagement_custom_field_by_client_id.cs",
        "Description": "should return custom fields when client has custom fields",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return 200",
          "should return custom fields list when client has custom fields"
        ],
        "Children": []
      },
      {
        "$id": "1628",
        "FileName": "when_search_engagement_custom_field_by_client_id.cs",
        "Description": "should return empty custom fields list when client has no custom fields",
        "WhenList": [
          "get custom field"
        ],
        "ThenList": [
          "should return 200",
          "should return custom fields list when client has custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1629",
    "FileName": "when_search_engagement_custom_field_publication_by_client_id_with_mymobility.cs",
    "Description": "when search engagement custom field publication by client id with mymobility",
    "WhenList": [
      "get custom field"
    ],
    "ThenList": [
      "should return 200",
      "should return custom fields subscribed to given coordinating office in desc order by default"
    ],
    "Children": []
  },
  {
    "$id": "1630",
    "FileName": "when_subscribe_custom_field.cs",
    "Description": "when subscribe custom field",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1631",
        "FileName": "when_subscribe_custom_field.cs",
        "Description": "should update customfields when login with admin",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok",
          "should subscribe custom field successfully",
          "should contain export link"
        ],
        "Children": []
      },
      {
        "$id": "1632",
        "FileName": "when_subscribe_custom_field.cs",
        "Description": "should update customfields when login with coordinating primary contact",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1633",
        "FileName": "when_subscribe_custom_field.cs",
        "Description": "should update customfields when login with coordinating secondary contact",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1634",
        "FileName": "when_subscribe_custom_field.cs",
        "Description": "should update customfields when login with delegated primary contact",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1635",
        "FileName": "when_subscribe_custom_field.cs",
        "Description": "should update customfields when login with delegated secondary contact",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1636",
    "FileName": "when_subscribe_custom_field_with_duplication.cs",
    "Description": "when subscribe custom field with duplication",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1637",
        "FileName": "when_subscribe_custom_field_with_duplication.cs",
        "Description": "when subscribe a custom field with the same name to the subscribing engagement has owned",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return error"
        ],
        "Children": []
      },
      {
        "$id": "1638",
        "FileName": "when_subscribe_custom_field_with_duplication.cs",
        "Description": "when rename a custom field with the same name in subscribing engagements custom fields",
        "WhenList": [
          "rename custom field in subscribed engagement"
        ],
        "ThenList": [
          "should return error"
        ],
        "Children": []
      },
      {
        "$id": "1639",
        "FileName": "when_subscribe_custom_field_with_duplication.cs",
        "Description": "when subscribe a custom field with the same name ignore case",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return error"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1640",
    "FileName": "when_subscribe_custom_field_with_my_mobility_settings.cs",
    "Description": "when subscribe custom field with my mobility settings",
    "WhenList": [
      "subscribe custom fields"
    ],
    "ThenList": [
      "should return ok",
      "should subscribe custom fields successfully",
      "should copy existing my mobility settings from field 1",
      "should copy existing my mobility settings from field 2",
      "should copy existing my mobility settings from field assignment"
    ],
    "Children": []
  },
  {
    "$id": "1641",
    "FileName": "when_subscribe_engagement_custom_field_with_different_user.cs",
    "Description": "when subscribe engagement custom field with different user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1642",
        "FileName": "when_subscribe_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is engagement admin",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1643",
        "FileName": "when_subscribe_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is not engagement admin",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return fobidden"
        ],
        "Children": []
      },
      {
        "$id": "1644",
        "FileName": "when_subscribe_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1645",
        "FileName": "when_subscribe_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is coordinating primary contact",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1646",
        "FileName": "when_subscribe_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is coordinating secondary contact",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1647",
        "FileName": "when_subscribe_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is delegated primary contact",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1648",
        "FileName": "when_subscribe_engagement_custom_field_with_different_user.cs",
        "Description": "when staff is delegated secondary contact",
        "WhenList": [
          "subscribe custom field"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1649",
    "FileName": "when_unsubscribe_custom_field.cs",
    "Description": "when unsubscribe custom field",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1650",
        "FileName": "when_unsubscribe_custom_field.cs",
        "Description": "when segmentation false",
        "WhenList": [
          "unsubscribe custom field"
        ],
        "ThenList": [
          "should return ok",
          "should subscribe custom field successfully"
        ],
        "Children": []
      },
      {
        "$id": "1651",
        "FileName": "when_unsubscribe_custom_field.cs",
        "Description": "when segmentation true",
        "WhenList": [
          "unsubscribe custom field"
        ],
        "ThenList": [
          "should return ok",
          "should call my mobility to remove all filters base on custom field"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1652",
    "FileName": "when_unsubscribe_custom_field_should_delete_useless_custom_field_values.cs",
    "Description": "when unsubscribe custom field should delete useless custom field values",
    "WhenList": [
      "unsubscribe custom field in oracle engagement"
    ],
    "ThenList": [
      "should delete assignee custom field value"
    ],
    "Children": []
  },
  {
    "$id": "1653",
    "FileName": "when_unsubscribe_custom_field_should_keep_useful_custom_field_values.cs",
    "Description": "when unsubscribe custom field should keep useful custom field values",
    "WhenList": [
      "unsubscribe custom field in oracle engagement"
    ],
    "ThenList": [
      "should keep assignee custom field value"
    ],
    "Children": []
  },
  {
    "$id": "1654",
    "FileName": "when_sign_efile_consent_via_myTaxes.cs",
    "Description": "when sign efile consent via my taxes",
    "WhenList": [
      "sign efile consnet"
    ],
    "ThenList": [
      "should ok and call consent service"
    ],
    "Children": []
  },
  {
    "$id": "1655",
    "FileName": "when_sign_efile_consent_via_tiger.cs",
    "Description": "when sign efile consent via tiger",
    "WhenList": [
      "sign efile consnet"
    ],
    "ThenList": [
      "should ok and call consent service"
    ],
    "Children": []
  },
  {
    "$id": "1656",
    "FileName": "when_search_efile_countries.cs",
    "Description": "when search efile countries",
    "WhenList": [
      "get efile countries"
    ],
    "ThenList": [
      "should return 200",
      "should get efile countries"
    ],
    "Children": []
  },
  {
    "$id": "1657",
    "FileName": "when_add_efile_group_member.cs",
    "Description": "when add efile group member",
    "WhenList": [],
    "ThenList": [
      "should be able to add member to efile group",
      "should return bad request if efile group does not exist",
      "should return bad request if it is not efile country",
      "should return internal server error if member exists"
    ],
    "Children": []
  },
  {
    "$id": "1658",
    "FileName": "when_current_user_is_other_role.cs",
    "Description": "when current user is other role",
    "WhenList": [],
    "ThenList": [
      "should return forbidden when add user to de efile group",
      "should return forbidden when remove user from de efile group"
    ],
    "Children": []
  },
  {
    "$id": "1659",
    "FileName": "when_current_user_is_uk_country_level_role.cs",
    "Description": "when current user is uk country level role",
    "WhenList": [],
    "ThenList": [
      "should return forbidden when add user to de efile group",
      "should return ok when add user to uk efile group",
      "should return forbidden when remove user to de efile group",
      "should return ok when remove user to uk efile group"
    ],
    "Children": []
  },
  {
    "$id": "1660",
    "FileName": "when_edit_efile_group_email.cs",
    "Description": "when edit efile group email",
    "WhenList": [],
    "ThenList": [
      "should be able to modify efile group email",
      "should block request with bad email"
    ],
    "Children": []
  },
  {
    "$id": "1661",
    "FileName": "when_get_all_efile_countries.cs",
    "Description": "when get all efile countries",
    "WhenList": [],
    "ThenList": [
      "should get all efile countries"
    ],
    "Children": []
  },
  {
    "$id": "1662",
    "FileName": "when_remove_efile_group_member.cs",
    "Description": "when remove efile group member",
    "WhenList": [],
    "ThenList": [
      "should remove efile group member",
      "should return not found when efile group member does not exist"
    ],
    "Children": []
  },
  {
    "$id": "1663",
    "FileName": "when_search_efile_group.cs",
    "Description": "when search efile group",
    "WhenList": [],
    "ThenList": [
      "should have efile group members",
      "should return not found if efile group does not exist"
    ],
    "Children": []
  },
  {
    "$id": "1664",
    "FileName": "when_search_efile_group_by_country_abbreviation.cs",
    "Description": "when search efile group by country abbreviation",
    "WhenList": [],
    "ThenList": [
      "should get efile group"
    ],
    "Children": []
  },
  {
    "$id": "1665",
    "FileName": "when_search_efile_group_with_staff_added_to_efile_groups_uk_and_de.cs",
    "Description": "when search efile group with staff added to efile groups uk and de",
    "WhenList": [],
    "ThenList": [
      "should return multiple efile groups"
    ],
    "Children": []
  },
  {
    "$id": "1666",
    "FileName": "when_search_efile_group_with_staff_added_to_efile_group_uk.cs",
    "Description": "when search efile group with staff added to efile group uk",
    "WhenList": [],
    "ThenList": [
      "should return efile group uk"
    ],
    "Children": []
  },
  {
    "$id": "1667",
    "FileName": "when_search_efile_group_with_staff_not_in_any_efile_group.cs",
    "Description": "when search efile group with staff not in any efile group",
    "WhenList": [],
    "ThenList": [
      "should return empty array if staff is not in any efile group"
    ],
    "Children": []
  },
  {
    "$id": "1668",
    "FileName": "create_efile_status_when_move_milestone.cs",
    "Description": "create efile status when move milestone",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1669",
        "FileName": "create_efile_status_when_move_milestone.cs",
        "Description": "when move over delivered milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create efile status"
        ],
        "Children": []
      },
      {
        "$id": "1670",
        "FileName": "create_efile_status_when_move_milestone.cs",
        "Description": "when not move over delivered milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not create efile status"
        ],
        "Children": []
      },
      {
        "$id": "1671",
        "FileName": "create_efile_status_when_move_milestone.cs",
        "Description": "when non tax work record move over delivered milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not create efile status"
        ],
        "Children": []
      },
      {
        "$id": "1672",
        "FileName": "create_efile_status_when_move_milestone.cs",
        "Description": "when non efile country tax work record move over delivered milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not create efile status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1673",
    "FileName": "create_efile_status_when_move_milestone_and_tax_return_already_uploaded.cs",
    "Description": "create efile status when move milestone and tax return already uploaded",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1674",
        "FileName": "create_efile_status_when_move_milestone_and_tax_return_already_uploaded.cs",
        "Description": "when move over delivered milestone with tax return file already uploaded",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create efile status with file id"
        ],
        "Children": []
      },
      {
        "$id": "1675",
        "FileName": "create_efile_status_when_move_milestone_and_tax_return_already_uploaded.cs",
        "Description": "when move over delivered milestone with file already uploaded but not tax return",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create efile status with file id"
        ],
        "Children": []
      },
      {
        "$id": "1676",
        "FileName": "create_efile_status_when_move_milestone_and_tax_return_already_uploaded.cs",
        "Description": "when move over delivered milestone with file already downloaded",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create efile status with file id"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1677",
    "FileName": "create_efile_status_when_move_milestone_by_api.cs",
    "Description": "create efile status when move milestone by api",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1678",
        "FileName": "create_efile_status_when_move_milestone_by_api.cs",
        "Description": "when move over delivered milestone by api",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create efile status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1679",
    "FileName": "create_or_update_efile_status_when_move_milestone_by_batch_work_milestone.cs",
    "Description": "create or update efile status when move milestone by batch work milestone",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1680",
        "FileName": "create_or_update_efile_status_when_move_milestone_by_batch_work_milestone.cs",
        "Description": "when move forward over delivered milestone by batch work milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create efile status"
        ],
        "Children": []
      },
      {
        "$id": "1681",
        "FileName": "create_or_update_efile_status_when_move_milestone_by_batch_work_milestone.cs",
        "Description": "when move back to delivered milestone by batch work milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should set delivery date to null"
        ],
        "Children": []
      },
      {
        "$id": "1682",
        "FileName": "create_or_update_efile_status_when_move_milestone_by_batch_work_milestone.cs",
        "Description": "when move back over delivered milestone by batch work milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should set delivery date to null"
        ],
        "Children": []
      },
      {
        "$id": "1683",
        "FileName": "create_or_update_efile_status_when_move_milestone_by_batch_work_milestone.cs",
        "Description": "when move back not over delivered milestone by batch work milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should delete efile status"
        ],
        "Children": []
      },
      {
        "$id": "1684",
        "FileName": "create_or_update_efile_status_when_move_milestone_by_batch_work_milestone.cs",
        "Description": "when move forward over delivered milestone by batch work milestone for the second time",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should re set delivery date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1685",
    "FileName": "delete_efile_status_when_delete_work_record.cs",
    "Description": "delete efile status when delete work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1686",
        "FileName": "delete_efile_status_when_delete_work_record.cs",
        "Description": "when delete work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should delete efile status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1687",
    "FileName": "get_efile_status_resource_link_when_get_assignee_work_record.cs",
    "Description": "get efile status resource link when get assignee work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1688",
        "FileName": "get_efile_status_resource_link_when_get_assignee_work_record.cs",
        "Description": "when get assignee work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should get efile status resource link",
          "should not get efile status resource link for non tax work record",
          "should not get efile status resource link for non efile work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1689",
    "FileName": "reset_file_id_when_delete_last_tax_return_file_without_sign.cs",
    "Description": "reset file id when delete last tax return file without sign",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1690",
        "FileName": "reset_file_id_when_delete_last_tax_return_file_without_sign.cs",
        "Description": "set file id to null when delete tax return file",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should still signed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1691",
    "FileName": "reset_file_id_when_delete_last_tax_return_with_sign.cs",
    "Description": "reset file id when delete last tax return with sign",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1692",
        "FileName": "reset_file_id_when_delete_last_tax_return_with_sign.cs",
        "Description": "set file id to null when delete tax return file",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create efile status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1693",
    "FileName": "reset_file_id_when_delete_latest_tax_return_file.cs",
    "Description": "reset file id when delete latest tax return file",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1694",
        "FileName": "reset_file_id_when_delete_latest_tax_return_file.cs",
        "Description": "set file id to null when delete tax return file",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create efile status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1695",
    "FileName": "update_efile_status_when_download_tax_return_from_mytaxes.cs",
    "Description": "update efile status when download tax return from mytaxes",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1696",
        "FileName": "update_efile_status_when_download_tax_return_from_mytaxes.cs",
        "Description": "when first time download tax return file from mytaxes",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should update efile first downloaded date"
        ],
        "Children": []
      },
      {
        "$id": "1697",
        "FileName": "update_efile_status_when_download_tax_return_from_mytaxes.cs",
        "Description": "when not first time download tax return file from mytaxes",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not update efile first downloaded date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1698",
    "FileName": "update_efile_status_when_sign_or_refuse_from_mytaxes.cs",
    "Description": "update efile status when sign or refuse from mytaxes",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1699",
        "FileName": "update_efile_status_when_sign_or_refuse_from_mytaxes.cs",
        "Description": "when sign from mytaxes",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should update signed date"
        ],
        "Children": []
      },
      {
        "$id": "1700",
        "FileName": "update_efile_status_when_sign_or_refuse_from_mytaxes.cs",
        "Description": "when refuse from mytaxes",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should update refused date"
        ],
        "Children": []
      },
      {
        "$id": "1701",
        "FileName": "update_efile_status_when_sign_or_refuse_from_mytaxes.cs",
        "Description": "when refuse and then sign from mytaxes",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should update signed date and clear refused date"
        ],
        "Children": []
      },
      {
        "$id": "1702",
        "FileName": "update_efile_status_when_sign_or_refuse_from_mytaxes.cs",
        "Description": "when sign and then refuse from mytaxes",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should clear signed date and update refused date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1703",
    "FileName": "update_efile_status_when_upload_tax_return_file_to_file_cabinet.cs",
    "Description": "update efile status when upload tax return file to file cabinet",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1704",
        "FileName": "update_efile_status_when_upload_tax_return_file_to_file_cabinet.cs",
        "Description": "when upload tax return file to file cabinet",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should update efile id"
        ],
        "Children": []
      },
      {
        "$id": "1705",
        "FileName": "update_efile_status_when_upload_tax_return_file_to_file_cabinet.cs",
        "Description": "when re upload tax return file to file cabinet",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should update efile id",
          "should clean download date and reminder date and consent date"
        ],
        "Children": []
      },
      {
        "$id": "1706",
        "FileName": "update_efile_status_when_upload_tax_return_file_to_file_cabinet.cs",
        "Description": "when upload tax return file to file cabinet but not yet deliverd",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not find efile status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1707",
    "FileName": "when_search_email_address.cs",
    "Description": "when search email address",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1708",
        "FileName": "when_search_email_address.cs",
        "Description": "when search email address from staff",
        "WhenList": [
          "search"
        ],
        "ThenList": [
          "should return ok",
          "should get 2 search result"
        ],
        "Children": []
      },
      {
        "$id": "1709",
        "FileName": "when_search_email_address.cs",
        "Description": "when try to search email address from inactive staff",
        "WhenList": [
          "search"
        ],
        "ThenList": [
          "should return ok",
          "should not get email"
        ],
        "Children": []
      },
      {
        "$id": "1710",
        "FileName": "when_search_email_address.cs",
        "Description": "when try to search email address from pending staff",
        "WhenList": [
          "search"
        ],
        "ThenList": [
          "should return ok",
          "should not get email"
        ],
        "Children": []
      },
      {
        "$id": "1711",
        "FileName": "when_search_email_address.cs",
        "Description": "when search email address from team mail box",
        "WhenList": [
          "search"
        ],
        "ThenList": [
          "should return ok",
          "should get 1 search result"
        ],
        "Children": []
      },
      {
        "$id": "1712",
        "FileName": "when_search_email_address.cs",
        "Description": "when search email address from staff and team mail box",
        "WhenList": [
          "search"
        ],
        "ThenList": [
          "should return ok",
          "should get 1 search result"
        ],
        "Children": []
      },
      {
        "$id": "1713",
        "FileName": "when_search_email_address.cs",
        "Description": "when search email address with space",
        "WhenList": [
          "search"
        ],
        "ThenList": [
          "should return ok",
          "should get 1 search result"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1714",
    "FileName": "when_search_employer_work_record_by_uris.cs",
    "Description": "when search employer work record by uris",
    "WhenList": [
      "searching for employer work record"
    ],
    "ThenList": [
      "should succeed",
      "should return search result"
    ],
    "Children": []
  },
  {
    "$id": "1715",
    "FileName": "when_search_employer_work_record_for_batch_send_email_by_uris.cs",
    "Description": "when search employer work record for batch send email by uris",
    "WhenList": [
      "searching for employer work record"
    ],
    "ThenList": [
      "should succeed",
      "should return search result"
    ],
    "Children": []
  },
  {
    "$id": "1716",
    "FileName": "when_simple_search_employer_work_record.cs",
    "Description": "when simple search employer work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1717",
        "FileName": "when_simple_search_employer_work_record.cs",
        "Description": "when try to search employer work record in inactive engagement",
        "WhenList": [
          "search employer work record"
        ],
        "ThenList": [
          "should succedd",
          "should NOT return any employer work record in inactive engagement"
        ],
        "Children": []
      },
      {
        "$id": "1718",
        "FileName": "when_simple_search_employer_work_record.cs",
        "Description": "when using search without month",
        "WhenList": [
          "searching for employer work record"
        ],
        "ThenList": [
          "should succeed",
          "should only return leeds office annual work records"
        ],
        "Children": []
      },
      {
        "$id": "1719",
        "FileName": "when_simple_search_employer_work_record.cs",
        "Description": "when using search with month",
        "WhenList": [
          "searching for employer work record"
        ],
        "ThenList": [
          "should succeed",
          "should only return leeds office monthly work records"
        ],
        "Children": []
      },
      {
        "$id": "1720",
        "FileName": "when_simple_search_employer_work_record.cs",
        "Description": "when search without engagement",
        "WhenList": [
          "searching for employer work record"
        ],
        "ThenList": [
          "should succeed",
          "should only return leeds office annual work record"
        ],
        "Children": []
      },
      {
        "$id": "1721",
        "FileName": "when_simple_search_employer_work_record.cs",
        "Description": "when search with year",
        "WhenList": [
          "searching for employer work record"
        ],
        "ThenList": [
          "should succeed",
          "should only return leeds office annual work record"
        ],
        "Children": []
      },
      {
        "$id": "1722",
        "FileName": "when_simple_search_employer_work_record.cs",
        "Description": "when search with country",
        "WhenList": [
          "searching for employer work record"
        ],
        "ThenList": [
          "should succeed",
          "should only return us annual work record"
        ],
        "Children": []
      },
      {
        "$id": "1723",
        "FileName": "when_simple_search_employer_work_record.cs",
        "Description": "when request is not valid",
        "WhenList": [
          "searching for employer work record"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1724",
    "FileName": "when_batch_send_email_to_employer_work_records.cs",
    "Description": "when batch send email to employer work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1725",
        "FileName": "when_batch_send_email_to_employer_work_records.cs",
        "Description": "send email with empty content",
        "WhenList": [
          "send email"
        ],
        "ThenList": [
          "should return 201"
        ],
        "Children": []
      },
      {
        "$id": "1726",
        "FileName": "when_batch_send_email_to_employer_work_records.cs",
        "Description": "send email to client contact without cc",
        "WhenList": [
          "send email to contact"
        ],
        "ThenList": [
          "should return accepted",
          "should send correct emails"
        ],
        "Children": []
      },
      {
        "$id": "1727",
        "FileName": "when_batch_send_email_to_employer_work_records.cs",
        "Description": "send email to client contact with cc",
        "WhenList": [
          "send email to contact"
        ],
        "ThenList": [
          "should return accepted",
          "should send correct emails"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1728",
    "FileName": "when_batch_update_employer_work_milestones.cs",
    "Description": "when batch update employer work milestones",
    "WhenList": [
      "when move forward work milestone of work record"
    ],
    "ThenList": [
      "should return 200 as status code",
      "should move work milestones forward",
      "should move work milestones back"
    ],
    "Children": []
  },
  {
    "$id": "1729",
    "FileName": "when_create_employer_work_records.cs",
    "Description": "when create employer work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1730",
        "FileName": "when_create_employer_work_records.cs",
        "Description": "when create annual employer work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create employer work record",
          "should get employer work record",
          "should mark type of service as used"
        ],
        "Children": []
      },
      {
        "$id": "1731",
        "FileName": "when_create_employer_work_records.cs",
        "Description": "when create monthly employer work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create employer work record",
          "should get employer work record"
        ],
        "Children": []
      },
      {
        "$id": "1732",
        "FileName": "when_create_employer_work_records.cs",
        "Description": "when create employer work record of non tax",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1733",
    "FileName": "when_create_employer_work_records_with_team.cs",
    "Description": "when create employer work records with team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1734",
        "FileName": "when_create_employer_work_records_with_team.cs",
        "Description": "when create annual employer work record",
        "WhenList": [
          "given create employer work record"
        ],
        "ThenList": [
          "should create employer work record",
          "should get append team to employer work record"
        ],
        "Children": []
      },
      {
        "$id": "1735",
        "FileName": "when_create_employer_work_records_with_team.cs",
        "Description": "when create monthly employer work record",
        "WhenList": [
          "given create employer work record"
        ],
        "ThenList": [
          "should create employer work record",
          "should get employer work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1736",
    "FileName": "when_get_employer_work_record_by_id.cs",
    "Description": "when get employer work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1737",
        "FileName": "when_get_employer_work_record_by_id.cs",
        "Description": "when get annual employer work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get return OK",
          "should get employer work record"
        ],
        "Children": []
      },
      {
        "$id": "1738",
        "FileName": "when_get_employer_work_record_by_id.cs",
        "Description": "when get monthly employer work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get return OK",
          "should get employer work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1739",
    "FileName": "when_get_employer_work_record_by_id_with_included_assignees.cs",
    "Description": "when get employer work record by id with included assignees",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1740",
        "FileName": "when_get_employer_work_record_by_id_with_included_assignees.cs",
        "Description": "when get employer work record by id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get return OK",
          "should get employer work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1741",
    "FileName": "when_get_employer_work_record_by_staff_in_different_offices.cs",
    "Description": "when get employer work record by staff in different offices",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1742",
        "FileName": "when_get_employer_work_record_by_staff_in_different_offices.cs",
        "Description": "when get employer work record in coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be able edit public details"
        ],
        "Children": []
      },
      {
        "$id": "1743",
        "FileName": "when_get_employer_work_record_by_staff_in_different_offices.cs",
        "Description": "when get employer work record neither in coordinating office nor working offices",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not be able edit public details"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1744",
    "FileName": "when_get_employer_work_record_email_history_by_employer_work_record_id.cs",
    "Description": "when get employer work record email history by employer work record id",
    "WhenList": [
      "get employer work email history"
    ],
    "ThenList": [
      "should return ok",
      "should get correct email history"
    ],
    "Children": []
  },
  {
    "$id": "1745",
    "FileName": "when_get_employer_work_record_list.cs",
    "Description": "when get employer work record list",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should get employer work record list"
    ],
    "Children": []
  },
  {
    "$id": "1746",
    "FileName": "when_get_employer_work_record_list_of_restricted_engagement.cs",
    "Description": "when get employer work record list of restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1747",
        "FileName": "when_get_employer_work_record_list_of_restricted_engagement.cs",
        "Description": "when get by staff in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1748",
        "FileName": "when_get_employer_work_record_list_of_restricted_engagement.cs",
        "Description": "when get by staff not in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1749",
    "FileName": "when_get_employer_work_record_of_inactive_engagement.cs",
    "Description": "when get employer work record of inactive engagement",
    "WhenList": [
      "get employer work record"
    ],
    "ThenList": [
      "should return 200",
      "should not return any links"
    ],
    "Children": []
  },
  {
    "$id": "1750",
    "FileName": "when_get_employer_work_record_of_restricted_engagement.cs",
    "Description": "when get employer work record of restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1751",
        "FileName": "when_get_employer_work_record_of_restricted_engagement.cs",
        "Description": "when get by staff in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1752",
        "FileName": "when_get_employer_work_record_of_restricted_engagement.cs",
        "Description": "when get by staff not in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1753",
    "FileName": "when_get_employer_work_record_task_with_permission_flag.cs",
    "Description": "when get employer work record task with permission flag",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1754",
        "FileName": "when_get_employer_work_record_task_with_permission_flag.cs",
        "Description": "when work record task is assigned to work record responsible office",
        "WhenList": [
          "load employer workrecord"
        ],
        "ThenList": [
          "should be able to assign responsible offices and responsibilities of all tasks"
        ],
        "Children": []
      },
      {
        "$id": "1755",
        "FileName": "when_get_employer_work_record_task_with_permission_flag.cs",
        "Description": "when staff is in work record team",
        "WhenList": [
          "load employer workrecord"
        ],
        "ThenList": [
          "should be able to assign responsible offices and responsibilities of all tasks"
        ],
        "Children": []
      },
      {
        "$id": "1756",
        "FileName": "when_get_employer_work_record_task_with_permission_flag.cs",
        "Description": "when work record task is assigned to delegated office",
        "WhenList": [
          "load employer workrecord"
        ],
        "ThenList": [
          "should be able to assign responsible offices and enable to assign responsibilities"
        ],
        "Children": []
      },
      {
        "$id": "1757",
        "FileName": "when_get_employer_work_record_task_with_permission_flag.cs",
        "Description": "when work record task is assigned to staff in delegated office",
        "WhenList": [
          "load employer workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and responsibilities"
        ],
        "Children": []
      },
      {
        "$id": "1758",
        "FileName": "when_get_employer_work_record_task_with_permission_flag.cs",
        "Description": "when work record task is assigned to other office",
        "WhenList": [
          "load employer workrecord"
        ],
        "ThenList": [
          "should not be able to assign responsible offices and enable to assign responsibilities"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1759",
    "FileName": "when_post_to_update_included_assignees_of_empolyer_workrecord_.cs",
    "Description": "when post to update included assignees of empolyer workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1760",
        "FileName": "when_post_to_update_included_assignees_of_empolyer_workrecord_.cs",
        "Description": "when upadte included assignees with none",
        "WhenList": [
          "post to update"
        ],
        "ThenList": [
          "should return ok",
          "should get employer work record"
        ],
        "Children": []
      },
      {
        "$id": "1761",
        "FileName": "when_post_to_update_included_assignees_of_empolyer_workrecord_.cs",
        "Description": "when upadte included assignees with new ids",
        "WhenList": [
          "post to update"
        ],
        "ThenList": [
          "should return ok",
          "should get employer work record"
        ],
        "Children": []
      },
      {
        "$id": "1762",
        "FileName": "when_post_to_update_included_assignees_of_empolyer_workrecord_.cs",
        "Description": "when upadte included assignees with all new ids",
        "WhenList": [
          "post to update"
        ],
        "ThenList": [
          "should return ok",
          "should get employer work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1763",
    "FileName": "when_send_email_to_employer_work_record_client_contacts.cs",
    "Description": "when send email to employer work record client contacts",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1764",
        "FileName": "when_send_email_to_employer_work_record_client_contacts.cs",
        "Description": "when upload attachments",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1765",
            "FileName": "when_send_email_to_employer_work_record_client_contacts.cs",
            "Description": "when notification service is ok",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should send request to notification service"
            ],
            "Children": []
          },
          {
            "$id": "1766",
            "FileName": "when_send_email_to_employer_work_record_client_contacts.cs",
            "Description": "when notification service fails",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1767",
        "FileName": "when_send_email_to_employer_work_record_client_contacts.cs",
        "Description": "when send email",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1768",
            "FileName": "when_send_email_to_employer_work_record_client_contacts.cs",
            "Description": "send email with empty content",
            "WhenList": [
              "send email"
            ],
            "ThenList": [
              "should return 200"
            ],
            "Children": []
          },
          {
            "$id": "1769",
            "FileName": "when_send_email_to_employer_work_record_client_contacts.cs",
            "Description": "send email to client contact",
            "WhenList": [
              "send email to contact"
            ],
            "ThenList": [
              "should return accepted",
              "should send correct email"
            ],
            "Children": []
          },
          {
            "$id": "1770",
            "FileName": "when_send_email_to_employer_work_record_client_contacts.cs",
            "Description": "send email to client contacts with attachments",
            "WhenList": [
              "send email with attachments"
            ],
            "ThenList": [
              "should return accepted",
              "should send correct email"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1771",
    "FileName": "when_update_employer_work_public_info_by_staff_in_different_offices.cs",
    "Description": "when update employer work public info by staff in different offices",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1772",
        "FileName": "when_update_employer_work_public_info_by_staff_in_different_offices.cs",
        "Description": "when staff in work office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1773",
        "FileName": "when_update_employer_work_public_info_by_staff_in_different_offices.cs",
        "Description": "when staff in delegated office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1774",
            "FileName": "when_update_employer_work_public_info_by_staff_in_different_offices.cs",
            "Description": "when staff office assigned to a task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return OK",
              "should success"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1775",
        "FileName": "when_update_employer_work_public_info_by_staff_in_different_offices.cs",
        "Description": "when staff in coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1776",
        "FileName": "when_update_employer_work_public_info_by_staff_in_different_offices.cs",
        "Description": "when staff in work record team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1777",
        "FileName": "when_update_employer_work_public_info_by_staff_in_different_offices.cs",
        "Description": "when staff in unsuscribed office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1778",
    "FileName": "when_update_employer_work_records.cs",
    "Description": "when update employer work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1779",
        "FileName": "when_update_employer_work_records.cs",
        "Description": "when update name",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update employer work record"
        ],
        "Children": []
      },
      {
        "$id": "1780",
        "FileName": "when_update_employer_work_records.cs",
        "Description": "when add client contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update employer work record client contact"
        ],
        "Children": []
      },
      {
        "$id": "1781",
        "FileName": "when_update_employer_work_records.cs",
        "Description": "when add client contact with duplicate email",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return confilict",
          "should not update employer work record client contact with duplicate email"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1782",
    "FileName": "when_update_employer_work_record_responsibility_of_restricted_engagement.cs",
    "Description": "when update employer work record responsibility of restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1783",
        "FileName": "when_update_employer_work_record_responsibility_of_restricted_engagement.cs",
        "Description": "when update employer work record by staff in engagment acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be able update responsibility"
        ],
        "Children": []
      },
      {
        "$id": "1784",
        "FileName": "when_update_employer_work_record_responsibility_of_restricted_engagement.cs",
        "Description": "when update employer work record by staff not in engagment acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not be able to update responsibility"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1785",
    "FileName": "when_update_employer_work_record_responsibility_with_uac.cs",
    "Description": "when update employer work record responsibility with uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1786",
        "FileName": "when_update_employer_work_record_responsibility_with_uac.cs",
        "Description": "when update employer work record in engagement coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be able update responsibility"
        ],
        "Children": []
      },
      {
        "$id": "1787",
        "FileName": "when_update_employer_work_record_responsibility_with_uac.cs",
        "Description": "when update employer work record not in engagement responsible offices",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be not able update responsibility"
        ],
        "Children": []
      },
      {
        "$id": "1788",
        "FileName": "when_update_employer_work_record_responsibility_with_uac.cs",
        "Description": "when update employer work record by country level in same country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be able to update responsibility"
        ],
        "Children": []
      },
      {
        "$id": "1789",
        "FileName": "when_update_employer_work_record_responsibility_with_uac.cs",
        "Description": "when update employer work record by country level in other country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not be able to update responsibility"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1790",
    "FileName": "when_update_employer_work_record_restricted_engagement.cs",
    "Description": "when update employer work record restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1791",
        "FileName": "when_update_employer_work_record_restricted_engagement.cs",
        "Description": "when update by staff in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1792",
        "FileName": "when_update_employer_work_record_restricted_engagement.cs",
        "Description": "when update by staff not in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1793",
    "FileName": "when_update_employer_work_record_task_assignments.cs",
    "Description": "when update employer work record task assignments",
    "WhenList": [
      "request update task assignments"
    ],
    "ThenList": [
      "should return OK",
      "should update employer work record task assignment"
    ],
    "Children": []
  },
  {
    "$id": "1794",
    "FileName": "when_get_assignment_type_categories.cs",
    "Description": "when get assignment type categories",
    "WhenList": [
      "get all"
    ],
    "ThenList": [
      "should return ok",
      "should load all categories",
      "should load categories ordered by sequence"
    ],
    "Children": []
  },
  {
    "$id": "1795",
    "FileName": "when_import_assignment.cs",
    "Description": "when import assignment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1796",
        "FileName": "when_import_assignment.cs",
        "Description": "should update assignment type",
        "WhenList": [
          "import assignment types"
        ],
        "ThenList": [
          "should success",
          "should update assignment type values"
        ],
        "Children": []
      },
      {
        "$id": "1797",
        "FileName": "when_import_assignment.cs",
        "Description": "should raise assignements changed event when only change start date",
        "WhenList": [
          "change start date"
        ],
        "ThenList": [
          "should success",
          "should raise assignee assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "1798",
        "FileName": "when_import_assignment.cs",
        "Description": "should raise assignements changed event when only change expected end date",
        "WhenList": [
          "change start date"
        ],
        "ThenList": [
          "should success",
          "should raise assignee assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "1799",
        "FileName": "when_import_assignment.cs",
        "Description": "should raise assignements changed event when only change actual end date",
        "WhenList": [
          "change start date"
        ],
        "ThenList": [
          "should success",
          "should raise assignee assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "1800",
        "FileName": "when_import_assignment.cs",
        "Description": "should raise two assignment changed events when one change date one change type and another change both",
        "WhenList": [
          "change assignment types and start date"
        ],
        "ThenList": [
          "should success",
          "should raise assignee assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "1801",
        "FileName": "when_import_assignment.cs",
        "Description": "should raise every assignements changed event when change many assignees to same start date",
        "WhenList": [
          "change 2 assignee assignments with same start dates"
        ],
        "ThenList": [
          "should success",
          "should raise assignee assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "1802",
        "FileName": "when_import_assignment.cs",
        "Description": "should not raise assignements changed event when not change",
        "WhenList": [
          "not change any infos"
        ],
        "ThenList": [
          "should success",
          "should not raise assignee assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "1803",
        "FileName": "when_import_assignment.cs",
        "Description": "should not raise assignements changed event when only change type on more than one assignees",
        "WhenList": [
          "only change assignment type"
        ],
        "ThenList": [
          "should success",
          "should not raise assignee assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "1804",
        "FileName": "when_import_assignment.cs",
        "Description": "should raise assignments changed event when change date and assignment type",
        "WhenList": [
          "change start date"
        ],
        "ThenList": [
          "should success",
          "should raise assignee assignment changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1805",
    "FileName": "when_import_assignment_which_belongs_to_other_engagement.cs",
    "Description": "when import assignment which belongs to other engagement",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should return error",
      "should keep origin value"
    ],
    "Children": []
  },
  {
    "$id": "1806",
    "FileName": "when_import_assignment_which_does_not_have_assignment_type.cs",
    "Description": "when import assignment which does not have assignment type",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should success",
      "should update assignment type"
    ],
    "Children": []
  },
  {
    "$id": "1807",
    "FileName": "when_import_assignment_which_start_date_later_than_actual_end_date.cs",
    "Description": "when import assignment which start date later than actual end date",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should return error",
      "should keep origin value"
    ],
    "Children": []
  },
  {
    "$id": "1808",
    "FileName": "when_import_assignment_which_start_date_later_than_expected_end_date.cs",
    "Description": "when import assignment which start date later than expected end date",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should return error",
      "should keep origin value"
    ],
    "Children": []
  },
  {
    "$id": "1809",
    "FileName": "when_import_assignment_with_assignee_does_not_match_current_engagement.cs",
    "Description": "when import assignment with assignee does not match current engagement",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should return error",
      "should keep origin value"
    ],
    "Children": []
  },
  {
    "$id": "1810",
    "FileName": "when_import_assignment_with_assignment_type_value_does_not_match_current_engagement.cs",
    "Description": "when import assignment with assignment type value does not match current engagement",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should return error",
      "should keep origin value"
    ],
    "Children": []
  },
  {
    "$id": "1811",
    "FileName": "when_import_assignment_with_blank_value.cs",
    "Description": "when import assignment with blank value",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should success",
      "should clear assignment type value"
    ],
    "Children": []
  },
  {
    "$id": "1812",
    "FileName": "when_import_assignment_with_does_not_exist_assignee.cs",
    "Description": "when import assignment with does not exist assignee",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should return error"
    ],
    "Children": []
  },
  {
    "$id": "1813",
    "FileName": "when_import_assignment_with_inactive_assignee.cs",
    "Description": "when import assignment with inactive assignee",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should return error",
      "should keep origin value"
    ],
    "Children": []
  },
  {
    "$id": "1814",
    "FileName": "when_import_assignment_with_invalid_start_date.cs",
    "Description": "when import assignment with invalid start date",
    "WhenList": [
      "import assignment types"
    ],
    "ThenList": [
      "should return error",
      "should keep origin value"
    ],
    "Children": []
  },
  {
    "$id": "1815",
    "FileName": "when_import_assignment_with_multi_errors_in_one_row.cs",
    "Description": "when import assignment with multi errors in one row",
    "WhenList": [
      "import a wrong assignment"
    ],
    "ThenList": [
      "should return two errors"
    ],
    "Children": []
  },
  {
    "$id": "1816",
    "FileName": "when_update_assignment_types.cs",
    "Description": "when update assignment types",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1817",
        "FileName": "when_update_assignment_types.cs",
        "Description": "update success",
        "WhenList": [
          "update assignment types"
        ],
        "ThenList": [
          "should success",
          "should update assignment types"
        ],
        "Children": []
      },
      {
        "$id": "1818",
        "FileName": "when_update_assignment_types.cs",
        "Description": "category in request is empty",
        "WhenList": [
          "update assignment types"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "1819",
        "FileName": "when_update_assignment_types.cs",
        "Description": "name in request is empty",
        "WhenList": [
          "update assignment types"
        ],
        "ThenList": [
          "should faild"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1820",
    "FileName": "when_update_assignment_types_with_removed_assignment_type_applied_to_assignee_assignment.cs",
    "Description": "when update assignment types with removed assignment type applied to assignee assignment",
    "WhenList": [
      "update assignment types"
    ],
    "ThenList": [
      "should success",
      "should update assignment"
    ],
    "Children": []
  },
  {
    "$id": "1821",
    "FileName": "when_update_assignment_types_with_same_assignment_types_name.cs",
    "Description": "when update assignment types with same assignment types name",
    "WhenList": [
      "update assignment types"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "1822",
    "FileName": "when_update_assignment_types_with_same_assignment_types_name.cs",
    "Description": "when update assignment types with case sensitive assignment types name",
    "WhenList": [
      "update assignment types"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "1823",
    "FileName": "when_update_engagement_assignment_types_with_not_tax_engagement.cs",
    "Description": "when update assignment types with immi engagement",
    "WhenList": [
      "update assignment types"
    ],
    "ThenList": [
      "should return conflict"
    ],
    "Children": []
  },
  {
    "$id": "1824",
    "FileName": "when_update_engagement_assignment_types_with_not_tax_engagement.cs",
    "Description": "when update assignment types with ss engagement",
    "WhenList": [
      "update assignment types"
    ],
    "ThenList": [
      "should return conflict"
    ],
    "Children": []
  },
  {
    "$id": "1825",
    "FileName": "when_get_engagement_resource_and_auth_admins_link.cs",
    "Description": "when get engagement resource and auth admins link",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1826",
        "FileName": "when_get_engagement_resource_and_auth_admins_link.cs",
        "Description": "when get engagement with link",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have update auth admin link"
        ],
        "Children": []
      },
      {
        "$id": "1827",
        "FileName": "when_get_engagement_resource_and_auth_admins_link.cs",
        "Description": "when get engagement without link",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not have update auth admin link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1828",
    "FileName": "when_update_authorization_admins.cs",
    "Description": "when update authorization admins",
    "WhenList": [
      "update authorization administrators"
    ],
    "ThenList": [
      "should return OK",
      "should update auth admin to engagement"
    ],
    "Children": []
  },
  {
    "$id": "1829",
    "FileName": "when_update_authorization_admins_for_restricted_engagement.cs",
    "Description": "when update authorization admins for restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1830",
        "FileName": "when_update_authorization_admins_for_restricted_engagement.cs",
        "Description": "when staff not in acl list",
        "WhenList": [
          "update authorization administrators with invalid staff which not in acl list of restricted engagement"
        ],
        "ThenList": [
          "should return bad request",
          "should not update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1831",
        "FileName": "when_update_authorization_admins_for_restricted_engagement.cs",
        "Description": "when staff in acl list by acl member",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return OK",
          "should not update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1832",
        "FileName": "when_update_authorization_admins_for_restricted_engagement.cs",
        "Description": "when staff in acl list by subscribe contact",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return OK",
          "should not update auth admin to engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1833",
    "FileName": "when_update_authorization_admins_with_invalid_staff_which_already_in_default_admins.cs",
    "Description": "when update authorization admins with invalid staff which already in default admins",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1834",
        "FileName": "when_update_authorization_admins_with_invalid_staff_which_already_in_default_admins.cs",
        "Description": "when update authorization admins with invalid staff which already in engagement admins",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return bad request",
          "should not update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1835",
        "FileName": "when_update_authorization_admins_with_invalid_staff_which_already_in_default_admins.cs",
        "Description": "when update authorization admins with invalid staff which is coordinating primary contact",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return bad request",
          "should not update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1836",
        "FileName": "when_update_authorization_admins_with_invalid_staff_which_already_in_default_admins.cs",
        "Description": "when update authorization admins with invalid staff which is coordinating secondary contact",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return bad request",
          "should not update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1837",
        "FileName": "when_update_authorization_admins_with_invalid_staff_which_already_in_default_admins.cs",
        "Description": "when update authorization admins with invalid staff which is delegated coordinating primary contact",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return bad request",
          "should not update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1838",
        "FileName": "when_update_authorization_admins_with_invalid_staff_which_already_in_default_admins.cs",
        "Description": "when update authorization admins with invalid staff which is delegated coordinating secondary contact",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return bad request",
          "should not update auth admin to engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1839",
    "FileName": "when_update_authorization_admins_with_invalid_staff_witch_does_not_exist.cs",
    "Description": "when update authorization admins with invalid staff which does not exist",
    "WhenList": [
      "update authorization administrators with invalid staff which does not exist"
    ],
    "ThenList": [
      "should return bad request",
      "should not update auth admin to engagement"
    ],
    "Children": []
  },
  {
    "$id": "1840",
    "FileName": "when_update_authorization_admins_with_invalid_staff_without_tax_practice_type.cs",
    "Description": "when update authorization admins with invalid staff without tax practice type",
    "WhenList": [
      "update authorization administrators with invalid staff"
    ],
    "ThenList": [
      "should return bad request",
      "should not update auth admin to engagement"
    ],
    "Children": []
  },
  {
    "$id": "1841",
    "FileName": "when_update_authorization_admins_with_uac.cs",
    "Description": "when update authorization admins with uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1842",
        "FileName": "when_update_authorization_admins_with_uac.cs",
        "Description": "when current user not auth admin",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return forbidden",
          "should update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1843",
        "FileName": "when_update_authorization_admins_with_uac.cs",
        "Description": "when current user is engagement admin",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return OK",
          "should update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1844",
        "FileName": "when_update_authorization_admins_with_uac.cs",
        "Description": "when current user is engagement auth admin",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return OK",
          "should update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1845",
        "FileName": "when_update_authorization_admins_with_uac.cs",
        "Description": "when current user is engagement coordinating primary contact",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return OK",
          "should update auth admin to engagement"
        ],
        "Children": []
      },
      {
        "$id": "1846",
        "FileName": "when_update_authorization_admins_with_uac.cs",
        "Description": "when current user is engagement coordinating primary contact and subscribe contact",
        "WhenList": [
          "update authorization administrators"
        ],
        "ThenList": [
          "should return OK",
          "should update auth admin to engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1847",
    "FileName": "when_update_authorization_rules.cs",
    "Description": "when update authorization rules",
    "WhenList": [
      "update authorization rules"
    ],
    "ThenList": [
      "should return OK",
      "should update auth rules to engagement"
    ],
    "Children": []
  },
  {
    "$id": "1848",
    "FileName": "when_update_authorization_rules.cs",
    "Description": "when globle admin update authorization rules as if he is not authorization list admin",
    "WhenList": [
      "try to update authorization rules"
    ],
    "ThenList": [
      "should return OK"
    ],
    "Children": []
  },
  {
    "$id": "1849",
    "FileName": "when_update_authorization_rules.cs",
    "Description": "when update authorization rules with invalid home country authorized years",
    "WhenList": [
      "update authorization rules"
    ],
    "ThenList": [
      "should return bad request",
      "should not update auth rules to engagement"
    ],
    "Children": []
  },
  {
    "$id": "1850",
    "FileName": "when_update_authorization_rules.cs",
    "Description": "when update authorization rules with invalid host country authorized years",
    "WhenList": [
      "update authorization rules"
    ],
    "ThenList": [
      "should return bad request",
      "should not update auth rules to engagement"
    ],
    "Children": []
  },
  {
    "$id": "1851",
    "FileName": "when_update_authorization_rules.cs",
    "Description": "when update non existing authorization rules",
    "WhenList": [
      "update authorization rules"
    ],
    "ThenList": [
      "should return bad request",
      "should not update existing auth rules to engagement"
    ],
    "Children": []
  },
  {
    "$id": "1852",
    "FileName": "when_update_authorization_rules.cs",
    "Description": "when update authorization rule without update access",
    "WhenList": [
      "update authorization rules"
    ],
    "ThenList": [
      "should return bad request",
      "should not update existing auth rules to engagement"
    ],
    "Children": []
  },
  {
    "$id": "1853",
    "FileName": "when_update_authorization_rules.cs",
    "Description": "when update authorization rule login with coordinating primary contact",
    "WhenList": [
      "update authorization rules"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "1854",
    "FileName": "when_update_authorization_rules.cs",
    "Description": "when update authorization rule login with coordinating primary contact and subscribe contact",
    "WhenList": [
      "update authorization rules"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "1855",
    "FileName": "when_get_engagement_auth_rules_link.cs",
    "Description": "when get engagement resource and auth rules link",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1856",
        "FileName": "when_get_engagement_auth_rules_link.cs",
        "Description": "when engagement is administered by principal",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have update auth rules link"
        ],
        "Children": []
      },
      {
        "$id": "1857",
        "FileName": "when_get_engagement_auth_rules_link.cs",
        "Description": "when engagement is not administered by principal",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not have update auth rules link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1858",
    "FileName": "when_get_engagement_auth_list_link.cs",
    "Description": "when get engagement resource and auth list link",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1859",
        "FileName": "when_get_engagement_auth_list_link.cs",
        "Description": "when engagement is administered by principal",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should have generate auth list link",
          "should have view auth list link"
        ],
        "Children": []
      },
      {
        "$id": "1860",
        "FileName": "when_get_engagement_auth_list_link.cs",
        "Description": "when engagement is not related to principal",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not have generate auth rules link",
          "should have view auth list link"
        ],
        "Children": []
      },
      {
        "$id": "1861",
        "FileName": "when_get_engagement_auth_list_link.cs",
        "Description": "when restricted engagement is administered by principal",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should have generate auth list link",
          "should have view auth list link"
        ],
        "Children": []
      },
      {
        "$id": "1862",
        "FileName": "when_get_engagement_auth_list_link.cs",
        "Description": "when restricted engagement is not administered by principal",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not have generate auth list link",
          "should not have view auth list link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1863",
    "FileName": "when_batch_get_archive_engagements_with_pagination_links.cs",
    "Description": "when batch get archive engagements with pagination links",
    "WhenList": [
      "get the first page event"
    ],
    "ThenList": [
      "should return correct engagement",
      "should return correct next link",
      "should return no next link when no more events left",
      "should return no next link when left events less than limit",
      "should return no next link when current request with no events"
    ],
    "Children": []
  },
  {
    "$id": "1864",
    "FileName": "when_batch_get_engagements.cs",
    "Description": "when batch get engagements",
    "WhenList": [],
    "ThenList": [
      "should batch get engagements",
      "should return bad request if exceeds limitation"
    ],
    "Children": []
  },
  {
    "$id": "1865",
    "FileName": "when_batch_get_engagements_with_acl_info.cs",
    "Description": "when batch get engagements with acl info",
    "WhenList": [
      "it"
    ],
    "ThenList": [
      "should return ok",
      "should batch get engagements"
    ],
    "Children": []
  },
  {
    "$id": "1866",
    "FileName": "when_get_billing_country_fees_by_different_role.cs",
    "Description": "when get billing country fees by different role",
    "WhenList": [],
    "ThenList": [
      "should not contain billing country fee links"
    ],
    "Children": [
      {
        "$id": "1867",
        "FileName": "when_get_billing_country_fees_by_different_role.cs",
        "Description": "when engagement elevated role get",
        "WhenList": [
          "of get billing country fees"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1868",
        "FileName": "when_get_billing_country_fees_by_different_role.cs",
        "Description": "when engagement normal role get",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1869",
        "FileName": "when_get_billing_country_fees_by_different_role.cs",
        "Description": "when get engagement by somebody not belong to it",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "1870",
    "FileName": "when_get_engagement_type_of_services_with_billing_country_fee_with_different_role.cs",
    "Description": "when get engagement type of services with billing country fee of US with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1871",
        "FileName": "when_get_engagement_type_of_services_with_billing_country_fee_with_different_role.cs",
        "Description": "when engagement elevated role get",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [
          "should contain billing country fee links"
        ],
        "Children": []
      },
      {
        "$id": "1872",
        "FileName": "when_get_engagement_type_of_services_with_billing_country_fee_with_different_role.cs",
        "Description": "when engagement normal role get",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [
          "should not contain billing country fee links"
        ],
        "Children": []
      },
      {
        "$id": "1873",
        "FileName": "when_get_engagement_type_of_services_with_billing_country_fee_with_different_role.cs",
        "Description": "when some body not belong to this engagement get",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [
          "should not contain billing country fee links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1874",
    "FileName": "when_update_billing_country_fees_by_different_role.cs",
    "Description": "when update billing country fees by different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1875",
        "FileName": "when_update_billing_country_fees_by_different_role.cs",
        "Description": "when engagement elevated role update",
        "WhenList": [
          "of update billing country fees"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      },
      {
        "$id": "1876",
        "FileName": "when_update_billing_country_fees_by_different_role.cs",
        "Description": "when engagement normal role update",
        "WhenList": [
          "of update billing country fees"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1877",
        "FileName": "when_update_billing_country_fees_by_different_role.cs",
        "Description": "when update engagement by somebody not belong to it",
        "WhenList": [
          "of update billing country fees"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1878",
    "FileName": "when_get_billing_feature_via_enagement_id.cs",
    "Description": "when get billing feature via enagement id",
    "WhenList": [
      "send request to get billing feature"
    ],
    "ThenList": [
      "should return expected billing feature"
    ],
    "Children": []
  },
  {
    "$id": "1879",
    "FileName": "when_get_engagement_should_contain_billing_feature_link.cs",
    "Description": "when get engagement should contain billing feature link",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return only read only links"
    ],
    "Children": []
  },
  {
    "$id": "1880",
    "FileName": "when_engagement_admin_get_engagement_billing_overview_link.cs",
    "Description": "when engagement admin get engagement billing overview link",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return only read only links"
    ],
    "Children": []
  },
  {
    "$id": "1881",
    "FileName": "when_get_billing_overview.cs",
    "Description": "when get billing overview",
    "WhenList": [
      "send request to get billing overview"
    ],
    "ThenList": [
      "should return expected billing overview"
    ],
    "Children": []
  },
  {
    "$id": "1882",
    "FileName": "when_who_is_not_engagement_admin_can_not_get_engagement_billing_overview_link.cs",
    "Description": "when who is not engagement admin can not get engagement billing overview link",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return only read only links"
    ],
    "Children": []
  },
  {
    "$id": "1883",
    "FileName": "when_create_engagement_should_call_billing_service.cs",
    "Description": "when create engagement should call billing service",
    "WhenList": [
      "create engagement"
    ],
    "ThenList": [
      "should call billing service on engagement created"
    ],
    "Children": []
  },
  {
    "$id": "1884",
    "FileName": "when_get_billing_model_of_engagement.cs",
    "Description": "when get engagement billing model",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1885",
        "FileName": "when_get_billing_model_of_engagement.cs",
        "Description": "get engagement billing model",
        "WhenList": [
          "get billing model"
        ],
        "ThenList": [
          "should return ok",
          "should get billing model"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1886",
    "FileName": "when_update_enagement_billing_model_but_billing_service_fails.cs",
    "Description": "when update enagement billing model but billing service fails",
    "WhenList": [],
    "ThenList": [
      "should returns bad request when billing model is not valid"
    ],
    "Children": []
  },
  {
    "$id": "1887",
    "FileName": "when_update_engagement_billing_model_with_different_practice_types.cs",
    "Description": "when update engagement billing model with different practice types",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1888",
        "FileName": "when_update_engagement_billing_model_with_different_practice_types.cs",
        "Description": "when practice type is tax",
        "WhenList": [
          "update billing model"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1889",
        "FileName": "when_update_engagement_billing_model_with_different_practice_types.cs",
        "Description": "when practice type is immigration",
        "WhenList": [
          "update billing model"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1890",
        "FileName": "when_update_engagement_billing_model_with_different_practice_types.cs",
        "Description": "when practice type is social security",
        "WhenList": [
          "update billing model"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "1891",
        "FileName": "when_update_engagement_billing_model_with_different_practice_types.cs",
        "Description": "when practice type is technology",
        "WhenList": [
          "update billing model"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1892",
    "FileName": "when_update_engagement_billing_model_with_previous_billing_model.cs",
    "Description": "when update engagement billing model with previous billing model",
    "WhenList": [
      "send request"
    ],
    "ThenList": [
      "should success",
      "should not create centralized engagement setting and not create empty centralized or decentralized engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "1893",
    "FileName": "when_create_engagement_with_bad_request.cs",
    "Description": "when create engagement with bad request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1894",
        "FileName": "when_create_engagement_with_bad_request.cs",
        "Description": "should return bad request when client name plus engagement name existed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should failed when engagement name existed"
        ],
        "Children": []
      },
      {
        "$id": "1895",
        "FileName": "when_create_engagement_with_bad_request.cs",
        "Description": "should return created when client name plus engagement name not existed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1896",
    "FileName": "when_create_engagement_with_different_role.cs",
    "Description": "when create engagement with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1897",
        "FileName": "when_create_engagement_with_different_role.cs",
        "Description": "when staff has same practice type as engagement",
        "WhenList": [
          "when create"
        ],
        "ThenList": [
          "should return created",
          "should get engagement admin",
          "should get work offices which are engagement admin offics"
        ],
        "Children": []
      },
      {
        "$id": "1898",
        "FileName": "when_create_engagement_with_different_role.cs",
        "Description": "when staff does not have engagement practice type",
        "WhenList": [
          "when create"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1899",
    "FileName": "when_create_engagement_with_secondary_contact.cs",
    "Description": "when create engagement with secondary contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1900",
        "FileName": "when_create_engagement_with_secondary_contact.cs",
        "Description": "should create enagement with mandatory fields and secondary contact",
        "WhenList": [
          "when create valid request without engagement admin"
        ],
        "ThenList": [
          "should return 201 created",
          "should create engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1901",
    "FileName": "when_create_engagement_with_valid_parameters.cs",
    "Description": "when create engagement with valid parameters",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1902",
        "FileName": "when_create_engagement_with_valid_parameters.cs",
        "Description": "should create enagement with mandatory fields",
        "WhenList": [
          "when create valid request without engagement admin"
        ],
        "ThenList": [
          "should return 201 created",
          "should create engagement"
        ],
        "Children": []
      },
      {
        "$id": "1903",
        "FileName": "when_create_engagement_with_valid_parameters.cs",
        "Description": "should create engagement with field is reminder needed as true",
        "WhenList": [
          "when create valid request"
        ],
        "ThenList": [
          "should return 201 created",
          "should has is reminder needed true"
        ],
        "Children": []
      },
      {
        "$id": "1904",
        "FileName": "when_create_engagement_with_valid_parameters.cs",
        "Description": "should create engagement with team fields",
        "WhenList": [
          "when create engagement"
        ],
        "ThenList": [
          "should create engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1905",
    "FileName": "when_add_staff_to_ACL_of_engagement.cs",
    "Description": "when add staff to ACL of engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1906",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should be able to add acl when current user is global admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return status is ok",
          "should normal staffs list of oracle engagement contain jim and leo"
        ],
        "Children": []
      },
      {
        "$id": "1907",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should be able to add acl when current user is office engagement admin and general role",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return status is ok"
        ],
        "Children": []
      },
      {
        "$id": "1908",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should add staffs successfully when post request to api with engagement primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return status is ok",
          "should normal staffs list of oracle engagement contain jim leo"
        ],
        "Children": []
      },
      {
        "$id": "1909",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should add staffs successfully when post request to api with engagement work office contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return status is ok",
          "should normal staffs list of oracle engagement contain leo"
        ],
        "Children": []
      },
      {
        "$id": "1910",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should add staffs successfully when post request to api with engagement work office office engagement admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return status is ok",
          "should normal staffs list of engagement contain to be added staff"
        ],
        "Children": []
      },
      {
        "$id": "1911",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should verify staff if he has already in acl when post request to api with engagement work office contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return status is ok",
          "should normal staffs list of oracle engagement contain leo once"
        ],
        "Children": []
      },
      {
        "$id": "1912",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should forbidden when post request to api with open engagement id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1913",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should forbidden when post request to api with restricted engagement id and current user not in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden",
          "should not update acl normal staff"
        ],
        "Children": []
      },
      {
        "$id": "1914",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should forbidden when post request with restricted engagement id and current user in acl normal staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden",
          "should not update acl normal staff"
        ],
        "Children": []
      },
      {
        "$id": "1915",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should return forbidden when current user is office role but not in engagement acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbdden",
          "should not update acl normal staff"
        ],
        "Children": []
      },
      {
        "$id": "1916",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should return forbidden when current user is country role but not in engagement acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbdden",
          "should not update acl normal staff"
        ],
        "Children": []
      },
      {
        "$id": "1917",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should forbid when office level staff who are not in acl delete other acl normal staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1918",
        "FileName": "when_add_staff_to_ACL_of_engagement.cs",
        "Description": "should engagement admin can delete restricted engagement acl normal staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return status is ok",
          "should delete staff"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1919",
    "FileName": "when_add_staff_to_acl_with_different_offices.cs",
    "Description": "when add staff to acl with different offices",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1920",
        "FileName": "when_add_staff_to_acl_with_different_offices.cs",
        "Description": "should add staff in delegate coordinating office to acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1921",
        "FileName": "when_add_staff_to_acl_with_different_offices.cs",
        "Description": "should not add staff who is not in current user working office to ACL normal staffs",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return error"
        ],
        "Children": []
      },
      {
        "$id": "1922",
        "FileName": "when_add_staff_to_acl_with_different_offices.cs",
        "Description": "should not add staff who is not in coordinating office to ACL normal staffs when current user is engagement primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return error"
        ],
        "Children": []
      },
      {
        "$id": "1923",
        "FileName": "when_add_staff_to_acl_with_different_offices.cs",
        "Description": "should delete staff to restricted assignee acl",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return ok",
          "should delete staff in acl list"
        ],
        "Children": []
      },
      {
        "$id": "1924",
        "FileName": "when_add_staff_to_acl_with_different_offices.cs",
        "Description": "should reset deleted staff related incomplete task",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return ok",
          "should reset task"
        ],
        "Children": []
      },
      {
        "$id": "1925",
        "FileName": "when_add_staff_to_acl_with_different_offices.cs",
        "Description": "should add staff to acl when login with coordinating primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1926",
        "FileName": "when_add_staff_to_acl_with_different_offices.cs",
        "Description": "should add staff to acl when login with coordinating secondary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1927",
        "FileName": "when_add_staff_to_acl_with_different_offices.cs",
        "Description": "should add staff to acl when login with delegated primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "1928",
        "FileName": "when_add_staff_to_acl_with_different_offices.cs",
        "Description": "should add staff to acl when login with delegated secondary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1929",
    "FileName": "when_get_engagement_contact_info.cs",
    "Description": "when get engagement contact info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1930",
        "FileName": "when_get_engagement_contact_info.cs",
        "Description": "when get questionnaire contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return questionnaire contact info"
        ],
        "Children": []
      },
      {
        "$id": "1931",
        "FileName": "when_get_engagement_contact_info.cs",
        "Description": "when get pwc contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return pwc contact info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1932",
    "FileName": "when_remove_acl_of_engagement.cs",
    "Description": "when remove acl of engagement",
    "WhenList": [
      "remove staff from acl normal list"
    ],
    "ThenList": [
      "should return ok",
      "should remove staff successfully"
    ],
    "Children": []
  },
  {
    "$id": "1933",
    "FileName": "when_remove_admin_who_is_auth_admin_from_restricted_engagement_acl.cs",
    "Description": "when remove admin who is auth admin from restricted engagement acl",
    "WhenList": [
      "remove staff from acl normal list"
    ],
    "ThenList": [
      "should return ok",
      "should remove manual auth admin"
    ],
    "Children": []
  },
  {
    "$id": "1934",
    "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
    "Description": "when get engagement resource by id with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1935",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when engagement role",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed and load all related data",
          "should return briefing scheduling method",
          "should get engagement admin",
          "should get links"
        ],
        "Children": []
      },
      {
        "$id": "1936",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is general staff in subscribed office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not get links"
        ],
        "Children": []
      },
      {
        "$id": "1937",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when not from any subscribed office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not get links"
        ],
        "Children": []
      },
      {
        "$id": "1938",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when normal staff getting restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not get links"
        ],
        "Children": []
      },
      {
        "$id": "1939",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when is acl normal staff from coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not get links",
          "should get internal kpi links"
        ],
        "Children": []
      },
      {
        "$id": "1940",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when is authorization admin staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get update authorization list link"
        ],
        "Children": []
      },
      {
        "$id": "1941",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is delegated coordinating office primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should edit all"
        ],
        "Children": []
      },
      {
        "$id": "1942",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is delegated coordinating office secondary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should edit all"
        ],
        "Children": []
      },
      {
        "$id": "1943",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is work office secondary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get update acl link"
        ],
        "Children": []
      },
      {
        "$id": "1944",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is work office office engagement admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get update acl link"
        ],
        "Children": []
      },
      {
        "$id": "1945",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get links"
        ],
        "Children": []
      },
      {
        "$id": "1946",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is office level",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get links"
        ],
        "Children": []
      },
      {
        "$id": "1947",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is general staff in coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get links"
        ],
        "Children": []
      },
      {
        "$id": "1948",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is general staff in delegated office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get links"
        ],
        "Children": []
      },
      {
        "$id": "1949",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when staff is country level",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get links"
        ],
        "Children": []
      },
      {
        "$id": "1950",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "when engagement role with restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get links"
        ],
        "Children": []
      },
      {
        "$id": "1951",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "should not get update admin link when current user is country level and on acl for restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should get links"
        ],
        "Children": []
      },
      {
        "$id": "1952",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "should not get update admin link when current user is office level and on acl for restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should get links"
        ],
        "Children": []
      },
      {
        "$id": "1953",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "should edit all of engagement when staff is coordinating primary contact except auth list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should edit all"
        ],
        "Children": []
      },
      {
        "$id": "1954",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "should edit all of engagement when staff is coordinating secondary contact except auth list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should edit all"
        ],
        "Children": []
      },
      {
        "$id": "1955",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "should edit all of engagement when staff is delegated primary contact except auth list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should edit all"
        ],
        "Children": []
      },
      {
        "$id": "1956",
        "FileName": "when_get_engagement_resource_by_id_with_different_role.cs",
        "Description": "should edit all of engagement when staff is delegated secondary contact except auth list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should edit all"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1957",
    "FileName": "when_unsubscribe_office_from_engagement.cs",
    "Description": "when unsubscribe office from engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1958",
        "FileName": "when_unsubscribe_office_from_engagement.cs",
        "Description": "when staff is not engagement role or global admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1959",
            "FileName": "when_unsubscribe_office_from_engagement.cs",
            "Description": "when update with his own office details",
            "WhenList": [
              "update staff office details"
            ],
            "ThenList": [
              "should succeed and update the staff office details"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "1960",
    "FileName": "when_update_engagement_administrators.cs",
    "Description": "when update engagement administrators",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1961",
        "FileName": "when_update_engagement_administrators.cs",
        "Description": "when gloabal admin updating",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement admin"
        ],
        "Children": []
      },
      {
        "$id": "1962",
        "FileName": "when_update_engagement_administrators.cs",
        "Description": "when office level role updating",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1963",
            "FileName": "when_update_engagement_administrators.cs",
            "Description": "when current user is in engagement coordinating office and practice type matches",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return no content",
              "should update engagement admin"
            ],
            "Children": []
          },
          {
            "$id": "1964",
            "FileName": "when_update_engagement_administrators.cs",
            "Description": "when current user is not in engagement coordinating office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden",
              "should not update engagement admin"
            ],
            "Children": []
          },
          {
            "$id": "1965",
            "FileName": "when_update_engagement_administrators.cs",
            "Description": "when current user with mismatched practice type",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden",
              "should not update engagement admin"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1966",
        "FileName": "when_update_engagement_administrators.cs",
        "Description": "when country level role updating",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1967",
            "FileName": "when_update_engagement_administrators.cs",
            "Description": "when current user belongs to engagement coordinating office country and practice type matches",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return no content",
              "should update engagement admin"
            ],
            "Children": []
          },
          {
            "$id": "1968",
            "FileName": "when_update_engagement_administrators.cs",
            "Description": "when current user not belongs to engagement coordinating office country",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden",
              "should not update engagement admin"
            ],
            "Children": []
          },
          {
            "$id": "1969",
            "FileName": "when_update_engagement_administrators.cs",
            "Description": "when current user with mismatched practice type",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden",
              "should not update engagement admin"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1970",
        "FileName": "when_update_engagement_administrators.cs",
        "Description": "when engagement admin updating",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement admin"
        ],
        "Children": []
      },
      {
        "$id": "1971",
        "FileName": "when_update_engagement_administrators.cs",
        "Description": "when general user updating",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden",
          "should not update engagement admin"
        ],
        "Children": []
      },
      {
        "$id": "1972",
        "FileName": "when_update_engagement_administrators.cs",
        "Description": "when engagement role not in engagement responsible offices",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no content",
          "should add engagement role office as work office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1973",
    "FileName": "when_update_engagement_coordinating_office_with_different_user.cs",
    "Description": "when update engagement coordinating office with different user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1974",
        "FileName": "when_update_engagement_coordinating_office_with_different_user.cs",
        "Description": "when staff is from coordinating office",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "1975",
        "FileName": "when_update_engagement_coordinating_office_with_different_user.cs",
        "Description": "when staff is engagement role",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "1976",
        "FileName": "when_update_engagement_coordinating_office_with_different_user.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "1977",
        "FileName": "when_update_engagement_coordinating_office_with_different_user.cs",
        "Description": "when staff is not from coordinating office and not engagement role",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1978",
        "FileName": "when_update_engagement_coordinating_office_with_different_user.cs",
        "Description": "when staff is coordinating primary contact",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "1979",
        "FileName": "when_update_engagement_coordinating_office_with_different_user.cs",
        "Description": "when staff is coordinating secondary contact",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "1980",
        "FileName": "when_update_engagement_coordinating_office_with_different_user.cs",
        "Description": "when staff is delegated primary contact",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "1981",
        "FileName": "when_update_engagement_coordinating_office_with_different_user.cs",
        "Description": "when staff is delegated secondary contact",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1982",
    "FileName": "when_update_engagement_details_with_different_role.cs",
    "Description": "when update engagement details with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1983",
        "FileName": "when_update_engagement_details_with_different_role.cs",
        "Description": "when staff is not engagement role or global admin",
        "WhenList": [
          "update engagement detail"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "1984",
        "FileName": "when_update_engagement_details_with_different_role.cs",
        "Description": "when staff is engagement role",
        "WhenList": [
          "update engagement detail"
        ],
        "ThenList": [
          "should succeed without returning content"
        ],
        "Children": []
      },
      {
        "$id": "1985",
        "FileName": "when_update_engagement_details_with_different_role.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "when update engagement detail"
        ],
        "ThenList": [
          "should succeed without returning content",
          "should update engagement detail"
        ],
        "Children": []
      },
      {
        "$id": "1986",
        "FileName": "when_update_engagement_details_with_different_role.cs",
        "Description": "when staff is coordinating primary contact",
        "WhenList": [
          "update engagement detail"
        ],
        "ThenList": [
          "should succeed without returning content"
        ],
        "Children": []
      },
      {
        "$id": "1987",
        "FileName": "when_update_engagement_details_with_different_role.cs",
        "Description": "when staff is coordinating secondary contact",
        "WhenList": [
          "update engagement detail"
        ],
        "ThenList": [
          "should succeed without returning content"
        ],
        "Children": []
      },
      {
        "$id": "1988",
        "FileName": "when_update_engagement_details_with_different_role.cs",
        "Description": "when staff is delegated primary contact",
        "WhenList": [
          "update engagement detail"
        ],
        "ThenList": [
          "should succeed without returning content"
        ],
        "Children": []
      },
      {
        "$id": "1989",
        "FileName": "when_update_engagement_details_with_different_role.cs",
        "Description": "when staff is delegated secondary contact",
        "WhenList": [
          "update engagement detail"
        ],
        "ThenList": [
          "should succeed without returning content"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "1990",
    "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
    "Description": "when update engagement subscribed offices with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "1991",
        "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
        "Description": "when staff is not engagement role or global admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1992",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when update with his own office details",
            "WhenList": [
              "update staff office details"
            ],
            "ThenList": [
              "should succeed and update the staff office details"
            ],
            "Children": []
          },
          {
            "$id": "1993",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when update other office details",
            "WhenList": [
              "update other office details"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "1994",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when remove his own office",
            "WhenList": [
              "update staff office"
            ],
            "ThenList": [
              "should succeed and remove his office"
            ],
            "Children": []
          },
          {
            "$id": "1995",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when update his own office details with a restricted engagement",
            "WhenList": [
              "update engagement office details"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "1996",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when his office is registered as engagement role for other staff and try to delete it",
            "WhenList": [
              "update work offices to unsuscribe shanghai"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "1997",
        "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
        "Description": "when staff is engagement role",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "1998",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when adding new subscribed offices",
            "WhenList": [
              "update engagement subscribed offices"
            ],
            "ThenList": [
              "should succeed without returning content"
            ],
            "Children": []
          },
          {
            "$id": "1999",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when deleting subscribed office an engagement administrator belongs to",
            "WhenList": [
              "update engagement subscribed offices"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "2000",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when update office details with a restricted engagement",
            "WhenList": [
              "update engagement office details"
            ],
            "ThenList": [
              "should succeed and update office details"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2001",
        "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
        "Description": "when staff is global admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2002",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when adding new subscribed offices",
            "WhenList": [
              "update engagement subscribed offices"
            ],
            "ThenList": [
              "should succeed without returning content"
            ],
            "Children": []
          },
          {
            "$id": "2003",
            "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
            "Description": "when deleting subscribed office an engagement administrator belongs to",
            "WhenList": [
              "update engagement subscribed offices"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2004",
        "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
        "Description": "when staff is coordinating primary contact",
        "WhenList": [
          "update engagement office details"
        ],
        "ThenList": [
          "should succeed without returning content"
        ],
        "Children": []
      },
      {
        "$id": "2005",
        "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
        "Description": "when staff is coordinating secondary contact",
        "WhenList": [
          "update engagement office details"
        ],
        "ThenList": [
          "should succeed without returning content"
        ],
        "Children": []
      },
      {
        "$id": "2006",
        "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
        "Description": "when staff is delegated primary contact",
        "WhenList": [
          "update engagement office details"
        ],
        "ThenList": [
          "should succeed without returning content"
        ],
        "Children": []
      },
      {
        "$id": "2007",
        "FileName": "when_update_engagement_subscribed_offices_with_different_role.cs",
        "Description": "when staff is delegated secondary contact",
        "WhenList": [
          "update engagement office details"
        ],
        "ThenList": [
          "should succeed without returning content"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2008",
    "FileName": "when_update_engagement_type_of_service_with_different_user.cs",
    "Description": "when update engagement type of service with different user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2009",
        "FileName": "when_update_engagement_type_of_service_with_different_user.cs",
        "Description": "when staff is engagement role",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "2010",
        "FileName": "when_update_engagement_type_of_service_with_different_user.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "2011",
        "FileName": "when_update_engagement_type_of_service_with_different_user.cs",
        "Description": "when staff is not from working office",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2012",
        "FileName": "when_update_engagement_type_of_service_with_different_user.cs",
        "Description": "when staff is coordinating primary contact",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "2013",
        "FileName": "when_update_engagement_type_of_service_with_different_user.cs",
        "Description": "when staff is coordinating secondary contact",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "2014",
        "FileName": "when_update_engagement_type_of_service_with_different_user.cs",
        "Description": "when staff is delegated primary contact",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      },
      {
        "$id": "2015",
        "FileName": "when_update_engagement_type_of_service_with_different_user.cs",
        "Description": "when staff is delegated secondary contact",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should be able to update"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2016",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_coordinating_elevated_role.cs",
    "Description": "when get decentralized engagement type of service fee by coordinating elevated role",
    "WhenList": [
      "get engagement service list"
    ],
    "ThenList": [
      "should return ok",
      "should return engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "2017",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_coordinating_office_staff.cs",
    "Description": "when get decentralized engagement type of service fee by coordinating office staff",
    "WhenList": [
      "get engagement service list"
    ],
    "ThenList": [
      "should return ok",
      "should not return engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "2018",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_delegated_coordinating_elevated_role.cs",
    "Description": "when get decentralized engagement type of service fee by delegated coordinating elevated role",
    "WhenList": [
      "get engagement service list"
    ],
    "ThenList": [
      "should return ok",
      "should return engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "2019",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_delegated_coordinating_office_staff.cs",
    "Description": "when get decentralized engagement type of service fee by delegated coordinating office staff",
    "WhenList": [
      "get engagement service list"
    ],
    "ThenList": [
      "should return ok",
      "should not return engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "2020",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_engagement_admin.cs",
    "Description": "when get decentralized engagement type of service fee by engagement admin",
    "WhenList": [
      "get engagement service list"
    ],
    "ThenList": [
      "should return ok",
      "should return engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "2021",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_global_admin.cs",
    "Description": "when get decentralized engagement type of service fee by global admin",
    "WhenList": [
      "get engagement service list"
    ],
    "ThenList": [
      "should return ok",
      "should return engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "2022",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_subscribed_office_elevated_role.cs",
    "Description": "when get decentralized engagement type of service fee by subscribed office elevated role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2023",
        "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_subscribed_office_elevated_role.cs",
        "Description": "get decentralized engagement type of service fee by subscribed office contact",
        "WhenList": [
          "get engagement service list"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement type of service fee"
        ],
        "Children": []
      },
      {
        "$id": "2024",
        "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_subscribed_office_elevated_role.cs",
        "Description": "get decentralized engagement type of service fee by subscribed office admin",
        "WhenList": [
          "get engagement service list"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement type of service fee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2025",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_subscribed_office_staff.cs",
    "Description": "when get decentralized engagement type of service fee by subscribed office staff",
    "WhenList": [
      "get engagement service list"
    ],
    "ThenList": [
      "should return ok",
      "should not return engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "2026",
    "FileName": "when_get_decentralized_engagement_type_of_service_fee_by_unrelated_staff.cs",
    "Description": "when get decentralized engagement type of service fee by unrelated staff",
    "WhenList": [
      "get engagement service list"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "2027",
    "FileName": "when_update_engagement_type_of_services_by_coordinating_elevated_role.cs",
    "Description": "when update engagement type of services by coordinating elevated role",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return no content",
      "should create engagement type of service fees whose country is different from elevated role country"
    ],
    "Children": []
  },
  {
    "$id": "2028",
    "FileName": "when_update_engagement_type_of_services_by_coordinating_office_staff.cs",
    "Description": "when update engagement type of services by coordinating office staff",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return forbidden",
      "should not update engagement type of service fees"
    ],
    "Children": []
  },
  {
    "$id": "2029",
    "FileName": "when_update_engagement_type_of_services_by_delegagted_coordinating_elevated_role.cs",
    "Description": "when update engagement type of services by delegagted coordinating elevated role",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return no content",
      "should update decentralized engagement type of service fees"
    ],
    "Children": []
  },
  {
    "$id": "2030",
    "FileName": "when_update_engagement_type_of_services_by_engagement_admin.cs",
    "Description": "when update engagement type of services by engagement admin",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return no content",
      "should update engagement type of service fees"
    ],
    "Children": []
  },
  {
    "$id": "2031",
    "FileName": "when_update_engagement_type_of_services_by_global_admin.cs",
    "Description": "when update engagement type of services by global admin",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return no content",
      "should update engagement type of service fees"
    ],
    "Children": []
  },
  {
    "$id": "2032",
    "FileName": "when_update_engagement_type_of_services_by_subscribed_office_staff.cs",
    "Description": "when update engagement type of services by subscribed office staff",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return forbidden",
      "should not update engagement type of service fees"
    ],
    "Children": []
  },
  {
    "$id": "2033",
    "FileName": "when_update_engagement_type_of_services_which_country_is_defferent_from_subscribed_office_country_by_subscribed_elevate_role.cs",
    "Description": "when update engagement type of services which country is defferent from subscribed office country by subscribed elevate role",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "2034",
    "FileName": "when_update_engagement_type_of_services_which_country_is_same_as_subscribed_office_country_by_subscribed_elevated_role.cs",
    "Description": "when update engagement type of services which country is same as subscribed office country by subscribed elevated role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2035",
        "FileName": "when_update_engagement_type_of_services_which_country_is_same_as_subscribed_office_country_by_subscribed_elevated_role.cs",
        "Description": "update engagement type of services by contact",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content",
          "should update decentralized engagement type of service fees"
        ],
        "Children": []
      },
      {
        "$id": "2036",
        "FileName": "when_update_engagement_type_of_services_which_country_is_same_as_subscribed_office_country_by_subscribed_elevated_role.cs",
        "Description": "update engagement type of services by admin",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content",
          "should update decentralized engagement type of service fees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2037",
    "FileName": "when_change_country_type_of_service_for_existing_engagement_type_of_service.cs",
    "Description": "when update engagement type of services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2038",
        "FileName": "when_change_country_type_of_service_for_existing_engagement_type_of_service.cs",
        "Description": "when change country type of service for existing engagement type of service",
        "WhenList": [
          "update engagement services"
        ],
        "ThenList": [
          "should return bad request",
          "should not update fee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2039",
    "FileName": "when_coordinating_office_staff_update_engagement_type_of_services.cs",
    "Description": "when update engagement type of services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2040",
        "FileName": "when_coordinating_office_staff_update_engagement_type_of_services.cs",
        "Description": "when coordinating office staff update services",
        "WhenList": [
          "update engagement services"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement type of services but keep country type of service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2041",
    "FileName": "when_engagement_billing_model_is_not_set_and_try_to_create_and_delete_fee.cs",
    "Description": "when engagement billing model is not set and try to create and delete fee",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return no content",
      "should update engagement type of service fees"
    ],
    "Children": []
  },
  {
    "$id": "2042",
    "FileName": "when_engagement_billing_model_is_not_set_and_try_to_update_fee.cs",
    "Description": "when engagement billing model is not set and try to update fee",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return no content"
    ],
    "Children": []
  },
  {
    "$id": "2043",
    "FileName": "when_engagement_is_not_in_billing_service_and_try_to_update_fee.cs",
    "Description": "when engagement is not in billing service and try to update fee",
    "WhenList": [
      "update engagement services"
    ],
    "ThenList": [
      "should return internal server error"
    ],
    "Children": []
  },
  {
    "$id": "2044",
    "FileName": "when_subscribed_office_staff_update_engagement_type_of_service.cs",
    "Description": "when update engagement type of services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2045",
        "FileName": "when_subscribed_office_staff_update_engagement_type_of_service.cs",
        "Description": "when subscribe office staff update with services of his own country",
        "WhenList": [
          "update engagement service"
        ],
        "ThenList": [
          "should return ok",
          "should update engagement type of services"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2046",
    "FileName": "when_subscribe_office_staff_update_with_services_of_other_country.cs",
    "Description": "when update engagement type of services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2047",
        "FileName": "when_subscribe_office_staff_update_with_services_of_other_country.cs",
        "Description": "when subscribe office staff update with services of other country",
        "WhenList": [
          "update engagement service"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2048",
    "FileName": "when_udpate_billing_country_fees.cs",
    "Description": "when udpate billing country fees",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return no content",
      "should call billing service"
    ],
    "Children": []
  },
  {
    "$id": "2049",
    "FileName": "when_udpate_billing_country_fees.cs",
    "Description": "when get billing country fees",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should call billing service",
      "should return billing country dtos"
    ],
    "Children": []
  },
  {
    "$id": "2050",
    "FileName": "when_update_engagement_fee_currencies.cs",
    "Description": "when update engagement fee currencies",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2051",
        "FileName": "when_update_engagement_fee_currencies.cs",
        "Description": "when successes to update",
        "WhenList": [
          "get batch update currency request"
        ],
        "ThenList": [
          "shoud call billing service update"
        ],
        "Children": []
      },
      {
        "$id": "2052",
        "FileName": "when_update_engagement_fee_currencies.cs",
        "Description": "when failed to update",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2053",
            "FileName": "when_update_engagement_fee_currencies.cs",
            "Description": "when currency update error",
            "WhenList": [
              "get batch update currency request"
            ],
            "ThenList": [
              "should return bad request and error message"
            ],
            "Children": []
          },
          {
            "$id": "2054",
            "FileName": "when_update_engagement_fee_currencies.cs",
            "Description": "when invalid request",
            "WhenList": [
              "get batch update currency request"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "2055",
    "FileName": "when_update_engagement_type_of_services_and_billing_model_is_decentralized.cs",
    "Description": "when update engagement type of services and billing model is decentralized",
    "WhenList": [
      "update engagement services"
    ],
    "ThenList": [
      "should return no content",
      "should update decentralized engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "2056",
    "FileName": "when_update_engagement_type_of_service_fees_and_billling_model_is_not_set.cs",
    "Description": "when update engagement type of service fees and billling model is not set",
    "WhenList": [
      "update engagement type of services"
    ],
    "ThenList": [
      "should return no content",
      "should create engagement type of services"
    ],
    "Children": []
  },
  {
    "$id": "2057",
    "FileName": "when_update_engagement_type_of_service_fees_with_centralized_billing_model_by_different_roles.cs",
    "Description": "when update engagement type of service fees with centralized billing model by different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2058",
        "FileName": "when_update_engagement_type_of_service_fees_with_centralized_billing_model_by_different_roles.cs",
        "Description": "when update engagement type of services by global admin",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement type of service fees"
        ],
        "Children": []
      },
      {
        "$id": "2059",
        "FileName": "when_update_engagement_type_of_service_fees_with_centralized_billing_model_by_different_roles.cs",
        "Description": "when update engagement type of services by elevated role",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content",
          "should create engagement type of service fees whose country is different from elevated role country"
        ],
        "Children": []
      },
      {
        "$id": "2060",
        "FileName": "when_update_engagement_type_of_service_fees_with_centralized_billing_model_by_different_roles.cs",
        "Description": "when update engagement type of services by coordinating office staff",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return forbidden",
          "should update engagement type of service fees"
        ],
        "Children": []
      },
      {
        "$id": "2061",
        "FileName": "when_update_engagement_type_of_service_fees_with_centralized_billing_model_by_different_roles.cs",
        "Description": "when update engagement type of services by subscribed office elevated role",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement type of service fees"
        ],
        "Children": []
      },
      {
        "$id": "2062",
        "FileName": "when_update_engagement_type_of_service_fees_with_centralized_billing_model_by_different_roles.cs",
        "Description": "when update engagement type of services by subscribed office staff",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return forbidden",
          "should update engagement type of service fees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2063",
    "FileName": "when_update_engagement_type_of_service_fees_with_decentralized_billing_model_by_different_roles.cs",
    "Description": "when update engagement type of service fees with decentralized billing model by different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2064",
        "FileName": "when_update_engagement_type_of_service_fees_with_decentralized_billing_model_by_different_roles.cs",
        "Description": "when update engagement type of services by subscribed office staff",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return forbidden",
          "should not update engagement type of service fees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2065",
    "FileName": "when_update_engagement_type_of_service_for_different_practice_type_enagement.cs",
    "Description": "when update engagement type of service for different practice type enagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2066",
        "FileName": "when_update_engagement_type_of_service_for_different_practice_type_enagement.cs",
        "Description": "when update for tax engagement",
        "WhenList": [
          "update type of service"
        ],
        "ThenList": [
          "should update fee"
        ],
        "Children": []
      },
      {
        "$id": "2067",
        "FileName": "when_update_engagement_type_of_service_for_different_practice_type_enagement.cs",
        "Description": "when update for immigration engagement",
        "WhenList": [
          "update type of service"
        ],
        "ThenList": [
          "should update fee"
        ],
        "Children": []
      },
      {
        "$id": "2068",
        "FileName": "when_update_engagement_type_of_service_for_different_practice_type_enagement.cs",
        "Description": "when update for social security engagement",
        "WhenList": [
          "update type of service"
        ],
        "ThenList": [
          "should not update fee"
        ],
        "Children": []
      },
      {
        "$id": "2069",
        "FileName": "when_update_engagement_type_of_service_for_different_practice_type_enagement.cs",
        "Description": "when update for technology engagement",
        "WhenList": [
          "update type of service"
        ],
        "ThenList": [
          "should not update fee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2070",
    "FileName": "when_update_engagement_type_of_service_with_duplicated_names_in_country.cs",
    "Description": "when update engagement type of services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2071",
        "FileName": "when_update_engagement_type_of_service_with_duplicated_names_in_country.cs",
        "Description": "when update engagement type of service with duplicated names in country",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2072",
            "FileName": "when_update_engagement_type_of_service_with_duplicated_names_in_country.cs",
            "Description": "when update existing engagement type of service to duplicated name with active status",
            "WhenList": [
              "update engagement services to duplicate name"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "2073",
            "FileName": "when_update_engagement_type_of_service_with_duplicated_names_in_country.cs",
            "Description": "when update existing engagement type of service to duplicated name with inactive status",
            "WhenList": [
              "update engagement services to duplicate name"
            ],
            "ThenList": [
              "should return no cotent"
            ],
            "Children": []
          },
          {
            "$id": "2074",
            "FileName": "when_update_engagement_type_of_service_with_duplicated_names_in_country.cs",
            "Description": "when new engagement type of service to duplicated name with active status",
            "WhenList": [
              "new engagement services to duplicate name"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "2075",
            "FileName": "when_update_engagement_type_of_service_with_duplicated_names_in_country.cs",
            "Description": "when new engagement type of service to duplicated name with inactive status",
            "WhenList": [
              "update engagement services to duplicate name"
            ],
            "ThenList": [
              "should return no content"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "2076",
    "FileName": "when_update_engagement_type_of_service_with_undefined_name.cs",
    "Description": "when update engagement type of service with undefined name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2077",
        "FileName": "when_update_engagement_type_of_service_with_undefined_name.cs",
        "Description": "when practice type is immigration",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "2078",
        "FileName": "when_update_engagement_type_of_service_with_undefined_name.cs",
        "Description": "when practice type is tax",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      },
      {
        "$id": "2079",
        "FileName": "when_update_engagement_type_of_service_with_undefined_name.cs",
        "Description": "when practice type is social security",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2080",
    "FileName": "when_update_engagement_type_of_servie_but_status_is_invalid.cs",
    "Description": "when update engagement type of services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2081",
        "FileName": "when_update_engagement_type_of_servie_but_status_is_invalid.cs",
        "Description": "when update engagement type of servie but status is invalid",
        "WhenList": [
          "update engagement services"
        ],
        "ThenList": [
          "should return 400",
          "should not call update fees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2082",
    "FileName": "when_update_or_create_engagement_type_of_services_with_pre_approval.cs",
    "Description": "when update or create engagement type of services with pre approval",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2083",
        "FileName": "when_update_or_create_engagement_type_of_services_with_pre_approval.cs",
        "Description": "when update existing engagement type of services",
        "WhenList": [
          "update engagement services with pre approval"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement type of services"
        ],
        "Children": []
      },
      {
        "$id": "2084",
        "FileName": "when_update_or_create_engagement_type_of_services_with_pre_approval.cs",
        "Description": "when create engagement type of services",
        "WhenList": [
          "create engagement services with pre approval"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement type of services"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2085",
    "FileName": "when_update_with_services_from_different_engagement.cs",
    "Description": "when update engagement type of services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2086",
        "FileName": "when_update_with_services_from_different_engagement.cs",
        "Description": "when update with services from different engagement",
        "WhenList": [
          "update engagement service"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2087",
    "FileName": "when_create_engagement_type_of_services_and_centralized_engagement_type_of_service_fees.cs",
    "Description": "when create engagement type of services and centralized engagement type of service fees",
    "WhenList": [
      "save engagement services"
    ],
    "ThenList": [
      "should return ok",
      "should create engagement type of services",
      "should create fee by billing service"
    ],
    "Children": []
  },
  {
    "$id": "2088",
    "FileName": "when_create_engagement_type_of_services_and_decentralized_engagement_type_of_service_fees.cs",
    "Description": "when create engagement type of services and decentralized engagement type of service fees",
    "WhenList": [
      "save engagement services"
    ],
    "ThenList": [
      "should return no content",
      "should create fee by billing service"
    ],
    "Children": []
  },
  {
    "$id": "2089",
    "FileName": "when_create_engagement_type_of_services_failed_when_create_fee.cs",
    "Description": "when create engagement type of services failed when create fee",
    "WhenList": [
      "save engagement services"
    ],
    "ThenList": [
      "should return failed",
      "should create engagement type of services"
    ],
    "Children": []
  },
  {
    "$id": "2090",
    "FileName": "when_create_engagement_type_of_services_named_undefined.cs",
    "Description": "when create engagement type of services named undefined",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2091",
        "FileName": "when_create_engagement_type_of_services_named_undefined.cs",
        "Description": "when practice type is immigration",
        "WhenList": [
          "save engagement services"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "2092",
        "FileName": "when_create_engagement_type_of_services_named_undefined.cs",
        "Description": "when practice type is tax",
        "WhenList": [
          "save engagement services"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      },
      {
        "$id": "2093",
        "FileName": "when_create_engagement_type_of_services_named_undefined.cs",
        "Description": "when practice type is social security",
        "WhenList": [
          "save engagement services"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2094",
    "FileName": "when_delete_engagement_type_of_services_with_centralized_billing_model.cs",
    "Description": "when delete engagement type of services with centralized billing model",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2095",
        "FileName": "when_delete_engagement_type_of_services_with_centralized_billing_model.cs",
        "Description": "when delete engagement service",
        "WhenList": [
          "delete one of existing engagement services"
        ],
        "ThenList": [
          "should return no content",
          "should only keep service in request",
          "should delete engagement type of service fees"
        ],
        "Children": []
      },
      {
        "$id": "2096",
        "FileName": "when_delete_engagement_type_of_services_with_centralized_billing_model.cs",
        "Description": "when subscribed office staff delete engagement service of his own country",
        "WhenList": [
          "delete one of existing engagement services"
        ],
        "ThenList": [
          "should return no content",
          "should delete the service"
        ],
        "Children": []
      },
      {
        "$id": "2097",
        "FileName": "when_delete_engagement_type_of_services_with_centralized_billing_model.cs",
        "Description": "when subscribed office deletes engagement service of other country",
        "WhenList": [
          "delete engagement service"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "2098",
        "FileName": "when_delete_engagement_type_of_services_with_centralized_billing_model.cs",
        "Description": "when delete used engagement service",
        "WhenList": [
          "delete used engagement service"
        ],
        "ThenList": [
          "should return bad request",
          "should keep services"
        ],
        "Children": []
      },
      {
        "$id": "2099",
        "FileName": "when_delete_engagement_type_of_services_with_centralized_billing_model.cs",
        "Description": "when delete engagement service belongs to another engagement",
        "WhenList": [
          "delete engagement service"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2100",
    "FileName": "when_delete_engagement_type_of_services_with_decentralized_billing_model.cs",
    "Description": "when delete engagement type of services with decentralized billing model",
    "WhenList": [
      "delete one of existing engagement services"
    ],
    "ThenList": [
      "should return no content",
      "should delete engagement type of service fees"
    ],
    "Children": []
  },
  {
    "$id": "2101",
    "FileName": "when_get_all_engagement_type_of_services_without_filter_by_subscribed_offices.cs",
    "Description": "when get all engagement type of services without filter by subscribed offices",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2102",
        "FileName": "when_get_all_engagement_type_of_services_without_filter_by_subscribed_offices.cs",
        "Description": "when get engagement type of services of normal engagement",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement type of services"
        ],
        "Children": []
      },
      {
        "$id": "2103",
        "FileName": "when_get_all_engagement_type_of_services_without_filter_by_subscribed_offices.cs",
        "Description": "when get engagement type of services of restricted engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2104",
            "FileName": "when_get_all_engagement_type_of_services_without_filter_by_subscribed_offices.cs",
            "Description": "when get by staff on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should be able to get engagement type of service"
            ],
            "Children": []
          },
          {
            "$id": "2105",
            "FileName": "when_get_all_engagement_type_of_services_without_filter_by_subscribed_offices.cs",
            "Description": "when get by staff not on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "2106",
    "FileName": "when_get_engagement_type_of_services_with_centralized_fee.cs",
    "Description": "when get engagement type of services with centralized fee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2107",
        "FileName": "when_get_engagement_type_of_services_with_centralized_fee.cs",
        "Description": "when get engagement type of services with fee and services have fees",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement type of services"
        ],
        "Children": []
      },
      {
        "$id": "2108",
        "FileName": "when_get_engagement_type_of_services_with_centralized_fee.cs",
        "Description": "when get engagement type of services with fee when services has no fee",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement type of services"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2109",
    "FileName": "when_get_engagement_type_of_services_with_currency_setting_link.cs",
    "Description": "when get engagement type of services with currency setting link",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2110",
        "FileName": "when_get_engagement_type_of_services_with_currency_setting_link.cs",
        "Description": "when get engagement type of services by engagement elevate role",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement type of services"
        ],
        "Children": []
      },
      {
        "$id": "2111",
        "FileName": "when_get_engagement_type_of_services_with_currency_setting_link.cs",
        "Description": "when get engagement type of services by staff not engagement elevate role",
        "WhenList": [
          "of get engagement service list"
        ],
        "ThenList": [
          "should return engagement type of services"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2112",
    "FileName": "when_get_engagement_type_of_services_with_decentralized_external_fee.cs",
    "Description": "when get engagement type of services with decentralized external fee",
    "WhenList": [
      "get engagement service list"
    ],
    "ThenList": [
      "should return ok",
      "should return engagement type of service fee"
    ],
    "Children": []
  },
  {
    "$id": "2113",
    "FileName": "when_get_engagement_type_of_services_with_pre_approval.cs",
    "Description": "when get engagement type of services with pre approval",
    "WhenList": [
      "of get engagement service list"
    ],
    "ThenList": [
      "should return ok",
      "should return engagement type of services"
    ],
    "Children": []
  },
  {
    "$id": "2114",
    "FileName": "when_get_engagement_type_of_service_with_billing_country_count.cs",
    "Description": "when get engagement type of service with billing country count",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2115",
        "FileName": "when_get_engagement_type_of_service_with_billing_country_count.cs",
        "Description": "when get engagement type of service with different country",
        "WhenList": [
          "get engagement type of service"
        ],
        "ThenList": [
          "should return billing country count"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2116",
    "FileName": "when_get_engagement_type_of_service_with_fee_with_different_billing_model.cs",
    "Description": "when get engagement type of service with fee with different billing model",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2117",
        "FileName": "when_get_engagement_type_of_service_with_fee_with_different_billing_model.cs",
        "Description": "not set billing model",
        "WhenList": [
          "get engagement type of service"
        ],
        "ThenList": [
          "can view and edit fee should be false"
        ],
        "Children": []
      },
      {
        "$id": "2118",
        "FileName": "when_get_engagement_type_of_service_with_fee_with_different_billing_model.cs",
        "Description": "centralized billing model",
        "WhenList": [
          "get engagement type of service"
        ],
        "ThenList": [
          "can view and edit internal and external fee should be true"
        ],
        "Children": []
      },
      {
        "$id": "2119",
        "FileName": "when_get_engagement_type_of_service_with_fee_with_different_billing_model.cs",
        "Description": "decentralized billing model",
        "WhenList": [
          "get engagement type of service"
        ],
        "ThenList": [
          "can view decentralized external fee should be true"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2120",
    "FileName": "when_update_decentralized_engagement_type_of_service_fee_in_practice_types.cs",
    "Description": "when update decentralized engagement type of service fee in practice types",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2121",
        "FileName": "when_update_decentralized_engagement_type_of_service_fee_in_practice_types.cs",
        "Description": "update decentralized engagement type of service fee in immimgration",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement type of service fees"
        ],
        "Children": []
      },
      {
        "$id": "2122",
        "FileName": "when_update_decentralized_engagement_type_of_service_fee_in_practice_types.cs",
        "Description": "update decentralized engagement type of service fee in social security",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement type of service fees"
        ],
        "Children": []
      },
      {
        "$id": "2123",
        "FileName": "when_update_decentralized_engagement_type_of_service_fee_in_practice_types.cs",
        "Description": "update decentralized engagement type of service fee in technology",
        "WhenList": [
          "update engagement type of services"
        ],
        "ThenList": [
          "should return no content",
          "should update engagement type of service fees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2124",
    "FileName": "should_add_evenstore_msmq_consumer_feature_toggle_for_async_send_command.cs",
    "Description": "should add evenstore msmq consumer feature toggle for async send command",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2125",
        "FileName": "should_add_evenstore_msmq_consumer_feature_toggle_for_async_send_command.cs",
        "Description": "when turn off feature toggle",
        "WhenList": [
          "of responsible office update"
        ],
        "ThenList": [
          "should raise responsible office changed event"
        ],
        "Children": []
      },
      {
        "$id": "2126",
        "FileName": "should_add_evenstore_msmq_consumer_feature_toggle_for_async_send_command.cs",
        "Description": "when turn on feature toggle",
        "WhenList": [
          "of responsible office update"
        ],
        "ThenList": [
          "should not raise responsible office changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2127",
    "FileName": "should_add_evenstore_msmq_consumer_feature_toggle_for_sync_send_command.cs",
    "Description": "should add evenstore msmq consumer feature toggle for sync send command",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2128",
        "FileName": "should_add_evenstore_msmq_consumer_feature_toggle_for_sync_send_command.cs",
        "Description": "when turn off feature toggle",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should raise engagement created event"
        ],
        "Children": []
      },
      {
        "$id": "2129",
        "FileName": "should_add_evenstore_msmq_consumer_feature_toggle_for_sync_send_command.cs",
        "Description": "when turn on feature toggle",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should not raise engagement created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2130",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_acl_member.cs",
    "Description": "should raise engagement acl changed event when change acl member",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2131",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_acl_member.cs",
        "Description": "add a custom member",
        "WhenList": [
          "add a member"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2132",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_acl_member.cs",
        "Description": "add 2 custom members",
        "WhenList": [
          "add a member"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2133",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_acl_member.cs",
        "Description": "delete a custom member",
        "WhenList": [
          "add a member"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2134",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
    "Description": "should raise engagement acl changed event when change admins",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2135",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "change engagement first admin and restricted true",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2136",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "change engagement first admin and restricted false",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2137",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "add enagement second admin and restricted true",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2138",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "change enagement second admin and restricted true",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2139",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "delete enagement second admin and restricted true",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2140",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
    "Description": "should raise engagement acl changed event when change cooridinating contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2141",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
        "Description": "when change primary contact and restricted true",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2142",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
        "Description": "when change primary contact and restricted false",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should not raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2143",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
        "Description": "when change secondary contact and restricted true",
        "WhenList": [
          "coordinating office secondary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2144",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
        "Description": "when delete secondary contact and restricted true",
        "WhenList": [
          "coordinating office secondary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2145",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
    "Description": "should raise engagement acl changed event when change delegated office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2146",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when add delegated office with primary contact and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2147",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when add delegated office with 2 contacts and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2148",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when add delegated office and restricted false",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should not raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2149",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when change primary contact and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2150",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when change secondary contact and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2151",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when delete secondary contact and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2152",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when delete delegated office",
        "WhenList": [
          "delete delegated office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2153",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when transfer subscribe office to delegated office",
        "WhenList": [
          "add delegated office same with subscribe office"
        ],
        "ThenList": [
          "should not raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2154",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
    "Description": "should raise engagement acl changed event when change office engagement admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2155",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when add an office engagement admin",
        "WhenList": [
          "add office engagement admin"
        ],
        "ThenList": [
          "should raise engagement acl changed event"
        ],
        "Children": []
      },
      {
        "$id": "2156",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when remove an office engagement admin",
        "WhenList": [
          "remove the office engagement admin"
        ],
        "ThenList": [
          "should raise engagement acl changed event"
        ],
        "Children": []
      },
      {
        "$id": "2157",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when change an office engagement admin",
        "WhenList": [
          "change the office engagment admin"
        ],
        "ThenList": [
          "should raise engagement acl event"
        ],
        "Children": []
      },
      {
        "$id": "2158",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when change an office engagement admin is same with office primary contact",
        "WhenList": [
          "change the office engagment admin"
        ],
        "ThenList": [
          "should raise engagement acl event"
        ],
        "Children": []
      },
      {
        "$id": "2159",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when change an office engagement admin is same with office secondary contact",
        "WhenList": [
          "change the office engagment admin"
        ],
        "ThenList": [
          "should raise engagement acl event"
        ],
        "Children": []
      },
      {
        "$id": "2160",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when add an office engagement admin who is same with office primary contact",
        "WhenList": [
          "add the office engagment admin who is same with the office primary contact"
        ],
        "ThenList": [
          "should not raise engagement acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2161",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_restriction_status.cs",
    "Description": "should raise engagement acl changed event when change restriction status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2162",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_restriction_status.cs",
        "Description": "set restricted from false to true",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2163",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_restriction_status.cs",
        "Description": "set restricted from true to false",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2164",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_restriction_status.cs",
        "Description": "restricted status not change",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2165",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
    "Description": "should raise engagement acl changed event when change subscribe office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2166",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when add subscribe office with primary contact and restricted true",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2167",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when add subscribe office with primary contact and restricted false",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2168",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when add subscribe office with 2 contacts and restricted true",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2169",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when change subscribe primary contact",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2170",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when change subscribe secondary contact",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2171",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when delete subscribe secondary contact",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2172",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when delete subscribe office",
        "WhenList": [
          "delete subscribe office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2173",
    "FileName": "should_raise_engagement_acl_changed_event_when_reassign_assignee_contact.cs",
    "Description": "should raise engagement acl changed event when reassign assignee contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2174",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_assignee_contact.cs",
        "Description": "when new contact has been not in acl",
        "WhenList": [
          "reassign assignee contact for restricted engagement"
        ],
        "ThenList": [
          "should be 200",
          "should generate restricted engagement access list change event"
        ],
        "Children": []
      },
      {
        "$id": "2175",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_assignee_contact.cs",
        "Description": "when new contact has been in acl",
        "WhenList": [
          "reassign assignee contact for restricted engagement"
        ],
        "ThenList": [
          "should be 200",
          "should not generate restricted engagement access list change event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2176",
    "FileName": "should_raise_engagement_acl_changed_event_when_reassign_checklist_responsiblity.cs",
    "Description": "should raise engagement acl changed event when reassign checklist responsiblity",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2177",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_checklist_responsiblity.cs",
        "Description": "when new contact has not been in acl",
        "WhenList": [
          "reassign task responsibility"
        ],
        "ThenList": [
          "should be 200",
          "should generate restricted assignee access list change event"
        ],
        "Children": []
      },
      {
        "$id": "2178",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_checklist_responsiblity.cs",
        "Description": "when new contact has been in acl",
        "WhenList": [
          "reassign task responsibility"
        ],
        "ThenList": [
          "should be 200",
          "should not raise engagement acl changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2179",
    "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
    "Description": "should raise engagement acl changed event when reassign engagement contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2180",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign coordinating contact",
        "WhenList": [
          "reassign john as coordinating office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2181",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign coordinating contact but new contact has been in acl",
        "WhenList": [
          "reassign john as coordinating office"
        ],
        "ThenList": [
          "should not raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2182",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign delegated contact",
        "WhenList": [
          "reassign john as delegated office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2183",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign subscribe contact",
        "WhenList": [
          "reassign sofia as subscribe office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2184",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign admin",
        "WhenList": [
          "reassign john as admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2185",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign qurstioniar contact but new contact has been in acl",
        "WhenList": [
          "reassign questionnaire contact to zhengquan"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2186",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign qurstioniar contact and new contact has not been in acl",
        "WhenList": [
          "reassign questionnaire contact to zhengquan"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2187",
    "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_responsiblity.cs",
    "Description": "should raise engagement acl changed event when reassign engagement responsiblity",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2188",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_responsiblity.cs",
        "Description": "when new contact has not been in acl",
        "WhenList": [
          "reassign task responsibility"
        ],
        "ThenList": [
          "should be 200",
          "should generate restricted assignee access list change event"
        ],
        "Children": []
      },
      {
        "$id": "2189",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_responsiblity.cs",
        "Description": "when new contact has been in acl",
        "WhenList": [
          "reassign task responsibility"
        ],
        "ThenList": [
          "should be 200",
          "should not generate restricted assignee access list change event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2190",
    "FileName": "should_raise_event_when_change_coordinating_office.cs",
    "Description": "should raise event when change coordinating office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2191",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should raise event with basic info",
        "WhenList": [
          "change coordinating office primary contact"
        ],
        "ThenList": [
          "should raise engagement offices changed event",
          "should raise engagement offices changed event contain office id"
        ],
        "Children": []
      },
      {
        "$id": "2192",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should raise event with show in my team changed",
        "WhenList": [
          "change show in my team to false"
        ],
        "ThenList": [
          "should raise event and show in my team is false"
        ],
        "Children": []
      },
      {
        "$id": "2193",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should not raise event when add secondary contact close feature toggle",
        "WhenList": [
          "add coordinating office secondary contact"
        ],
        "ThenList": [
          "should not raise coordinating office changed event to msmq",
          "should raise coordinating office changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "2194",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should raise event when add secondary contact open feature toggle",
        "WhenList": [
          "add coordinating office secondary contact"
        ],
        "ThenList": [
          "should raise coordinating office changed event to msmq",
          "should not raise coordinating office changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "2195",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should raise event when replace secondary contact",
        "WhenList": [
          "replace coordinating office secondary contact"
        ],
        "ThenList": [
          "should raise coordinating office changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2196",
    "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
    "Description": "should raise event when change delegated coordinating office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2197",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when add delegated coordinating office",
        "WhenList": [
          "change engagement delegated coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2198",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when add delegated coordinating office with team mailbox",
        "WhenList": [
          "change engagement delegated coordinating office with team mailbox info"
        ],
        "ThenList": [
          "should have correct team mailbox setted"
        ],
        "Children": []
      },
      {
        "$id": "2199",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when change show in my team",
        "WhenList": [
          "change show in my team to false"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2200",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when remove delegated coordinating office",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2201",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when replace delegated coordinating office",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2202",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when add delegated coordinating office with secondary contact",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2203",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when replace delegating coordinating office secondary contact",
        "WhenList": [
          "replace secondary contact"
        ],
        "ThenList": [
          "should raise engagement office changed event"
        ],
        "Children": []
      },
      {
        "$id": "2204",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when remove delegating coordinating office secondary contact",
        "WhenList": [
          "replace secondary contact"
        ],
        "ThenList": [
          "should raise engagement office changed event"
        ],
        "Children": []
      },
      {
        "$id": "2205",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when changed subscribed office to delegated coordinating office",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2206",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when changed subscribed office to delegated coordinating office with same secondary contact",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2207",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when changed subscribed office to delegated coordinating office with different secondary contact",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2208",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when change delegated coordinating office contact",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2209",
    "FileName": "should_raise_event_when_engagement_admin_changed.cs",
    "Description": "should raise event when engagement admin changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2210",
        "FileName": "should_raise_event_when_engagement_admin_changed.cs",
        "Description": "when update existing admin",
        "WhenList": [
          "change admin"
        ],
        "ThenList": [
          "should raise engagement admin changed event"
        ],
        "Children": []
      },
      {
        "$id": "2211",
        "FileName": "should_raise_event_when_engagement_admin_changed.cs",
        "Description": "when remove admin 2",
        "WhenList": [
          "remove admin 2"
        ],
        "ThenList": [
          "should raise engagement admin change event"
        ],
        "Children": []
      },
      {
        "$id": "2212",
        "FileName": "should_raise_event_when_engagement_admin_changed.cs",
        "Description": "when add new admin",
        "WhenList": [
          "change admin"
        ],
        "ThenList": [
          "should raise engagement admin changed event"
        ],
        "Children": []
      },
      {
        "$id": "2213",
        "FileName": "should_raise_event_when_engagement_admin_changed.cs",
        "Description": "when not any changes except order",
        "WhenList": [
          "change admin order"
        ],
        "ThenList": [
          "should not raise engagement admin changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2214",
    "FileName": "should_raise_event_when_engagement_name_changed.cs",
    "Description": "should raise event when engagement name changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2215",
        "FileName": "should_raise_event_when_engagement_name_changed.cs",
        "Description": "when name changed",
        "WhenList": [
          "update engagement name"
        ],
        "ThenList": [
          "should raise engagement details changed event"
        ],
        "Children": []
      },
      {
        "$id": "2216",
        "FileName": "should_raise_event_when_engagement_name_changed.cs",
        "Description": "when name not changed",
        "WhenList": [
          "update engagement name"
        ],
        "ThenList": [
          "should raise engagement details changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2217",
    "FileName": "should_raise_event_when_reassign_engagement_admin_before_inactivate_staff.cs",
    "Description": "should raise event when reassign engagement admin before inactivate staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should generate engagement office change event and admin change event"
    ],
    "Children": []
  },
  {
    "$id": "2218",
    "FileName": "should_raise_event_when_reassign_engagement_coordinating_contacts_before_inactivate_staff.cs",
    "Description": "should raise event when reassign engagement coordinating contacts before inactivate staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should generate coordinating office contact change event"
    ],
    "Children": []
  },
  {
    "$id": "2219",
    "FileName": "should_raise_event_when_reassign_engagement_delegated_office_contacts_before_inactivate_staff.cs",
    "Description": "should raise event when reassign engagement delegated office contacts before inactivate staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should generate delegated office change event"
    ],
    "Children": []
  },
  {
    "$id": "2220",
    "FileName": "should_raise_event_when_reassign_engagement_subscribed_office_contacts_before_inactivate_staff.cs",
    "Description": "should raise event when reassign engagement subscribed office contacts before inactivate staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should generate subscribed office contact change event"
    ],
    "Children": []
  },
  {
    "$id": "2221",
    "FileName": "should_raise_event_when_team_mailbox_changed.cs",
    "Description": "should raise event when team mailbox changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2222",
        "FileName": "should_raise_event_when_team_mailbox_changed.cs",
        "Description": "when team mailbox of coordinate office changed",
        "WhenList": [
          "update engagement team mail box"
        ],
        "ThenList": [
          "should raise engagement office team mailbox changed event"
        ],
        "Children": []
      },
      {
        "$id": "2223",
        "FileName": "should_raise_event_when_team_mailbox_changed.cs",
        "Description": "when team mailbox of delegated coordinate office changed",
        "WhenList": [
          "update coordinate office team mail box"
        ],
        "ThenList": [
          "should raise engagement office team mailbox changed event"
        ],
        "Children": []
      },
      {
        "$id": "2224",
        "FileName": "should_raise_event_when_team_mailbox_changed.cs",
        "Description": "when team mailbox of work office changed",
        "WhenList": [
          "update work office team mail box"
        ],
        "ThenList": [
          "should raise engagement office team mailbox changed event"
        ],
        "Children": []
      },
      {
        "$id": "2225",
        "FileName": "should_raise_event_when_team_mailbox_changed.cs",
        "Description": "when team mailbox of work office is empty",
        "WhenList": [
          "update work office team mail box to empty"
        ],
        "ThenList": [
          "should raise event with team mailbox as null"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2226",
    "FileName": "should_raise_office_list_changed_into_event_store_when_update_engagement_administrators.cs",
    "Description": "should raise office list changed into event store when update engagement administrators",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2227",
        "FileName": "should_raise_office_list_changed_into_event_store_when_update_engagement_administrators.cs",
        "Description": "add administartor",
        "WhenList": [
          "update admin"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2228",
    "FileName": "should_raise_restricted_engagement_acl_changed_event_when_inactive_staff.cs",
    "Description": "should raise restricted engagement acl changed event when inactive staff",
    "WhenList": [
      "inactivate staff"
    ],
    "ThenList": [
      "should return no content",
      "should generate restricted engagement acl changed event"
    ],
    "Children": []
  },
  {
    "$id": "2229",
    "FileName": "should_save_engagement_created_event_into_eventstore.cs",
    "Description": "should save engagement created event into msmq",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2230",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should create engagement in msmq",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should save event into msmq",
          "should save metadata"
        ],
        "Children": []
      },
      {
        "$id": "2231",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should has coordinating office information",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should with basic engagement information"
        ],
        "Children": []
      },
      {
        "$id": "2232",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should have engagement administrators information in MSMQ",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should with basic engagement information",
          "should with work office information"
        ],
        "Children": []
      },
      {
        "$id": "2233",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should has secondary contact in coordinating office",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should raise engagement create event with secondary"
        ],
        "Children": []
      },
      {
        "$id": "2234",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should enable show in my team with primary and secondary contact",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should raise engagement create event with in my team enabled"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2235",
    "FileName": "should_save_engagement_event_with_modifier_info_into_eventstore.cs",
    "Description": "should save engagement event with modifier info into eventstore",
    "WhenList": [
      "of engagement is created"
    ],
    "ThenList": [
      "should save event into eventstore with modifier info"
    ],
    "Children": []
  },
  {
    "$id": "2236",
    "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
    "Description": "should raise event into eventstore when subscribed office change",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2237",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when add subscribed office",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event",
          "sould has modifer information"
        ],
        "Children": []
      },
      {
        "$id": "2238",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when add subscribed office with secondary contact",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2239",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when add subscribed office with team mailbox",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2240",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when remove subscribed office",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2241",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when remove subscribed office secondary contact",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2242",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when remove subscribed office with office engagement admin",
        "WhenList": [
          "remove engagement work offices"
        ],
        "ThenList": [
          "should raise acl changed event"
        ],
        "Children": []
      },
      {
        "$id": "2243",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when change subscribed office",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2244",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when change show in my team",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should change show in my team to false"
        ],
        "Children": []
      },
      {
        "$id": "2245",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when update subscribed office primary contact",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should not raise engagement office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2246",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when update subscribed office secondary contact",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should not raise engagement office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2247",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when exchange primary contact and secondary contact of subscribed office",
        "WhenList": [
          "exchange contacts"
        ],
        "ThenList": [
          "should not raise engagement office list changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2248",
    "FileName": "when_engagement_restriction_status_changed.cs",
    "Description": "when engagement restriction status changed",
    "WhenList": [
      "update engagement name"
    ],
    "ThenList": [
      "should raise engagement restriction status changed event"
    ],
    "Children": []
  },
  {
    "$id": "2249",
    "FileName": "when_engagement_restriction_status_changed.cs",
    "Description": "when engagement restriction status not changed",
    "WhenList": [
      "update engagement name"
    ],
    "ThenList": [
      "should raise engagement restriction status changed event"
    ],
    "Children": []
  },
  {
    "$id": "2250",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_acl_member.cs",
    "Description": "should raise engagement acl changed event when change acl member",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2251",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_acl_member.cs",
        "Description": "add a custom member",
        "WhenList": [
          "add a member"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2252",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_acl_member.cs",
        "Description": "add 2 custom members",
        "WhenList": [
          "add a member"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2253",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_acl_member.cs",
        "Description": "delete a custom member",
        "WhenList": [
          "add a member"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2254",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
    "Description": "should raise engagement acl changed event when change admins",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2255",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "change engagement first admin and restricted true",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2256",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "change engagement first admin and restricted false",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2257",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "add enagement second admin and restricted true",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2258",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "change enagement second admin and restricted true",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2259",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_admins.cs",
        "Description": "delete enagement second admin and restricted true",
        "WhenList": [
          "change first admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2260",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
    "Description": "should raise engagement acl changed event when change cooridinating contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2261",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
        "Description": "when change primary contact and restricted true",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2262",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
        "Description": "when change primary contact and restricted false",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should not raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2263",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
        "Description": "when change secondary contact and restricted true",
        "WhenList": [
          "coordinating office secondary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2264",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_cooridinating_contact.cs",
        "Description": "when delete secondary contact and restricted true",
        "WhenList": [
          "coordinating office secondary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2265",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
    "Description": "should raise engagement acl changed event when change delegated office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2266",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when add delegated office with primary contact and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2267",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when add delegated office with 2 contacts and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2268",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when add delegated office and restricted false",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should not raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2269",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when change primary contact and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2270",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when change secondary contact and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2271",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when delete secondary contact and restricted true",
        "WhenList": [
          "add delegated office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2272",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when delete delegated office",
        "WhenList": [
          "delete delegated office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2273",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_delegated_office.cs",
        "Description": "when transfer subscribe office to delegated office",
        "WhenList": [
          "add delegated office same with subscribe office"
        ],
        "ThenList": [
          "should not raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2274",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
    "Description": "should raise engagement acl changed event when change office engagement admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2275",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when add an office engagement admin",
        "WhenList": [
          "add office engagement admin"
        ],
        "ThenList": [
          "should raise engagement acl changed event"
        ],
        "Children": []
      },
      {
        "$id": "2276",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when remove an office engagement admin",
        "WhenList": [
          "remove the office engagement admin"
        ],
        "ThenList": [
          "should raise engagement acl changed event"
        ],
        "Children": []
      },
      {
        "$id": "2277",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when change an office engagement admin",
        "WhenList": [
          "change the office engagment admin"
        ],
        "ThenList": [
          "should raise engagement acl event"
        ],
        "Children": []
      },
      {
        "$id": "2278",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when change an office engagement admin is same with office primary contact",
        "WhenList": [
          "change the office engagment admin"
        ],
        "ThenList": [
          "should raise engagement acl event"
        ],
        "Children": []
      },
      {
        "$id": "2279",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when change an office engagement admin is same with office secondary contact",
        "WhenList": [
          "change the office engagment admin"
        ],
        "ThenList": [
          "should raise engagement acl event"
        ],
        "Children": []
      },
      {
        "$id": "2280",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_office_engagement_admin.cs",
        "Description": "when add an office engagement admin who is same with office primary contact",
        "WhenList": [
          "add the office engagment admin who is same with the office primary contact"
        ],
        "ThenList": [
          "should not raise engagement acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2281",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_restriction_status.cs",
    "Description": "should raise engagement acl changed event when change restriction status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2282",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_restriction_status.cs",
        "Description": "set restricted from false to true",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2283",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_restriction_status.cs",
        "Description": "set restricted from true to false",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2284",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_restriction_status.cs",
        "Description": "restricted status not change",
        "WhenList": [
          "coordinating office primary contact change"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2285",
    "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
    "Description": "should raise engagement acl changed event when change subscribe office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2286",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when add subscribe office with primary contact and restricted true",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2287",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when add subscribe office with primary contact and restricted false",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2288",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when add subscribe office with 2 contacts and restricted true",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2289",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when change subscribe primary contact",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2290",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when change subscribe secondary contact",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2291",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when delete subscribe secondary contact",
        "WhenList": [
          "add subscribe office with primary contact"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2292",
        "FileName": "should_raise_engagement_acl_changed_event_when_change_subscribe_office.cs",
        "Description": "when delete subscribe office",
        "WhenList": [
          "delete subscribe office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2293",
    "FileName": "should_raise_engagement_acl_changed_event_when_reassign_assignee_contact.cs",
    "Description": "should raise engagement acl changed event when reassign assignee contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2294",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_assignee_contact.cs",
        "Description": "when new contact has been not in acl",
        "WhenList": [
          "reassign assignee contact for restricted engagement"
        ],
        "ThenList": [
          "should be 200",
          "should generate restricted engagement access list change event"
        ],
        "Children": []
      },
      {
        "$id": "2295",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_assignee_contact.cs",
        "Description": "when new contact has been in acl",
        "WhenList": [
          "reassign assignee contact for restricted engagement"
        ],
        "ThenList": [
          "should be 200",
          "should not generate restricted engagement access list change event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2296",
    "FileName": "should_raise_engagement_acl_changed_event_when_reassign_checklist_responsiblity.cs",
    "Description": "should raise engagement acl changed event when reassign checklist responsiblity",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2297",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_checklist_responsiblity.cs",
        "Description": "when new contact has not been in acl",
        "WhenList": [
          "reassign task responsibility"
        ],
        "ThenList": [
          "should be 200",
          "should generate restricted assignee access list change event"
        ],
        "Children": []
      },
      {
        "$id": "2298",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_checklist_responsiblity.cs",
        "Description": "when new contact has been in acl",
        "WhenList": [
          "reassign task responsibility"
        ],
        "ThenList": [
          "should be 200",
          "should not raise engagement acl changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2299",
    "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
    "Description": "should raise engagement acl changed event when reassign engagement contact",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2300",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign coordinating contact",
        "WhenList": [
          "reassign john as coordinating office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2301",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign coordinating contact but new contact has been in acl",
        "WhenList": [
          "reassign john as coordinating office"
        ],
        "ThenList": [
          "should not raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2302",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign delegated contact",
        "WhenList": [
          "reassign john as delegated office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2303",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign subscribe contact",
        "WhenList": [
          "reassign sofia as subscribe office"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2304",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign admin",
        "WhenList": [
          "reassign john as admin"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2305",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign qurstioniar contact but new contact has been in acl",
        "WhenList": [
          "reassign questionnaire contact to zhengquan"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      },
      {
        "$id": "2306",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_contact.cs",
        "Description": "when reassign qurstioniar contact and new contact has not been in acl",
        "WhenList": [
          "reassign questionnaire contact to zhengquan"
        ],
        "ThenList": [
          "should raise acl event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2307",
    "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_responsiblity.cs",
    "Description": "should raise engagement acl changed event when reassign engagement responsiblity",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2308",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_responsiblity.cs",
        "Description": "when new contact has not been in acl",
        "WhenList": [
          "reassign task responsibility"
        ],
        "ThenList": [
          "should be 200",
          "should generate restricted assignee access list change event"
        ],
        "Children": []
      },
      {
        "$id": "2309",
        "FileName": "should_raise_engagement_acl_changed_event_when_reassign_engagement_responsiblity.cs",
        "Description": "when new contact has been in acl",
        "WhenList": [
          "reassign task responsibility"
        ],
        "ThenList": [
          "should be 200",
          "should not generate restricted assignee access list change event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2310",
    "FileName": "should_raise_event_when_change_coordinating_office.cs",
    "Description": "should raise event when change coordinating office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2311",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should raise event with basic info",
        "WhenList": [
          "change coordinating office primary contact"
        ],
        "ThenList": [
          "should raise engagement offices changed event",
          "should raise engagement offices changed event contain office id"
        ],
        "Children": []
      },
      {
        "$id": "2312",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should raise event with show in my team changed",
        "WhenList": [
          "change show in my team to false"
        ],
        "ThenList": [
          "should raise event and show in my team is false"
        ],
        "Children": []
      },
      {
        "$id": "2313",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should raise event when add secondary contact",
        "WhenList": [
          "add coordinating office secondary contact"
        ],
        "ThenList": [
          "should raise coordinating office changed event"
        ],
        "Children": []
      },
      {
        "$id": "2314",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should raise event when remove secondary contact",
        "WhenList": [
          "remove coordinating office secondary contact"
        ],
        "ThenList": [
          "should raise coordinating office changed event"
        ],
        "Children": []
      },
      {
        "$id": "2315",
        "FileName": "should_raise_event_when_change_coordinating_office.cs",
        "Description": "should raise event when replace secondary contact",
        "WhenList": [
          "replace coordinating office secondary contact"
        ],
        "ThenList": [
          "should raise coordinating office changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2316",
    "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
    "Description": "should raise event when change delegated coordinating office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2317",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when add delegated coordinating office",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2318",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when add delegated coordinating office with team mailbox",
        "WhenList": [
          "change engagement delegated coordinating office with team mailbox info"
        ],
        "ThenList": [
          "should have correct team mailbox setted"
        ],
        "Children": []
      },
      {
        "$id": "2319",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when change show in my team",
        "WhenList": [
          "change show in my team to false"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2320",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when remove delegated coordinating office",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2321",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when replace delegated coordinating office",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2322",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when add delegated coordinating office with secondary contact",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2323",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when replace delegating coordinating office secondary contact",
        "WhenList": [
          "replace secondary contact"
        ],
        "ThenList": [
          "should raise engagement office changed event"
        ],
        "Children": []
      },
      {
        "$id": "2324",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when remove delegating coordinating office secondary contact",
        "WhenList": [
          "replace secondary contact"
        ],
        "ThenList": [
          "should raise engagement office changed event"
        ],
        "Children": []
      },
      {
        "$id": "2325",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when changed subscribed office to delegated coordinating office",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2326",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when changed subscribed office to delegated coordinating office with same secondary contact",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2327",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when changed subscribed office to delegated coordinating office with different secondary contact",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2328",
        "FileName": "should_raise_event_when_change_delegated_coordinating_office.cs",
        "Description": "when change delegated coordinating office contact",
        "WhenList": [
          "change engagement coordinating office"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2329",
    "FileName": "should_raise_event_when_engagement_admin_changed.cs",
    "Description": "should raise event when engagement admin changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2330",
        "FileName": "should_raise_event_when_engagement_admin_changed.cs",
        "Description": "when update existing admin",
        "WhenList": [
          "change admin"
        ],
        "ThenList": [
          "should raise engagement admin changed event"
        ],
        "Children": []
      },
      {
        "$id": "2331",
        "FileName": "should_raise_event_when_engagement_admin_changed.cs",
        "Description": "when remove admin 2",
        "WhenList": [
          "remove admin 2"
        ],
        "ThenList": [
          "should raise engagement admin change event"
        ],
        "Children": []
      },
      {
        "$id": "2332",
        "FileName": "should_raise_event_when_engagement_admin_changed.cs",
        "Description": "when add new admin",
        "WhenList": [
          "change admin"
        ],
        "ThenList": [
          "should raise engagement admin changed event"
        ],
        "Children": []
      },
      {
        "$id": "2333",
        "FileName": "should_raise_event_when_engagement_admin_changed.cs",
        "Description": "when not any change",
        "WhenList": [
          "no changes"
        ],
        "ThenList": [
          "should not raise engagement admin changed event"
        ],
        "Children": []
      },
      {
        "$id": "2334",
        "FileName": "should_raise_event_when_engagement_admin_changed.cs",
        "Description": "when not any changes except order",
        "WhenList": [
          "change admin order"
        ],
        "ThenList": [
          "should not raise engagement admin changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2335",
    "FileName": "should_raise_event_when_engagement_name_changed.cs",
    "Description": "should raise event when engagement name changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2336",
        "FileName": "should_raise_event_when_engagement_name_changed.cs",
        "Description": "when name changed",
        "WhenList": [
          "update engagement name"
        ],
        "ThenList": [
          "should raise engagement details changed event"
        ],
        "Children": []
      },
      {
        "$id": "2337",
        "FileName": "should_raise_event_when_engagement_name_changed.cs",
        "Description": "when name not changed",
        "WhenList": [
          "update engagement name"
        ],
        "ThenList": [
          "should raise engagement details changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2338",
    "FileName": "should_raise_event_when_reassign_engagement_admin_before_inactivate_staff.cs",
    "Description": "should raise event when reassign engagement admin before inactivate staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should generate engagement office change event and admin change event"
    ],
    "Children": []
  },
  {
    "$id": "2339",
    "FileName": "should_raise_event_when_reassign_engagement_coordinating_contacts_before_inactivate_staff.cs",
    "Description": "should raise event when reassign engagement coordinating contacts before inactivate staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should generate coordinating office contact change event"
    ],
    "Children": []
  },
  {
    "$id": "2340",
    "FileName": "should_raise_event_when_reassign_engagement_delegated_office_contacts_before_inactivate_staff.cs",
    "Description": "should raise event when reassign engagement delegated office contacts before inactivate staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should generate delegated office contact change event"
    ],
    "Children": []
  },
  {
    "$id": "2341",
    "FileName": "should_raise_event_when_reassign_engagement_subscribed_office_contacts_before_inactivate_staff.cs",
    "Description": "should raise event when reassign engagement subscribed office contacts before inactivate staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should generate subscribed office contact change event"
    ],
    "Children": []
  },
  {
    "$id": "2342",
    "FileName": "should_raise_event_when_team_mailbox_changed.cs",
    "Description": "should raise event when team mailbox changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2343",
        "FileName": "should_raise_event_when_team_mailbox_changed.cs",
        "Description": "when team mailbox of coordinate office changed",
        "WhenList": [
          "update engagement team mail box"
        ],
        "ThenList": [
          "should raise engagement office team mailbox changed event"
        ],
        "Children": []
      },
      {
        "$id": "2344",
        "FileName": "should_raise_event_when_team_mailbox_changed.cs",
        "Description": "when team mailbox of coordinate office is empty",
        "WhenList": [
          "set up team mail box as empty"
        ],
        "ThenList": [
          "should raise event with team mailbox value is null"
        ],
        "Children": []
      },
      {
        "$id": "2345",
        "FileName": "should_raise_event_when_team_mailbox_changed.cs",
        "Description": "when team mailbox of delegated coordinate office changed",
        "WhenList": [
          "update coordinate office team mail box"
        ],
        "ThenList": [
          "should raise engagement office team mailbox changed event"
        ],
        "Children": []
      },
      {
        "$id": "2346",
        "FileName": "should_raise_event_when_team_mailbox_changed.cs",
        "Description": "when team mailbox of work office changed",
        "WhenList": [
          "update work office team mail box"
        ],
        "ThenList": [
          "should raise engagement office team mailbox changed event"
        ],
        "Children": []
      },
      {
        "$id": "2347",
        "FileName": "should_raise_event_when_team_mailbox_changed.cs",
        "Description": "when team mailbox of work office is empty",
        "WhenList": [
          "update work office team mail box to empty"
        ],
        "ThenList": [
          "should raise event with team mailbox as null"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2348",
    "FileName": "should_raise_office_list_changed_into_event_store_when_update_engagement_administrators.cs",
    "Description": "should raise office list changed into event store when update engagement administrators",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2349",
        "FileName": "should_raise_office_list_changed_into_event_store_when_update_engagement_administrators.cs",
        "Description": "add administartor",
        "WhenList": [
          "update admin"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2350",
    "FileName": "should_raise_restricted_engagement_acl_changed_event_when_inactive_staff.cs",
    "Description": "should raise restricted engagement acl changed event when inactive staff",
    "WhenList": [
      "invativate staff"
    ],
    "ThenList": [
      "should return no content",
      "should generate restricted engagement acl changed event"
    ],
    "Children": []
  },
  {
    "$id": "2351",
    "FileName": "should_save_engagement_created_event_into_eventstore.cs",
    "Description": "should save engagement created event into eventstore",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2352",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should create engagement in eventstore",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should save event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "2353",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should has basic engagement information",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should with basic engagement information"
        ],
        "Children": []
      },
      {
        "$id": "2354",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should has coordinating office information",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should with basic engagement information"
        ],
        "Children": []
      },
      {
        "$id": "2355",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should have engagement administrators information in eventstore",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should with basic engagement information",
          "should with work office information"
        ],
        "Children": []
      },
      {
        "$id": "2356",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should has secondary contact in coordinating office",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should raise engagement create event with secondary"
        ],
        "Children": []
      },
      {
        "$id": "2357",
        "FileName": "should_save_engagement_created_event_into_eventstore.cs",
        "Description": "should enable show in my team with primary and secondary contact",
        "WhenList": [
          "of engagement is created"
        ],
        "ThenList": [
          "should raise engagement create event with in my team enabled"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2358",
    "FileName": "should_save_engagement_event_with_modifier_info_into_eventstore.cs",
    "Description": "should save engagement event with modifier info into eventstore",
    "WhenList": [
      "of engagement is created"
    ],
    "ThenList": [
      "should save event into eventstore with modifier info"
    ],
    "Children": []
  },
  {
    "$id": "2359",
    "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
    "Description": "should raise event into eventstore when subscribed office change",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2360",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when add subscribed office",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event",
          "sould has modifer information"
        ],
        "Children": []
      },
      {
        "$id": "2361",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when add subscribed office with secondary contact",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2362",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when add subscribed office with team mailbox",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2363",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when remove subscribed office",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2364",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when remove subscribed office secondary contact",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2365",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when remove subscribed office with office engagement admin",
        "WhenList": [
          "remove engagement work offices"
        ],
        "ThenList": [
          "should raise acl changed event"
        ],
        "Children": []
      },
      {
        "$id": "2366",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when change subscribed office",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should replay engagement with office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2367",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when change show in my team",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should change show in my team to false"
        ],
        "Children": []
      },
      {
        "$id": "2368",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when update subscribed office primary contact",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should not raise engagement office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2369",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when update subscribed office secondary contact",
        "WhenList": [
          "change engagement work offices"
        ],
        "ThenList": [
          "should not raise engagement office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2370",
        "FileName": "should_save_engagement_office_list_changed_event_into_eventstore.cs",
        "Description": "when exchange primary contact and secondary contact of subscribed office",
        "WhenList": [
          "exchange contacts"
        ],
        "ThenList": [
          "should not raise engagement office list changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2371",
    "FileName": "when_engagement_restriction_status_changed.cs",
    "Description": "when engagement restriction status changed",
    "WhenList": [
      "update engagement name"
    ],
    "ThenList": [
      "should raise engagement restriction status changed event"
    ],
    "Children": []
  },
  {
    "$id": "2372",
    "FileName": "when_engagement_restriction_status_changed.cs",
    "Description": "when engagement restriction status not changed",
    "WhenList": [
      "update engagement name"
    ],
    "ThenList": [
      "should raise engagement restriction status changed event"
    ],
    "Children": []
  },
  {
    "$id": "2373",
    "FileName": "when_exporting_assignments_in_multi_clients.cs",
    "Description": "when exporting assignments in multi clients",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2374",
        "FileName": "when_exporting_assignments_in_multi_clients.cs",
        "Description": "when exporting assignments at ibm",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should export assignment at ibm",
          "should not export assignmen at tw or google"
        ],
        "Children": []
      },
      {
        "$id": "2375",
        "FileName": "when_exporting_assignments_in_multi_clients.cs",
        "Description": "when exporting assignments at tw",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should export assignment at tw",
          "should not export assignmen at ibm or google"
        ],
        "Children": []
      },
      {
        "$id": "2376",
        "FileName": "when_exporting_assignments_in_multi_clients.cs",
        "Description": "when exporting assignments at google",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should export assignment at google",
          "should not export assignmen at ibm or tw"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2377",
    "FileName": "when_exporting_assignments_in_multi_engagements.cs",
    "Description": "when exporting assignments in multi engagements",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should export long term assignment",
      "should not export local assignment"
    ],
    "Children": []
  },
  {
    "$id": "2378",
    "FileName": "when_exporting_assignments_in_one_engagement.cs",
    "Description": "when exporting assignments in one engagement",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should export assignment that without assignment type",
      "should export assignment that with current assignment type"
    ],
    "Children": []
  },
  {
    "$id": "2379",
    "FileName": "when_exporting_empty_assignments.cs",
    "Description": "when exporting empty assignments",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "exported filename should start with engagement full name and appended with text of assignments",
      "should export headers"
    ],
    "Children": []
  },
  {
    "$id": "2380",
    "FileName": "when_getting_engagement_import_and_export_link.cs",
    "Description": "when getting engagement import and export link",
    "WhenList": [
      "get engagement"
    ],
    "ThenList": [
      "should have import link",
      "should have export link",
      "should not have import link",
      "should not have export link"
    ],
    "Children": [
      {
        "$id": "2381",
        "FileName": "when_getting_engagement_import_and_export_link.cs",
        "Description": "with global admin",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2382",
        "FileName": "when_getting_engagement_import_and_export_link.cs",
        "Description": "with coordinating office primary contact",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2383",
        "FileName": "when_getting_engagement_import_and_export_link.cs",
        "Description": "with coordinating office secondary contact",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2384",
        "FileName": "when_getting_engagement_import_and_export_link.cs",
        "Description": "with subscribed office primary contact",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2385",
        "FileName": "when_getting_engagement_import_and_export_link.cs",
        "Description": "with subscribed office secondary contact",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2386",
        "FileName": "when_getting_engagement_import_and_export_link.cs",
        "Description": "with delegated office primary contact",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2387",
        "FileName": "when_getting_engagement_import_and_export_link.cs",
        "Description": "with delegated office secondary contact",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2388",
        "FileName": "when_getting_engagement_import_and_export_link.cs",
        "Description": "with staff who is not any kind of contact",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should not have import link",
          "should not have export link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2389",
    "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
    "Description": "when getting restricted engagement import and export link",
    "WhenList": [
      "get engagement"
    ],
    "ThenList": [
      "should have import link",
      "should have export link",
      "should not have import link",
      "should not have export link"
    ],
    "Children": [
      {
        "$id": "2390",
        "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
        "Description": "with global admin",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2391",
        "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
        "Description": "with coordinating office primary contact who is in acl",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2392",
        "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
        "Description": "with coordinating office secondary contact who is in acl",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2393",
        "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
        "Description": "with subscribed office primary contact who is in acl",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2394",
        "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
        "Description": "with subscribed office secondary contact who is in acl",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2395",
        "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
        "Description": "with delegated office primary contact who is in acl",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2396",
        "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
        "Description": "with delegated office secondary contact who is in acl",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should have import link",
          "should have export link"
        ],
        "Children": []
      },
      {
        "$id": "2397",
        "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
        "Description": "with staff who is not any kind of contact though he or she is in the acl",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should not have import link",
          "should not have export link"
        ],
        "Children": []
      },
      {
        "$id": "2398",
        "FileName": "when_getting_restricted_engagement_import_and_export_link.cs",
        "Description": "with staff who is primary contact though he or she is not in the acl",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should also have import link",
          "should also have export link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2399",
    "FileName": "when_find_engagement_resource_by_id.cs",
    "Description": "when find engagement resource by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2400",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when find engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed and load all related data",
          "should succeed return schedule method",
          "should return online schedule enabled for responsible offices",
          "should get engagement admin"
        ],
        "Children": []
      },
      {
        "$id": "2401",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when find engagement resource by id given schedule method is online only",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed return schedule method"
        ],
        "Children": []
      },
      {
        "$id": "2402",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when find restricted engagement resource by id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed and load all related data",
          "shoul not get private restricted engagement info"
        ],
        "Children": []
      },
      {
        "$id": "2403",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when find engagement resource by id with office engagement admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed return work office with office engagement admin"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2404",
    "FileName": "when_find_inactive_engagement_by_id.cs",
    "Description": "when find inactive engagement by id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return only read only links"
    ],
    "Children": []
  },
  {
    "$id": "2405",
    "FileName": "when_get_engagement_kpi_links.cs",
    "Description": "when get engagement kpi links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2406",
        "FileName": "when_get_engagement_kpi_links.cs",
        "Description": "when engagement practice type is not technology",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return only read only links"
        ],
        "Children": []
      },
      {
        "$id": "2407",
        "FileName": "when_get_engagement_kpi_links.cs",
        "Description": "when engagement practice type is technology",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return only read only links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2408",
    "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
    "Description": "when get engagement with impersonate link for my mobility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2409",
        "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
        "Description": "when get engagement by global admin",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get impersonate link"
        ],
        "Children": []
      },
      {
        "$id": "2410",
        "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
        "Description": "when get engagement by coordinating office primary contact",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get impersonate link"
        ],
        "Children": []
      },
      {
        "$id": "2411",
        "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
        "Description": "when get engagement by coordinating office staff",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get impersonate link"
        ],
        "Children": []
      },
      {
        "$id": "2412",
        "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
        "Description": "when get engagement by coordinating office secondary contact",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get impersonate link"
        ],
        "Children": []
      },
      {
        "$id": "2413",
        "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
        "Description": "when get engagement by staff from delegated coordinating office",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get impersonate link"
        ],
        "Children": []
      },
      {
        "$id": "2414",
        "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
        "Description": "when get engagement by staff from subscribed office",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get impersonate link"
        ],
        "Children": []
      },
      {
        "$id": "2415",
        "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
        "Description": "when get engagement by coordinate office primary contact who is not from engagement offices",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get impersonate link"
        ],
        "Children": []
      },
      {
        "$id": "2416",
        "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
        "Description": "when get engagement by coordinate office secondary contact who is not from engagement offices",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get impersonate link"
        ],
        "Children": []
      },
      {
        "$id": "2417",
        "FileName": "when_get_engagement_with_impersonate_link_for_myMobility.cs",
        "Description": "when get engagement by staff who is not related to engagement",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get impersonate link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2418",
    "FileName": "when_get_the_responsible_offices_for_engagements.cs",
    "Description": "when get the responsible offices for engagements",
    "WhenList": [
      "when get responsible office by search criteria"
    ],
    "ThenList": [
      "should return the engagement with the given name"
    ],
    "Children": []
  },
  {
    "$id": "2419",
    "FileName": "when_activate_assignee_with_inactive_engagement.cs",
    "Description": "when activate assignee with inactive engagement",
    "WhenList": [
      "send update status request"
    ],
    "ThenList": [
      "should return ok",
      "should activate assignee"
    ],
    "Children": []
  },
  {
    "$id": "2420",
    "FileName": "when_inactivate_engagement.cs",
    "Description": "when inactivate engagement",
    "WhenList": [
      "send update status request"
    ],
    "ThenList": [
      "should return ok",
      "should inactivate engagement"
    ],
    "Children": []
  },
  {
    "$id": "2421",
    "FileName": "when_inactivate_engagement_and_mymobility_fails_to_inactivate_engagement.cs",
    "Description": "when inactivate engagement and mymobility fails to inactivate engagement",
    "WhenList": [
      "send update status request"
    ],
    "ThenList": [
      "should return error",
      "should not inactivate engagement"
    ],
    "Children": []
  },
  {
    "$id": "2422",
    "FileName": "when_inactivate_engagement_with_assignees_with_different_statuses.cs",
    "Description": "when inactivate engagement with assignees with different statuses",
    "WhenList": [
      "send update status request"
    ],
    "ThenList": [
      "should return ok",
      "should normally inactivate active assignees",
      "should not touch inactivate inactive assignees",
      "should not touch inactive by go migration assignee",
      "should not touch pending assignee",
      "should not touch pending deletion assignee",
      "should not touch deleted assignee"
    ],
    "Children": []
  },
  {
    "$id": "2423",
    "FileName": "when_inactivate_engagement_with_assignees_with_multiple_inactive_engagements.cs",
    "Description": "when inactivate engagement with assignees with multiple inactive engagements",
    "WhenList": [
      "send update status request"
    ],
    "ThenList": [
      "should return ok",
      "should only inactivate assignee with no active engagements left",
      "should not touch assignee not related to current engagement"
    ],
    "Children": []
  },
  {
    "$id": "2424",
    "FileName": "when_inactivate_engagement_with_assignees_with_only_one_engagement.cs",
    "Description": "when inactivate engagement with assignees with only one engagement",
    "WhenList": [
      "send update status request"
    ],
    "ThenList": [
      "should return ok",
      "should inactivate all assignees"
    ],
    "Children": []
  },
  {
    "$id": "2425",
    "FileName": "when_reactivate_engagement.cs",
    "Description": "when reactivate engagement",
    "WhenList": [
      "send update status request"
    ],
    "ThenList": [
      "should return ok",
      "should keep assignee inactive"
    ],
    "Children": []
  },
  {
    "$id": "2426",
    "FileName": "when_try_to_inactivate_engagement_by_invalid_user.cs",
    "Description": "when try to inactivate engagement by invalid user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2427",
        "FileName": "when_try_to_inactivate_engagement_by_invalid_user.cs",
        "Description": "when try to inactivate engagement by global admin",
        "WhenList": [
          "send update status request"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "2428",
        "FileName": "when_try_to_inactivate_engagement_by_invalid_user.cs",
        "Description": "when try to inactivate engagement by staff from coordinating office",
        "WhenList": [
          "send update status request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2429",
        "FileName": "when_try_to_inactivate_engagement_by_invalid_user.cs",
        "Description": "when try to inactivate engagement by staff from delegated office",
        "WhenList": [
          "send update status request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2430",
        "FileName": "when_try_to_inactivate_engagement_by_invalid_user.cs",
        "Description": "when try to inactivate engagement by staff from subscribed office",
        "WhenList": [
          "send update status request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2431",
    "FileName": "when_get_engagement_briefing_notification_kpi_overview.cs",
    "Description": "when get engagement briefing notification kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2432",
        "FileName": "when_get_engagement_briefing_notification_kpi_overview.cs",
        "Description": "when there are multiple workrecords in three offices for tax engagement",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2433",
        "FileName": "when_get_engagement_briefing_notification_kpi_overview.cs",
        "Description": "when there are no workrecords in three offices for immigration engagement",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2434",
        "FileName": "when_get_engagement_briefing_notification_kpi_overview.cs",
        "Description": "when there are no workrecords in three offices for social security",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2435",
        "FileName": "when_get_engagement_briefing_notification_kpi_overview.cs",
        "Description": "when current year is less than 2015",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2436",
        "FileName": "when_get_engagement_briefing_notification_kpi_overview.cs",
        "Description": "when get technology engagement",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2437",
    "FileName": "when_get_office_briefing_notification_kpi_overview.cs",
    "Description": "when get office briefing notification kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2438",
        "FileName": "when_get_office_briefing_notification_kpi_overview.cs",
        "Description": "when there are multiple workrecords in three offices for tax engagement",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2439",
        "FileName": "when_get_office_briefing_notification_kpi_overview.cs",
        "Description": "when there are no workrecords in three offices for social security engagement",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2440",
        "FileName": "when_get_office_briefing_notification_kpi_overview.cs",
        "Description": "when there are no workrecords in three offices for immigration engagement",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2441",
        "FileName": "when_get_office_briefing_notification_kpi_overview.cs",
        "Description": "when current year is less than 2015",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2442",
        "FileName": "when_get_office_briefing_notification_kpi_overview.cs",
        "Description": "when get technology engagement",
        "WhenList": [
          "get kpi overview"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2443",
    "FileName": "when_get_engagement_cycle_time_kpi_overview.cs",
    "Description": "when get engagement cycle time kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2444",
        "FileName": "when_get_engagement_cycle_time_kpi_overview.cs",
        "Description": "when current year is greater than 2015 for tax engagement",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2445",
        "FileName": "when_get_engagement_cycle_time_kpi_overview.cs",
        "Description": "when no workrecords",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2446",
        "FileName": "when_get_engagement_cycle_time_kpi_overview.cs",
        "Description": "when current year is less or equal to 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2447",
        "FileName": "when_get_engagement_cycle_time_kpi_overview.cs",
        "Description": "when year is invalid",
        "WhenList": [],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "2448",
        "FileName": "when_get_engagement_cycle_time_kpi_overview.cs",
        "Description": "when engagement practice type is immigration",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2449",
        "FileName": "when_get_engagement_cycle_time_kpi_overview.cs",
        "Description": "when engagement practice type is social security",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2450",
        "FileName": "when_get_engagement_cycle_time_kpi_overview.cs",
        "Description": "when engagement practice type is technology",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2451",
    "FileName": "when_get_office_cycle_time_kpi_overview.cs",
    "Description": "when get office cycle time kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2452",
        "FileName": "when_get_office_cycle_time_kpi_overview.cs",
        "Description": "when current year is greater than 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2453",
        "FileName": "when_get_office_cycle_time_kpi_overview.cs",
        "Description": "when there are no workrecords",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2454",
        "FileName": "when_get_office_cycle_time_kpi_overview.cs",
        "Description": "when current year is less or euqal to 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2455",
        "FileName": "when_get_office_cycle_time_kpi_overview.cs",
        "Description": "when practis type is immigration",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2456",
        "FileName": "when_get_office_cycle_time_kpi_overview.cs",
        "Description": "when practis type is social security",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      },
      {
        "$id": "2457",
        "FileName": "when_get_office_cycle_time_kpi_overview.cs",
        "Description": "when practis type is technology",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return cycle time"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2458",
    "FileName": "when_get_engagement_frontload_kpi_overview.cs",
    "Description": "when get engagement frontload kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2459",
        "FileName": "when_get_engagement_frontload_kpi_overview.cs",
        "Description": "when current year is greater than 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2460",
        "FileName": "when_get_engagement_frontload_kpi_overview.cs",
        "Description": "when there are no workrecords",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2461",
        "FileName": "when_get_engagement_frontload_kpi_overview.cs",
        "Description": "when current year is less or equal to 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2462",
        "FileName": "when_get_engagement_frontload_kpi_overview.cs",
        "Description": "when engagement practice type is immigration",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2463",
        "FileName": "when_get_engagement_frontload_kpi_overview.cs",
        "Description": "when engagement practice type is social security",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2464",
        "FileName": "when_get_engagement_frontload_kpi_overview.cs",
        "Description": "when engagement practice type is technology",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2465",
    "FileName": "when_get_office_frontload_kpi_overview.cs",
    "Description": "when get office frontload kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2466",
        "FileName": "when_get_office_frontload_kpi_overview.cs",
        "Description": "when current year is greater than 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2467",
        "FileName": "when_get_office_frontload_kpi_overview.cs",
        "Description": "when there is no work record",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2468",
        "FileName": "when_get_office_frontload_kpi_overview.cs",
        "Description": "when current year is less or equal to 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2469",
        "FileName": "when_get_office_frontload_kpi_overview.cs",
        "Description": "when engagement practice type is immigration",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2470",
        "FileName": "when_get_office_frontload_kpi_overview.cs",
        "Description": "when engagement practice type is social security",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      },
      {
        "$id": "2471",
        "FileName": "when_get_office_frontload_kpi_overview.cs",
        "Description": "when engagement practice type is technology",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return frontload"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2472",
    "FileName": "when_get_engagement_global_compliance_kpi_overview.cs",
    "Description": "when get engagement global compliance kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2473",
        "FileName": "when_get_engagement_global_compliance_kpi_overview.cs",
        "Description": "when current year is 2016",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2474",
            "FileName": "when_get_engagement_global_compliance_kpi_overview.cs",
            "Description": "when show current year",
            "WhenList": [],
            "ThenList": [
              "should return 200 OK",
              "should return global compliance"
            ],
            "Children": []
          },
          {
            "$id": "2475",
            "FileName": "when_get_engagement_global_compliance_kpi_overview.cs",
            "Description": "when work records in different milestones",
            "WhenList": [],
            "ThenList": [
              "should return global compliance"
            ],
            "Children": []
          },
          {
            "$id": "2476",
            "FileName": "when_get_engagement_global_compliance_kpi_overview.cs",
            "Description": "when show last year",
            "WhenList": [],
            "ThenList": [
              "should not return global compliance"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2477",
        "FileName": "when_get_engagement_global_compliance_kpi_overview.cs",
        "Description": "when get global compliance kpi overview in 2016 for without work record",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return global compliance"
        ],
        "Children": []
      },
      {
        "$id": "2478",
        "FileName": "when_get_engagement_global_compliance_kpi_overview.cs",
        "Description": "when engagement practice type is immigration",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should not return global compliance"
        ],
        "Children": []
      },
      {
        "$id": "2479",
        "FileName": "when_get_engagement_global_compliance_kpi_overview.cs",
        "Description": "when engagement practice type is social security",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should not return global compliance"
        ],
        "Children": []
      },
      {
        "$id": "2480",
        "FileName": "when_get_engagement_global_compliance_kpi_overview.cs",
        "Description": "when engagement practice type is technology",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should not return global compliance"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2481",
    "FileName": "when_get_office_global_compliance_kpi_overview.cs",
    "Description": "when get office global compliance kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2482",
        "FileName": "when_get_office_global_compliance_kpi_overview.cs",
        "Description": "when get global compliance kpi overview in 2016 for engagement without work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return OK",
          "should return global compliance"
        ],
        "Children": []
      },
      {
        "$id": "2483",
        "FileName": "when_get_office_global_compliance_kpi_overview.cs",
        "Description": "when get engagement global compliance kpi overview in 2016",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2484",
            "FileName": "when_get_office_global_compliance_kpi_overview.cs",
            "Description": "when get office global compliance for current year",
            "WhenList": [
              "general staff from subscribed office get kpi overview"
            ],
            "ThenList": [
              "should return OK",
              "should return global compliance"
            ],
            "Children": []
          },
          {
            "$id": "2485",
            "FileName": "when_get_office_global_compliance_kpi_overview.cs",
            "Description": "when get office global compliance for last year",
            "WhenList": [
              "general staff from subscribed office get kpi overview"
            ],
            "ThenList": [
              "should return OK",
              "should return global compliance"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2486",
        "FileName": "when_get_office_global_compliance_kpi_overview.cs",
        "Description": "when get engagement global compliance kpi overview for social security",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not return global compliance"
        ],
        "Children": []
      },
      {
        "$id": "2487",
        "FileName": "when_get_office_global_compliance_kpi_overview.cs",
        "Description": "when get engagement global compliance kpi overview for immigration",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not return global compliance"
        ],
        "Children": []
      },
      {
        "$id": "2488",
        "FileName": "when_get_office_global_compliance_kpi_overview.cs",
        "Description": "when get engagement global compliance kpi overview for technology",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not return global compliance"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2489",
    "FileName": "when_get_engagement_service_evaluation_kpi_overview.cs",
    "Description": "when get engagement service evaluation kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2490",
        "FileName": "when_get_engagement_service_evaluation_kpi_overview.cs",
        "Description": "when get tax engagement service evaluation kpi overview for year larger than 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2491",
        "FileName": "when_get_engagement_service_evaluation_kpi_overview.cs",
        "Description": "when get tax engagement service evaluation kpi overview with service evaluation setting off",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should not return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2492",
        "FileName": "when_get_engagement_service_evaluation_kpi_overview.cs",
        "Description": "when get tax engagement service evaluation kpi overview for year less than 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2493",
        "FileName": "when_get_engagement_service_evaluation_kpi_overview.cs",
        "Description": "when get tax engagement service evaluation kpi overview without workrecords",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2494",
        "FileName": "when_get_engagement_service_evaluation_kpi_overview.cs",
        "Description": "when get immigration engagement service evaluation kpi overview",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2495",
        "FileName": "when_get_engagement_service_evaluation_kpi_overview.cs",
        "Description": "when get social security engagement service evaluation kpi overview",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should not return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2496",
        "FileName": "when_get_engagement_service_evaluation_kpi_overview.cs",
        "Description": "when get technology engagement service evaluation kpi overview",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should not return service evaluation"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2497",
    "FileName": "when_get_office_service_evaluation_kpi_overview.cs",
    "Description": "when get office service evaluation kpi overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2498",
        "FileName": "when_get_office_service_evaluation_kpi_overview.cs",
        "Description": "when get tax for year larger than 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2499",
        "FileName": "when_get_office_service_evaluation_kpi_overview.cs",
        "Description": "when get tax for year less or euqal to 2015",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2500",
        "FileName": "when_get_office_service_evaluation_kpi_overview.cs",
        "Description": "when there are no workrecords for tax engagement",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2501",
        "FileName": "when_get_office_service_evaluation_kpi_overview.cs",
        "Description": "when there are no workrecords for immigration engagement",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2502",
        "FileName": "when_get_office_service_evaluation_kpi_overview.cs",
        "Description": "when get tax engagement service evaluation kpi overview with service evaluation setting off",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should not return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2503",
        "FileName": "when_get_office_service_evaluation_kpi_overview.cs",
        "Description": "when practice type is social security",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      },
      {
        "$id": "2504",
        "FileName": "when_get_office_service_evaluation_kpi_overview.cs",
        "Description": "when practice type is technology",
        "WhenList": [],
        "ThenList": [
          "should return 200 OK",
          "should return service evaluation"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2505",
    "FileName": "when_download_engagement_frontloads_and_cycletimes.cs",
    "Description": "when download engagement frontloads and cycletimes",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2506",
        "FileName": "when_download_engagement_frontloads_and_cycletimes.cs",
        "Description": "when download engagement frontloads and cycletimes by staff not contact but in workoffice of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "2507",
        "FileName": "when_download_engagement_frontloads_and_cycletimes.cs",
        "Description": "when download engagement frontload and cycletime by staff not on acl of restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2508",
    "FileName": "when_download_engagement_service_evaluation_kpi.cs",
    "Description": "when download engagement service evaluation kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2509",
        "FileName": "when_download_engagement_service_evaluation_kpi.cs",
        "Description": "when download engagement service evaluation kpi by staff not contact but in workoffice of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "2510",
        "FileName": "when_download_engagement_service_evaluation_kpi.cs",
        "Description": "when download engagement service evaluation kpi by staff not on acl of restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2511",
    "FileName": "when_get_engagement_kpi_settings.cs",
    "Description": "when get engagement kpi settings",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2512",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get engagement kpi settings by staff in working office of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should not return update link"
        ],
        "Children": []
      },
      {
        "$id": "2513",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get engagement kpi settings by staff not on acl of restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2514",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get engagement kpi settings by primary or secondary contact in coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not return update link"
        ],
        "Children": []
      },
      {
        "$id": "2515",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get engagement kpi settings by primary or secondary contact in delegating coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not return update link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2516",
    "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
    "Description": "when show engagement external kpi frontloads and cycletimes",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2517",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when show engagement frontload and cycletime by staff not contact but in workoffice of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "2518",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when show engagement frontload and cycletime by staff not on acl of restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2519",
    "FileName": "when_show_engagement_internal_briefing_notification_kpi.cs",
    "Description": "when show engagement internal briefing notification kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2520",
        "FileName": "when_show_engagement_internal_briefing_notification_kpi.cs",
        "Description": "when show engagement briefing notification by staff from subscribed office of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2521",
        "FileName": "when_show_engagement_internal_briefing_notification_kpi.cs",
        "Description": "when show engagement briefing notification by staff not on acl of restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2522",
        "FileName": "when_show_engagement_internal_briefing_notification_kpi.cs",
        "Description": "when technology engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2523",
    "FileName": "when_show_engagement_internal_cycletimes_kpi.cs",
    "Description": "when show engagement internal cycletimes kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2524",
        "FileName": "when_show_engagement_internal_cycletimes_kpi.cs",
        "Description": "when show engagement cycletimes by staff not contact but in coordinate office of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "2525",
        "FileName": "when_show_engagement_internal_cycletimes_kpi.cs",
        "Description": "when show engagement frontload by staff not on acl of restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2526",
        "FileName": "when_show_engagement_internal_cycletimes_kpi.cs",
        "Description": "when technology engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response not found"
        ],
        "Children": []
      },
      {
        "$id": "2527",
        "FileName": "when_show_engagement_internal_cycletimes_kpi.cs",
        "Description": "when immigration engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response not found"
        ],
        "Children": []
      },
      {
        "$id": "2528",
        "FileName": "when_show_engagement_internal_cycletimes_kpi.cs",
        "Description": "when social security engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2529",
    "FileName": "when_show_engagement_internal_frontloads_kpi.cs",
    "Description": "when show engagement internal frontload kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2530",
        "FileName": "when_show_engagement_internal_frontloads_kpi.cs",
        "Description": "when show engagement frontload by staff not contact but in coordinate office of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "2531",
        "FileName": "when_show_engagement_internal_frontloads_kpi.cs",
        "Description": "when show engagement frontload by staff not on acl of restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2532",
        "FileName": "when_show_engagement_internal_frontloads_kpi.cs",
        "Description": "when technology engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response not found"
        ],
        "Children": []
      },
      {
        "$id": "2533",
        "FileName": "when_show_engagement_internal_frontloads_kpi.cs",
        "Description": "when immigration engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response not found"
        ],
        "Children": []
      },
      {
        "$id": "2534",
        "FileName": "when_show_engagement_internal_frontloads_kpi.cs",
        "Description": "when social security engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2535",
    "FileName": "when_show_engagement_internal_service_evaluation_kpi.cs",
    "Description": "when show engagement internal service evaluation kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2536",
        "FileName": "when_show_engagement_internal_service_evaluation_kpi.cs",
        "Description": "when show engagement service evaluation by staff not contact but in coordinating office of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      },
      {
        "$id": "2537",
        "FileName": "when_show_engagement_internal_service_evaluation_kpi.cs",
        "Description": "when show engagement service evaluation by staff not on acl of restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2538",
        "FileName": "when_show_engagement_internal_service_evaluation_kpi.cs",
        "Description": "when technology engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response not found"
        ],
        "Children": []
      },
      {
        "$id": "2539",
        "FileName": "when_show_engagement_internal_service_evaluation_kpi.cs",
        "Description": "when engagement service evaluation is off",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2540",
    "FileName": "when_update_engagement_kpi_settings.cs",
    "Description": "when update engagement kpi settings",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2541",
        "FileName": "when_update_engagement_kpi_settings.cs",
        "Description": "when update engagement kpi settings from non engagement elevated roles by non global admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2542",
    "FileName": "when_calculate_engagement_global_compliance.cs",
    "Description": "when calculate engagement global compliance",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2543",
        "FileName": "when_calculate_engagement_global_compliance.cs",
        "Description": "calculate global compliance for engagements",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should calculate global compliance for 2015",
          "should only generate one record for same year and same office"
        ],
        "Children": []
      },
      {
        "$id": "2544",
        "FileName": "when_calculate_engagement_global_compliance.cs",
        "Description": "should not calculate compliance for immi engagement",
        "WhenList": [
          "calculate global compliance"
        ],
        "ThenList": [
          "should not calculate global compliance for immi engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2545",
    "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
    "Description": "when download engagement frontloads and cycle time",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2546",
        "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
        "Description": "when there is an engagement with disabled kpi settings",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2547",
            "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
            "Description": "when there is one workrecord in the engagement with disabled frontload",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return excel"
            ],
            "Children": []
          },
          {
            "$id": "2548",
            "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
            "Description": "when there is one workrecord in the engagement with disabled cycle time",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return excel"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2549",
        "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
        "Description": "when there is an engagement with all kpi settings enabled",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2550",
            "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
            "Description": "when there is no workrecords in the engagement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should return excel"
            ],
            "Children": []
          },
          {
            "$id": "2551",
            "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
            "Description": "when there is one workrecord in the engagement with both frontload and cycletime",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "2552",
                "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
                "Description": "when get all country kpi average",
                "WhenList": [
                  "of"
                ],
                "ThenList": [
                  "should return exel"
                ],
                "Children": []
              },
              {
                "$id": "2553",
                "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
                "Description": "when get chile kpi average",
                "WhenList": [
                  "of"
                ],
                "ThenList": [
                  "should return exel"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "2554",
            "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
            "Description": "when there are multiple workrecords with frontload and cycletime",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "2555",
                "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
                "Description": "when get all countries kpi data",
                "WhenList": [
                  "of"
                ],
                "ThenList": [
                  "should return result"
                ],
                "Children": []
              },
              {
                "$id": "2556",
                "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
                "Description": "when get us kpi data",
                "WhenList": [
                  "of"
                ],
                "ThenList": [
                  "should return result"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "2557",
            "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
            "Description": "when there is workrecord without frontload and cycle time",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return result"
            ],
            "Children": []
          },
          {
            "$id": "2558",
            "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
            "Description": "when there is workrecord with frontload while without cycle time",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return result"
            ],
            "Children": []
          },
          {
            "$id": "2559",
            "FileName": "when_download_engagement_frontloads_and_cycle_time.cs",
            "Description": "when there is workrecord with cycle time while without frontload",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return result"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "2560",
    "FileName": "when_download_engagement_service_evaluation_kpi.cs",
    "Description": "when download engagement service evaluation kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2561",
        "FileName": "when_download_engagement_service_evaluation_kpi.cs",
        "Description": "when engagement does not have evaluation",
        "WhenList": [
          "download engagement service evaluation kpi"
        ],
        "ThenList": [
          "should return ok",
          "should return excel file with headers",
          "should get correct header",
          "should dispaly target values",
          "should average values all with null",
          "should display total values with zero"
        ],
        "Children": []
      },
      {
        "$id": "2562",
        "FileName": "when_download_engagement_service_evaluation_kpi.cs",
        "Description": "when engagement have evaluation",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2563",
            "FileName": "when_download_engagement_service_evaluation_kpi.cs",
            "Description": "when tax engagement",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "2564",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has one evaluation with 5 rate larger than 2",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2565",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has one evaluation with 5 rate less than 3",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2566",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has one evaluation without rate",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct participation values",
                  "should show null average values",
                  "should show none dissatisfaction",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2567",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has two evaluation with 5 rate",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2568",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when query with one country",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should filter out correct countries",
                  "should show country name in header"
                ],
                "Children": []
              },
              {
                "$id": "2569",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has two country",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2570",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement without participation rate setting",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "2571",
            "FileName": "when_download_engagement_service_evaluation_kpi.cs",
            "Description": "when immigration engagement",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "2572",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has one evaluation with 5 rate larger than 2",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2573",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has one evaluation with 5 rate less than 3",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2574",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has one evaluation without rate",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct participation values",
                  "should show null average values",
                  "should show none dissatisfaction",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2575",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has two evaluation with 5 rate",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2576",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when query with one country",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should filter out correct countries",
                  "should show country name in header"
                ],
                "Children": []
              },
              {
                "$id": "2577",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement has two country",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              },
              {
                "$id": "2578",
                "FileName": "when_download_engagement_service_evaluation_kpi.cs",
                "Description": "when engagement without participation rate setting",
                "WhenList": [
                  "download engagement service evaluation kpi"
                ],
                "ThenList": [
                  "should return ok",
                  "should show correct country values",
                  "should show correct total row",
                  "should show correct average row"
                ],
                "Children": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "$id": "2579",
    "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
    "Description": "when get engagement internal service evaluation kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2580",
        "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
        "Description": "when engagement does not have work record",
        "WhenList": [
          "get engagement service evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return records with na alpahbatical order"
        ],
        "Children": []
      },
      {
        "$id": "2581",
        "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
        "Description": "when tax engagement has work records",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2582",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when one work record with evaluation rate is larger than 2",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two record",
              "should return right values",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2583",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when one work record with evaluation rate is less than 3",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two records",
              "should return right values",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2584",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when one work record without evaluation rate",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two records",
              "should return right values",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2585",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when two work records in same office with evaluation rates",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two records",
              "should return right values",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2586",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when two work records in different office with different evaluation rates",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two records",
              "should return right values with differnt rank",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2587",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when two work records in different office with same evaluation rates",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two records",
              "should return right values with same rank",
              "should return correct average data"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2588",
        "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
        "Description": "when immigration engagement has work records",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2589",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when one work record with evaluation rate is larger than 2",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two records",
              "should return right values",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2590",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when one work record with evaluation rate is less than 3",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two record",
              "should return right values",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2591",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when one work record without evaluation rate",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two records",
              "should return right values",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2592",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when two work records in same office with evaluation rates",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two records",
              "should return right values",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2593",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when two work records in different office with different evaluation rates",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return two record",
              "should return right values with differnt rank",
              "should return correct average data"
            ],
            "Children": []
          },
          {
            "$id": "2594",
            "FileName": "when_get_engagement_internal_service_evaluation_kpi.cs",
            "Description": "when two work records in different office with same evaluation rates",
            "WhenList": [
              "get engagement service evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return three record",
              "should return right values with same rank",
              "should return correct average data"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "2595",
    "FileName": "when_get_engagement_kpi_settings.cs",
    "Description": "when get engagement kpi settings",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2596",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get tax engagement kpi settings at first load",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should return default value with disabled"
        ],
        "Children": []
      },
      {
        "$id": "2597",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get immigration engagement kpi settings at first load",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return default value with disabled"
        ],
        "Children": []
      },
      {
        "$id": "2598",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get social security engagement kpi settings at first load",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return default value with disabled"
        ],
        "Children": []
      },
      {
        "$id": "2599",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get technology engagement kpi settings at first load",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return null kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2600",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get tax engagement kpi setting with frontload enabled",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2601",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get tax engagement kpi settings with all settings",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2602",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get immigration kpi setting with service evaluation was turned off",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return default value with disabled"
        ],
        "Children": []
      },
      {
        "$id": "2603",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get social security engagement kpi setting with briefing enabled",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2604",
        "FileName": "when_get_engagement_kpi_settings.cs",
        "Description": "when get tax kpi setting with all kpi setting are turn on then turned off engagement evaluation",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return default value with disabled"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2605",
    "FileName": "when_get_engagement_kpi_settings_links.cs",
    "Description": "when get engagement kpi settings links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2606",
        "FileName": "when_get_engagement_kpi_settings_links.cs",
        "Description": "when get inactive engagement kpis",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not contain update kpi link"
        ],
        "Children": []
      },
      {
        "$id": "2607",
        "FileName": "when_get_engagement_kpi_settings_links.cs",
        "Description": "when get tax engagement kpi settings with not contain any kpi settings",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get none kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2608",
        "FileName": "when_get_engagement_kpi_settings_links.cs",
        "Description": "when get tax engagement kpi settings with disabled all settings",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get none kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2609",
        "FileName": "when_get_engagement_kpi_settings_links.cs",
        "Description": "when get tax engagement kpi settings with enabled all settings",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2610",
        "FileName": "when_get_engagement_kpi_settings_links.cs",
        "Description": "when get tax engagement kpi settings with disabled frontload enabled cycle time",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2611",
        "FileName": "when_get_engagement_kpi_settings_links.cs",
        "Description": "when get tax engagement kpi settings with enable frontload disabled cycle time",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2612",
        "FileName": "when_get_engagement_kpi_settings_links.cs",
        "Description": "when get immi engagement kpi settings with enabled all settings",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2613",
        "FileName": "when_get_engagement_kpi_settings_links.cs",
        "Description": "when get immi engagement kpi settings with turned off enagement evaluation at admin tab",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2614",
        "FileName": "when_get_engagement_kpi_settings_links.cs",
        "Description": "when get technology engagement kpi settings",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get kpi settings"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2615",
    "FileName": "when_get_engagement_service_evaluation_kpi.cs",
    "Description": "when get engagement service evaluation kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2616",
        "FileName": "when_get_engagement_service_evaluation_kpi.cs",
        "Description": "when engagement service evaluation not enabled",
        "WhenList": [
          "get engagement service evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return empty data"
        ],
        "Children": []
      },
      {
        "$id": "2617",
        "FileName": "when_get_engagement_service_evaluation_kpi.cs",
        "Description": "when get tax engagement service evaluation data",
        "WhenList": [
          "get engagement service evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return service evaluation kpi data with year after 2015"
        ],
        "Children": []
      },
      {
        "$id": "2618",
        "FileName": "when_get_engagement_service_evaluation_kpi.cs",
        "Description": "when get immigration engagement service evaluation data",
        "WhenList": [
          "get engagement service evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return service evaluation data"
        ],
        "Children": []
      },
      {
        "$id": "2619",
        "FileName": "when_get_engagement_service_evaluation_kpi.cs",
        "Description": "when get tax engagement service evaluation with two year data",
        "WhenList": [
          "get engagement service evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return service evaluation data"
        ],
        "Children": []
      },
      {
        "$id": "2620",
        "FileName": "when_get_engagement_service_evaluation_kpi.cs",
        "Description": "when get tax engagement service evaluation with workrecord service evaluation without answer",
        "WhenList": [
          "get engagement service evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return service evaluation data"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2621",
    "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
    "Description": "when show engagement external kpi frontloads and cycletimes",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2622",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there is no workrecords in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2623",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there is one workrecord in the engagement without frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2624",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there is one workrecord in the engagement has frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2625",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there is one workrecord in the engagement has frontload but not cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2626",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there are three workrecords in the engagement of same country same year all have frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2627",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there are three workrecords in the engagement of same country same year not all have frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2628",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there are three workrecords in the engagement of same country different year all have frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2629",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there are three workrecords in the engagement of different country same year all have frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result order by country name"
        ],
        "Children": []
      },
      {
        "$id": "2630",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there are three workrecords in the engagement of same country same year all have frontload and cycletime but with different status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2631",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there are two workrecords in different engagements of same country same year all have frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2632",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there one workrecord in the engagements with all kpis turn off of same country same year all have frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2633",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there one workrecord in the engagements with only frontload kpis turn on of same country same year all have frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result"
        ],
        "Children": []
      },
      {
        "$id": "2634",
        "FileName": "when_show_engagement_external_kpi_frontloads_and_cycletimes.cs",
        "Description": "when there one workrecord in the engagements with only cycletime kpis turn on of same country same year all have frontload and cycletime",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return result"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2635",
    "FileName": "when_show_engagement_global_compliance.cs",
    "Description": "when show engagement global compliance",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2636",
        "FileName": "when_show_engagement_global_compliance.cs",
        "Description": "when there is no tax return work record in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return global compliance"
        ],
        "Children": []
      },
      {
        "$id": "2637",
        "FileName": "when_show_engagement_global_compliance.cs",
        "Description": "when there is one completed work record in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return global compliance"
        ],
        "Children": []
      },
      {
        "$id": "2638",
        "FileName": "when_show_engagement_global_compliance.cs",
        "Description": "when there is one done work record in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return global compliance"
        ],
        "Children": []
      },
      {
        "$id": "2639",
        "FileName": "when_show_engagement_global_compliance.cs",
        "Description": "when there are 2015 and 2016 tax return work record",
        "WhenList": [
          "when show global compliance for 2016 in 2017"
        ],
        "ThenList": [
          "should return ok",
          "should return gobal compliance for 2016"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2640",
    "FileName": "when_show_engagement_global_compliance_about_uac.cs",
    "Description": "when show engagement global compliance about uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2641",
        "FileName": "when_show_engagement_global_compliance_about_uac.cs",
        "Description": "when corrdinating office staff want to show global compliance",
        "WhenList": [
          "try to show global compliance"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "2642",
        "FileName": "when_show_engagement_global_compliance_about_uac.cs",
        "Description": "when working office staff want to show global compliance",
        "WhenList": [
          "try to show global compliance"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2643",
        "FileName": "when_show_engagement_global_compliance_about_uac.cs",
        "Description": "when try to show global compliance for current year",
        "WhenList": [
          "try to show global compliance in current year"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2644",
    "FileName": "when_show_engagement_internal_kpi_briefing.cs",
    "Description": "when show engagement internal kpi briefing",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2645",
        "FileName": "when_show_engagement_internal_kpi_briefing.cs",
        "Description": "when there is no workrecords in the engagement for tax",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office with null data"
        ],
        "Children": []
      },
      {
        "$id": "2646",
        "FileName": "when_show_engagement_internal_kpi_briefing.cs",
        "Description": "when there is one workrecord without briefing notification in the engagement for tax",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office without value"
        ],
        "Children": []
      },
      {
        "$id": "2647",
        "FileName": "when_show_engagement_internal_kpi_briefing.cs",
        "Description": "when there is one workrecord with briefing notification in the engagement for tax",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office with value"
        ],
        "Children": []
      },
      {
        "$id": "2648",
        "FileName": "when_show_engagement_internal_kpi_briefing.cs",
        "Description": "when there are two workrecords with briefing notification in beijing office and one workrecord in chile office for tax engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return two offices with value"
        ],
        "Children": []
      },
      {
        "$id": "2649",
        "FileName": "when_show_engagement_internal_kpi_briefing.cs",
        "Description": "when show working office which once had work records but unsubscribed from engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return unsubcribed office with kpi value"
        ],
        "Children": []
      },
      {
        "$id": "2650",
        "FileName": "when_show_engagement_internal_kpi_briefing.cs",
        "Description": "when there are multiple workrecords in three offices for tax engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return two offices with value"
        ],
        "Children": []
      },
      {
        "$id": "2651",
        "FileName": "when_show_engagement_internal_kpi_briefing.cs",
        "Description": "when there are three workrecords in the engagement of same country same year all have briefing notification time but with different status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return result order by offices"
        ],
        "Children": []
      },
      {
        "$id": "2652",
        "FileName": "when_show_engagement_internal_kpi_briefing.cs",
        "Description": "when there are multiple workrecords in two offices for immigration engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return two offices with value"
        ],
        "Children": []
      },
      {
        "$id": "2653",
        "FileName": "when_show_engagement_internal_kpi_briefing.cs",
        "Description": "when there are multiple workrecords in two offices for social security engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return two offices with value"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2654",
    "FileName": "when_show_engagement_internal_kpi_cycletimes.cs",
    "Description": "when show engagement internal kpi cycletimes",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2655",
        "FileName": "when_show_engagement_internal_kpi_cycletimes.cs",
        "Description": "when there is no workrecords in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office with null data"
        ],
        "Children": []
      },
      {
        "$id": "2656",
        "FileName": "when_show_engagement_internal_kpi_cycletimes.cs",
        "Description": "when there is one workrecord without cycle time in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office without value"
        ],
        "Children": []
      },
      {
        "$id": "2657",
        "FileName": "when_show_engagement_internal_kpi_cycletimes.cs",
        "Description": "when two workrecord without cycle time and one is in workoffices and the other is not in workoffices of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office without value"
        ],
        "Children": []
      },
      {
        "$id": "2658",
        "FileName": "when_show_engagement_internal_kpi_cycletimes.cs",
        "Description": "when two workrecord and one without cycle time in workoffices and the other with cycle time not in workoffices of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office with value and one office without value"
        ],
        "Children": []
      },
      {
        "$id": "2659",
        "FileName": "when_show_engagement_internal_kpi_cycletimes.cs",
        "Description": "when there are three offices in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return result order by offices"
        ],
        "Children": []
      },
      {
        "$id": "2660",
        "FileName": "when_show_engagement_internal_kpi_cycletimes.cs",
        "Description": "when there are three workrecords in the engagement of same country same year all have frontload and cycletime but with different status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return result order by offices"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2661",
    "FileName": "when_show_engagement_internal_kpi_frontloads.cs",
    "Description": "when show engagement internal kpi frontloads",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2662",
        "FileName": "when_show_engagement_internal_kpi_frontloads.cs",
        "Description": "when there is no workrecords in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office with null data"
        ],
        "Children": []
      },
      {
        "$id": "2663",
        "FileName": "when_show_engagement_internal_kpi_frontloads.cs",
        "Description": "when there is one workrecord without frontload in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office without value"
        ],
        "Children": []
      },
      {
        "$id": "2664",
        "FileName": "when_show_engagement_internal_kpi_frontloads.cs",
        "Description": "when two workrecord without frontload and one is in workoffices and the other is not in workoffices of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office without value"
        ],
        "Children": []
      },
      {
        "$id": "2665",
        "FileName": "when_show_engagement_internal_kpi_frontloads.cs",
        "Description": "when two workrecord and one without frontload in workoffices and the other with frontlaod not in workoffices of the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return one office with value and one office without value"
        ],
        "Children": []
      },
      {
        "$id": "2666",
        "FileName": "when_show_engagement_internal_kpi_frontloads.cs",
        "Description": "when there are three offices in the engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return result order by offices"
        ],
        "Children": []
      },
      {
        "$id": "2667",
        "FileName": "when_show_engagement_internal_kpi_frontloads.cs",
        "Description": "when there are three workrecords in the engagement of same country same year all have frontload and cycletime but with different status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return result order by offices"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2668",
    "FileName": "when_try_to_show_non_tax_engagement_global_compliance.cs",
    "Description": "when try to show non tax engagement global compliance",
    "WhenList": [
      "try to show immigration engagement global compliance"
    ],
    "ThenList": [
      "should returun not found",
      "should return not found message"
    ],
    "Children": []
  },
  {
    "$id": "2669",
    "FileName": "when_update_engagement_kpi_settings.cs",
    "Description": "when update engagement kpi settings",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2670",
        "FileName": "when_update_engagement_kpi_settings.cs",
        "Description": "when update all kpi settings for tax engagment only with existing cycle time kpi",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should update cycle time and add all other kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2671",
        "FileName": "when_update_engagement_kpi_settings.cs",
        "Description": "when update all kpi settings for immi engagment with service evaluation enabled and with existing servie evaluation kpi settings",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should add briefing and update service evaluation kpi setting"
        ],
        "Children": []
      },
      {
        "$id": "2672",
        "FileName": "when_update_engagement_kpi_settings.cs",
        "Description": "when update all kpi settings for immi engagment with service evaluation disabled and with existing servie evaluation kpi settings",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should add briefing kpi and remove existing service evaluation kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2673",
        "FileName": "when_update_engagement_kpi_settings.cs",
        "Description": "when udpate all kpi settings for social secuirty engagement without any existing kpi settings and with service evaluation enabled",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should add briefing kpi settings"
        ],
        "Children": []
      },
      {
        "$id": "2674",
        "FileName": "when_update_engagement_kpi_settings.cs",
        "Description": "when only udpate briefing kpi settings for immi engagement with existing service evaluation kpi settings and with service evaluation enabled",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update briefing kpi settings and keep existing service evaluation settings"
        ],
        "Children": []
      },
      {
        "$id": "2675",
        "FileName": "when_update_engagement_kpi_settings.cs",
        "Description": "when update frontload cycle time only for immi engagement without any existing kpi settings and with service evaluation enabled",
        "WhenList": [
          "update kpi settings"
        ],
        "ThenList": [
          "should return ok",
          "should not add frontload and cycle time kpi setting for immigration work record"
        ],
        "Children": []
      },
      {
        "$id": "2676",
        "FileName": "when_update_engagement_kpi_settings.cs",
        "Description": "when update kpi settings of inactive engagment",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbiden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2677",
    "FileName": "when_update_engagement_kpi_settings_with_invalid_request.cs",
    "Description": "when update engagement kpi settings with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2678",
        "FileName": "when_update_engagement_kpi_settings_with_invalid_request.cs",
        "Description": "when update kpi setting for tax engagement",
        "WhenList": [
          "update kpi settings"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2679",
    "FileName": "when_find_engagement_resource_by_gloal_admin.cs",
    "Description": "when find engagement resource by gloal admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2680",
        "FileName": "when_find_engagement_resource_by_gloal_admin.cs",
        "Description": "when engagement is subscribed to filesharing and has nancy associated",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2681",
        "FileName": "when_find_engagement_resource_by_gloal_admin.cs",
        "Description": "when engagement is not subscribed to filesharing and newfilesharing",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should not contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2682",
        "FileName": "when_find_engagement_resource_by_gloal_admin.cs",
        "Description": "when engagement is subscribed to newfilesharing and has nancy associated",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2683",
        "FileName": "when_find_engagement_resource_by_gloal_admin.cs",
        "Description": "when engagement is subscribed to filesharing but has no nancy associated",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should not contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2684",
        "FileName": "when_find_engagement_resource_by_gloal_admin.cs",
        "Description": "when engagement is subscribed to newfilesharing but has no nancy associated",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should not contain file sharing link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2685",
    "FileName": "when_find_engagement_resource_by_id.cs",
    "Description": "when find engagement resource by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2686",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when sofia in coordinating office",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2687",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when sofia not in coordinating office",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should not contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2688",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when sofia is contact of engagement working office",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2689",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when grace is primary contact not in coordinating office with new client file sharing toggle on",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2690",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when sofia is general staff of engagement working office with new client file sharing toggle on",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2691",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when sofia is general staff of engagement working office with new client file sharing toggle off",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should not contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2692",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when engagement is not subscribed to filesharing",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should not contain file sharing link"
        ],
        "Children": []
      },
      {
        "$id": "2693",
        "FileName": "when_find_engagement_resource_by_id.cs",
        "Description": "when engagement is subscribed to filesharing but has no nancy",
        "WhenList": [
          "get engagement"
        ],
        "ThenList": [
          "should not contain file sharing link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2694",
    "FileName": "when_find_restricted_engagement_resource.cs",
    "Description": "when find restricted engagement resource",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2695",
        "FileName": "when_find_restricted_engagement_resource.cs",
        "Description": "when engagement has association and file sharing subscription",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2696",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is global admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2697",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is engagement admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2698",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is primary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2699",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is secondary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2700",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is on acl for coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2701",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is on acl for delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2702",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is on acl but not in coordinating office or delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2703",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is engagement primary contact but not in coordinating office or work office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2704",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user has nothing to do with the given engagement",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2705",
        "FileName": "when_find_restricted_engagement_resource.cs",
        "Description": "when engagement has association but no file sharing subscription",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2706",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is global admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2707",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is engagement admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2708",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is primary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2709",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is secondary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2710",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is on acl for coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2711",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is on acl for delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2712",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is on acl but not in coordinating office or delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2713",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is engagement primary contact but not in coordinating office or work office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2714",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user has nothing to do with the given engagement",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2715",
        "FileName": "when_find_restricted_engagement_resource.cs",
        "Description": "when engagement has no association",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2716",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is global admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2717",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is engagement admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2718",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is primary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2719",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is secondary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2720",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is on acl for coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2721",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is on acl for delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2722",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is on acl but not in coordinating office or delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2723",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user is engagement primary contact but not in coordinating office or work office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2724",
            "FileName": "when_find_restricted_engagement_resource.cs",
            "Description": "when current user has nothing to do with the given engagement",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "2725",
    "FileName": "when_get_client_information_by_engagement_id.cs",
    "Description": "when get client information by engagement id",
    "WhenList": [
      "get engagement client"
    ],
    "ThenList": [
      "should return client id and client name"
    ],
    "Children": []
  },
  {
    "$id": "2726",
    "FileName": "when_myMobility_get_engagement_contact_info.cs",
    "Description": "when my mobility get engagement contact info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2727",
        "FileName": "when_myMobility_get_engagement_contact_info.cs",
        "Description": "should get multiple engagement contact by ids",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get engagement contact info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2728",
    "FileName": "when_myMobility_get_engagement_name_from_tiger.cs",
    "Description": "when my mobility get engagement name from tiger",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2729",
        "FileName": "when_myMobility_get_engagement_name_from_tiger.cs",
        "Description": "should get one engagement name by id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get engagement name"
        ],
        "Children": []
      },
      {
        "$id": "2730",
        "FileName": "when_myMobility_get_engagement_name_from_tiger.cs",
        "Description": "should get multiple engagement names by ids",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get engagement name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2731",
    "FileName": "when_myMobility_get_sharedFolder_by_engagementUri.cs",
    "Description": "when my mobility get shared folder by engagement uri",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should contains shared link"
    ],
    "Children": []
  },
  {
    "$id": "2732",
    "FileName": "when_sofia_wants_to_access_file_sharing.cs",
    "Description": "when sofia wants to access file sharing",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2733",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "sofia from coordinating office of engagement wants to access file sharing",
        "WhenList": [
          "access file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should be able to access"
        ],
        "Children": []
      },
      {
        "$id": "2734",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "sofia from coordinating office of engagement wants to access new file sharing",
        "WhenList": [
          "access file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should be able to access"
        ],
        "Children": []
      },
      {
        "$id": "2735",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when sofia from another engagment want to access file sharing",
        "WhenList": [
          "sofia from another engagement wants to access file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access"
        ],
        "Children": []
      },
      {
        "$id": "2736",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when sofia from another engagment want to access new file sharing",
        "WhenList": [
          "sofia from another engagement wants to access file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access"
        ],
        "Children": []
      },
      {
        "$id": "2737",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when global admin wants to access file sharing that has client user",
        "WhenList": [
          "global admin wants to access file sharing"
        ],
        "ThenList": [
          "should be able to access",
          "should be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2738",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when global admin wants to access new file sharing that has client user",
        "WhenList": [
          "global admin wants to access file sharing"
        ],
        "ThenList": [
          "should be able to access",
          "should be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2739",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when global admin wants to access file sharing that has no client user",
        "WhenList": [
          "global admin wants to access file sharing"
        ],
        "ThenList": [
          "should be able to access",
          "should be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2740",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when global admin wants to access new file sharing that has no client user",
        "WhenList": [
          "global admin wants to access file sharing"
        ],
        "ThenList": [
          "should be able to access",
          "should be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2741",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when not existed staff wants to access file sharing",
        "WhenList": [
          "not existed sofia wants to access file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2742",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when not existed staff wants to access new file sharing",
        "WhenList": [
          "not existed sofia wants to access file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2743",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when global admin wants to access file sharing of a not existed engagement",
        "WhenList": [
          "global admin wants to access not existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2744",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when global admin wants to access new file sharing of a not existed engagement",
        "WhenList": [
          "global admin wants to access not existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2745",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when there is no nancy using my mobility in that engagement sofia cannot use file sharing also",
        "WhenList": [
          "global admin wants to see no nancy existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2746",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when there is no nancy using my mobility in that engagement sofia cannot use new file sharing also",
        "WhenList": [
          "global admin wants to see no nancy existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2747",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when engagement work office contact wants to use file sharing",
        "WhenList": [
          "sofia as engagement subscribed office contact wants to see nancy existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2748",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when engagement work office contact wants to use new file sharing",
        "WhenList": [
          "sofia as engagement subscribed office contact wants to see nancy existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2749",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when engagement work office office engagement admin wants to use file sharing",
        "WhenList": [
          "sofia as engagement subscribed office contact wants to see nancy existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2750",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when engagement work office office engagement admin wants to use file sharing and is new client file sharing",
        "WhenList": [
          "sofia as engagement subscribed office contact wants to see nancy existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2751",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when engagement work office primary contact same with office engagement admin wants to use file sharing",
        "WhenList": [
          "sofia as engagement subscribed office contact wants to see nancy existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2752",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "when engagement work office primary contact same with office engagement admin wants to use file sharing and is new client file sharing",
        "WhenList": [
          "sofia as engagement subscribed office contact wants to see nancy existed engagement file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should be able to access file sharing"
        ],
        "Children": []
      },
      {
        "$id": "2753",
        "FileName": "when_sofia_wants_to_access_file_sharing.cs",
        "Description": "sofia cannot access file sharing and new file sharing when she is not subscriped to it",
        "WhenList": [
          "sofia wants to access file sharing"
        ],
        "ThenList": [
          "should return ok",
          "should not be able to access file sharing"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2754",
    "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
    "Description": "when sofia wants to access file sharing of restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2755",
        "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
        "Description": "when engagement has association and file sharing subscription",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2756",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is global admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2757",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is engagement admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2758",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is primary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2759",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is secondary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2760",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is office engagement admin of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2761",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is primary contact and office engagement admin of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2762",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl for coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2763",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl for delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2764",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl but not in coordinating office or delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2765",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is engagement primary contact but not in coordinating office or work office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2766",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user has nothing to do with the given engagement",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2767",
        "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
        "Description": "when engagement has association and new file sharing subscription",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2768",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is global admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2769",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is engagement admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2770",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is primary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2771",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is secondary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2772",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is office engagement admin of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2773",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is primary contact and office engagement admin of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2774",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl for coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2775",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl for delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2776",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl but not in coordinating office or delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2777",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is engagement primary contact but not in coordinating office or work office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2778",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user has nothing to do with the given engagement",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2779",
        "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
        "Description": "when engagement has association but no file sharing and new file sharing subscription",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2780",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is global admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2781",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is engagement admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2782",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is primary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2783",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is secondary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2784",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is office engagement admin of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2785",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is primary contact and office engagement admin of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2786",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl for coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2787",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl for delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2788",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl but not in coordinating office or delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2789",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is engagement primary contact but not in coordinating office or work office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2790",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user has nothing to do with the given engagement",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2791",
        "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
        "Description": "when engagement has no association",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2792",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is global admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2793",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is engagement admin",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2794",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is primary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2795",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is secondary contact of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2796",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is office engagement admin of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2797",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is primary contact and office engagement admin of subscribed office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2798",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl for coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2799",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl for delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2800",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is on acl but not in coordinating office or delegated coordinating office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2801",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user is engagement primary contact but not in coordinating office or work office",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          },
          {
            "$id": "2802",
            "FileName": "when_sofia_wants_to_access_file_sharing_of_restricted_engagement.cs",
            "Description": "when current user has nothing to do with the given engagement",
            "WhenList": [
              "find restricted engagement resource"
            ],
            "ThenList": [
              "should not be able to access file sharing"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "2803",
    "FileName": "when_find_active_engagements.cs",
    "Description": "when find active engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2804",
        "FileName": "when_find_active_engagements.cs",
        "Description": "when search engagement not for report",
        "WhenList": [
          "search engagement"
        ],
        "ThenList": [
          "should only search out one active engagement"
        ],
        "Children": []
      },
      {
        "$id": "2805",
        "FileName": "when_find_active_engagements.cs",
        "Description": "when search engagement for report",
        "WhenList": [
          "search engagement"
        ],
        "ThenList": [
          "should only search out one active engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2806",
    "FileName": "when_find_engagements_by_current_user.cs",
    "Description": "when find engagements by current user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2807",
        "FileName": "when_find_engagements_by_current_user.cs",
        "Description": "when current user is general access",
        "WhenList": [
          "quick search"
        ],
        "ThenList": [
          "should filter engagement without current user office"
        ],
        "Children": []
      },
      {
        "$id": "2808",
        "FileName": "when_find_engagements_by_current_user.cs",
        "Description": "when current user is global admin",
        "WhenList": [
          "quick search"
        ],
        "ThenList": [
          "should not filter"
        ],
        "Children": []
      },
      {
        "$id": "2809",
        "FileName": "when_find_engagements_by_current_user.cs",
        "Description": "when current user is country level",
        "WhenList": [
          "quick search"
        ],
        "ThenList": [
          "should filter by current user office country"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2810",
    "FileName": "when_find_engagements_by_fuzzName_and_limit.cs",
    "Description": "when find engagements by fuzz name and limit",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should get the engagements with matched fuzzy name and client name which ordered by name and limit 1",
      "should get the engagements with matched fuzzy name and client name which ordered by name and limit 2",
      "should get the engagements whose name contains given keyword and ordered by name",
      "should get the engagements whose client short name contains given keyword and ordered by client name then by engagement name"
    ],
    "Children": []
  },
  {
    "$id": "2811",
    "FileName": "when_find_engagements_by_fuzzName_without_check_served_by.cs",
    "Description": "when find engagements by fuzz name without check served by",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should get the engagements with matched fuzzy name"
    ],
    "Children": []
  },
  {
    "$id": "2812",
    "FileName": "when_find_engagements_by_non_existing_clientName_and_fuzzName.cs",
    "Description": "when find engagements by non existing client name and fuzz name",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should get nothing"
    ],
    "Children": []
  },
  {
    "$id": "2813",
    "FileName": "when_find_engagements_by_office.cs",
    "Description": "when find engagements by office",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should get the engagements with matched fuzzy name and client name which ordered by name and limit 1"
    ],
    "Children": []
  },
  {
    "$id": "2814",
    "FileName": "when_find_engagement_by_client_name_success.cs",
    "Description": "when find engagement by client name success",
    "WhenList": [
      "send request from client"
    ],
    "ThenList": [
      "should return engagement"
    ],
    "Children": []
  },
  {
    "$id": "2815",
    "FileName": "when_find_engagement_resource_by_evaluation.cs",
    "Description": "when find engagement resource by evaluation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2816",
        "FileName": "when_find_engagement_resource_by_evaluation.cs",
        "Description": "when search enabled evaluation engagements",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed and load all related data"
        ],
        "Children": []
      },
      {
        "$id": "2817",
        "FileName": "when_find_engagement_resource_by_evaluation.cs",
        "Description": "when search all engagements",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed and load all related data"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2818",
    "FileName": "when_find_engagement_resource_by_practice_type.cs",
    "Description": "when find engagement resource by practice type",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed and load all related data"
    ],
    "Children": []
  },
  {
    "$id": "2819",
    "FileName": "when_find_matched_engagement_by_name.cs",
    "Description": "when find matched engagement by name",
    "WhenList": [
      "when find engagement"
    ],
    "ThenList": [
      "should find matched engagements"
    ],
    "Children": []
  },
  {
    "$id": "2820",
    "FileName": "when_find_engagements_by_full_name.cs",
    "Description": "when find engagements by full name",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return the engagement with the given name"
    ],
    "Children": []
  },
  {
    "$id": "2821",
    "FileName": "when_find_engagement_by_coordinate_office_uri_success.cs",
    "Description": "when find engagement by coordinate office uri success",
    "WhenList": [
      "send request"
    ],
    "ThenList": [
      "should return engagement"
    ],
    "Children": []
  },
  {
    "$id": "2822",
    "FileName": "when_find_engagement_by_office_uri_success.cs",
    "Description": "when find engagement by office uri success",
    "WhenList": [
      "send request"
    ],
    "ThenList": [
      "should return engagement"
    ],
    "Children": []
  },
  {
    "$id": "2823",
    "FileName": "when_find_restricted_engagements_by_current_user.cs",
    "Description": "when find restricted engagements by current user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2824",
        "FileName": "when_find_restricted_engagements_by_current_user.cs",
        "Description": "when find restricted engagement current user in acl",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return engagement"
        ],
        "Children": []
      },
      {
        "$id": "2825",
        "FileName": "when_find_restricted_engagements_by_current_user.cs",
        "Description": "when find restricted engagement current user as delegated coordinating office",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return engagement"
        ],
        "Children": []
      },
      {
        "$id": "2826",
        "FileName": "when_find_restricted_engagements_by_current_user.cs",
        "Description": "when find restricted engagement current user as secondary contact",
        "WhenList": [
          "quick search"
        ],
        "ThenList": [
          "should return engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2827",
    "FileName": "when_find_unrestricted_engagement.cs",
    "Description": "when find unrestricted engagements",
    "WhenList": [
      "send request"
    ],
    "ThenList": [
      "should return engagement"
    ],
    "Children": []
  },
  {
    "$id": "2828",
    "FileName": "when_update_engagement_and_unscribe_working_offices_not_using_team_mailbox.cs",
    "Description": "when update engagement and unscribe working offices not using team mailbox",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2829",
        "FileName": "when_update_engagement_and_unscribe_working_offices_not_using_team_mailbox.cs",
        "Description": "when engagement coordinate office not with team mailbox",
        "WhenList": [
          "unsubscribe office from engagement"
        ],
        "ThenList": [
          "should return no content",
          "should update work record contact office to coordinating office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2830",
    "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
    "Description": "when update engagement and unscribe working offices using team mailbox",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2831",
        "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
        "Description": "when engagement coordinate office with team mailbox",
        "WhenList": [
          "unsubscribe office from engagement"
        ],
        "ThenList": [
          "should return no content",
          "should update work record contact office to coordinating office"
        ],
        "Children": []
      },
      {
        "$id": "2832",
        "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
        "Description": "when engagement coordinate office primary contact office belongs to engagement",
        "WhenList": [
          "unsubscribe office from engagement"
        ],
        "ThenList": [
          "should return no content",
          "should update work record contact using coordinate office primary contact"
        ],
        "Children": []
      },
      {
        "$id": "2833",
        "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
        "Description": "when remove all subscribed offices from engagement and update subscribed offices request working offices is null",
        "WhenList": [
          "unsubscribe all working offices from engagement"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      },
      {
        "$id": "2834",
        "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
        "Description": "when engagement coordinate office primary contact office belongs to engagement delegated coordinating office",
        "WhenList": [
          "unsubscribe office from engagement"
        ],
        "ThenList": [
          "should return no content",
          "should update work record contact using coordinate office primary contact"
        ],
        "Children": []
      },
      {
        "$id": "2835",
        "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
        "Description": "when engagement coordinate office primary contact office belongs to engagement subscribed office",
        "WhenList": [
          "unsubscribe office from engagement"
        ],
        "ThenList": [
          "should return no content",
          "should update work record contact using coordinate office primary contact"
        ],
        "Children": []
      },
      {
        "$id": "2836",
        "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
        "Description": "when engagement coordinate office secondary contanct office belongs to engagement but primary contact office not",
        "WhenList": [
          "unsubscribe office from engagement"
        ],
        "ThenList": [
          "should return no content",
          "should update work record contact using coordinate office secondary contact"
        ],
        "Children": []
      },
      {
        "$id": "2837",
        "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
        "Description": "when engagement coordinate office primary and secondary contanct office both not belongs to engagement",
        "WhenList": [
          "unsubscribe office from engagement"
        ],
        "ThenList": [
          "should return forbidden",
          "should return forbidden message"
        ],
        "Children": []
      },
      {
        "$id": "2838",
        "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
        "Description": "when engagement coordinate office primary contact office does not belong to engagement and secondary contact is null",
        "WhenList": [
          "unsubscribe office from engagement"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2839",
        "FileName": "when_update_engagement_and_unscribe_working_offices_using_team_mailbox.cs",
        "Description": "when unsubscribe office from engagement which is not used as work record responsible office",
        "WhenList": [
          "unsubscribe office from engagement"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2840",
    "FileName": "when_update_engagement_coordinating_office.cs",
    "Description": "when update engagement coordinating office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2841",
        "FileName": "when_update_engagement_coordinating_office.cs",
        "Description": "when update engagement coordinating office successfully",
        "WhenList": [
          "update coordinating office"
        ],
        "ThenList": [
          "should success",
          "should update coordinating office",
          "should update contact",
          "should change previous coordinating office to subscribed office"
        ],
        "Children": []
      },
      {
        "$id": "2842",
        "FileName": "when_update_engagement_coordinating_office.cs",
        "Description": "when set an existing subscribed office to coordinating office",
        "WhenList": [
          "set shanghai to coordinating office"
        ],
        "ThenList": [
          "should success",
          "should update coordinating office",
          "should remove shanghai from subscribed offices"
        ],
        "Children": []
      },
      {
        "$id": "2843",
        "FileName": "when_update_engagement_coordinating_office.cs",
        "Description": "when set an existing delegated office to coordinating office",
        "WhenList": [
          "set beijing to coordinating office"
        ],
        "ThenList": [
          "should success",
          "should update coordinating office",
          "should change previous coordinating office to subscribed office",
          "should beijing office from remove delegated office"
        ],
        "Children": []
      },
      {
        "$id": "2844",
        "FileName": "when_update_engagement_coordinating_office.cs",
        "Description": "when update coordinating office with switch coordinating office delegated office",
        "WhenList": [
          "set beijing to coordinating office"
        ],
        "ThenList": [
          "should success",
          "should update coordinating office",
          "should not change previous coordinating office to subscribed office",
          "should change previous coordinating officee to delegated office"
        ],
        "Children": []
      },
      {
        "$id": "2845",
        "FileName": "when_update_engagement_coordinating_office.cs",
        "Description": "when update engagement coordinating office same with delegated office",
        "WhenList": [
          "update coordinating office"
        ],
        "ThenList": [
          "should fail"
        ],
        "Children": []
      },
      {
        "$id": "2846",
        "FileName": "when_update_engagement_coordinating_office.cs",
        "Description": "when update engagement coordinating office but not provide transformed work office",
        "WhenList": [
          "update coordinating office without work office transformed from coordinating office filed"
        ],
        "ThenList": [
          "should fail"
        ],
        "Children": []
      },
      {
        "$id": "2847",
        "FileName": "when_update_engagement_coordinating_office.cs",
        "Description": "when update engagement coordinating office but not provide transformed work office primary contact",
        "WhenList": [
          "update coordinating office without work office transformed from coordinating office filed"
        ],
        "ThenList": [
          "should fail"
        ],
        "Children": []
      },
      {
        "$id": "2848",
        "FileName": "when_update_engagement_coordinating_office.cs",
        "Description": "when update engagement coordinating office but not provide transformed work office match previous coordinating office",
        "WhenList": [
          "update coordinating office without work office transformed from coordinating office filed"
        ],
        "ThenList": [
          "should fail"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2849",
    "FileName": "when_update_engagement_coordinating_office_contact_and_contact_info.cs",
    "Description": "when update engagement coordinating office contact and contact info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2850",
        "FileName": "when_update_engagement_coordinating_office_contact_and_contact_info.cs",
        "Description": "when updating with valid parameters",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should success",
          "should update contact",
          "should update coordinating office information"
        ],
        "Children": []
      },
      {
        "$id": "2851",
        "FileName": "when_update_engagement_coordinating_office_contact_and_contact_info.cs",
        "Description": "when updating with secondary contact",
        "WhenList": [
          "update with valid parameters"
        ],
        "ThenList": [
          "should success",
          "should update contact",
          "should update coordinating office information"
        ],
        "Children": []
      },
      {
        "$id": "2852",
        "FileName": "when_update_engagement_coordinating_office_contact_and_contact_info.cs",
        "Description": "when updating with invalid parameters",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2853",
            "FileName": "when_update_engagement_coordinating_office_contact_and_contact_info.cs",
            "Description": "when updating without any contact",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "2854",
            "FileName": "when_update_engagement_coordinating_office_contact_and_contact_info.cs",
            "Description": "when updating office contact with immigration staff",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2855",
        "FileName": "when_update_engagement_coordinating_office_contact_and_contact_info.cs",
        "Description": "when updating with no team display name",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2856",
            "FileName": "when_update_engagement_coordinating_office_contact_and_contact_info.cs",
            "Description": "when request contact is valid",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should success",
              "should update organizer",
              "should not update organizer which contact is not null"
            ],
            "Children": []
          },
          {
            "$id": "2857",
            "FileName": "when_update_engagement_coordinating_office_contact_and_contact_info.cs",
            "Description": "when request contact is invalid",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return conflict"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "2858",
    "FileName": "when_update_engagement_delegated_coordinating_office.cs",
    "Description": "when update engagement delegated coordinating office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2859",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when update single delegated office",
        "WhenList": [
          "update delegated offices"
        ],
        "ThenList": [
          "should updated delegated offices",
          "should raise office list changed event"
        ],
        "Children": []
      },
      {
        "$id": "2860",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when update two delegated office",
        "WhenList": [
          "update delegated offices"
        ],
        "ThenList": [
          "should updated delegated offices"
        ],
        "Children": []
      },
      {
        "$id": "2861",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when update invalid delegated office",
        "WhenList": [
          "update delegated offices"
        ],
        "ThenList": [
          "should updated delegated offices"
        ],
        "Children": []
      },
      {
        "$id": "2862",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when update delegated office same with work office",
        "WhenList": [
          "update delegated offices"
        ],
        "ThenList": [
          "should updated delegated offices"
        ],
        "Children": []
      },
      {
        "$id": "2863",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when delete delegated office",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should raise office list changed event with removed"
        ],
        "Children": []
      },
      {
        "$id": "2864",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when update to another delegating office",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should raise office list changed event with removed"
        ],
        "Children": []
      },
      {
        "$id": "2865",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when update work office to delegating office",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should raise event with work office removed"
        ],
        "Children": []
      },
      {
        "$id": "2866",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when delegating office is not changed",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should not raise event"
        ],
        "Children": []
      },
      {
        "$id": "2867",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when updating with no team display name",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "2868",
            "FileName": "when_update_engagement_delegated_coordinating_office.cs",
            "Description": "when questionnaire contact is valid",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should success",
              "should update organizer"
            ],
            "Children": []
          },
          {
            "$id": "2869",
            "FileName": "when_update_engagement_delegated_coordinating_office.cs",
            "Description": "when questionnaire contact is invalid",
            "WhenList": [
              "update"
            ],
            "ThenList": [
              "should return conflict"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "2870",
        "FileName": "when_update_engagement_delegated_coordinating_office.cs",
        "Description": "when updating with secondary contact",
        "WhenList": [
          "update delegated offices"
        ],
        "ThenList": [
          "should success",
          "should updated delegated offices"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2871",
    "FileName": "when_update_engagement_scheduling_method.cs",
    "Description": "when update engagement scheduling method",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success",
      "should succeed update scheduling method"
    ],
    "Children": []
  },
  {
    "$id": "2872",
    "FileName": "when_update_engagement_tax_return_download_reminder.cs",
    "Description": "when update engagement tax return download reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2873",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should update tax return initial download reminder days correctly with integer",
        "WhenList": [
          "update with integer"
        ],
        "ThenList": [
          "should update tax return initial download reminder days correctly"
        ],
        "Children": []
      },
      {
        "$id": "2874",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should update tax return initial download reminder days correctly with null",
        "WhenList": [
          "update with null"
        ],
        "ThenList": [
          "should update tax return initial download reminder days correctly"
        ],
        "Children": []
      },
      {
        "$id": "2875",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow update tax return initial download reminder days as null if is reminder needed is true",
        "WhenList": [
          "reminder needed is true"
        ],
        "ThenList": [
          "should not allow update tax return initial download reminder days as null"
        ],
        "Children": []
      },
      {
        "$id": "2876",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow update any value as some value if is reminder needed is false",
        "WhenList": [
          "is reminder needed is false"
        ],
        "ThenList": [
          "should not allow update any value as some value"
        ],
        "Children": []
      },
      {
        "$id": "2877",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow to update tax return initial download reminder days with decimal",
        "WhenList": [
          "with decimal"
        ],
        "ThenList": [
          "should not allow to update tax return initial download reminder days"
        ],
        "Children": []
      },
      {
        "$id": "2878",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow to upate tax return initial download reminder days with zero",
        "WhenList": [
          "with zero"
        ],
        "ThenList": [
          "should not allow to update tax return initial download reminder days"
        ],
        "Children": []
      },
      {
        "$id": "2879",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow to update tax return initial download reminder days when staff is not engagement admin or global admin",
        "WhenList": [
          "staff is not engagement admin or global admin"
        ],
        "ThenList": [
          "should not allow to update tax return initial download reminder days"
        ],
        "Children": []
      },
      {
        "$id": "2880",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should update tax return followup times and followup interval correctly with integer",
        "WhenList": [
          "with integer"
        ],
        "ThenList": [
          "should update tax return followup times and followup interval correctly"
        ],
        "Children": []
      },
      {
        "$id": "2881",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should update tax return followup times and followup interval as null if followup is not needed",
        "WhenList": [
          "follow is not needed"
        ],
        "ThenList": [
          "should update tax return followup times and followup interval as null"
        ],
        "Children": []
      },
      {
        "$id": "2882",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow update tax return followup times and followup interval as some value if followup is not needed",
        "WhenList": [
          "follow is not needed"
        ],
        "ThenList": [
          "should not allow update tax return followup times and followup interval as some value"
        ],
        "Children": []
      },
      {
        "$id": "2883",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow update tax return followup times and followup interval as null if followup is needed",
        "WhenList": [
          "followup is needed"
        ],
        "ThenList": [
          "should not allow update tax return followup times and followup interval as null"
        ],
        "Children": []
      },
      {
        "$id": "2884",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow update tax return followup times and followup interval as zero if followup is needed",
        "WhenList": [
          "followup is needed"
        ],
        "ThenList": [
          "should not allow update tax return followup times and followup interval as zero"
        ],
        "Children": []
      },
      {
        "$id": "2885",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow update tax return followup times and followup interval as decimal number if followup is needed",
        "WhenList": [
          "followup is needed"
        ],
        "ThenList": [
          "should not allow update tax return followup times and followup interval as decimal number"
        ],
        "Children": []
      },
      {
        "$id": "2886",
        "FileName": "when_update_engagement_tax_return_download_reminder.cs",
        "Description": "should not allow update tax return followup times and followup interval as negative if followup is needed",
        "WhenList": [
          "followup is needed"
        ],
        "ThenList": [
          "should not allow update tax return followup times and followup interval as negative"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2887",
    "FileName": "when_update_engagement_with_bad_request.cs",
    "Description": "when update engagement with bad request",
    "WhenList": [],
    "ThenList": [
      "should fail when update with empty name",
      "should fail when update when enagagement name longer than 255",
      "should fail when update name to existed engagement name"
    ],
    "Children": []
  },
  {
    "$id": "2888",
    "FileName": "when_update_engagement_work_office_with_bad_request.cs",
    "Description": "when update engagement work office with bad request",
    "WhenList": [],
    "ThenList": [
      "should succeed with null work offices",
      "should fail when update with duplicate working office",
      "should failed when update with non existed work office contacts",
      "should failed when update with non existed work office",
      "should failed when update with not match practice type"
    ],
    "Children": []
  },
  {
    "$id": "2889",
    "FileName": "when_update_engagement_work_office_with_office_engagement_admin.cs",
    "Description": "when update engagement work office with office engagement admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2890",
        "FileName": "when_update_engagement_work_office_with_office_engagement_admin.cs",
        "Description": "when update office engagement admin",
        "WhenList": [
          "when update with valid parameters"
        ],
        "ThenList": [
          "should return 204 as status code",
          "should update work office information"
        ],
        "Children": []
      },
      {
        "$id": "2891",
        "FileName": "when_update_engagement_work_office_with_office_engagement_admin.cs",
        "Description": "when remove office engagement admin",
        "WhenList": [
          "when update with valid parameters"
        ],
        "ThenList": [
          "should return 204 as status code",
          "should update work office information"
        ],
        "Children": []
      },
      {
        "$id": "2892",
        "FileName": "when_update_engagement_work_office_with_office_engagement_admin.cs",
        "Description": "when update office engagement admin where staff not belong to office",
        "WhenList": [
          "when update with valid parameters"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2893",
    "FileName": "when_update_engagement_work_office_with_secondary_contact.cs",
    "Description": "when update engagement work office with secondary contact",
    "WhenList": [
      "when update with valid parameters"
    ],
    "ThenList": [
      "should return 204 as status code",
      "should update work office information"
    ],
    "Children": []
  },
  {
    "$id": "2894",
    "FileName": "when_update_engagement_work_office_with_valid_parameters.cs",
    "Description": "when update engagement work office with valid parameters",
    "WhenList": [
      "when update with valid parameters"
    ],
    "ThenList": [
      "should return 204 as status code",
      "should update work office information"
    ],
    "Children": []
  },
  {
    "$id": "2895",
    "FileName": "when_update_restricted_engagement_work_office_with_different_role.cs",
    "Description": "when update restricted engagement work office with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2896",
        "FileName": "when_update_restricted_engagement_work_office_with_different_role.cs",
        "Description": "when is engagement admin",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "2897",
        "FileName": "when_update_restricted_engagement_work_office_with_different_role.cs",
        "Description": "when is from work office but not in acl",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "2898",
        "FileName": "when_update_restricted_engagement_work_office_with_different_role.cs",
        "Description": "when is from acl list of existing work office",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return no content",
          "should be able to update team mailbox"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2899",
    "FileName": "when_get_acl_for_engagement.cs",
    "Description": "when get ACL for engagement",
    "WhenList": [
      "send request from client"
    ],
    "ThenList": [
      "should succeed and load all related data"
    ],
    "Children": []
  },
  {
    "$id": "2900",
    "FileName": "when_get_engagement_tax_return_download_reminder.cs",
    "Description": "when get engagement tax return download reminder",
    "WhenList": [],
    "ThenList": [
      "should get correct values when reminder is needed",
      "should get correct values when reminder is not needed",
      "should get default value of seven days when reminder settings are never touched"
    ],
    "Children": []
  },
  {
    "$id": "2901",
    "FileName": "when_get_not_tax_engagement_by_id.cs",
    "Description": "when get not tax engagement by id",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return ok",
      "should return authorization list link"
    ],
    "Children": []
  },
  {
    "$id": "2902",
    "FileName": "when_get_restricted_engagement_acl_by_engagement_id.cs",
    "Description": "when get restricted engagement acl by engagement id",
    "WhenList": [
      "get engagement acl by id"
    ],
    "ThenList": [
      "should return ok",
      "should return the engagement acl"
    ],
    "Children": []
  },
  {
    "$id": "2903",
    "FileName": "when_get_staff_is_belongs_to_engagement_offices.cs",
    "Description": "when get staff is belongs to engagement offices",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2904",
        "FileName": "when_get_staff_is_belongs_to_engagement_offices.cs",
        "Description": "should return ok",
        "WhenList": [
          "when get user belongs to engagment office"
        ],
        "ThenList": [
          "should be found"
        ],
        "Children": []
      },
      {
        "$id": "2905",
        "FileName": "when_get_staff_is_belongs_to_engagement_offices.cs",
        "Description": "should return notfound",
        "WhenList": [
          "when get user belongs to engagment office"
        ],
        "ThenList": [
          "should not be found"
        ],
        "Children": []
      },
      {
        "$id": "2906",
        "FileName": "when_get_staff_is_belongs_to_engagement_offices.cs",
        "Description": "should return ok for primary contact",
        "WhenList": [
          "when get user who is primary contact"
        ],
        "ThenList": [
          "should be found"
        ],
        "Children": []
      },
      {
        "$id": "2907",
        "FileName": "when_get_staff_is_belongs_to_engagement_offices.cs",
        "Description": "should return not found for secondary contact",
        "WhenList": [
          "when get user who is not contact"
        ],
        "ThenList": [
          "should not be found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2908",
    "FileName": "when_get_vips_of_a_engagement.cs",
    "Description": "when get vips of a engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2909",
        "FileName": "when_get_vips_of_a_engagement.cs",
        "Description": "get vips of an engagement",
        "WhenList": [
          "get vips of a engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get vips"
        ],
        "Children": []
      },
      {
        "$id": "2910",
        "FileName": "when_get_vips_of_a_engagement.cs",
        "Description": "can not get vips",
        "WhenList": [
          "get vips of a engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get vips"
        ],
        "Children": []
      },
      {
        "$id": "2911",
        "FileName": "when_get_vips_of_a_engagement.cs",
        "Description": "can get vip modifier when he was removed",
        "WhenList": [
          "get vips of a engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get vips"
        ],
        "Children": []
      },
      {
        "$id": "2912",
        "FileName": "when_get_vips_of_a_engagement.cs",
        "Description": "get vip when modifier and date are empty with history data",
        "WhenList": [
          "get vips of a engagement"
        ],
        "ThenList": [
          "should return ok",
          "should get vips"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2913",
    "FileName": "when_remove_contact_who_is_auth_admin_from_engagement_coordinating_office.cs",
    "Description": "when remove contact who is auth admin from engagement coordinating office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2914",
        "FileName": "when_remove_contact_who_is_auth_admin_from_engagement_coordinating_office.cs",
        "Description": "from restricted engagement",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should success",
          "should remove manual auth admin"
        ],
        "Children": []
      },
      {
        "$id": "2915",
        "FileName": "when_remove_contact_who_is_auth_admin_from_engagement_coordinating_office.cs",
        "Description": "from not restricted engagement",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should success",
          "should keep manual auth admin"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2916",
    "FileName": "when_search_engagements_by_staff.cs",
    "Description": "when search engagements by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2917",
        "FileName": "when_search_engagements_by_staff.cs",
        "Description": "by country level staff",
        "WhenList": [
          "search engagements"
        ],
        "ThenList": [
          "should succeed",
          "should return engagements in staffs country"
        ],
        "Children": []
      },
      {
        "$id": "2918",
        "FileName": "when_search_engagements_by_staff.cs",
        "Description": "by general level staff",
        "WhenList": [
          "search engagements"
        ],
        "ThenList": [
          "should succeed",
          "should not return engagements"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2919",
    "FileName": "when_search_restricted_engagements.cs",
    "Description": "when search restricted engagements",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should include assignees creation link and upload file link"
    ],
    "Children": []
  },
  {
    "$id": "2920",
    "FileName": "when_find_by_abbreviation.cs",
    "Description": "find by exists",
    "WhenList": [
      "find by exists abbreviation"
    ],
    "ThenList": [
      "should return ok",
      "should return country"
    ],
    "Children": [
      {
        "$id": "2921",
        "FileName": "when_find_by_abbreviation.cs",
        "Description": "find by not exists",
        "WhenList": [
          "find by exists abbreviation"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2922",
    "FileName": "when_add_access_control_for_restricted_assignee.cs",
    "Description": "when add access control for restricted assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 ok",
      "should create access list changed event"
    ],
    "Children": []
  },
  {
    "$id": "2923",
    "FileName": "when_add_duplicated_staff_as_contact_for_mutual_engagement_restricted_assignee.cs",
    "Description": "when add duplicated staff as contact for mutual engagement restricted assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 ok",
      "should not generate access list changed event"
    ],
    "Children": []
  },
  {
    "$id": "2924",
    "FileName": "when_add_engagement_to_assignee.cs",
    "Description": "when add engagement to assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2925",
        "FileName": "when_add_engagement_to_assignee.cs",
        "Description": "when add an engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create assignee engagement changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2926",
    "FileName": "when_admin_change_contact_for_restricted_assignee.cs",
    "Description": "when change contact for restricted assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 ok",
      "should generate access list changed event"
    ],
    "Children": []
  },
  {
    "$id": "2927",
    "FileName": "when_change_access_control_with_no_diff_for_restricted_assignee.cs",
    "Description": "when change access control with no diff for restricted assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 ok",
      "should not create access list changed event"
    ],
    "Children": []
  },
  {
    "$id": "2928",
    "FileName": "when_change_assignee_restricted_to_non_restricted.cs",
    "Description": "when change assignee restricted to non restricted",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200",
      "should not create restricted access list changed event"
    ],
    "Children": []
  },
  {
    "$id": "2929",
    "FileName": "when_change_assignee_to_restricted.cs",
    "Description": "assignee restricted status changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2930",
        "FileName": "when_change_assignee_to_restricted.cs",
        "Description": "when change assignee to restricted",
        "WhenList": [
          "update restricted status to true"
        ],
        "ThenList": [
          "should create assignee restricted status changed event"
        ],
        "Children": []
      },
      {
        "$id": "2931",
        "FileName": "when_change_assignee_to_restricted.cs",
        "Description": "when change assignee restricted no change",
        "WhenList": [
          "update restricted status to remain"
        ],
        "ThenList": [
          "should not create assignee restricted status changed event when restriced not changed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2932",
    "FileName": "when_change_assignee_to_restricted_without_pwc_contact.cs",
    "Description": "when change assignee to restricted without pwc contact",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200",
      "should not create assignee restricted status changed event when restriced not changed"
    ],
    "Children": []
  },
  {
    "$id": "2933",
    "FileName": "when_change_pwc_contacts_for_unrestricted_assignee.cs",
    "Description": "when change pwc contacts for unrestricted assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should not raise acl changed event"
    ],
    "Children": []
  },
  {
    "$id": "2934",
    "FileName": "when_change_pwc_contact_and_new_staff_is_exist_in_access_control_list_for_restricted_assignee.cs",
    "Description": "when change pwc contact and new staff is exist in access control list for restricted assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 ok",
      "should create access list changed event and added staff is empty in event and removed staff is old assignee"
    ],
    "Children": []
  },
  {
    "$id": "2935",
    "FileName": "when_change_unrestricted_assignee_to_restricted_with_duplicated_staff_as_pwc_contacts.cs",
    "Description": "when change unrestricted assignee to restricted with duplicated staff as pwc contacts",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200",
      "should not create assignee acl changed event"
    ],
    "Children": []
  },
  {
    "$id": "2936",
    "FileName": "when_get_archiving_assignee_events_with_pagination_links.cs",
    "Description": "when get archiving assignee events with pagination links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2937",
        "FileName": "when_get_archiving_assignee_events_with_pagination_links.cs",
        "Description": "when query by after",
        "WhenList": [
          "get the first page event"
        ],
        "ThenList": [
          "should return correct event",
          "should return correct next link",
          "should return no next link when no more events left",
          "should return no next link when left events less than limit",
          "should return no next link when current request with no events"
        ],
        "Children": []
      },
      {
        "$id": "2938",
        "FileName": "when_get_archiving_assignee_events_with_pagination_links.cs",
        "Description": "when query with invalid params",
        "WhenList": [],
        "ThenList": [
          "should return bad request without before and after",
          "should return bad request with limit more than 2000",
          "should return bad request with limit is 0",
          "should return bad request with limit less than 0",
          "should return bad request with after less than 0"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2939",
    "FileName": "when_get_assignees_events.cs",
    "Description": "when get assignees events",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return both assignees"
    ],
    "Children": []
  },
  {
    "$id": "2940",
    "FileName": "when_get_assignee_contact_info_changed_events.cs",
    "Description": "when get assignee contact info changed events",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return assignee contact info changed events"
    ],
    "Children": []
  },
  {
    "$id": "2941",
    "FileName": "when_get_assignee_contact_info_changed_events_multiple_employee_id.cs",
    "Description": "when get assignee contact info changed events multiple employee id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return assignee contact info changed events"
    ],
    "Children": []
  },
  {
    "$id": "2942",
    "FileName": "when_get_assignee_employee_id_changed_events.cs",
    "Description": "when get assignee employee id changed events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2943",
        "FileName": "when_get_assignee_employee_id_changed_events.cs",
        "Description": "should generate event",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return assignee employee id changed events"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2944",
    "FileName": "when_get_assignee_events_after_change_assignee_to_restricted.cs",
    "Description": "when get assignee events after change assignee to restricted",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 ok",
      "should generate restricted and access list changed event"
    ],
    "Children": []
  },
  {
    "$id": "2945",
    "FileName": "when_get_assignee_events_with_pagination_links.cs",
    "Description": "when get assignee events with pagination links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2946",
        "FileName": "when_get_assignee_events_with_pagination_links.cs",
        "Description": "when query by after",
        "WhenList": [],
        "ThenList": [
          "should return correct event for after api",
          "should return correct pagination links",
          "should return no pagination links",
          "should return only previous link when no more events left",
          "should return only next link when no more events before",
          "should return only previous link when event id not exist",
          "should return default limit when limit less than 0 in after api",
          "should return default limit when limit more than 2000 in after api",
          "should return default limit when limit is 0 in after api"
        ],
        "Children": []
      },
      {
        "$id": "2947",
        "FileName": "when_get_assignee_events_with_pagination_links.cs",
        "Description": "when query by before",
        "WhenList": [],
        "ThenList": [
          "should return correct event for before api",
          "should return correct pagination links",
          "should return no pagination link",
          "should return only previous link when no more events left",
          "should return only next link when no more events before",
          "should return only previous link when event id not exist",
          "should return default limit when limit more than 2000 in before api",
          "should return default limit when limit is 0 in before api",
          "should return default limit when limit less than 0 in before api"
        ],
        "Children": []
      },
      {
        "$id": "2948",
        "FileName": "when_get_assignee_events_with_pagination_links.cs",
        "Description": "when query with invalid params",
        "WhenList": [],
        "ThenList": [
          "should return bad request with after less than 0 in after api",
          "should return bad request with after less than 0 in before api"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2949",
    "FileName": "when_get_assignee_personal_details_changed_events.cs",
    "Description": "when get assignee personal detail changed events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2950",
        "FileName": "when_get_assignee_personal_details_changed_events.cs",
        "Description": "should generate event",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should return assignee personal detail changed events"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2951",
    "FileName": "when_get_outdated_assignees_events.cs",
    "Description": "when get outdated assignees events",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return country abbreviation for home country and host country"
    ],
    "Children": []
  },
  {
    "$id": "2952",
    "FileName": "when_get_recent_assignee_events_with_pagination_links.cs",
    "Description": "when get recent assignee events with pagination links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2953",
        "FileName": "when_get_recent_assignee_events_with_pagination_links.cs",
        "Description": "which has prev link",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "2954",
        "FileName": "when_get_recent_assignee_events_with_pagination_links.cs",
        "Description": "which does not have prev link",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "2955",
        "FileName": "when_get_recent_assignee_events_with_pagination_links.cs",
        "Description": "which get recent with default limit",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2956",
    "FileName": "when_remove_access_control_for_restricted_assignee.cs",
    "Description": "when remove access control for restricted assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 ok",
      "should removed sofia from leeds",
      "should create access list changed event"
    ],
    "Children": []
  },
  {
    "$id": "2957",
    "FileName": "when_remove_duplicated_staff_as_contact_for_mutual_engagement_restricted_assignee.cs",
    "Description": "when remove duplicated staff as contact for mutual engagement restricted assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 ok",
      "should not generate access list changed event"
    ],
    "Children": []
  },
  {
    "$id": "2958",
    "FileName": "when_contains_legacy_engagement_events.cs",
    "Description": "when contains legacy engagement events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2959",
        "FileName": "when_contains_legacy_engagement_events.cs",
        "Description": "when get archiving engagement events",
        "WhenList": [
          "when get engagement events"
        ],
        "ThenList": [
          "should return 200",
          "should contain legacy event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2960",
    "FileName": "when_create_engagement.cs",
    "Description": "when create engagement",
    "WhenList": [
      "when create"
    ],
    "ThenList": [
      "should publish engagement created event"
    ],
    "Children": []
  },
  {
    "$id": "2961",
    "FileName": "when_get_archiving_engagement_events_with_pagination_links.cs",
    "Description": "when get archiving engagement events with pagination links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2962",
        "FileName": "when_get_archiving_engagement_events_with_pagination_links.cs",
        "Description": "when query by after",
        "WhenList": [
          "get the last page event"
        ],
        "ThenList": [
          "should get correct event",
          "should return correct next link",
          "should return no next link when no more events left",
          "should return no next link when left events less than limit",
          "should return no next link when current request with no events"
        ],
        "Children": []
      },
      {
        "$id": "2963",
        "FileName": "when_get_archiving_engagement_events_with_pagination_links.cs",
        "Description": "when query with invalid params",
        "WhenList": [],
        "ThenList": [
          "should return bad request without before and after",
          "should return bad request with limit more than 2000",
          "should return bad request with limit is 0",
          "should return bad request with limit less than 0",
          "should return bad request with after less than 0"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2964",
    "FileName": "when_get_engagement_name_changed_events.cs",
    "Description": "when get engagement name changed events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2965",
        "FileName": "when_get_engagement_name_changed_events.cs",
        "Description": "when name not changed",
        "WhenList": [
          "when get engagement events"
        ],
        "ThenList": [
          "should return 200",
          "should not return events"
        ],
        "Children": []
      },
      {
        "$id": "2966",
        "FileName": "when_get_engagement_name_changed_events.cs",
        "Description": "when name changed",
        "WhenList": [
          "when get engagement events"
        ],
        "ThenList": [
          "should return 200",
          "should return events"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2967",
    "FileName": "when_approve_staff_with_diff_practice_types.cs",
    "Description": "when approve staff with diff practice types",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should generate staff joined event correctly"
    ],
    "Children": []
  },
  {
    "$id": "2968",
    "FileName": "should_not_send_out_any_external_api_events_when_operate_employee_work_records.cs",
    "Description": "should not send out any external api events when operate employee work records",
    "WhenList": [
      "get work record events"
    ],
    "ThenList": [
      "should no external api related work record record events"
    ],
    "Children": []
  },
  {
    "$id": "2969",
    "FileName": "when_all_tasks_finished.cs",
    "Description": "when all tasks finished",
    "WhenList": [
      "feinish all task of current milstone"
    ],
    "ThenList": [
      "should succeed",
      "should move milestone next"
    ],
    "Children": []
  },
  {
    "$id": "2970",
    "FileName": "when_batch_update_task_with_status_done.cs",
    "Description": "when batch update task with status done",
    "WhenList": [
      "finish all task of current milstone"
    ],
    "ThenList": [
      "should update ok",
      "should return ok when get events",
      "should save task complated events"
    ],
    "Children": []
  },
  {
    "$id": "2971",
    "FileName": "when_get_archiving_work_record_events_with_pagination_links_for_search_only.cs",
    "Description": "when get archiving work record events with pagination links for search only",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2972",
        "FileName": "when_get_archiving_work_record_events_with_pagination_links_for_search_only.cs",
        "Description": "when query by after",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct events",
          "should return correct next link",
          "should return no next link when no more events left",
          "should return no next link when left events less than limit",
          "should return no next link when current request with no events"
        ],
        "Children": []
      },
      {
        "$id": "2973",
        "FileName": "when_get_archiving_work_record_events_with_pagination_links_for_search_only.cs",
        "Description": "when query with invalid params",
        "WhenList": [],
        "ThenList": [
          "should return bad request without before and after",
          "should return bad request with limit more than 2000",
          "should return bad request with limit is 0",
          "should return bad request with limit less than 0",
          "should return bad request with after less than 0"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2974",
    "FileName": "when_get_recent_work_record_events_with_pagination_links.cs",
    "Description": "when get recent work record events with pagination links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2975",
        "FileName": "when_get_recent_work_record_events_with_pagination_links.cs",
        "Description": "which has prev link",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "2976",
        "FileName": "when_get_recent_work_record_events_with_pagination_links.cs",
        "Description": "which does not have prev link",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "2977",
        "FileName": "when_get_recent_work_record_events_with_pagination_links.cs",
        "Description": "which get recent with default limit",
        "WhenList": [
          "get recent events"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2978",
    "FileName": "when_get_work_record_events.cs",
    "Description": "when get work record events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2979",
        "FileName": "when_get_work_record_events.cs",
        "Description": "when get recent events",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2980",
    "FileName": "when_get_work_record_events_when_complete_task_on_todo_list.cs",
    "Description": "when get work record events when complete task on todo list",
    "WhenList": [
      "finish template task"
    ],
    "ThenList": [
      "should return ok when get events",
      "should save task complated events"
    ],
    "Children": []
  },
  {
    "$id": "2981",
    "FileName": "when_get_work_record_events_with_pagination_links.cs",
    "Description": "when query by after",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should get correct events",
      "should only return correct next link",
      "should return no pagination links when no more events left",
      "should return only prev link when left events less than limit",
      "should return no next link when current request with no events",
      "should return correct pagination link"
    ],
    "Children": [
      {
        "$id": "2982",
        "FileName": "when_get_work_record_events_with_pagination_links.cs",
        "Description": "when query by before",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct events",
          "should only return correct next link",
          "should return no pagination links when no more events left",
          "should return only prev link when left events less than limit",
          "should return correct pagination link"
        ],
        "Children": []
      },
      {
        "$id": "2983",
        "FileName": "when_get_work_record_events_with_pagination_links.cs",
        "Description": "when query with invalid params",
        "WhenList": [],
        "ThenList": [
          "should return bad request with after less than 0"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2984",
    "FileName": "when_get_work_record_name_changed_events.cs",
    "Description": "when get work record name changed events",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2985",
        "FileName": "when_get_work_record_name_changed_events.cs",
        "Description": "when name not changed by single update",
        "WhenList": [
          "when get workrecords events"
        ],
        "ThenList": [
          "should return 200",
          "should get workrecords name changed events"
        ],
        "Children": []
      },
      {
        "$id": "2986",
        "FileName": "when_get_work_record_name_changed_events.cs",
        "Description": "when name not changed by batch update",
        "WhenList": [
          "when get workrecords events"
        ],
        "ThenList": [
          "should return 200",
          "should get workrecords name changed events"
        ],
        "Children": []
      },
      {
        "$id": "2987",
        "FileName": "when_get_work_record_name_changed_events.cs",
        "Description": "when name changed by single update",
        "WhenList": [
          "when get workrecords events"
        ],
        "ThenList": [
          "should return 200",
          "should get workrecords name changed events"
        ],
        "Children": []
      },
      {
        "$id": "2988",
        "FileName": "when_get_work_record_name_changed_events.cs",
        "Description": "when name changed by batch update",
        "WhenList": [
          "when get workrecords events"
        ],
        "ThenList": [
          "should return 200",
          "should get workrecords name changed events"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2989",
    "FileName": "when_mutilple_work_record_checklist_item_completed.cs",
    "Description": "when mutilple work record checklist item completed",
    "WhenList": [
      "batch update check list item"
    ],
    "ThenList": [
      "should publish work record check list item completed event"
    ],
    "Children": []
  },
  {
    "$id": "2990",
    "FileName": "when_single_work_record_check_list_item_completed.cs",
    "Description": "when single work record check list item completed",
    "WhenList": [
      "mark check list item completed"
    ],
    "ThenList": [
      "should publish work record check list item completed event",
      "should return check list item completed event with country base"
    ],
    "Children": []
  },
  {
    "$id": "2991",
    "FileName": "when_work_record_completed.cs",
    "Description": "when work record completed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2992",
        "FileName": "when_work_record_completed.cs",
        "Description": "after work record completed",
        "WhenList": [
          "get work complete event"
        ],
        "ThenList": [
          "should succeed",
          "should with move mile stone event and work record complete event"
        ],
        "Children": []
      },
      {
        "$id": "2993",
        "FileName": "when_work_record_completed.cs",
        "Description": "not work record completed",
        "WhenList": [
          "get work events"
        ],
        "ThenList": [
          "should succeed",
          "should not with work record complete event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2994",
    "FileName": "when_get_all_feature_toggles.cs",
    "Description": "feature toggle resource spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2995",
        "FileName": "when_get_all_feature_toggles.cs",
        "Description": "when get all feature toggles",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should succeed",
          "should return all toggles"
        ],
        "Children": []
      },
      {
        "$id": "2996",
        "FileName": "when_get_all_feature_toggles.cs",
        "Description": "when update feature toggle",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should succeed",
          "should update value"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2997",
    "FileName": "when_assignee_name_contains_invalid_char.cs",
    "Description": "when assignee name contains invalid char",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "2998",
        "FileName": "when_assignee_name_contains_invalid_char.cs",
        "Description": "should pass valid file name to file cabinet provider",
        "WhenList": [
          "send download token request with invalid file name"
        ],
        "ThenList": [
          "should return created",
          "should remove invalid chars"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "2999",
    "FileName": "when_delete_files_of_assignee_without_permission.cs",
    "Description": "when delete files of assignee without permission",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3000",
        "FileName": "when_delete_files_of_assignee_without_permission.cs",
        "Description": "when delete file with PII and without permission",
        "WhenList": [],
        "ThenList": [
          "should return forbidden when staff without permission"
        ],
        "Children": []
      },
      {
        "$id": "3001",
        "FileName": "when_delete_files_of_assignee_without_permission.cs",
        "Description": "when delete file with work record PCN and with permission",
        "WhenList": [],
        "ThenList": [
          "should delete assignee file when staff with permission"
        ],
        "Children": []
      },
      {
        "$id": "3002",
        "FileName": "when_delete_files_of_assignee_without_permission.cs",
        "Description": "when delete file with work record PCN and without permission",
        "WhenList": [],
        "ThenList": [
          "should return forbidden when staff without permission"
        ],
        "Children": []
      },
      {
        "$id": "3003",
        "FileName": "when_delete_files_of_assignee_without_permission.cs",
        "Description": "when delete file uploaded by taxpayer",
        "WhenList": [],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3004",
        "FileName": "when_delete_files_of_assignee_without_permission.cs",
        "Description": "when delete file uploaded by assignee",
        "WhenList": [],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3005",
    "FileName": "when_delete_files_of_assignee_with_correct_request.cs",
    "Description": "when delete files of assignee with correct request",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should delete the file",
      "should log this deletion history"
    ],
    "Children": []
  },
  {
    "$id": "3006",
    "FileName": "when_download_files_of_assignee_with_correct_request.cs",
    "Description": "when download files of assignee with correct request",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should succeed"
    ],
    "Children": []
  },
  {
    "$id": "3007",
    "FileName": "when_get_files_of_assignee_without_work_record_by_staff.cs",
    "Description": "when get files of assignee without work record by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3008",
        "FileName": "when_get_files_of_assignee_without_work_record_by_staff.cs",
        "Description": "staff in responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should only return files published to pwc staff"
        ],
        "Children": []
      },
      {
        "$id": "3009",
        "FileName": "when_get_files_of_assignee_without_work_record_by_staff.cs",
        "Description": "staff not in responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should only return files published to pwc staff"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3010",
    "FileName": "when_get_files_of_assignee_with_work_record_by_staff.cs",
    "Description": "when get files of assignee with work record by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3011",
        "FileName": "when_get_files_of_assignee_with_work_record_by_staff.cs",
        "Description": "staff in responsible office assigned task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should only return files published to pwc staff",
          "should return file with message"
        ],
        "Children": []
      },
      {
        "$id": "3012",
        "FileName": "when_get_files_of_assignee_with_work_record_by_staff.cs",
        "Description": "staff in responsible office but not assigned task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should only return files published to pwc staff"
        ],
        "Children": []
      },
      {
        "$id": "3013",
        "FileName": "when_get_files_of_assignee_with_work_record_by_staff.cs",
        "Description": "staff not in responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should only return files published to pwc staff"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3014",
    "FileName": "when_get_files_of_assignee_with_work_record_by_staff.cs",
    "Description": "when get prepare report file but the file does not have related resource",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3015",
        "FileName": "when_get_files_of_assignee_with_work_record_by_staff.cs",
        "Description": "staff has not self nomination",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not have premission to edit file"
        ],
        "Children": []
      },
      {
        "$id": "3016",
        "FileName": "when_get_files_of_assignee_with_work_record_by_staff.cs",
        "Description": "staff has self nominationed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should have premission to edit file"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3017",
    "FileName": "when_get_files_with_published_by_and_published_at.cs",
    "Description": "when get files with published by and published at",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should only return files published to pwc staff"
    ],
    "Children": []
  },
  {
    "$id": "3018",
    "FileName": "when_immigration_staff_download_assignees_files.cs",
    "Description": "when immigration staff download assignees files",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3019",
        "FileName": "when_immigration_staff_download_assignees_files.cs",
        "Description": "download tax files",
        "WhenList": [
          "download file"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3020",
        "FileName": "when_immigration_staff_download_assignees_files.cs",
        "Description": "download immigration files",
        "WhenList": [
          "download file"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3021",
    "FileName": "when_immigration_staff_get_tax_files.cs",
    "Description": "when immigration staff get tax files",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should not return related file links"
    ],
    "Children": []
  },
  {
    "$id": "3022",
    "FileName": "when_publish_file_with_file_cabinet.cs",
    "Description": "when publish file with file cabinet",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3023",
        "FileName": "when_publish_file_with_file_cabinet.cs",
        "Description": "when get preview token",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created",
          "should send preview request to file cabinet service"
        ],
        "Children": []
      },
      {
        "$id": "3024",
        "FileName": "when_publish_file_with_file_cabinet.cs",
        "Description": "when immigration staff publish immigration file",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3025",
            "FileName": "when_publish_file_with_file_cabinet.cs",
            "Description": "when publish file upload by others",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should send publish request to file cabinet service"
            ],
            "Children": []
          },
          {
            "$id": "3026",
            "FileName": "when_publish_file_with_file_cabinet.cs",
            "Description": "when publish file upload by myself",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden",
              "should send publish request to file cabinet service"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3027",
        "FileName": "when_publish_file_with_file_cabinet.cs",
        "Description": "when tax staff publish immigration file",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden",
          "should send publish request to file cabinet service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3028",
    "FileName": "when_delete_file_of_engagement_with_correct_request.cs",
    "Description": "when delete files of engagement with correct request",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should succeed"
    ],
    "Children": []
  },
  {
    "$id": "3029",
    "FileName": "when_download_files_of_engagement_with_correct_request.cs",
    "Description": "when download files of engagement with correct request",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should succeed"
    ],
    "Children": []
  },
  {
    "$id": "3030",
    "FileName": "when_get_files_of_engagement.cs",
    "Description": "when get files of engagement",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should return files by engagemet id"
    ],
    "Children": []
  },
  {
    "$id": "3031",
    "FileName": "when_get_files_of_engagement_by_different_role.cs",
    "Description": "when get files of engagement by different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3032",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is in subscribed office and is from doucment country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get document country and global file"
        ],
        "Children": []
      },
      {
        "$id": "3033",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is not in subscribed office and is from doucment country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not get file"
        ],
        "Children": []
      },
      {
        "$id": "3034",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is in subscribed office and is not from doucment country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get global file"
        ],
        "Children": []
      },
      {
        "$id": "3035",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is not in subscribed office and is not from doucment country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not get file"
        ],
        "Children": []
      },
      {
        "$id": "3036",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is engagement admin and not from doucment country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get all files"
        ],
        "Children": []
      },
      {
        "$id": "3037",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is global admin and not from doucment country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get all files"
        ],
        "Children": []
      },
      {
        "$id": "3038",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is in coordinating office and not from doucment country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get all files"
        ],
        "Children": []
      },
      {
        "$id": "3039",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is in delegated coordinating office and not from doucment country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get all files"
        ],
        "Children": []
      },
      {
        "$id": "3040",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is only coordinating office primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get all files"
        ],
        "Children": []
      },
      {
        "$id": "3041",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is only coordinating office secondary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get all files"
        ],
        "Children": []
      },
      {
        "$id": "3042",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is only delegated office primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get all files"
        ],
        "Children": []
      },
      {
        "$id": "3043",
        "FileName": "when_get_files_of_engagement_by_different_role.cs",
        "Description": "when current user is only delegated office secondary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get all files"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3044",
    "FileName": "when_get_files_of_restricted_engagement_by_different_role.cs",
    "Description": "when get files of restricted engagement by different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3045",
        "FileName": "when_get_files_of_restricted_engagement_by_different_role.cs",
        "Description": "when current user from coordinating office but not primary contact and not in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not get engagement files"
        ],
        "Children": []
      },
      {
        "$id": "3046",
        "FileName": "when_get_files_of_restricted_engagement_by_different_role.cs",
        "Description": "when current user from delegated coordinating office but not office contact and not in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not get engagement files"
        ],
        "Children": []
      },
      {
        "$id": "3047",
        "FileName": "when_get_files_of_restricted_engagement_by_different_role.cs",
        "Description": "when current user from working office but not office contact and not in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not get engagement files"
        ],
        "Children": []
      },
      {
        "$id": "3048",
        "FileName": "when_get_files_of_restricted_engagement_by_different_role.cs",
        "Description": "when current user from working office and in acl but not office contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get engagement files"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3049",
    "FileName": "when_coordinating_office_staff_and_responsible_for_a_work_record_get_assignee_file_cabinet.cs",
    "Description": "when coordinating office staff and responsible for a work record get assignee file cabinet",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3050",
        "FileName": "when_coordinating_office_staff_and_responsible_for_a_work_record_get_assignee_file_cabinet.cs",
        "Description": "should contain file cabinet operation link for tax work record belongs to non restricted engagement",
        "WhenList": [
          "get assignees file cabinet"
        ],
        "ThenList": [
          "should contain file cabinet operational link"
        ],
        "Children": []
      },
      {
        "$id": "3051",
        "FileName": "when_coordinating_office_staff_and_responsible_for_a_work_record_get_assignee_file_cabinet.cs",
        "Description": "should not contain file cabinet operation link for tax work record belongs to restricted engagement",
        "WhenList": [
          "get assignees file cabinet"
        ],
        "ThenList": [
          "should not contain file cabinet operational link belongs to restriced engagement work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3052",
    "FileName": "when_coordinating_office_staff_download_files_which_belong_to_work_record.cs",
    "Description": "when coordinating office staff download files which belong to work record",
    "WhenList": [
      "when coordinating office user has self nominated"
    ],
    "ThenList": [
      "should contain file cabinet info and download link"
    ],
    "Children": []
  },
  {
    "$id": "3053",
    "FileName": "when_general_contact_staff_download_files.cs",
    "Description": "when general contact staff download files",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3054",
        "FileName": "when_general_contact_staff_download_files.cs",
        "Description": "should see file cabinet",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should contain file cabinet info but not contain delete and download link"
        ],
        "Children": []
      },
      {
        "$id": "3055",
        "FileName": "when_general_contact_staff_download_files.cs",
        "Description": "should return forbidden when downloading file",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3056",
        "FileName": "when_general_contact_staff_download_files.cs",
        "Description": "should return forbidden when deleting file",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3057",
    "FileName": "when_staff_download_french_tax_return_file.cs",
    "Description": "when staff download french tax return file",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3058",
        "FileName": "when_staff_download_french_tax_return_file.cs",
        "Description": "when the staff is french staff and delegated staff",
        "WhenList": [
          "download french tax return"
        ],
        "ThenList": [
          "should succeed",
          "should set the download uri location"
        ],
        "Children": []
      },
      {
        "$id": "3059",
        "FileName": "when_staff_download_french_tax_return_file.cs",
        "Description": "when the staff is not french staff",
        "WhenList": [
          "download french tax return"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3060",
    "FileName": "when_staff_get_french_tax_return_file.cs",
    "Description": "when staff get french tax return file",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3061",
        "FileName": "when_staff_get_french_tax_return_file.cs",
        "Description": "when the staff is french staff and delegated staff",
        "WhenList": [
          "get french tax return"
        ],
        "ThenList": [
          "should succeed",
          "should contain the file uri"
        ],
        "Children": []
      },
      {
        "$id": "3062",
        "FileName": "when_staff_get_french_tax_return_file.cs",
        "Description": "when the staff is not french staff and in unsuscribed office",
        "WhenList": [
          "get french tax return"
        ],
        "ThenList": [
          "should succeed",
          "should not contain the file uri"
        ],
        "Children": []
      },
      {
        "$id": "3063",
        "FileName": "when_staff_get_french_tax_return_file.cs",
        "Description": "when the staff is not french staff and in delegated office",
        "WhenList": [
          "get french tax return"
        ],
        "ThenList": [
          "should succeed",
          "should not contain the file uri"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3064",
    "FileName": "when_staff_in_delegated_office_download_file.cs",
    "Description": "when staff in delegated office download file",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3065",
        "FileName": "when_staff_in_delegated_office_download_file.cs",
        "Description": "when download general file",
        "WhenList": [
          "download a general file"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3066",
        "FileName": "when_staff_in_delegated_office_download_file.cs",
        "Description": "when download work record file",
        "WhenList": [
          "download a work record file"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3067",
    "FileName": "when_staff_in_delegated_office_get_files.cs",
    "Description": "when staff in delegated office get files",
    "WhenList": [
      "get files"
    ],
    "ThenList": [
      "should succeed",
      "should not contain the file uri"
    ],
    "Children": []
  },
  {
    "$id": "3068",
    "FileName": "when_staff_in_workrecord_team.cs",
    "Description": "when staff in work record team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3069",
        "FileName": "when_staff_in_workrecord_team.cs",
        "Description": "when get files",
        "WhenList": [
          "get assignees file by team staff"
        ],
        "ThenList": [
          "should contain file cabinet operational link"
        ],
        "Children": []
      },
      {
        "$id": "3070",
        "FileName": "when_staff_in_workrecord_team.cs",
        "Description": "when download general file",
        "WhenList": [
          "download a general file"
        ],
        "ThenList": [
          "should be ok"
        ],
        "Children": []
      },
      {
        "$id": "3071",
        "FileName": "when_staff_in_workrecord_team.cs",
        "Description": "when download work record file",
        "WhenList": [
          "download a work record file"
        ],
        "ThenList": [
          "should be ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3072",
    "FileName": "when_staff_is_assignees_general_contact_and_has_delegated_task_for_a_work_record.cs",
    "Description": "when staff is assignees general contact and has delegated task for a work record",
    "WhenList": [
      "when get assignees file carbinet"
    ],
    "ThenList": [
      "should contain file operation links"
    ],
    "Children": []
  },
  {
    "$id": "3073",
    "FileName": "when_tax_practice_user_downloads_assignees_immigration_file.cs",
    "Description": "when tax practice user downloads assignees immigration file",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should not contain delete and download link"
    ],
    "Children": []
  },
  {
    "$id": "3074",
    "FileName": "when_get_file_message.cs",
    "Description": "when get file message",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3075",
        "FileName": "when_get_file_message.cs",
        "Description": "when get by staff with permission",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return message"
        ],
        "Children": []
      },
      {
        "$id": "3076",
        "FileName": "when_get_file_message.cs",
        "Description": "when get by staff without permission",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3077",
        "FileName": "when_get_file_message.cs",
        "Description": "when get by staff with invalid message uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "3078",
        "FileName": "when_get_file_message.cs",
        "Description": "message dto",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "3079",
    "FileName": "HealthResourceSpec.cs",
    "Description": "health resource spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3080",
        "FileName": "HealthResourceSpec.cs",
        "Description": "check health by load balancer",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "3081",
        "FileName": "HealthResourceSpec.cs",
        "Description": "check health by url monitor",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should succeed",
          "should report tiger DB as success",
          "should include report for account service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3082",
    "FileName": "TigerDBDependencySpec.cs",
    "Description": "tiger DB dependency spec",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should report error"
    ],
    "Children": []
  },
  {
    "$id": "3083",
    "FileName": "when_connect_linkedin.cs",
    "Description": "when connect linkedin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3084",
        "FileName": "when_connect_linkedin.cs",
        "Description": "when request for authorization url",
        "WhenList": [
          "request url"
        ],
        "ThenList": [
          "should return ok",
          "should return authorize url"
        ],
        "Children": []
      },
      {
        "$id": "3085",
        "FileName": "when_connect_linkedin.cs",
        "Description": "when callback after authorization",
        "WhenList": [
          "request url"
        ],
        "ThenList": [
          "should return ok",
          "should save avatar and linkedin url",
          "should update linkedin profile when callback again"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3086",
    "FileName": "when_request_for_linkedin_authorization_url.cs",
    "Description": "when request for linkedin authorization url",
    "WhenList": [
      "request url"
    ],
    "ThenList": [
      "should return ok",
      "should return authorize url"
    ],
    "Children": []
  },
  {
    "$id": "3087",
    "FileName": "when_get_all_master_chart_of_service.cs",
    "Description": "when get all master chart of service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3088",
        "FileName": "when_get_all_master_chart_of_service.cs",
        "Description": "global admin can access",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return ok",
          "should get master of charts list",
          "should get master of charts list with subcategory"
        ],
        "Children": []
      },
      {
        "$id": "3089",
        "FileName": "when_get_all_master_chart_of_service.cs",
        "Description": "country level role can access",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "3090",
        "FileName": "when_get_all_master_chart_of_service.cs",
        "Description": "office level role can not access",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3091",
        "FileName": "when_get_all_master_chart_of_service.cs",
        "Description": "general staff can not access",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3092",
    "FileName": "when_get_my_data_engagement_custom_field_with_assignee_in_request.cs",
    "Description": "when get my data engagement custom field with assignee in request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3093",
        "FileName": "when_get_my_data_engagement_custom_field_with_assignee_in_request.cs",
        "Description": "should get engagment custom field value on assignee",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should return correct file name",
          "should return excel fill by all custom field and value on assignee",
          "should return excel not fill by all custom field and value not on assignee"
        ],
        "Children": []
      },
      {
        "$id": "3094",
        "FileName": "when_get_my_data_engagement_custom_field_with_assignee_in_request.cs",
        "Description": "should get engagment custom field value by filter engament on assignee",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should return excel filter by engagement on assignee"
        ],
        "Children": []
      },
      {
        "$id": "3095",
        "FileName": "when_get_my_data_engagement_custom_field_with_assignee_in_request.cs",
        "Description": "should get engagment custom field value correct format",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should return excel cell value correct format"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3096",
    "FileName": "when_update_authorization_list.cs",
    "Description": "when update authorization list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3097",
        "FileName": "when_update_authorization_list.cs",
        "Description": "when update authorization item from authorized to unauthorized",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be created",
          "should raise event"
        ],
        "Children": []
      },
      {
        "$id": "3098",
        "FileName": "when_update_authorization_list.cs",
        "Description": "when update authorization 2 times",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be created",
          "should raise event 2 times"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3099",
    "FileName": "when_get_authorization_lists_overview.cs",
    "Description": "when get authorization lists overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3100",
        "FileName": "when_get_authorization_lists_overview.cs",
        "Description": "should return authorization lists overview",
        "WhenList": [
          "request to get all authorization lists overview"
        ],
        "ThenList": [
          "should be ok",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3101",
        "FileName": "when_get_authorization_lists_overview.cs",
        "Description": "should return zero when no assignment existed in requested authlist",
        "WhenList": [
          "request to get all authorization lists overview"
        ],
        "ThenList": [
          "should be ok",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3102",
        "FileName": "when_get_authorization_lists_overview.cs",
        "Description": "should return zero when no assignment for specifc country",
        "WhenList": [
          "request to get all authorization lists overview"
        ],
        "ThenList": [
          "should be ok",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3103",
        "FileName": "when_get_authorization_lists_overview.cs",
        "Description": "should return zero when no assignment for all calendar year countries",
        "WhenList": [
          "request to get all authorization lists overview"
        ],
        "ThenList": [
          "should be ok",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3104",
        "FileName": "when_get_authorization_lists_overview.cs",
        "Description": "should return not found when platform api return not found",
        "WhenList": [
          "request to get all authorization lists overview"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3105",
    "FileName": "when_get_authorization_lists_summaries.cs",
    "Description": "when get authorization lists summaries",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3106",
        "FileName": "when_get_authorization_lists_summaries.cs",
        "Description": "when have shared user access",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3107",
            "FileName": "when_get_authorization_lists_summaries.cs",
            "Description": "should return authorization lists summaries",
            "WhenList": [
              "request to get all authorization lists summaries"
            ],
            "ThenList": [
              "should be ok",
              "should return"
            ],
            "Children": []
          },
          {
            "$id": "3108",
            "FileName": "when_get_authorization_lists_summaries.cs",
            "Description": "should filter by authorization list id",
            "WhenList": [
              "request to get all authorization lists summaries"
            ],
            "ThenList": [
              "should be ok",
              "should return"
            ],
            "Children": []
          },
          {
            "$id": "3109",
            "FileName": "when_get_authorization_lists_summaries.cs",
            "Description": "should filter by specific country",
            "WhenList": [
              "request to get all authorization lists summaries"
            ],
            "ThenList": [
              "should be ok",
              "should return"
            ],
            "Children": []
          },
          {
            "$id": "3110",
            "FileName": "when_get_authorization_lists_summaries.cs",
            "Description": "should filter by country global",
            "WhenList": [
              "request to get all authorization lists summaries"
            ],
            "ThenList": [
              "should be ok",
              "should return"
            ],
            "Children": []
          },
          {
            "$id": "3111",
            "FileName": "when_get_authorization_lists_summaries.cs",
            "Description": "should filter by country all calendar year countries",
            "WhenList": [
              "request to get all authorization lists summaries"
            ],
            "ThenList": [
              "should be ok",
              "should return"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3112",
        "FileName": "when_get_authorization_lists_summaries.cs",
        "Description": "should return empty summaries when no authorization list user access for engagement",
        "WhenList": [
          "request to get all authorization lists summaries"
        ],
        "ThenList": [
          "should be ok",
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3113",
    "FileName": "when_get_authorization_list_by_id.cs",
    "Description": "when get authorization list by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3114",
        "FileName": "when_get_authorization_list_by_id.cs",
        "Description": "when nancy can see the requested authorization list",
        "WhenList": [
          "get authorization list by id"
        ],
        "ThenList": [
          "should return ok",
          "should return authorization list"
        ],
        "Children": []
      },
      {
        "$id": "3115",
        "FileName": "when_get_authorization_list_by_id.cs",
        "Description": "when nancy can see item from finalized authorization list",
        "WhenList": [
          "get authorization list by id"
        ],
        "ThenList": [
          "should return ok",
          "should return authorization list"
        ],
        "Children": []
      },
      {
        "$id": "3116",
        "FileName": "when_get_authorization_list_by_id.cs",
        "Description": "when getting an authorization list nancy have no access",
        "WhenList": [
          "request to generate authorization list given engagement and year"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3117",
        "FileName": "when_get_authorization_list_by_id.cs",
        "Description": "should filter by authorization list id",
        "WhenList": [
          "request to get all authorization lists summaries"
        ],
        "ThenList": [
          "should be ok",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3118",
        "FileName": "when_get_authorization_list_by_id.cs",
        "Description": "should filter by specific country",
        "WhenList": [
          "request to get all authorization lists summaries"
        ],
        "ThenList": [
          "should be ok",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3119",
        "FileName": "when_get_authorization_list_by_id.cs",
        "Description": "should filter by country global",
        "WhenList": [
          "request to get all authorization lists summaries"
        ],
        "ThenList": [
          "should be ok",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3120",
        "FileName": "when_get_authorization_list_by_id.cs",
        "Description": "should filter by country all calendar year countries",
        "WhenList": [
          "request to get all authorization lists summaries"
        ],
        "ThenList": [
          "should be ok",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3121",
        "FileName": "when_get_authorization_list_by_id.cs",
        "Description": "should filter by udf when user is rebecca",
        "WhenList": [
          "get authorization list by id"
        ],
        "ThenList": [
          "should return ok",
          "should return authorization list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3122",
    "FileName": "when_get_mymobility_user_access.cs",
    "Description": "when get mymobility user access",
    "WhenList": [
      "update client user access"
    ],
    "ThenList": [
      "should return ok",
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "3123",
    "FileName": "when_update_authorization_item_status.cs",
    "Description": "when update authorization item status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3124",
        "FileName": "when_update_authorization_item_status.cs",
        "Description": "when updating authorization item status from tiger",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should update authorization item from tiger staff",
          "should record history and set updated by client to false"
        ],
        "Children": []
      },
      {
        "$id": "3125",
        "FileName": "when_update_authorization_item_status.cs",
        "Description": "when updating authorization item status from mymobility",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be created",
          "should update authorization item and record it has been done by client user",
          "should record history and set updated by client to true"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3126",
    "FileName": "when_update_authorization_list.cs",
    "Description": "when update authorization list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3127",
        "FileName": "when_update_authorization_list.cs",
        "Description": "when updating an authorization list from an unauthorized engagement",
        "WhenList": [
          "request to update authorization list"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3128",
        "FileName": "when_update_authorization_list.cs",
        "Description": "when updating authorization item from another authorization list",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3129",
        "FileName": "when_update_authorization_list.cs",
        "Description": "when update authorization item from authorized to unauthorized",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be created",
          "should update authorization item in authorization list",
          "should record history",
          "should raise event"
        ],
        "Children": []
      },
      {
        "$id": "3130",
        "FileName": "when_update_authorization_list.cs",
        "Description": "when update authorization 2 times",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be created",
          "should raise event 2 times"
        ],
        "Children": []
      },
      {
        "$id": "3131",
        "FileName": "when_update_authorization_list.cs",
        "Description": "when update authorization item from unauthorized to authorized",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should record history"
        ],
        "Children": []
      },
      {
        "$id": "3132",
        "FileName": "when_update_authorization_list.cs",
        "Description": "when update comments of authorization item",
        "WhenList": [
          "update authorization item"
        ],
        "ThenList": [
          "should be created",
          "should update authorization item in authorization list",
          "should record history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3133",
    "FileName": "when_update_mymobility_user_access.cs",
    "Description": "when update mymobility user access",
    "WhenList": [
      "update client user access"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "3134",
    "FileName": "when_filter_employees_by_custom_field_filter.cs",
    "Description": "when filter employees by custom field filter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3135",
        "FileName": "when_filter_employees_by_custom_field_filter.cs",
        "Description": "when custom field filter options is not empty",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3136",
        "FileName": "when_filter_employees_by_custom_field_filter.cs",
        "Description": "when custom field filter options empty",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3137",
    "FileName": "when_get_employees_population.cs",
    "Description": "when get employees population",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3138",
        "FileName": "when_get_employees_population.cs",
        "Description": "without udf filter",
        "WhenList": [
          "get population of employees"
        ],
        "ThenList": [
          "should success",
          "should only return active or hidden assignees",
          "should return employees which is belonged to given engagements",
          "should return the expected employee information"
        ],
        "Children": []
      },
      {
        "$id": "3139",
        "FileName": "when_get_employees_population.cs",
        "Description": "with udf filter",
        "WhenList": [
          "get population of employees"
        ],
        "ThenList": [
          "should success",
          "should only return active or hidden assignees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3140",
    "FileName": "when_get_employee_assignment_overview.cs",
    "Description": "when get employee assignment overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3141",
        "FileName": "when_get_employee_assignment_overview.cs",
        "Description": "when employee is active",
        "WhenList": [
          "get overview of employee by country"
        ],
        "ThenList": [
          "should success",
          "should return employee orverview by country"
        ],
        "Children": []
      },
      {
        "$id": "3142",
        "FileName": "when_get_employee_assignment_overview.cs",
        "Description": "when employee is not active",
        "WhenList": [
          "get overview of employee by country"
        ],
        "ThenList": [
          "should success",
          "should not return inactive employee overview by country"
        ],
        "Children": []
      },
      {
        "$id": "3143",
        "FileName": "when_get_employee_assignment_overview.cs",
        "Description": "when employee assignment actual end date before today",
        "WhenList": [
          "get overview of employee by country"
        ],
        "ThenList": [
          "should success",
          "employee overview should be empty"
        ],
        "Children": []
      },
      {
        "$id": "3144",
        "FileName": "when_get_employee_assignment_overview.cs",
        "Description": "when employee has two clients",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3145",
            "FileName": "when_get_employee_assignment_overview.cs",
            "Description": "should return one assignment for nancy",
            "WhenList": [
              "get overview of employee by country"
            ],
            "ThenList": [
              "should return ok",
              "should only return one assignment"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3146",
        "FileName": "when_get_employee_assignment_overview.cs",
        "Description": "when employee has not right client association",
        "WhenList": [
          "get overview of employee by country"
        ],
        "ThenList": [
          "should return ok",
          "should return 2 assignments"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3147",
    "FileName": "when_get_employee_count.cs",
    "Description": "when get employee count",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3148",
        "FileName": "when_get_employee_count.cs",
        "Description": "when not filters",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return employee amount which only counts active and hidden assignees"
        ],
        "Children": []
      },
      {
        "$id": "3149",
        "FileName": "when_get_employee_count.cs",
        "Description": "when has filters",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3150",
            "FileName": "when_get_employee_count.cs",
            "Description": "when custom field filter options is not empty",
            "WhenList": [
              "get filtered employees"
            ],
            "ThenList": [
              "should success",
              "should only return filtered assignees"
            ],
            "Children": []
          },
          {
            "$id": "3151",
            "FileName": "when_get_employee_count.cs",
            "Description": "when custom field filter options is empty",
            "WhenList": [
              "get filtered employees"
            ],
            "ThenList": [
              "should success",
              "should return no assignees"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3152",
    "FileName": "when_get_employee_count_with_UDF_filter.cs",
    "Description": "when get employee count with UDF filter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3153",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when assignee not have value for udf filter cf",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3154",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when udf filter match",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3155",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when udf filter match for two engagement",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3156",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when udf filter not match",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3157",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when two engagement and only one have udf",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3158",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when two filter but assignee only have one value",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3159",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when two filter but assignee only one value match",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3160",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when two filter and all match",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3161",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when subscribe udf and assignee have one engagement but value not match",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3162",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when subscribe udf and assignee have one engagement value match",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      },
      {
        "$id": "3163",
        "FileName": "when_get_employee_count_with_UDF_filter.cs",
        "Description": "when subscribe udf and assignee have two engagement value match",
        "WhenList": [
          "get filtered employees"
        ],
        "ThenList": [
          "should success",
          "should only return filtered assignees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3164",
    "FileName": "when_get_employee_list.cs",
    "Description": "when get employee list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3165",
        "FileName": "when_get_employee_list.cs",
        "Description": "when employee is active",
        "WhenList": [
          "get list of employees"
        ],
        "ThenList": [
          "should success",
          "should return the expected assignments"
        ],
        "Children": []
      },
      {
        "$id": "3166",
        "FileName": "when_get_employee_list.cs",
        "Description": "when employee is inactive",
        "WhenList": [
          "get list of employees"
        ],
        "ThenList": [
          "should success",
          "should not return the inactive employees"
        ],
        "Children": []
      },
      {
        "$id": "3167",
        "FileName": "when_get_employee_list.cs",
        "Description": "when employee is active and have one actual end date before today assignment",
        "WhenList": [
          "get list of employees"
        ],
        "ThenList": [
          "should success",
          "should return zero employees"
        ],
        "Children": []
      },
      {
        "$id": "3168",
        "FileName": "when_get_employee_list.cs",
        "Description": "when assignee have two clients",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3169",
            "FileName": "when_get_employee_list.cs",
            "Description": "should return one assignment for nancy",
            "WhenList": [
              "get list of employees"
            ],
            "ThenList": [
              "should return ok",
              "should only return one assignment"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3170",
    "FileName": "when_get_employee_overview_with_custom_field_filter.cs",
    "Description": "when get employee overview with custom field filter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3171",
        "FileName": "when_get_employee_overview_with_custom_field_filter.cs",
        "Description": "when rebecca does not have filter",
        "WhenList": [
          "get overview of employee by country"
        ],
        "ThenList": [
          "should success",
          "should return employee overview by country"
        ],
        "Children": []
      },
      {
        "$id": "3172",
        "FileName": "when_get_employee_overview_with_custom_field_filter.cs",
        "Description": "when rebecca has one filter",
        "WhenList": [
          "get overview of employee by country"
        ],
        "ThenList": [
          "should success",
          "should return employee overview by country"
        ],
        "Children": []
      },
      {
        "$id": "3173",
        "FileName": "when_get_employee_overview_with_custom_field_filter.cs",
        "Description": "when rebecca has two filter",
        "WhenList": [
          "get overview of employee by country"
        ],
        "ThenList": [
          "should success",
          "should return employee overview by country"
        ],
        "Children": []
      },
      {
        "$id": "3174",
        "FileName": "when_get_employee_overview_with_custom_field_filter.cs",
        "Description": "when rebecca has two filter in different engagement",
        "WhenList": [
          "get overview of employee by country"
        ],
        "ThenList": [
          "should success",
          "should return employee overview by country"
        ],
        "Children": []
      },
      {
        "$id": "3175",
        "FileName": "when_get_employee_overview_with_custom_field_filter.cs",
        "Description": "when rebecca has one filter and kayla has two engagements",
        "WhenList": [
          "get overview of employee by country"
        ],
        "ThenList": [
          "should success",
          "should return employee overview by country"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3176",
    "FileName": "when_get_employee_taxreturn_overview.cs",
    "Description": "when get employee taxreturn overview",
    "WhenList": [
      "get tax return overview"
    ],
    "ThenList": [
      "should success",
      "should return employee tax return overview by country"
    ],
    "Children": []
  },
  {
    "$id": "3177",
    "FileName": "when_update_assignee_assignments_details_by_nancy.cs",
    "Description": "when update assignee assignments details by nancy",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3178",
        "FileName": "when_update_assignee_assignments_details_by_nancy.cs",
        "Description": "should update assignee info with single client",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update assignee basic info"
        ],
        "Children": []
      },
      {
        "$id": "3179",
        "FileName": "when_update_assignee_assignments_details_by_nancy.cs",
        "Description": "should update assignee info with two clients",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update assignee basic info"
        ],
        "Children": []
      },
      {
        "$id": "3180",
        "FileName": "when_update_assignee_assignments_details_by_nancy.cs",
        "Description": "should return unauthorized when assignee and nancy is from different clients",
        "WhenList": [
          "when update assignment by nancy from oracle"
        ],
        "ThenList": [
          "should return 401"
        ],
        "Children": []
      },
      {
        "$id": "3181",
        "FileName": "when_update_assignee_assignments_details_by_nancy.cs",
        "Description": "should return unauthorized when nancy updates assignments which she did not has the assignment",
        "WhenList": [
          "when update assigment info with invalid assignment in request"
        ],
        "ThenList": [
          "should return 401"
        ],
        "Children": []
      },
      {
        "$id": "3182",
        "FileName": "when_update_assignee_assignments_details_by_nancy.cs",
        "Description": "should not return authrozed when nancy updates assignment in co c",
        "WhenList": [
          "when update assigment info with invalid assignment in request"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "3183",
        "FileName": "when_update_assignee_assignments_details_by_nancy.cs",
        "Description": "should record which nancy has changed which column",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should keep update history"
        ],
        "Children": []
      },
      {
        "$id": "3184",
        "FileName": "when_update_assignee_assignments_details_by_nancy.cs",
        "Description": "should add assignee assignment custom field modifier name when add custom field",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update assignee assignment custom field modifier name"
        ],
        "Children": []
      },
      {
        "$id": "3185",
        "FileName": "when_update_assignee_assignments_details_by_nancy.cs",
        "Description": "should update assignee assignment custom field modifier name to nancy displayname",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should update assignee assignment custom field modifier name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3186",
    "FileName": "when_get_employee_assignments_by_id.cs",
    "Description": "when get employee assignments by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3187",
        "FileName": "when_get_employee_assignments_by_id.cs",
        "Description": "should get assignment with full information",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return only one not null assignment"
        ],
        "Children": []
      },
      {
        "$id": "3188",
        "FileName": "when_get_employee_assignments_by_id.cs",
        "Description": "should not get assignment with empty start date even other dates are not empty",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should not return assignment"
        ],
        "Children": []
      },
      {
        "$id": "3189",
        "FileName": "when_get_employee_assignments_by_id.cs",
        "Description": "should get assignment which actual end date before today",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return assignment"
        ],
        "Children": []
      },
      {
        "$id": "3190",
        "FileName": "when_get_employee_assignments_by_id.cs",
        "Description": "should get assignment with start date even if other dates are null",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return assignment"
        ],
        "Children": []
      },
      {
        "$id": "3191",
        "FileName": "when_get_employee_assignments_by_id.cs",
        "Description": "should get assignment according to nancy associated engagment",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return assignment"
        ],
        "Children": []
      },
      {
        "$id": "3192",
        "FileName": "when_get_employee_assignments_by_id.cs",
        "Description": "should return forbidden if mymobility user does not share any of the assignee engagements",
        "WhenList": [
          "load employee dashboard assignee informations"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3193",
    "FileName": "when_get_employee_cross_client_by_id.cs",
    "Description": "when get employee cross client by id",
    "WhenList": [
      "load employee account data"
    ],
    "ThenList": [
      "should return ok",
      "should return all fields required"
    ],
    "Children": []
  },
  {
    "$id": "3194",
    "FileName": "when_get_employee_dashboard_assignee_information_sections.cs",
    "Description": "when get employee dashboard assignee information sections",
    "WhenList": [
      "get employee"
    ],
    "ThenList": [
      "should return ok",
      "should return engagement custom fields"
    ],
    "Children": []
  },
  {
    "$id": "3195",
    "FileName": "when_get_employee_dashboard_briefing_status_section.cs",
    "Description": "when get employee dashboard briefing status section",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3196",
        "FileName": "when_get_employee_dashboard_briefing_status_section.cs",
        "Description": "when get normally briefing status section",
        "WhenList": [
          "get employee with briefing work records"
        ],
        "ThenList": [
          "should return ok",
          "should return briefing work records informations"
        ],
        "Children": []
      },
      {
        "$id": "3197",
        "FileName": "when_get_employee_dashboard_briefing_status_section.cs",
        "Description": "when mymobility user does not share any of the assignee engagements",
        "WhenList": [
          "load employee dashboard assignee informations"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3198",
    "FileName": "when_get_employee_dashboard_coc_section.cs",
    "Description": "when get employee dashboard coc section",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3199",
        "FileName": "when_get_employee_dashboard_coc_section.cs",
        "Description": "when get coc section normally",
        "WhenList": [
          "get employee with briefing work records"
        ],
        "ThenList": [
          "should return ok",
          "should return briefing work records informations"
        ],
        "Children": []
      },
      {
        "$id": "3200",
        "FileName": "when_get_employee_dashboard_coc_section.cs",
        "Description": "when mymobility user does not share any of the assignee engagements",
        "WhenList": [
          "load employee dashboard assignee informations"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3201",
    "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
    "Description": "when get employee dashboard main info with questionnaire and tax return",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3202",
        "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
        "Description": "when get employee dashboard main info with normal information",
        "WhenList": [
          "load employee dashboard main sections"
        ],
        "ThenList": [
          "should return ok",
          "should return all fields required"
        ],
        "Children": []
      },
      {
        "$id": "3203",
        "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
        "Description": "when get employee with empty timezone",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return all fields required"
        ],
        "Children": []
      },
      {
        "$id": "3204",
        "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
        "Description": "when get employee with location information",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return all fields required"
        ],
        "Children": []
      },
      {
        "$id": "3205",
        "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
        "Description": "when get a non existing employee",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "3206",
        "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
        "Description": "when get employee with tax return work records",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3207",
            "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
            "Description": "given workrecords with created status",
            "WhenList": [
              "load employee account data"
            ],
            "ThenList": [
              "should return only notified work record"
            ],
            "Children": []
          },
          {
            "$id": "3208",
            "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
            "Description": "when get latest two years work record",
            "WhenList": [
              "load employee account data"
            ],
            "ThenList": [
              "should return ok",
              "should return latest two years work record"
            ],
            "Children": []
          },
          {
            "$id": "3209",
            "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
            "Description": "when get tax return work record info",
            "WhenList": [
              "load employee account data"
            ],
            "ThenList": [
              "should return ok",
              "should return work record infos"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3210",
        "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
        "Description": "when get employee main info and mymobility user does not subscribe tax return",
        "WhenList": [
          "load employee dashboard main sections"
        ],
        "ThenList": [
          "should return ok",
          "should return all fields required"
        ],
        "Children": []
      },
      {
        "$id": "3211",
        "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
        "Description": "when get employee main info and mymobility user has one of two engagement subscribing tax return",
        "WhenList": [
          "load employee dashboard main sections"
        ],
        "ThenList": [
          "should return ok",
          "should return all fields required"
        ],
        "Children": []
      },
      {
        "$id": "3212",
        "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
        "Description": "when get employee main info and mymobility user belongs to more engagements than assignee",
        "WhenList": [
          "load employee dashboard main sections"
        ],
        "ThenList": [
          "should return ok",
          "should return briefing status as unsubscribed section because assignee does not subscribe that engagement"
        ],
        "Children": []
      },
      {
        "$id": "3213",
        "FileName": "when_get_employee_dashboard_main_info_with_questionnaire_and_tax_return.cs",
        "Description": "when get employee main info and mymobility user does not share any of the assignee engagements",
        "WhenList": [
          "load employee dashboard main sections"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3214",
    "FileName": "when_get_employee_dashboard_main_sections_with_custom_field_filters.cs",
    "Description": "when get employee dashboard main sections with custom field filters",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3215",
        "FileName": "when_get_employee_dashboard_main_sections_with_custom_field_filters.cs",
        "Description": "when employee has one engagement",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return all fields required"
        ],
        "Children": []
      },
      {
        "$id": "3216",
        "FileName": "when_get_employee_dashboard_main_sections_with_custom_field_filters.cs",
        "Description": "when employee has two engagements",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return all fields required"
        ],
        "Children": []
      },
      {
        "$id": "3217",
        "FileName": "when_get_employee_dashboard_main_sections_with_custom_field_filters.cs",
        "Description": "when employee does not match the filter",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3218",
    "FileName": "when_get_employee_dashboard_service_evaluation_section.cs",
    "Description": "when get employee dashboard service evaluation section",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3219",
        "FileName": "when_get_employee_dashboard_service_evaluation_section.cs",
        "Description": "when get service evaluation section normally",
        "WhenList": [
          "load employee dashboard service evaluation section"
        ],
        "ThenList": [
          "should return ok",
          "should return all fields required"
        ],
        "Children": []
      },
      {
        "$id": "3220",
        "FileName": "when_get_employee_dashboard_service_evaluation_section.cs",
        "Description": "when mymobility user does not share any of the assignee engagements",
        "WhenList": [
          "load employee dashboard assignee informations"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3221",
    "FileName": "when_get_employee_dashboard_social_security_status_section.cs",
    "Description": "when get employee dashboard social security status section",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3222",
        "FileName": "when_get_employee_dashboard_social_security_status_section.cs",
        "Description": "when get social security status section normally",
        "WhenList": [
          "get employee"
        ],
        "ThenList": [
          "should return ok",
          "should return social security informations"
        ],
        "Children": []
      },
      {
        "$id": "3223",
        "FileName": "when_get_employee_dashboard_social_security_status_section.cs",
        "Description": "when mymobility user does not share any of the assignee engagements",
        "WhenList": [
          "load employee dashboard assignee informations"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3224",
    "FileName": "when_get_employee_with_questionnaire_reminder_history.cs",
    "Description": "when get employee with questionnaire reminder history",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3225",
        "FileName": "when_get_employee_with_questionnaire_reminder_history.cs",
        "Description": "should get assignee questionnaire with reminder sended by pwc",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with questionnaire reminder history"
        ],
        "Children": []
      },
      {
        "$id": "3226",
        "FileName": "when_get_employee_with_questionnaire_reminder_history.cs",
        "Description": "should get assignee questionnaire with reminder sended by nancy",
        "WhenList": [
          "load employee account data"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with questionnaire reminder history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3227",
    "FileName": "when_batch_update_employer_return_status.cs",
    "Description": "when batch update employer return status",
    "WhenList": [
      "change employer return status"
    ],
    "ThenList": [
      "should raise employer return status change event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "3228",
    "FileName": "when_filter_by_assignee_status.cs",
    "Description": "when filter by assignee status",
    "WhenList": [
      "post"
    ],
    "ThenList": [
      "should return result"
    ],
    "Children": []
  },
  {
    "$id": "3229",
    "FileName": "when_filter_by_country.cs",
    "Description": "when filter by country",
    "WhenList": [
      "post"
    ],
    "ThenList": [
      "should return result"
    ],
    "Children": []
  },
  {
    "$id": "3230",
    "FileName": "when_filter_by_current_milestone.cs",
    "Description": "when filter by current milestone",
    "WhenList": [
      "post"
    ],
    "ThenList": [
      "should return result"
    ],
    "Children": []
  },
  {
    "$id": "3231",
    "FileName": "when_filter_by_engagement.cs",
    "Description": "when filter by engagement",
    "WhenList": [
      "post"
    ],
    "ThenList": [
      "should return result filter by engagement"
    ],
    "Children": []
  },
  {
    "$id": "3232",
    "FileName": "when_filter_by_no_filing_requirement.cs",
    "Description": "when filter by no filing requirement",
    "WhenList": [
      "post"
    ],
    "ThenList": [
      "should return result"
    ],
    "Children": []
  },
  {
    "$id": "3233",
    "FileName": "when_filter_by_tax.cs",
    "Description": "when filter by tax",
    "WhenList": [
      "post"
    ],
    "ThenList": [
      "should return result"
    ],
    "Children": []
  },
  {
    "$id": "3234",
    "FileName": "when_filter_by_workrecord_status.cs",
    "Description": "when filter by workrecord status",
    "WhenList": [
      "post"
    ],
    "ThenList": [
      "should return result"
    ],
    "Children": []
  },
  {
    "$id": "3235",
    "FileName": "when_filter_by_years.cs",
    "Description": "when filter by years",
    "WhenList": [
      "post"
    ],
    "ThenList": [
      "should return result filter by year"
    ],
    "Children": []
  },
  {
    "$id": "3236",
    "FileName": "when_get_summary_info.cs",
    "Description": "when get summary info",
    "WhenList": [
      "post"
    ],
    "ThenList": [
      "should return employer return summary"
    ],
    "Children": []
  },
  {
    "$id": "3237",
    "FileName": "when_get_employer_returns.cs",
    "Description": "when get employer returns",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3238",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when in jan to march",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should return recent two years data"
        ],
        "Children": []
      },
      {
        "$id": "3239",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when in april to jun",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should return recent two years data"
        ],
        "Children": []
      },
      {
        "$id": "3240",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when in jul to dec",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should return recent two years data"
        ],
        "Children": []
      },
      {
        "$id": "3241",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when nancy doesnot have this tile",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3242",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when get corrent employer return list",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should get correct content"
        ],
        "Children": []
      },
      {
        "$id": "3243",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when get corrent employer return list and engagement subscribes box",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should get correct content"
        ],
        "Children": []
      },
      {
        "$id": "3244",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when get corrent employer return list by rebecca",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should not get result"
        ],
        "Children": []
      },
      {
        "$id": "3245",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when get different work records",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should return data for quanlified work record",
          "should get employer return which milestone is in review"
        ],
        "Children": []
      },
      {
        "$id": "3246",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when get emnployer return list which minimize year is 2015",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should get empty list"
        ],
        "Children": []
      },
      {
        "$id": "3247",
        "FileName": "when_get_employer_returns.cs",
        "Description": "when get employer return list status updated by sofia",
        "WhenList": [
          "get employer return"
        ],
        "ThenList": [
          "should get last updated by as null which status is new",
          "should get last updated by as pwc which status is approved by sofia"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3248",
    "FileName": "when_update_employer_return_status.cs",
    "Description": "when update employer return status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3249",
        "FileName": "when_update_employer_return_status.cs",
        "Description": "when update single employer return status",
        "WhenList": [
          "update employer return status"
        ],
        "ThenList": [
          "should return ok and updated ids",
          "should get correct content"
        ],
        "Children": []
      },
      {
        "$id": "3250",
        "FileName": "when_update_employer_return_status.cs",
        "Description": "when update batch employer return status",
        "WhenList": [
          "update employer return status"
        ],
        "ThenList": [
          "should return ok and updated ids",
          "should get correct content"
        ],
        "Children": []
      },
      {
        "$id": "3251",
        "FileName": "when_update_employer_return_status.cs",
        "Description": "should send email when nancy approves or rejects single employer return",
        "WhenList": [
          "update employer return info"
        ],
        "ThenList": [
          "should return ok",
          "should send out email"
        ],
        "Children": []
      },
      {
        "$id": "3252",
        "FileName": "when_update_employer_return_status.cs",
        "Description": "should send email when nancy approves or rejects multiple employer returns",
        "WhenList": [
          "update employer return info"
        ],
        "ThenList": [
          "should return ok",
          "should send out email"
        ],
        "Children": []
      },
      {
        "$id": "3253",
        "FileName": "when_update_employer_return_status.cs",
        "Description": "should split to different emails when there are multiple engagements employer returns have been approved or rejected",
        "WhenList": [
          "update employer return info"
        ],
        "ThenList": [
          "should return ok",
          "should send out email"
        ],
        "Children": []
      },
      {
        "$id": "3254",
        "FileName": "when_update_employer_return_status.cs",
        "Description": "should not send email to employer return which is approved",
        "WhenList": [
          "update employer return info"
        ],
        "ThenList": [
          "should return ok",
          "should not send out email"
        ],
        "Children": []
      },
      {
        "$id": "3255",
        "FileName": "when_update_employer_return_status.cs",
        "Description": "should send out email body content ordered by employer name",
        "WhenList": [
          "update employer return info"
        ],
        "ThenList": [
          "should return ok",
          "should send email ordered by assignee name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3256",
    "FileName": "when_extend_immigration_document.cs",
    "Description": "when extend immigration work record",
    "WhenList": [
      "update immigration document"
    ],
    "ThenList": [
      "should raise event"
    ],
    "Children": []
  },
  {
    "$id": "3257",
    "FileName": "when_extend_immigration_document.cs",
    "Description": "when extend immigration document",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3258",
        "FileName": "when_extend_immigration_document.cs",
        "Description": "should approve extension of work record",
        "WhenList": [
          "extend immigration document"
        ],
        "ThenList": [
          "should return success",
          "should save immigration documents extension info"
        ],
        "Children": []
      },
      {
        "$id": "3259",
        "FileName": "when_extend_immigration_document.cs",
        "Description": "should approve deny extension of work record",
        "WhenList": [
          "extend immigration document"
        ],
        "ThenList": [
          "should return success",
          "should save immigration documents extension info"
        ],
        "Children": []
      },
      {
        "$id": "3260",
        "FileName": "when_extend_immigration_document.cs",
        "Description": "should not save document extended request when request already sended",
        "WhenList": [
          "extend immigration document"
        ],
        "ThenList": [
          "should return success"
        ],
        "Children": []
      },
      {
        "$id": "3261",
        "FileName": "when_extend_immigration_document.cs",
        "Description": "should notify pwc staff with correct email content when service is extended",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3262",
            "FileName": "when_extend_immigration_document.cs",
            "Description": "should send email if extended is true",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should notify with correct email content"
            ],
            "Children": []
          },
          {
            "$id": "3263",
            "FileName": "when_extend_immigration_document.cs",
            "Description": "should sanitize comments in the request sent to notification service",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should notify delegated coordinating office team mailbox"
            ],
            "Children": []
          },
          {
            "$id": "3264",
            "FileName": "when_extend_immigration_document.cs",
            "Description": "should send email if extended is false",
            "WhenList": [
              "deny extension of immigration document"
            ],
            "ThenList": [
              "should success",
              "should send request to notification service"
            ],
            "Children": []
          },
          {
            "$id": "3265",
            "FileName": "when_extend_immigration_document.cs",
            "Description": "should send email when work record has no assignment",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should not set current assignment expected end date"
            ],
            "Children": []
          },
          {
            "$id": "3266",
            "FileName": "when_extend_immigration_document.cs",
            "Description": "should rollback every change to database if notification service request fails",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should fail",
              "should not save service extension in database"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3267",
    "FileName": "when_extend_immigration_document.cs",
    "Description": "when extend immigration work record",
    "WhenList": [
      "update immigration document"
    ],
    "ThenList": [
      "should raise event"
    ],
    "Children": []
  },
  {
    "$id": "3268",
    "FileName": "when_get_immigration_document_access.cs",
    "Description": "when get immigration document access",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3269",
        "FileName": "when_get_immigration_document_access.cs",
        "Description": "should get immigration document access",
        "WhenList": [
          "get immigration document access"
        ],
        "ThenList": [
          "should return success"
        ],
        "Children": []
      },
      {
        "$id": "3270",
        "FileName": "when_get_immigration_document_access.cs",
        "Description": "should return ok when check multi workrecord",
        "WhenList": [
          "get immigration document access"
        ],
        "ThenList": [
          "should return success"
        ],
        "Children": []
      },
      {
        "$id": "3271",
        "FileName": "when_get_immigration_document_access.cs",
        "Description": "should return forbidden when document not belong to engagement",
        "WhenList": [
          "get immigration document access"
        ],
        "ThenList": [
          "should return success"
        ],
        "Children": []
      },
      {
        "$id": "3272",
        "FileName": "when_get_immigration_document_access.cs",
        "Description": "should return forbidden when document filter by udf",
        "WhenList": [
          "get immigration document access"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3273",
        "FileName": "when_get_immigration_document_access.cs",
        "Description": "should return forbidden when document not existed",
        "WhenList": [
          "get immigration document access"
        ],
        "ThenList": [
          "should return success"
        ],
        "Children": []
      },
      {
        "$id": "3274",
        "FileName": "when_get_immigration_document_access.cs",
        "Description": "should return forbidden when not all documents access",
        "WhenList": [
          "get immigration document access"
        ],
        "ThenList": [
          "should return success"
        ],
        "Children": []
      },
      {
        "$id": "3275",
        "FileName": "when_get_immigration_document_access.cs",
        "Description": "when assignee status is not active or inactive",
        "WhenList": [
          "get immigration document access"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3276",
        "FileName": "when_get_immigration_document_access.cs",
        "Description": "when work record is cancelled",
        "WhenList": [
          "get immigration document access"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3277",
    "FileName": "when_get_immigration_document_details.cs",
    "Description": "when get immigration document details",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3278",
        "FileName": "when_get_immigration_document_details.cs",
        "Description": "when work record has multiple services",
        "WhenList": [
          "get immigration document details"
        ],
        "ThenList": [
          "should return success",
          "should return immigration document"
        ],
        "Children": []
      },
      {
        "$id": "3279",
        "FileName": "when_get_immigration_document_details.cs",
        "Description": "when work record has one service without expiry date",
        "WhenList": [
          "get immigration document details"
        ],
        "ThenList": [
          "should return success",
          "should return immigration document"
        ],
        "Children": []
      },
      {
        "$id": "3280",
        "FileName": "when_get_immigration_document_details.cs",
        "Description": "when work record has no service with expiry date",
        "WhenList": [
          "get immigration document details"
        ],
        "ThenList": [
          "should return success",
          "should return immigration document"
        ],
        "Children": []
      },
      {
        "$id": "3281",
        "FileName": "when_get_immigration_document_details.cs",
        "Description": "when work record belongs to a different engagement",
        "WhenList": [
          "get immigration document details"
        ],
        "ThenList": [
          "should return success",
          "should not return any immigration documents"
        ],
        "Children": []
      },
      {
        "$id": "3282",
        "FileName": "when_get_immigration_document_details.cs",
        "Description": "when applying udf",
        "WhenList": [
          "get immigration document details with udf"
        ],
        "ThenList": [
          "should return success",
          "should return immigration document"
        ],
        "Children": []
      },
      {
        "$id": "3283",
        "FileName": "when_get_immigration_document_details.cs",
        "Description": "when assignee status is not active or inactive",
        "WhenList": [
          "get immigration document details"
        ],
        "ThenList": [
          "should return success",
          "should not return any immigration documents"
        ],
        "Children": []
      },
      {
        "$id": "3284",
        "FileName": "when_get_immigration_document_details.cs",
        "Description": "when work record is cancelled",
        "WhenList": [
          "get immigration document details"
        ],
        "ThenList": [
          "should return success",
          "should not return any immigration documents"
        ],
        "Children": []
      },
      {
        "$id": "3285",
        "FileName": "when_get_immigration_document_details.cs",
        "Description": "when work record has no assignment",
        "WhenList": [
          "get immigration document details"
        ],
        "ThenList": [
          "should return success",
          "should return immigration document"
        ],
        "Children": []
      },
      {
        "$id": "3286",
        "FileName": "when_get_immigration_document_details.cs",
        "Description": "when work record with extend request",
        "WhenList": [
          "get immigration document details"
        ],
        "ThenList": [
          "should return success",
          "should return immigration document"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3287",
    "FileName": "when_send_notification_to_sofia.cs",
    "Description": "when send notification to sofia",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3288",
        "FileName": "when_send_notification_to_sofia.cs",
        "Description": "when subscribed office has team mailbox",
        "WhenList": [
          "extend immigration document"
        ],
        "ThenList": [
          "should success",
          "should send email to team mailbox"
        ],
        "Children": []
      },
      {
        "$id": "3289",
        "FileName": "when_send_notification_to_sofia.cs",
        "Description": "when coordinating office is responsible office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3290",
            "FileName": "when_send_notification_to_sofia.cs",
            "Description": "has primary contact and seconary contact",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should send email to team mailbox"
            ],
            "Children": []
          },
          {
            "$id": "3291",
            "FileName": "when_send_notification_to_sofia.cs",
            "Description": "has primary contact without secondary contact",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should send email to team mailbox"
            ],
            "Children": []
          },
          {
            "$id": "3292",
            "FileName": "when_send_notification_to_sofia.cs",
            "Description": "has empty team mailbox",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should send email to team mailbox"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3293",
        "FileName": "when_send_notification_to_sofia.cs",
        "Description": "when delegated coordinating office is responsible office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3294",
            "FileName": "when_send_notification_to_sofia.cs",
            "Description": "has primary contact and seconary contact",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should send email to team mailbox"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3295",
        "FileName": "when_send_notification_to_sofia.cs",
        "Description": "when subscribed offices has no team mailbox",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3296",
            "FileName": "when_send_notification_to_sofia.cs",
            "Description": "has primary contact and secondary contact",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should send email to team mailbox"
            ],
            "Children": []
          },
          {
            "$id": "3297",
            "FileName": "when_send_notification_to_sofia.cs",
            "Description": "has primary contact without secondary contact",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should send email to team mailbox"
            ],
            "Children": []
          },
          {
            "$id": "3298",
            "FileName": "when_send_notification_to_sofia.cs",
            "Description": "when has empty team mailbox",
            "WhenList": [
              "extend immigration document"
            ],
            "ThenList": [
              "should success",
              "should send email to team mailbox"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3299",
    "FileName": "when_get_immigration_services.cs",
    "Description": "when get immigration services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3300",
        "FileName": "when_get_immigration_services.cs",
        "Description": "when get in progress status work record",
        "WhenList": [
          "when get immigration list"
        ],
        "ThenList": [
          "should only return initialed immigration workrecord"
        ],
        "Children": []
      },
      {
        "$id": "3301",
        "FileName": "when_get_immigration_services.cs",
        "Description": "when get denied status work record",
        "WhenList": [
          "when get denied immigration list"
        ],
        "ThenList": [
          "should return denied status correctly"
        ],
        "Children": []
      },
      {
        "$id": "3302",
        "FileName": "when_get_immigration_services.cs",
        "Description": "when get cancelled status work record",
        "WhenList": [
          "when get cancelled immigration list"
        ],
        "ThenList": [
          "should not return cancelled status"
        ],
        "Children": []
      },
      {
        "$id": "3303",
        "FileName": "when_get_immigration_services.cs",
        "Description": "when get work record for deleted assignee",
        "WhenList": [
          "when get immigration list"
        ],
        "ThenList": [
          "should not return work record"
        ],
        "Children": []
      },
      {
        "$id": "3304",
        "FileName": "when_get_immigration_services.cs",
        "Description": "when get work record for pending deleted assignee",
        "WhenList": [
          "when get immigration list"
        ],
        "ThenList": [
          "should not return work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3305",
    "FileName": "when_retrieve_missing_items_by_engagement_ids.cs",
    "Description": "when retrieve missing items by engagement ids",
    "WhenList": [
      "when get missing items by engagements"
    ],
    "ThenList": [
      "should return OK",
      "should return missing items",
      "should return empty description when missing from assignee"
    ],
    "Children": []
  },
  {
    "$id": "3306",
    "FileName": "when_retrieve_missing_items_by_engagement_ids_with_custom_field_filter.cs",
    "Description": "when retrieve missing items by engagement ids with custom field filter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3307",
        "FileName": "when_retrieve_missing_items_by_engagement_ids_with_custom_field_filter.cs",
        "Description": "assignee has one engagment",
        "WhenList": [
          "when get missing items by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return missing items"
        ],
        "Children": []
      },
      {
        "$id": "3308",
        "FileName": "when_retrieve_missing_items_by_engagement_ids_with_custom_field_filter.cs",
        "Description": "assignee has multiple engagments",
        "WhenList": [
          "when get missing items by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return missing items"
        ],
        "Children": []
      },
      {
        "$id": "3309",
        "FileName": "when_retrieve_missing_items_by_engagement_ids_with_custom_field_filter.cs",
        "Description": "rebecca has empty custom filter options",
        "WhenList": [
          "when get missing items by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return missing items"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3310",
    "FileName": "when_retrieve_missing_items_from_cancelled_or_declined_workrecords.cs",
    "Description": "when retrieve missing items from cancelled or declined workrecords",
    "WhenList": [
      "when get missing items by my mobility user"
    ],
    "ThenList": [
      "should return nothing"
    ],
    "Children": []
  },
  {
    "$id": "3311",
    "FileName": "when_retrieve_missing_items_from_non_compiler_workrecords.cs",
    "Description": "when retrieve missing items from non complier workrecords",
    "WhenList": [
      "when get missing items by my mobility user"
    ],
    "ThenList": [
      "should return non complier service status"
    ],
    "Children": []
  },
  {
    "$id": "3312",
    "FileName": "when_send_missing_information_reminder_to_employee.cs",
    "Description": "when send missing information reminder to employee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3313",
        "FileName": "when_send_missing_information_reminder_to_employee.cs",
        "Description": "when get info normally",
        "WhenList": [
          "send email to kayla"
        ],
        "ThenList": [
          "should return ok",
          "should send correct email",
          "should get missing item email sended by nancy"
        ],
        "Children": []
      },
      {
        "$id": "3314",
        "FileName": "when_send_missing_information_reminder_to_employee.cs",
        "Description": "when sending an email with script tags",
        "WhenList": [
          "send email to kayla"
        ],
        "ThenList": [
          "should return ok",
          "should send encoded email content"
        ],
        "Children": []
      },
      {
        "$id": "3315",
        "FileName": "when_send_missing_information_reminder_to_employee.cs",
        "Description": "when sending an email with decoded script tags",
        "WhenList": [
          "send email to kayla"
        ],
        "ThenList": [
          "should return ok",
          "should send encoded email content"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3316",
    "FileName": "when_send_missing_information_reminder_to_employee.cs",
    "Description": "when send missing information reminder to assignee with multiple record",
    "WhenList": [
      "send email to kayla"
    ],
    "ThenList": [
      "should return ok",
      "should send correct email"
    ],
    "Children": []
  },
  {
    "$id": "3317",
    "FileName": "when_update_missing_items_comments.cs",
    "Description": "when update missing items comments",
    "WhenList": [
      "when get missing items by engagements"
    ],
    "ThenList": [
      "should return OK",
      "should get missing item comments"
    ],
    "Children": []
  },
  {
    "$id": "3318",
    "FileName": "when_get_organier_status_by_engagement_ids.cs",
    "Description": "when get organier status by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3319",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "when get organier status by engagements without specified year",
        "WhenList": [
          "when get organier status by engagements without year"
        ],
        "ThenList": [
          "should return 200",
          "should return questionnaire status grouped by year"
        ],
        "Children": []
      },
      {
        "$id": "3320",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "when get organier countries by engagements",
        "WhenList": [
          "when get organier countries"
        ],
        "ThenList": [
          "should return 200",
          "should return questionnaire countries grouped by countries"
        ],
        "Children": []
      },
      {
        "$id": "3321",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "when get organizer status with specified year",
        "WhenList": [
          "when get organizer status by engagements with year"
        ],
        "ThenList": [
          "should return 200",
          "should return questionnaire status"
        ],
        "Children": []
      },
      {
        "$id": "3322",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "when get organizer status with specified year for download",
        "WhenList": [
          "when get organizer status by engagements with year"
        ],
        "ThenList": [
          "should return 200",
          "should return questionnaire status"
        ],
        "Children": []
      },
      {
        "$id": "3323",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "should not get custom field when display on my mobility is not checked",
        "WhenList": [
          "when get questionnaire status by engagements and year"
        ],
        "ThenList": [
          "should return 200",
          "should return questionnaire status"
        ],
        "Children": []
      },
      {
        "$id": "3324",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "should not get custom field when location is not assignee profile",
        "WhenList": [
          "when get questionnaire status by engagements and year"
        ],
        "ThenList": [
          "should return 200",
          "should return questionnaire status"
        ],
        "Children": []
      },
      {
        "$id": "3325",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "should not get custom field belong to another assignee engagement",
        "WhenList": [
          "when get questionnaire status by engagements and year"
        ],
        "ThenList": [
          "should return 200",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3326",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "should not duplicate custom field belong when subscrib by another assignee engagement",
        "WhenList": [
          "when get questionnaire status by engagements and year"
        ],
        "ThenList": [
          "should return 200",
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "3327",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "when get questionnaire status summary by year",
        "WhenList": [
          "get questionnaire status summary by year"
        ],
        "ThenList": [
          "should return 200",
          "should return questionnaire status summary"
        ],
        "Children": []
      },
      {
        "$id": "3328",
        "FileName": "when_get_organier_status_by_engagement_ids.cs",
        "Description": "when get questionnaire status summary by year and country",
        "WhenList": [
          "get questionnaire status summary by year and country"
        ],
        "ThenList": [
          "should return 200",
          "should return questionnaire status summary"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3329",
    "FileName": "when_get_questionnaires_of_multiple_engagements.cs",
    "Description": "when get questionnaires of multiple engagements",
    "WhenList": [
      "when retrieve questionnaires by work record ids"
    ],
    "ThenList": [
      "should return two work records"
    ],
    "Children": []
  },
  {
    "$id": "3330",
    "FileName": "when_get_questionnaires_with_retrictions.cs",
    "Description": "when get questionnaires with custom field filter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3331",
        "FileName": "when_get_questionnaires_with_retrictions.cs",
        "Description": "retrieve questionnaire status should apply udf",
        "WhenList": [
          "when get organier status by engagements"
        ],
        "ThenList": [
          "should not return any work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3332",
    "FileName": "when_get_questionnaires_with_retrictions.cs",
    "Description": "when get questionnaires without engagements related to nancy",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3333",
        "FileName": "when_get_questionnaires_with_retrictions.cs",
        "Description": "retrieve questionnaire should filter by engagements",
        "WhenList": [
          "when retrieve questionnaires by work record ids"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3334",
    "FileName": "when_save_questionnaire_reminder_history.cs",
    "Description": "when save questionnaire reminder history",
    "WhenList": [
      "sending request for save questionnaire reminder history"
    ],
    "ThenList": [
      "should return created",
      "should save questionnare reminder history"
    ],
    "Children": []
  },
  {
    "$id": "3335",
    "FileName": "when_get_tax_return_status_by_engagements.cs",
    "Description": "when get tax return status by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3336",
        "FileName": "when_get_tax_return_status_by_engagements.cs",
        "Description": "when get tax years",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3337",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "when get tax years by engagements without specified year",
            "WhenList": [
              "when get tax return status by engagements without year"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return years"
            ],
            "Children": []
          },
          {
            "$id": "3338",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "should get no filing requirements workrecords",
            "WhenList": [
              "when get tax return status by engagements without year"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return years"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3339",
        "FileName": "when_get_tax_return_status_by_engagements.cs",
        "Description": "when get tax return country by engagements",
        "WhenList": [
          "when get tax return status by engagements without year"
        ],
        "ThenList": [
          "should return 200",
          "should return tax return countries"
        ],
        "Children": []
      },
      {
        "$id": "3340",
        "FileName": "when_get_tax_return_status_by_engagements.cs",
        "Description": "when get work record status",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3341",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "should return tax return detail",
            "WhenList": [
              "when get tax return status by engagements"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return status"
            ],
            "Children": []
          },
          {
            "$id": "3342",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "should return tax return detail for download",
            "WhenList": [
              "when get tax return status by engagements"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return status"
            ],
            "Children": []
          },
          {
            "$id": "3343",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "should not get other compliance work record",
            "WhenList": [
              "when get tax return status by engagements and year"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return status"
            ],
            "Children": []
          },
          {
            "$id": "3344",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "when get tax return status by engagements with year filter",
            "WhenList": [
              "when get tax return status by engagements and year"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return status"
            ],
            "Children": []
          },
          {
            "$id": "3345",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "when get tax return with status filter",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "3346",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "when get tax return status by engagements with status in preparation",
                "WhenList": [
                  "when get tax return status by engagements and year and in preparation"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              },
              {
                "$id": "3347",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "when get tax return status by engagements with status delivered",
                "WhenList": [
                  "when get tax return status by engagements and year and status delivered"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              },
              {
                "$id": "3348",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "when get tax return status by engagements with status completed",
                "WhenList": [
                  "when get tax return status by engagements and year and status completed"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              },
              {
                "$id": "3349",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "when get tax return status by engagements with status missing information",
                "WhenList": [
                  "when get tax return status by engagements and year and status missing info"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              },
              {
                "$id": "3350",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "when get tax return status by engagements with status all",
                "WhenList": [
                  "when get tax return status by engagements and year"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "3351",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "when get tax return status with country filter",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "3352",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "when get tax return status by engagements with country uk",
                "WhenList": [
                  "when get tax return status by engagements and year"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              },
              {
                "$id": "3353",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "when get tax return status by engagements with country all",
                "WhenList": [
                  "when get tax return status by engagements and year"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "3354",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "should not return tax work record with questionnaire not submitted",
            "WhenList": [
              "when get tax return status by engagements and year"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return status"
            ],
            "Children": []
          },
          {
            "$id": "3355",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "should not return tax work record with service status not no issues",
            "WhenList": [
              "when get tax return status by engagements and year"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return status"
            ],
            "Children": []
          },
          {
            "$id": "3356",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "should return tax return status with no filing requirement",
            "WhenList": [
              "when get tax return status by engagements and year"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return status"
            ],
            "Children": []
          },
          {
            "$id": "3357",
            "FileName": "when_get_tax_return_status_by_engagements.cs",
            "Description": "when get custom field",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "3358",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "should not get custom field when display on my mobility is not checked",
                "WhenList": [
                  "when get tax return status by engagements and year"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              },
              {
                "$id": "3359",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "should not get custom field when location is not assignee profile",
                "WhenList": [
                  "when get tax return status by engagements and year"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              },
              {
                "$id": "3360",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "should not get custom field belong to another assignee engagement",
                "WhenList": [
                  "when get tax return status by engagements and year"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              },
              {
                "$id": "3361",
                "FileName": "when_get_tax_return_status_by_engagements.cs",
                "Description": "should not duplicate custom field belong when subscrib by another assignee engagement",
                "WhenList": [
                  "when get tax return status by engagements and year"
                ],
                "ThenList": [
                  "should return 200",
                  "should return tax return status"
                ],
                "Children": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "$id": "3362",
    "FileName": "when_get_tax_return_status_summary_by_engagements.cs",
    "Description": "when get tax return status summary by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3363",
        "FileName": "when_get_tax_return_status_summary_by_engagements.cs",
        "Description": "when get tax return status summary by engagements and year",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3364",
            "FileName": "when_get_tax_return_status_summary_by_engagements.cs",
            "Description": "should be able to filter by engagements and year",
            "WhenList": [
              "when get tax return status by engagements and year"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return status"
            ],
            "Children": []
          },
          {
            "$id": "3365",
            "FileName": "when_get_tax_return_status_summary_by_engagements.cs",
            "Description": "should also show records which questionnaire is submitted but no filing requirements",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return tax return status"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3366",
        "FileName": "when_get_tax_return_status_summary_by_engagements.cs",
        "Description": "when get tax return status summary by engagements year and country",
        "WhenList": [
          "when get tax return status by engagements and year and country"
        ],
        "ThenList": [
          "should return 200",
          "should return tax return status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3367",
    "FileName": "when_batch_update_teq_settlement_status.cs",
    "Description": "when batch update teq settlement status",
    "WhenList": [
      "batch update status"
    ],
    "ThenList": [
      "should return ok",
      "should raise event when teq status changed"
    ],
    "Children": []
  },
  {
    "$id": "3368",
    "FileName": "when_delete_teq_payment_history.cs",
    "Description": "when delete teq payment history",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3369",
        "FileName": "when_delete_teq_payment_history.cs",
        "Description": "when from settled to new",
        "WhenList": [
          "delete teq payment"
        ],
        "ThenList": [
          "should return ok",
          "should raise event when teq status changed"
        ],
        "Children": []
      },
      {
        "$id": "3370",
        "FileName": "when_delete_teq_payment_history.cs",
        "Description": "when from partial payment to partial payment",
        "WhenList": [
          "delete teq payment"
        ],
        "ThenList": [
          "should return ok",
          "should not raise event when status not changed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3371",
    "FileName": "when_nancy_want_to_add_payment.cs",
    "Description": "when nancy want to add payment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3372",
        "FileName": "when_nancy_want_to_add_payment.cs",
        "Description": "should save teq settlement payment when add payment",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3373",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should update status to settled when once of payment",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 201",
              "should save teq settlement payment",
              "should raise event when teq status changed"
            ],
            "Children": []
          },
          {
            "$id": "3374",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should update status to partial payment for the first partial payment",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 201",
              "should save payment",
              "should raise event when teq status changed"
            ],
            "Children": []
          },
          {
            "$id": "3375",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should update status to settled for the last partial payment",
            "WhenList": [
              "make last partial payment"
            ],
            "ThenList": [
              "should return 201",
              "should save payment",
              "should raise event when teq status changed"
            ],
            "Children": []
          },
          {
            "$id": "3376",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should keep status partial payment for the middle partial payment",
            "WhenList": [
              "make second partial payment"
            ],
            "ThenList": [
              "should return 201",
              "should save payment",
              "should raise event only one time"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3377",
    "FileName": "when_batch_update_teq_settlement_status.cs",
    "Description": "when batch update teq settlement status",
    "WhenList": [
      "batch update status"
    ],
    "ThenList": [
      "should return ok",
      "should raise event when teq status changed"
    ],
    "Children": []
  },
  {
    "$id": "3378",
    "FileName": "when_delete_teq_payment_history.cs",
    "Description": "when delete teq payment history",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3379",
        "FileName": "when_delete_teq_payment_history.cs",
        "Description": "when from settled to new",
        "WhenList": [
          "delete teq payment"
        ],
        "ThenList": [
          "should return ok",
          "should raise event when teq status changed"
        ],
        "Children": []
      },
      {
        "$id": "3380",
        "FileName": "when_delete_teq_payment_history.cs",
        "Description": "when from partial payment to partial payment",
        "WhenList": [
          "delete teq payment"
        ],
        "ThenList": [
          "should return ok",
          "should not raise event when status not changed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3381",
    "FileName": "when_add_teq_settlement_comment.cs",
    "Description": "when add teq settlement comment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3382",
        "FileName": "when_add_teq_settlement_comment.cs",
        "Description": "when comment is not empty",
        "WhenList": [
          "add teq settlement comment"
        ],
        "ThenList": [
          "should succeed",
          "should save the new comment"
        ],
        "Children": []
      },
      {
        "$id": "3383",
        "FileName": "when_add_teq_settlement_comment.cs",
        "Description": "when comment is empty",
        "WhenList": [
          "add teq settlement comment"
        ],
        "ThenList": [
          "should succeed",
          "should not save the new comment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3384",
    "FileName": "when_batch_send_email_from_teq.cs",
    "Description": "when batch send email from teq",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3385",
        "FileName": "when_batch_send_email_from_teq.cs",
        "Description": "when everything is ok",
        "WhenList": [
          "when batch send email in teq"
        ],
        "ThenList": [
          "should send successfully",
          "should send request as expected",
          "should save history as expected",
          "should not send email for work record with deleted assignee"
        ],
        "Children": []
      },
      {
        "$id": "3386",
        "FileName": "when_batch_send_email_from_teq.cs",
        "Description": "when notification service is not ok",
        "WhenList": [
          "when send email in teq"
        ],
        "ThenList": [
          "should return internal server error",
          "should keep history without notification id"
        ],
        "Children": []
      },
      {
        "$id": "3387",
        "FileName": "when_batch_send_email_from_teq.cs",
        "Description": "when send content with javascript tag",
        "WhenList": [
          "when send email with javascript tag"
        ],
        "ThenList": [
          "should send email with content encoded"
        ],
        "Children": []
      },
      {
        "$id": "3388",
        "FileName": "when_batch_send_email_from_teq.cs",
        "Description": "when send content with multiple new lines",
        "WhenList": [
          "when body has multiple lines"
        ],
        "ThenList": [
          "should send email with multiple lines"
        ],
        "Children": []
      },
      {
        "$id": "3389",
        "FileName": "when_batch_send_email_from_teq.cs",
        "Description": "when send email with empty body",
        "WhenList": [
          "when send email with empty content"
        ],
        "ThenList": [
          "should send successfully"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3390",
    "FileName": "when_batch_update_teq_settlement_status.cs",
    "Description": "when batch update teq settlement status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3391",
        "FileName": "when_batch_update_teq_settlement_status.cs",
        "Description": "when update to settled status",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3392",
            "FileName": "when_batch_update_teq_settlement_status.cs",
            "Description": "with work records which can be updated to settled",
            "WhenList": [
              "batch update status"
            ],
            "ThenList": [
              "should succeed",
              "should update the status of teq settlement"
            ],
            "Children": []
          },
          {
            "$id": "3393",
            "FileName": "when_batch_update_teq_settlement_status.cs",
            "Description": "with work records which cannot be updated to settled",
            "WhenList": [
              "batch update status"
            ],
            "ThenList": [
              "should succeed",
              "should not update the status of teq settlement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3394",
        "FileName": "when_batch_update_teq_settlement_status.cs",
        "Description": "when update to in process status",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3395",
            "FileName": "when_batch_update_teq_settlement_status.cs",
            "Description": "with work records which can be updated to in process",
            "WhenList": [
              "batch update status"
            ],
            "ThenList": [
              "should succeed",
              "should update the status of teq settlement"
            ],
            "Children": []
          },
          {
            "$id": "3396",
            "FileName": "when_batch_update_teq_settlement_status.cs",
            "Description": "with work records which cannot be updated to in process",
            "WhenList": [
              "batch update status"
            ],
            "ThenList": [
              "should succeed",
              "should not update the status of teq settlement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3397",
        "FileName": "when_batch_update_teq_settlement_status.cs",
        "Description": "when update to waiting for refund status",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3398",
            "FileName": "when_batch_update_teq_settlement_status.cs",
            "Description": "with work records which can be updated to waiting for refund",
            "WhenList": [
              "batch update status"
            ],
            "ThenList": [
              "should succeed",
              "should update the status of teq settlement"
            ],
            "Children": []
          },
          {
            "$id": "3399",
            "FileName": "when_batch_update_teq_settlement_status.cs",
            "Description": "with work records which cannot be updated to waiting for refund",
            "WhenList": [
              "batch update status"
            ],
            "ThenList": [
              "should succeed",
              "should not update the status of teq settlement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3400",
        "FileName": "when_batch_update_teq_settlement_status.cs",
        "Description": "when update to partial payment status",
        "WhenList": [
          "batch update status"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3401",
        "FileName": "when_batch_update_teq_settlement_status.cs",
        "Description": "when update to new status",
        "WhenList": [
          "batch update status"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3402",
        "FileName": "when_batch_update_teq_settlement_status.cs",
        "Description": "when update with an unknown status",
        "WhenList": [
          "batch update status"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3403",
    "FileName": "when_delete_teq_payment_history.cs",
    "Description": "when delete teq payment history",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3404",
        "FileName": "when_delete_teq_payment_history.cs",
        "Description": "when request is invalid",
        "WhenList": [
          "when delete history"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3405",
        "FileName": "when_delete_teq_payment_history.cs",
        "Description": "when delete a single payment",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3406",
            "FileName": "when_delete_teq_payment_history.cs",
            "Description": "when update to a valid status",
            "WhenList": [
              "when delete history"
            ],
            "ThenList": [
              "should success",
              "should delete payment",
              "should change teq status and add comment and set next payment date"
            ],
            "Children": []
          },
          {
            "$id": "3407",
            "FileName": "when_delete_teq_payment_history.cs",
            "Description": "when update to the invalid status settled",
            "WhenList": [
              "when delete history"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3408",
            "FileName": "when_delete_teq_payment_history.cs",
            "Description": "when update to the invalid status partial payment",
            "WhenList": [
              "when delete history"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3409",
        "FileName": "when_delete_teq_payment_history.cs",
        "Description": "when delete a partial payment",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3410",
            "FileName": "when_delete_teq_payment_history.cs",
            "Description": "when update to a valid status",
            "WhenList": [
              "when delete history"
            ],
            "ThenList": [
              "should success",
              "should delete payment",
              "should change teq status and add comment and set next payment date"
            ],
            "Children": []
          },
          {
            "$id": "3411",
            "FileName": "when_delete_teq_payment_history.cs",
            "Description": "when update to the invalid status new",
            "WhenList": [
              "when delete history"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3412",
            "FileName": "when_delete_teq_payment_history.cs",
            "Description": "when update to the invalid status in process",
            "WhenList": [
              "when delete history"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3413",
            "FileName": "when_delete_teq_payment_history.cs",
            "Description": "when update to the invalid status waiting for refund",
            "WhenList": [
              "when delete history"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3414",
            "FileName": "when_delete_teq_payment_history.cs",
            "Description": "when update to the invalid status settled",
            "WhenList": [
              "when delete history"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3415",
    "FileName": "when_get_teq_settlement_comments.cs",
    "Description": "when get teq settlement comments",
    "WhenList": [
      "get teq settlement comments"
    ],
    "ThenList": [
      "should succeed",
      "should get teq settlement comments"
    ],
    "Children": []
  },
  {
    "$id": "3416",
    "FileName": "when_get_teq_settlement_payment_cycle.cs",
    "Description": "when get teq settlement payment cycle",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3417",
        "FileName": "when_get_teq_settlement_payment_cycle.cs",
        "Description": "should get a cycle when payment cycle does not exist for the client",
        "WhenList": [
          "get teq settlement payment cycle"
        ],
        "ThenList": [
          "should succeed",
          "should save payment cycle"
        ],
        "Children": []
      },
      {
        "$id": "3418",
        "FileName": "when_get_teq_settlement_payment_cycle.cs",
        "Description": "should get a cycle when payment cycle already exists for the client",
        "WhenList": [
          "get teq settlement payment cycle"
        ],
        "ThenList": [
          "should succeed",
          "should save payment cycle"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3419",
    "FileName": "when_get_user_authorization_for_teq.cs",
    "Description": "when get user authorization for teq",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3420",
        "FileName": "when_get_user_authorization_for_teq.cs",
        "Description": "with administrator",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3421",
            "FileName": "when_get_user_authorization_for_teq.cs",
            "Description": "when admin belongs to the work record engagement",
            "WhenList": [
              "get user access authorization for teq"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          },
          {
            "$id": "3422",
            "FileName": "when_get_user_authorization_for_teq.cs",
            "Description": "when admin does not belong to the work record engagement",
            "WhenList": [
              "get user access authorization for teq"
            ],
            "ThenList": [
              "should not include the work record without permission"
            ],
            "Children": []
          },
          {
            "$id": "3423",
            "FileName": "when_get_user_authorization_for_teq.cs",
            "Description": "when the work record has no teq",
            "WhenList": [
              "get user access authorization for teq"
            ],
            "ThenList": [
              "should not include the work record without teq"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3424",
        "FileName": "when_get_user_authorization_for_teq.cs",
        "Description": "with general user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3425",
            "FileName": "when_get_user_authorization_for_teq.cs",
            "Description": "when general user access an authorized work record",
            "WhenList": [
              "get user access authorization for teq"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          },
          {
            "$id": "3426",
            "FileName": "when_get_user_authorization_for_teq.cs",
            "Description": "when general user access an unauthorized work record",
            "WhenList": [
              "get user access authorization for teq"
            ],
            "ThenList": [
              "should not include not access work record id"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3427",
        "FileName": "when_get_user_authorization_for_teq.cs",
        "Description": "with multiple work records",
        "WhenList": [
          "get user access authorization for teq"
        ],
        "ThenList": [
          "should not include not access work record id"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3428",
    "FileName": "when_myMobilityUser_view_teq_with_settlement.cs",
    "Description": "when my mobility user view teq with settlement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3429",
        "FileName": "when_myMobilityUser_view_teq_with_settlement.cs",
        "Description": "when get tax equalizations",
        "WhenList": [
          "when get tax equalizations by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return tax equalizations"
        ],
        "Children": []
      },
      {
        "$id": "3430",
        "FileName": "when_myMobilityUser_view_teq_with_settlement.cs",
        "Description": "when get tax equalizations with assignee profile custom fields",
        "WhenList": [
          "when get tax equalizations by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return teq records with the appropriate assignee profile custom fields"
        ],
        "Children": []
      },
      {
        "$id": "3431",
        "FileName": "when_myMobilityUser_view_teq_with_settlement.cs",
        "Description": "should not duplicate custom field when a given assignee has engagements subscribing same custom field",
        "WhenList": [
          "when get tax return status by engagements and year"
        ],
        "ThenList": [
          "should return 200",
          "should return tax return status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3432",
    "FileName": "when_nancy_views_teq_payment_history.cs",
    "Description": "when nancy views teq payment history",
    "WhenList": [
      "when get teq payment history"
    ],
    "ThenList": [
      "should get payment"
    ],
    "Children": []
  },
  {
    "$id": "3433",
    "FileName": "when_nancy_want_to_add_payment.cs",
    "Description": "when nancy want to add payment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3434",
        "FileName": "when_nancy_want_to_add_payment.cs",
        "Description": "should save teq settlement payment when add payment",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3435",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should update status to settled when once of payment",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 201",
              "should save teq settlement payment",
              "should raise event when teq status changed"
            ],
            "Children": []
          },
          {
            "$id": "3436",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should update status to partial payment for the first partial payment",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 201",
              "should save payment",
              "should raise event when teq status changed"
            ],
            "Children": []
          },
          {
            "$id": "3437",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should update status to settled for the last partial payment",
            "WhenList": [
              "make last partial payment"
            ],
            "ThenList": [
              "should return 201",
              "should save payment",
              "should raise event when teq status changed"
            ],
            "Children": []
          },
          {
            "$id": "3438",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should keep status partial payment for the middle partial payment",
            "WhenList": [
              "make second partial payment"
            ],
            "ThenList": [
              "should return 201",
              "should save payment",
              "should raise event only one time"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3439",
        "FileName": "when_nancy_want_to_add_payment.cs",
        "Description": "should save teq settlement comment when add payment",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201",
          "should save teq settlement payment"
        ],
        "Children": []
      },
      {
        "$id": "3440",
        "FileName": "when_nancy_want_to_add_payment.cs",
        "Description": "should return forbidden when teq not existed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 403"
        ],
        "Children": []
      },
      {
        "$id": "3441",
        "FileName": "when_nancy_want_to_add_payment.cs",
        "Description": "should return forbidden when teq is settled",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 403"
        ],
        "Children": []
      },
      {
        "$id": "3442",
        "FileName": "when_nancy_want_to_add_payment.cs",
        "Description": "should valid request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3443",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should return forbidden when amount greater than balance outstanding",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          },
          {
            "$id": "3444",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should return forbidden when amount is 0 and total amount not 0",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          },
          {
            "$id": "3445",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should return forbidden when amount less than 0",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          },
          {
            "$id": "3446",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should return forbidden when amount is not digital",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          },
          {
            "$id": "3447",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should return forbidden when amount is null",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          },
          {
            "$id": "3448",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should return forbidden when date paid is null",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          },
          {
            "$id": "3449",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should return forbidden when created by is null",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          },
          {
            "$id": "3450",
            "FileName": "when_nancy_want_to_add_payment.cs",
            "Description": "should return forbidden when make partial payment without next payment date",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3451",
    "FileName": "when_set_teq_settlement_payment_cycle.cs",
    "Description": "when set teq settlement payment cycle",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3452",
        "FileName": "when_set_teq_settlement_payment_cycle.cs",
        "Description": "should save a cycle when payment cycle does not exist for the client",
        "WhenList": [
          "set teq settlement payment cycle"
        ],
        "ThenList": [
          "should succeed",
          "should save payment cycle"
        ],
        "Children": []
      },
      {
        "$id": "3453",
        "FileName": "when_set_teq_settlement_payment_cycle.cs",
        "Description": "should update cycle when payment cycle already exists for the client",
        "WhenList": [
          "set teq settlement payment cycle"
        ],
        "ThenList": [
          "should succeed",
          "should update payment cycle"
        ],
        "Children": []
      },
      {
        "$id": "3454",
        "FileName": "when_set_teq_settlement_payment_cycle.cs",
        "Description": "should update due date for teq which status is new",
        "WhenList": [
          "set teq settlement payment cycle"
        ],
        "ThenList": [
          "should succeed",
          "should update teq next payment date"
        ],
        "Children": []
      },
      {
        "$id": "3455",
        "FileName": "when_set_teq_settlement_payment_cycle.cs",
        "Description": "should not update due date for teq which status is not new",
        "WhenList": [
          "set teq settlement payment cycle"
        ],
        "ThenList": [
          "should succeed",
          "should not update teq next payment date"
        ],
        "Children": []
      },
      {
        "$id": "3456",
        "FileName": "when_set_teq_settlement_payment_cycle.cs",
        "Description": "should not update due date for teq when due date has been customized manually",
        "WhenList": [
          "set teq settlement payment cycle"
        ],
        "ThenList": [
          "should succeed",
          "should not update teq next payment date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3457",
    "FileName": "when_update_teq_settlement_due_date.cs",
    "Description": "when update teq settlement due date",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3458",
        "FileName": "when_update_teq_settlement_due_date.cs",
        "Description": "should update due date given existing teq with due date",
        "WhenList": [
          "update due date"
        ],
        "ThenList": [
          "should succeed",
          "should change due date and update has customized state"
        ],
        "Children": []
      },
      {
        "$id": "3459",
        "FileName": "when_update_teq_settlement_due_date.cs",
        "Description": "should return bad request given past date as due date",
        "WhenList": [
          "update due date"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "3460",
        "FileName": "when_update_teq_settlement_due_date.cs",
        "Description": "should return bad request when due date is null",
        "WhenList": [
          "update due date"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3461",
    "FileName": "when_update_teq_settlement_payment_date_paid.cs",
    "Description": "when update teq settlement payment date paid",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3462",
        "FileName": "when_update_teq_settlement_payment_date_paid.cs",
        "Description": "should update settled teq",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3463",
            "FileName": "when_update_teq_settlement_payment_date_paid.cs",
            "Description": "when only have one payment",
            "WhenList": [
              "update tax equalization payment date paid"
            ],
            "ThenList": [
              "should return OK",
              "should update payment"
            ],
            "Children": []
          },
          {
            "$id": "3464",
            "FileName": "when_update_teq_settlement_payment_date_paid.cs",
            "Description": "when have more than one payment",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "3465",
                "FileName": "when_update_teq_settlement_payment_date_paid.cs",
                "Description": "when update first payment with a date before settled date",
                "WhenList": [
                  "update tax equalization payment date paid"
                ],
                "ThenList": [
                  "should return OK",
                  "should update payment"
                ],
                "Children": []
              },
              {
                "$id": "3466",
                "FileName": "when_update_teq_settlement_payment_date_paid.cs",
                "Description": "when update first payment with a date after settled date",
                "WhenList": [
                  "update tax equalization payment date paid"
                ],
                "ThenList": [
                  "should return OK",
                  "should update payment"
                ],
                "Children": []
              },
              {
                "$id": "3467",
                "FileName": "when_update_teq_settlement_payment_date_paid.cs",
                "Description": "when update second payment with a date before first payment",
                "WhenList": [
                  "update tax equalization payment date paid"
                ],
                "ThenList": [
                  "should return OK",
                  "should update payment"
                ],
                "Children": []
              },
              {
                "$id": "3468",
                "FileName": "when_update_teq_settlement_payment_date_paid.cs",
                "Description": "when update second payment with a date before settled date",
                "WhenList": [
                  "update tax equalization payment date paid"
                ],
                "ThenList": [
                  "should return OK",
                  "should update payment"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "3469",
        "FileName": "when_update_teq_settlement_payment_date_paid.cs",
        "Description": "should update partial payment teq",
        "WhenList": [
          "update tax equalization payment date paid"
        ],
        "ThenList": [
          "should return OK",
          "should update payment"
        ],
        "Children": []
      },
      {
        "$id": "3470",
        "FileName": "when_update_teq_settlement_payment_date_paid.cs",
        "Description": "should return 403 when status is not settled or partial payment",
        "WhenList": [
          "status is in process",
          "status is waiting for refund"
        ],
        "ThenList": [
          "should return 403",
          "should return 403"
        ],
        "Children": []
      },
      {
        "$id": "3471",
        "FileName": "when_update_teq_settlement_payment_date_paid.cs",
        "Description": "should return 404 when teq not found or payment not found",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3472",
            "FileName": "when_update_teq_settlement_payment_date_paid.cs",
            "Description": "when teq not found",
            "WhenList": [
              "no teq exsit"
            ],
            "ThenList": [
              "should return not found"
            ],
            "Children": []
          },
          {
            "$id": "3473",
            "FileName": "when_update_teq_settlement_payment_date_paid.cs",
            "Description": "when payment not found",
            "WhenList": [
              "no payment exsit"
            ],
            "ThenList": [
              "should return not found"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3474",
        "FileName": "when_update_teq_settlement_payment_date_paid.cs",
        "Description": "should return 400 when date paid is null",
        "WhenList": [
          "update tax equalization payment date paid"
        ],
        "ThenList": [
          "should return 400"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3475",
    "FileName": "when_view_email_history_in_teq.cs",
    "Description": "when view email history in teq",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3476",
        "FileName": "when_view_email_history_in_teq.cs",
        "Description": "when view histories",
        "WhenList": [
          "show histories"
        ],
        "ThenList": [
          "should return ok",
          "should show all histories related to this teq"
        ],
        "Children": []
      },
      {
        "$id": "3477",
        "FileName": "when_view_email_history_in_teq.cs",
        "Description": "when try get history with null notification id",
        "WhenList": [
          "show histories"
        ],
        "ThenList": [
          "should return ok",
          "should not return histories without notification id"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3478",
    "FileName": "when_get_myTeam_info_from_Tiger.cs",
    "Description": "when get my team info from tiger",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3479",
        "FileName": "when_get_myTeam_info_from_Tiger.cs",
        "Description": "when staff timezone is in daylightsaving timezone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should remove duplicate primary contact"
        ],
        "Children": []
      },
      {
        "$id": "3480",
        "FileName": "when_get_myTeam_info_from_Tiger.cs",
        "Description": "when primary contacts are duplicated",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should remove duplicate primary contact"
        ],
        "Children": []
      },
      {
        "$id": "3481",
        "FileName": "when_get_myTeam_info_from_Tiger.cs",
        "Description": "when primary contact timezone is null",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should return contact with null timezone"
        ],
        "Children": []
      },
      {
        "$id": "3482",
        "FileName": "when_get_myTeam_info_from_Tiger.cs",
        "Description": "when get primary info",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should get subscribed office people as well"
        ],
        "Children": []
      },
      {
        "$id": "3483",
        "FileName": "when_get_myTeam_info_from_Tiger.cs",
        "Description": "when get contacts from engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3484",
            "FileName": "when_get_myTeam_info_from_Tiger.cs",
            "Description": "when engagement secondary contact toggle is on",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should not get delegated coordinating office people"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3485",
        "FileName": "when_get_myTeam_info_from_Tiger.cs",
        "Description": "when secondary contact show in my team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get secondary contact"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3486",
    "FileName": "when_get_tax_status_overview.cs",
    "Description": "when get tax status overview",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3487",
        "FileName": "when_get_tax_status_overview.cs",
        "Description": "should get tax status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return tax return overview"
        ],
        "Children": []
      },
      {
        "$id": "3488",
        "FileName": "when_get_tax_status_overview.cs",
        "Description": "should return missing info overview model",
        "WhenList": [
          "get tax return overview"
        ],
        "ThenList": [
          "should return missing info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3489",
    "FileName": "when_grace_adds_nancy.cs",
    "Description": "when grace adds nancy",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 201",
      "should forward create user request"
    ],
    "Children": []
  },
  {
    "$id": "3490",
    "FileName": "when_grace_associates_nancy_to_hastings.cs",
    "Description": "when grace associates nancy to hastings",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3491",
        "FileName": "when_grace_associates_nancy_to_hastings.cs",
        "Description": "when grace associates nancy to hastings without custom field filters",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forward associate user request",
          "should return 201"
        ],
        "Children": []
      },
      {
        "$id": "3492",
        "FileName": "when_grace_associates_nancy_to_hastings.cs",
        "Description": "when grace associates nancy to hastings with custom field filters",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forward associate user request",
          "should return 201"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3493",
    "FileName": "when_grace_removes_nancy_from_hastings.cs",
    "Description": "when grace removes nancy from hastings",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 204",
      "should forward associate user request"
    ],
    "Children": []
  },
  {
    "$id": "3494",
    "FileName": "when_grace_updates_myMobility_user.cs",
    "Description": "when grace updates my mobility user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3495",
        "FileName": "when_grace_updates_myMobility_user.cs",
        "Description": "when grace updates an administrator",
        "WhenList": [
          "updates administrator"
        ],
        "ThenList": [
          "should return 200"
        ],
        "Children": []
      },
      {
        "$id": "3496",
        "FileName": "when_grace_updates_myMobility_user.cs",
        "Description": "when grace updates a general user basic details",
        "WhenList": [
          "update a general user"
        ],
        "ThenList": [
          "should return 200"
        ],
        "Children": []
      },
      {
        "$id": "3497",
        "FileName": "when_grace_updates_myMobility_user.cs",
        "Description": "when grace updates a general user subscriptions and file sharing access",
        "WhenList": [
          "update a general user"
        ],
        "ThenList": [
          "should return 200"
        ],
        "Children": []
      },
      {
        "$id": "3498",
        "FileName": "when_grace_updates_myMobility_user.cs",
        "Description": "when grace updates a general user subscriptions and with new client file sharing",
        "WhenList": [
          "update a general user"
        ],
        "ThenList": [
          "should return 200"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3499",
    "FileName": "when_grace_updates_service_initiation_settings.cs",
    "Description": "when grace updates service initiation settings",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3500",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is coordinating office primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should ok"
        ],
        "Children": []
      },
      {
        "$id": "3501",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is coordinating office secondary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should ok"
        ],
        "Children": []
      },
      {
        "$id": "3502",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is delegated coordinating office primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should ok"
        ],
        "Children": []
      },
      {
        "$id": "3503",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is delegated coordinating office secondary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should ok"
        ],
        "Children": []
      },
      {
        "$id": "3504",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is engagement admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should ok"
        ],
        "Children": []
      },
      {
        "$id": "3505",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is global admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should ok"
        ],
        "Children": []
      },
      {
        "$id": "3506",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is subscribed office primary contact and coordinating office primary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should ok"
        ],
        "Children": []
      },
      {
        "$id": "3507",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is subscribed office secondary contact and coordinating office secondary contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should ok"
        ],
        "Children": []
      },
      {
        "$id": "3508",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is not engagement admin and coordinating or delegated office contacts",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3509",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is in coordinating office but is not engagement admin and coordinating or delegated office contacts",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3510",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is in delegated office but is not engagement admin and coordinating or delegated office contacts",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3511",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is in subscribed office but is not engagement admin and coordinating or delegated office contacts",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3512",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is subscribed office primary contact but is not engagement admin and coordinating or delegated office contacts",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3513",
        "FileName": "when_grace_updates_service_initiation_settings.cs",
        "Description": "when current staff is subscribed office secondary contact but is not engagement admin and coordinating or delegated office contacts",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3514",
    "FileName": "when_grace_updates_tile_subscriptions.cs",
    "Description": "when grace updates tile subscriptions",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3515",
        "FileName": "when_grace_updates_tile_subscriptions.cs",
        "Description": "when grace update engagement sbscriptions",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3516",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3517",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3518",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is delegated coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3519",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is delegated coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3520",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is engagement admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3521",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is global admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3522",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is subscribed office primary contact and coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3523",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is subscribed office secondary contact and coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3524",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3525",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is in coordinating office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3526",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is in delegated office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3527",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is in subscribed office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3528",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is subscribed office primary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3529",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is subscribed office secondary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3530",
        "FileName": "when_grace_updates_tile_subscriptions.cs",
        "Description": "when grace create client and associate tiles",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3531",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3532",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3533",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is delegated coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3534",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is delegated coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3535",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is engagement admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3536",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is global admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3537",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is subscribed office primary contact and coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3538",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is subscribed office secondary contact and coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should set tile subscriptions"
            ],
            "Children": []
          },
          {
            "$id": "3539",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3540",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is in coordinating office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3541",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is in delegated office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3542",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is in subscribed office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3543",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is subscribed office primary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3544",
            "FileName": "when_grace_updates_tile_subscriptions.cs",
            "Description": "when current staff is subscribed office secondary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3545",
    "FileName": "when_grace_upgrade_file_sharing.cs",
    "Description": "when grace upgrade file sharing",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3546",
        "FileName": "when_grace_upgrade_file_sharing.cs",
        "Description": "should upgrade to new file sharing",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200"
        ],
        "Children": []
      },
      {
        "$id": "3547",
        "FileName": "when_grace_upgrade_file_sharing.cs",
        "Description": "should throw internal server error when mymobility throw forbiden error",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 500"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3548",
    "FileName": "when_grace_views_nancies_associated_to_an_oracle_client.cs",
    "Description": "when grace views nancies associated to an oracle client",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200",
      "should forward get user request"
    ],
    "Children": []
  },
  {
    "$id": "3549",
    "FileName": "when_grace_view_all_tile_subscriptions.cs",
    "Description": "when grace view all tile subscriptions",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3550",
        "FileName": "when_grace_view_all_tile_subscriptions.cs",
        "Description": "should not return new file sharing tile when file sharing tile is subscribed",
        "WhenList": [
          "of",
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should not show new file sharing",
          "should return 200",
          "should not show new file sharing"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3551",
    "FileName": "when_grace_view_nacy.cs",
    "Description": "when grace view nacy",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200",
      "should get nacy details"
    ],
    "Children": []
  },
  {
    "$id": "3552",
    "FileName": "when_grace_view_rebecca.cs",
    "Description": "when grace view rebecca",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200",
      "should get rebecca details"
    ],
    "Children": []
  },
  {
    "$id": "3553",
    "FileName": "when_grace_will_removes_nancy_from_hastings.cs",
    "Description": "when grace will removes nancy from hastings",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return OK",
      "should return engagemnt names"
    ],
    "Children": []
  },
  {
    "$id": "3554",
    "FileName": "when_manage_engagement_client_user.cs",
    "Description": "when manage engagement client user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3555",
        "FileName": "when_manage_engagement_client_user.cs",
        "Description": "when create client user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3556",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3557",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3558",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is delegated coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3559",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is delegated coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3560",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is engagement admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3561",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is global admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3562",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office primary contact and coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3563",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office secondary contact and coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3564",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3565",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in coordinating office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3566",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in delegated office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3567",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in subscribed office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3568",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office primary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3569",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office secondary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3570",
        "FileName": "when_manage_engagement_client_user.cs",
        "Description": "when update client user basic info",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3571",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3572",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3573",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is delegated coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3574",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is delegated coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3575",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is engagement admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3576",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is global admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3577",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office primary contact and coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3578",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office secondary contact and coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3579",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3580",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in coordinating office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3581",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in delegated office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3582",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in subscribed office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3583",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office primary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3584",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office secondary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3585",
        "FileName": "when_manage_engagement_client_user.cs",
        "Description": "when update a general user subscriptions and file sharing access",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3586",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3587",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3588",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is delegated coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3589",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is delegated coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3590",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is engagement admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3591",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is global admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3592",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office primary contact and coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3593",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office secondary contact and coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3594",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3595",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in coordinating office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3596",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in delegated office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3597",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in subscribed office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3598",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office primary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3599",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office secondary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3600",
        "FileName": "when_manage_engagement_client_user.cs",
        "Description": "when delete client user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3601",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3602",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3603",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is delegated coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3604",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is delegated coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3605",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is engagement admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3606",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is global admin",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3607",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office primary contact and coordinating office primary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3608",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office secondary contact and coordinating office secondary contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should ok"
            ],
            "Children": []
          },
          {
            "$id": "3609",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3610",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in coordinating office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3611",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in delegated office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3612",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is in subscribed office but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3613",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office primary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          },
          {
            "$id": "3614",
            "FileName": "when_manage_engagement_client_user.cs",
            "Description": "when current staff is subscribed office secondary contact but is not engagement admin and coordinating or delegated office contacts",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3615",
    "FileName": "when_sofia_search_nancy_by_name.cs",
    "Description": "when sofia search nancy by name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3616",
        "FileName": "when_sofia_search_nancy_by_name.cs",
        "Description": "should return user name and email",
        "WhenList": [
          "search client users with name"
        ],
        "ThenList": [
          "should return 200",
          "should seachout client"
        ],
        "Children": []
      },
      {
        "$id": "3617",
        "FileName": "when_sofia_search_nancy_by_name.cs",
        "Description": "should return client users ordered by last name then first name",
        "WhenList": [
          "search client users with name"
        ],
        "ThenList": [
          "should order client users"
        ],
        "Children": []
      },
      {
        "$id": "3618",
        "FileName": "when_sofia_search_nancy_by_name.cs",
        "Description": "should return top 2 client users",
        "WhenList": [
          "search client users with name"
        ],
        "ThenList": [
          "should return top 2 client users matched"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3619",
    "FileName": "when_sofia_views_all_tile_subscriptions.cs",
    "Description": "when sofia views all tile subscriptions",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3620",
        "FileName": "when_sofia_views_all_tile_subscriptions.cs",
        "Description": "when no nancy subscribe to old file sharing",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should hide old client file sharing tile subscriptions"
        ],
        "Children": []
      },
      {
        "$id": "3621",
        "FileName": "when_sofia_views_all_tile_subscriptions.cs",
        "Description": "when nancy already subscribe to old file sharing",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should hide old client file sharing tile subscriptions"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3622",
    "FileName": "when_sofia_views_nancies_associated_to_an_oracle_engagement.cs",
    "Description": "when sofia views nancies associated to an oracle engagement",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200",
      "should forward get user request"
    ],
    "Children": []
  },
  {
    "$id": "3623",
    "FileName": "when_find_offices_resouces.cs",
    "Description": "when find offices resouces",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed and sorted by cluster then by country then by jurisdiction then by office"
    ],
    "Children": []
  },
  {
    "$id": "3624",
    "FileName": "when_find_offices_with_the_number_of_partners_and_staff.cs",
    "Description": "when find offices with the number of partners and staff",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return correct number of partners",
      "should return correct number of staff"
    ],
    "Children": []
  },
  {
    "$id": "3625",
    "FileName": "when_get_office.cs",
    "Description": "when get office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3626",
        "FileName": "when_get_office.cs",
        "Description": "should return empty practice type that office have no staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return office dto"
        ],
        "Children": []
      },
      {
        "$id": "3627",
        "FileName": "when_get_office.cs",
        "Description": "should return tax practice type that office have tax access staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return office dto"
        ],
        "Children": []
      },
      {
        "$id": "3628",
        "FileName": "when_get_office.cs",
        "Description": "should return tax practice type that office have immigration access staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return office dto"
        ],
        "Children": []
      },
      {
        "$id": "3629",
        "FileName": "when_get_office.cs",
        "Description": "should return two practice type that office have tax and immigration access staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return office dto"
        ],
        "Children": []
      },
      {
        "$id": "3630",
        "FileName": "when_get_office.cs",
        "Description": "should return four practice type that office have tax and immigration and social and tech access staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return office dto"
        ],
        "Children": []
      },
      {
        "$id": "3631",
        "FileName": "when_get_office.cs",
        "Description": "should return empty practice type that staff status is pending or inactive",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return office dto"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3632",
    "FileName": "when_get_office_engagements.cs",
    "Description": "when get office engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3633",
        "FileName": "when_get_office_engagements.cs",
        "Description": "should get engagements whose offices contains given office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return engagements"
        ],
        "Children": []
      },
      {
        "$id": "3634",
        "FileName": "when_get_office_engagements.cs",
        "Description": "should get engagements without immigration type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return engagements"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3635",
    "FileName": "when_search_offices.cs",
    "Description": "when search offices",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3636",
        "FileName": "when_search_offices.cs",
        "Description": "should return offices with the number of partners and staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return correct number of partners",
          "should return correct number of staff",
          "should return practice type"
        ],
        "Children": []
      },
      {
        "$id": "3637",
        "FileName": "when_search_offices.cs",
        "Description": "should return offices when have country query filter",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return offices"
        ],
        "Children": []
      },
      {
        "$id": "3638",
        "FileName": "when_search_offices.cs",
        "Description": "should return offices when have practice type query filter",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return offices"
        ],
        "Children": []
      },
      {
        "$id": "3639",
        "FileName": "when_search_offices.cs",
        "Description": "should return offices when have country and practice type query filter",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return offices"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3640",
    "FileName": "when_switch_office_scheduler.cs",
    "Description": "when switch office scheduler",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3641",
        "FileName": "when_switch_office_scheduler.cs",
        "Description": "when switch on",
        "WhenList": [
          "switch on office scheduler"
        ],
        "ThenList": [
          "should return ok",
          "should switch on office scheduler toggle",
          "should create scheduler successfully",
          "should not create scheduler again if scheduler is already exists"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3642",
    "FileName": "when_turn_off_office_online_scheduler.cs",
    "Description": "when turn off office online scheduler",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3643",
        "FileName": "when_turn_off_office_online_scheduler.cs",
        "Description": "when office has unfinished online work records",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3644",
            "FileName": "when_turn_off_office_online_scheduler.cs",
            "Description": "when turn off",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad request",
              "should not update office online scheduler enabled"
            ],
            "Children": []
          },
          {
            "$id": "3645",
            "FileName": "when_turn_off_office_online_scheduler.cs",
            "Description": "when update without changes",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should keep office online scheduler enabled"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3646",
        "FileName": "when_turn_off_office_online_scheduler.cs",
        "Description": "when office has unfinished mannual briefing work records",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update office online scheduler enabled"
        ],
        "Children": []
      },
      {
        "$id": "3647",
        "FileName": "when_turn_off_office_online_scheduler.cs",
        "Description": "when office has online work record but which is arealdy finished",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update office online scheduler enabled"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3648",
    "FileName": "when_update_office_information.cs",
    "Description": "when update office information",
    "WhenList": [
      "update office information"
    ],
    "ThenList": [
      "should success",
      "should update office information"
    ],
    "Children": []
  },
  {
    "$id": "3649",
    "FileName": "when_update_office_information_with_different_role.cs",
    "Description": "when update office information with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3650",
        "FileName": "when_update_office_information_with_different_role.cs",
        "Description": "when is office level role",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3651",
            "FileName": "when_update_office_information_with_different_role.cs",
            "Description": "same office staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should update office information"
            ],
            "Children": []
          },
          {
            "$id": "3652",
            "FileName": "when_update_office_information_with_different_role.cs",
            "Description": "other office staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3653",
        "FileName": "when_update_office_information_with_different_role.cs",
        "Description": "when is county level role",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3654",
            "FileName": "when_update_office_information_with_different_role.cs",
            "Description": "same country staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should update office information"
            ],
            "Children": []
          },
          {
            "$id": "3655",
            "FileName": "when_update_office_information_with_different_role.cs",
            "Description": "other country staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3656",
        "FileName": "when_update_office_information_with_different_role.cs",
        "Description": "when is general user",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3657",
        "FileName": "when_update_office_information_with_different_role.cs",
        "Description": "when is global admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should update office information"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3658",
    "FileName": "when_update_office_settings.cs",
    "Description": "when update office settings",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3659",
        "FileName": "when_update_office_settings.cs",
        "Description": "when is office level role",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3660",
            "FileName": "when_update_office_settings.cs",
            "Description": "same office staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should update office settings"
            ],
            "Children": []
          },
          {
            "$id": "3661",
            "FileName": "when_update_office_settings.cs",
            "Description": "office has unfinished online briefing work record",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "3662",
            "FileName": "when_update_office_settings.cs",
            "Description": "office has custom scheduler",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return the schedulers with updated timezone"
            ],
            "Children": []
          },
          {
            "$id": "3663",
            "FileName": "when_update_office_settings.cs",
            "Description": "office has unfinished manual briefing work record",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return OK"
            ],
            "Children": []
          },
          {
            "$id": "3664",
            "FileName": "when_update_office_settings.cs",
            "Description": "other office staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3665",
        "FileName": "when_update_office_settings.cs",
        "Description": "when is county level role",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3666",
            "FileName": "when_update_office_settings.cs",
            "Description": "same country staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should update office settings"
            ],
            "Children": []
          },
          {
            "$id": "3667",
            "FileName": "when_update_office_settings.cs",
            "Description": "other country staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3668",
        "FileName": "when_update_office_settings.cs",
        "Description": "when is general user",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3669",
        "FileName": "when_update_office_settings.cs",
        "Description": "when is global admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should update office settings"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3670",
    "FileName": "when_cancel_an_appointment_and_record_history.cs",
    "Description": "when cancel an appointment and record history",
    "WhenList": [
      "of canceling scheduler appointment for online briefing work record"
    ],
    "ThenList": [
      "should record appointment cancelled history"
    ],
    "Children": [
      {
        "$id": "3671",
        "FileName": "when_cancel_an_appointment_and_record_history.cs",
        "Description": "workrecord dto",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      },
      {
        "$id": "3672",
        "FileName": "when_cancel_an_appointment_and_record_history.cs",
        "Description": "history dto",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "3673",
    "FileName": "when_reschedule_an_appointment_and_record_history.cs",
    "Description": "when reschedule an appointment and record history",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3674",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change briefing method from assignee office to by phone",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3675",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change briefing method from assignee office to QQ without details",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3676",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change briefing method from assignee office to QQ with details",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3677",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change briefing method from QQ to assignee office",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3678",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change briefing method from QQ to skype without details",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3679",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change briefing method from QQ to skype with details",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3680",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change briefing method from QQ to skype with details not changed",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3681",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change other briefing method details to another details",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3682",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change other briefing method details to empty",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3683",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change other briefing method from QQ to skype and details from QQ number to empty",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3684",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "when reschedule change briefing method from by phone to assignee office and also changed other briefing method details",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address"
        ],
        "Children": []
      },
      {
        "$id": "3685",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "workrecord dto",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      },
      {
        "$id": "3686",
        "FileName": "when_reschedule_an_appointment_and_record_history.cs",
        "Description": "history dto",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "3687",
    "FileName": "when_schedule_an_appointment_and_record_history.cs",
    "Description": "when schedule an appointment and record history",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3688",
        "FileName": "when_schedule_an_appointment_and_record_history.cs",
        "Description": "when at assignee office briefing method",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return created",
          "should record the activity history"
        ],
        "Children": []
      },
      {
        "$id": "3689",
        "FileName": "when_schedule_an_appointment_and_record_history.cs",
        "Description": "when by other briefing method without details",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return created",
          "should record the activity history"
        ],
        "Children": []
      },
      {
        "$id": "3690",
        "FileName": "when_schedule_an_appointment_and_record_history.cs",
        "Description": "when by other briefing method with details",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return created",
          "should record the activity history"
        ],
        "Children": []
      },
      {
        "$id": "3691",
        "FileName": "when_schedule_an_appointment_and_record_history.cs",
        "Description": "workrecord dto",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      },
      {
        "$id": "3692",
        "FileName": "when_schedule_an_appointment_and_record_history.cs",
        "Description": "history dto",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "3693",
    "FileName": "when_cancel_an_appointment_by_kayla_from_mytaxes.cs",
    "Description": "when cancel an appointment by kayla from mytaxes",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3694",
        "FileName": "when_cancel_an_appointment_by_kayla_from_mytaxes.cs",
        "Description": "when no team mailbox",
        "WhenList": [
          "of canceling scheduler appointment for online briefing work record"
        ],
        "ThenList": [
          "should return ok",
          "should clear work record scheduled date time and contact number and move milestone back to schedule",
          "should clear reminder dates",
          "should update calendar sequence for icalendar files",
          "should record work record activity history",
          "should send confirmation email when kayla cancel appointment"
        ],
        "Children": []
      },
      {
        "$id": "3695",
        "FileName": "when_cancel_an_appointment_by_kayla_from_mytaxes.cs",
        "Description": "when with team mailbox",
        "WhenList": [
          "of canceling scheduler"
        ],
        "ThenList": [
          "should return ok",
          "should cc team mail box"
        ],
        "Children": []
      },
      {
        "$id": "3696",
        "FileName": "when_cancel_an_appointment_by_kayla_from_mytaxes.cs",
        "Description": "when work record upcoming notify status is true",
        "WhenList": [
          "of canceling scheduler"
        ],
        "ThenList": [
          "should reset upcoming notify status to false"
        ],
        "Children": []
      },
      {
        "$id": "3697",
        "FileName": "when_cancel_an_appointment_by_kayla_from_mytaxes.cs",
        "Description": "should clear briefing address if briefing method is at assignee office",
        "WhenList": [
          "of canceling scheduler appointment for online briefing work record"
        ],
        "ThenList": [
          "should return ok",
          "should clear work record scheduled date time and contact number and move milestone back to schedule"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3698",
    "FileName": "when_cancel_appointment_by_sofia_from_tiger.cs",
    "Description": "when cancel appointment by sofia from tiger",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3699",
        "FileName": "when_cancel_appointment_by_sofia_from_tiger.cs",
        "Description": "when select to send cancellation email",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3700",
            "FileName": "when_cancel_appointment_by_sofia_from_tiger.cs",
            "Description": "when office does not have team mail box for engagement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "kayla should receive a cancellation email"
            ],
            "Children": []
          },
          {
            "$id": "3701",
            "FileName": "when_cancel_appointment_by_sofia_from_tiger.cs",
            "Description": "when office have a team mail box for the engagement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "kayla should receive a cancellation email"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3702",
        "FileName": "when_cancel_appointment_by_sofia_from_tiger.cs",
        "Description": "when select do not send email",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "kayla should not receive a cancellation email"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3703",
    "FileName": "when_create_customized_scheduler.cs",
    "Description": "when create customized scheduler",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3704",
        "FileName": "when_create_customized_scheduler.cs",
        "Description": "when create successfully",
        "WhenList": [
          "of create custom scheduler"
        ],
        "ThenList": [
          "should return created",
          "should contains uri of created scheduler",
          "should be able to get out by office",
          "should create the scheduler with timezone of the office"
        ],
        "Children": []
      },
      {
        "$id": "3705",
        "FileName": "when_create_customized_scheduler.cs",
        "Description": "when create scheduler with existing name",
        "WhenList": [
          "create custom scheduler with existing name"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3706",
    "FileName": "when_create_scheduler_by_different_roles.cs",
    "Description": "when create scheduler by different roles",
    "WhenList": [
      "of create custom scheduler"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "3707",
    "FileName": "when_create_weekly_availability.cs",
    "Description": "when create weekly availability",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3708",
        "FileName": "when_create_weekly_availability.cs",
        "Description": "should create new weekly availability succesfully",
        "WhenList": [
          "create a new weekly availability"
        ],
        "ThenList": [
          "should be ok",
          "should be saved"
        ],
        "Children": []
      },
      {
        "$id": "3709",
        "FileName": "when_create_weekly_availability.cs",
        "Description": "should return bad request when missing effective date",
        "WhenList": [
          "create a new weekly availability"
        ],
        "ThenList": [
          "should be bad request"
        ],
        "Children": []
      },
      {
        "$id": "3710",
        "FileName": "when_create_weekly_availability.cs",
        "Description": "should return bad request when input duplicated effective date",
        "WhenList": [
          "create a new weekly availability"
        ],
        "ThenList": [
          "should be bad request"
        ],
        "Children": []
      },
      {
        "$id": "3711",
        "FileName": "when_create_weekly_availability.cs",
        "Description": "should forbidden if general role create weekly availability",
        "WhenList": [
          "when weekly availability with general role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3712",
        "FileName": "when_create_weekly_availability.cs",
        "Description": "should forbidden if current user not in the scheduler office",
        "WhenList": [
          "when weekly availability with general role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3713",
        "FileName": "when_create_weekly_availability.cs",
        "Description": "country level user can update schedulers belongs to his country",
        "WhenList": [
          "when weekly availability with country level role"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "3714",
        "FileName": "when_create_weekly_availability.cs",
        "Description": "country level user cannot weekly availability not belongs to his country",
        "WhenList": [
          "when update scheduler with country level role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3715",
        "FileName": "when_create_weekly_availability.cs",
        "Description": "global admin can weekly availability",
        "WhenList": [
          "when update scheduler with global admin"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3716",
    "FileName": "when_delete_weekly_availability.cs",
    "Description": "when delete weekly availability",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3717",
        "FileName": "when_delete_weekly_availability.cs",
        "Description": "should delete weekly availability",
        "WhenList": [
          "delete weekly availability"
        ],
        "ThenList": [
          "should return ok",
          "should delete successfully"
        ],
        "Children": []
      },
      {
        "$id": "3718",
        "FileName": "when_delete_weekly_availability.cs",
        "Description": "should not delete weekly availability when weekly availability not found",
        "WhenList": [
          "delete weekly availability"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "3719",
        "FileName": "when_delete_weekly_availability.cs",
        "Description": "should forbidden if general role update scheduler setting",
        "WhenList": [
          "when update scheduler with general role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3720",
        "FileName": "when_delete_weekly_availability.cs",
        "Description": "should forbidden if current user not in the scheduler office",
        "WhenList": [
          "when update scheduler with general role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3721",
        "FileName": "when_delete_weekly_availability.cs",
        "Description": "country level user can update schedulers belongs to his country",
        "WhenList": [
          "when update scheduler with country level role"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "3722",
        "FileName": "when_delete_weekly_availability.cs",
        "Description": "country level user cannot update schedulers not belongs to his country",
        "WhenList": [
          "when update scheduler with country level role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3723",
        "FileName": "when_delete_weekly_availability.cs",
        "Description": "global admin can update any scheduler",
        "WhenList": [
          "when update scheduler with global admin"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3724",
    "FileName": "when_get_assignee_briefing_time_slots.cs",
    "Description": "when get assignee briefing time slots",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3725",
        "FileName": "when_get_assignee_briefing_time_slots.cs",
        "Description": "when get scheduler",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3726",
            "FileName": "when_get_assignee_briefing_time_slots.cs",
            "Description": "when get time slots by greenwich standard time",
            "WhenList": [
              "get time slots for briefing work record"
            ],
            "ThenList": [
              "should return ok",
              "should return response"
            ],
            "Children": []
          },
          {
            "$id": "3727",
            "FileName": "when_get_assignee_briefing_time_slots.cs",
            "Description": "when get time slots with unavailable day",
            "WhenList": [
              "get time slots for briefing work record"
            ],
            "ThenList": [
              "should return ok",
              "should return response"
            ],
            "Children": []
          },
          {
            "$id": "3728",
            "FileName": "when_get_assignee_briefing_time_slots.cs",
            "Description": "when get time slots should be delay with unavailable day",
            "WhenList": [
              "get time slots for briefing work record"
            ],
            "ThenList": [
              "should return ok",
              "should return response"
            ],
            "Children": []
          },
          {
            "$id": "3729",
            "FileName": "when_get_assignee_briefing_time_slots.cs",
            "Description": "when get time slots by china standard time",
            "WhenList": [
              "get time slots for briefing work record"
            ],
            "ThenList": [
              "should return ok",
              "should return response"
            ],
            "Children": []
          },
          {
            "$id": "3730",
            "FileName": "when_get_assignee_briefing_time_slots.cs",
            "Description": "when get work hour by greenwich standard time and cross dst change date",
            "WhenList": [
              "get time slots for briefing work record"
            ],
            "ThenList": [
              "should return ok",
              "should return response"
            ],
            "Children": []
          },
          {
            "$id": "3731",
            "FileName": "when_get_assignee_briefing_time_slots.cs",
            "Description": "when get time slots with not existed scheduler",
            "WhenList": [
              "get time slots for briefing work record"
            ],
            "ThenList": [
              "should return not found"
            ],
            "Children": []
          },
          {
            "$id": "3732",
            "FileName": "when_get_assignee_briefing_time_slots.cs",
            "Description": "when get time slots with start day offset is one",
            "WhenList": [
              "get time slots for briefing work record"
            ],
            "ThenList": [
              "should return ok",
              "should return response"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3733",
    "FileName": "when_get_scheduler.cs",
    "Description": "when get scheduler",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3734",
        "FileName": "when_get_scheduler.cs",
        "Description": "should any role can view the detail of scheduler",
        "WhenList": [
          "get scheduler by uri"
        ],
        "ThenList": [
          "should return ok",
          "should get scheduler work days",
          "should get appointment link",
          "should get default resource number"
        ],
        "Children": []
      },
      {
        "$id": "3735",
        "FileName": "when_get_scheduler.cs",
        "Description": "when get the detail of a custom scheduler",
        "WhenList": [
          "get scheduler by uri"
        ],
        "ThenList": [
          "should return ok",
          "should get engagements"
        ],
        "Children": []
      },
      {
        "$id": "3736",
        "FileName": "when_get_scheduler.cs",
        "Description": "should get the unavailable days by order",
        "WhenList": [
          "get scheduler by uri"
        ],
        "ThenList": [
          "should return ok",
          "should get scheduler unavailable days by order"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3737",
    "FileName": "when_get_scheduler.cs",
    "Description": "when get scheduler with unavailable days",
    "WhenList": [
      "get scheduler by id"
    ],
    "ThenList": [
      "should return ok",
      "should get unavailable days"
    ],
    "Children": []
  },
  {
    "$id": "3738",
    "FileName": "when_get_schedulers_by_office_id.cs",
    "Description": "when get schedulers by office id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3739",
        "FileName": "when_get_schedulers_by_office_id.cs",
        "Description": "should any role can view the detail of scheduler",
        "WhenList": [
          "get schedulers"
        ],
        "ThenList": [
          "should return ok",
          "should contains schedulers",
          "should contain unavailable days"
        ],
        "Children": []
      },
      {
        "$id": "3740",
        "FileName": "when_get_schedulers_by_office_id.cs",
        "Description": "should only office level role or above can edit scheduler",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3741",
            "FileName": "when_get_schedulers_by_office_id.cs",
            "Description": "office level role can edit briefing setting of their own office",
            "WhenList": [
              "get schedulers"
            ],
            "ThenList": [
              "should have the edit scheduler links",
              "should have the create weekly availability link",
              "should have the edit weekly availability link",
              "should have the unavailable days weekly availability link",
              "should have the delete weekly availability link"
            ],
            "Children": []
          },
          {
            "$id": "3742",
            "FileName": "when_get_schedulers_by_office_id.cs",
            "Description": "office level role can NOT edit briefing setting of other office",
            "WhenList": [
              "get schedulers"
            ],
            "ThenList": [
              "should NOT have the edit scheduler links",
              "should not have the create weekly availability link",
              "should not have the edit weekly availability link",
              "should not have the unavailable days link",
              "should not have the delete weekly availability link"
            ],
            "Children": []
          },
          {
            "$id": "3743",
            "FileName": "when_get_schedulers_by_office_id.cs",
            "Description": "country level role can NOT edit briefing setting of other country",
            "WhenList": [
              "get schedulers"
            ],
            "ThenList": [
              "should NOT have the edit scheduler links",
              "should not have the create weekly availability link",
              "should not have the edit weekly availability link",
              "should not have the delete weekly availability link"
            ],
            "Children": []
          },
          {
            "$id": "3744",
            "FileName": "when_get_schedulers_by_office_id.cs",
            "Description": "general role can not edit briefing setting",
            "WhenList": [
              "get schedulers"
            ],
            "ThenList": [
              "should not contain the edit scheduler links",
              "should not have the create weekly availability link",
              "should not have the edit weekly availability link",
              "should not have the delete weekly availability link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3745",
    "FileName": "when_office_change_time_zone.cs",
    "Description": "when office change time zone",
    "WhenList": [
      "office change time zone"
    ],
    "ThenList": [
      "should return ok",
      "should update office time zone",
      "should update realated schedulers time zone"
    ],
    "Children": []
  },
  {
    "$id": "3746",
    "FileName": "when_reschedule_an_appointment.cs",
    "Description": "when reschedule an appointment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3747",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when reschedule after sending upcoming notify email",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3748",
            "FileName": "when_reschedule_an_appointment.cs",
            "Description": "when schedule time change",
            "WhenList": [
              "reschedule appointment"
            ],
            "ThenList": [
              "should return ok",
              "reset upcoming notify status"
            ],
            "Children": []
          },
          {
            "$id": "3749",
            "FileName": "when_reschedule_an_appointment.cs",
            "Description": "when schedule time not change",
            "WhenList": [
              "reschedule appointment but time not change"
            ],
            "ThenList": [
              "should return ok",
              "reset upcoming notify status"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3750",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when reschedule time slot is available",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3751",
            "FileName": "when_reschedule_an_appointment.cs",
            "Description": "when assignee time zone is greenwich standard time",
            "WhenList": [
              "reschedule appointment"
            ],
            "ThenList": [
              "should return ok",
              "should send notification to coordinator",
              "should send confirmation email to assignee",
              "should update calendar sequnce",
              "should update work record scheduled date time and contact number after rescheduled an appointment",
              "should not contain rescheduled time and release original scheduled time in available time slots"
            ],
            "Children": []
          },
          {
            "$id": "3752",
            "FileName": "when_reschedule_an_appointment.cs",
            "Description": "when assignee time zone is china standard time",
            "WhenList": [
              "reschedule appointment"
            ],
            "ThenList": [
              "should return ok",
              "should update work record scheduled date time and contact number after rescheduled an appointment",
              "should not contain rescheduled time and release original scheduled time in available time slots"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3753",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when reschedule time is not valid",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3754",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when reschedule in same scheduler and only change contact number",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change contact number",
          "scheduler should have no avaialbe time slot"
        ],
        "Children": []
      },
      {
        "$id": "3755",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when reschedule in same scheduler and only change briefing address",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing address",
          "scheduler should have no avaialbe time slot",
          "should send notification to coordinator"
        ],
        "Children": []
      },
      {
        "$id": "3756",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when reschedule in same scheduler and change briefing method to by phone",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and set address",
          "scheduler should have no avaialbe time slot"
        ],
        "Children": []
      },
      {
        "$id": "3757",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when reschedule in same scheduler and change briefing method to other briefing method",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method and record briefing method name and details"
        ],
        "Children": []
      },
      {
        "$id": "3758",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when from my taxes reschedule and change briefing method to by phone",
        "WhenList": [
          "schedule by phone and reschedule"
        ],
        "ThenList": [
          "should return ok",
          "should change briefing method"
        ],
        "Children": []
      },
      {
        "$id": "3759",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when from my taxes reschedule and the appointment in flexible time",
        "WhenList": [
          "schedule by phone and reschedule"
        ],
        "ThenList": [
          "should not change flexible time"
        ],
        "Children": []
      },
      {
        "$id": "3760",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when reschedule in same scheduler and period but different time zone",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should schduler has no avaialbe time slot",
          "should update time zone"
        ],
        "Children": []
      },
      {
        "$id": "3761",
        "FileName": "when_reschedule_an_appointment.cs",
        "Description": "when reschedule appointment from default scheduler to custom scheduler",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3762",
            "FileName": "when_reschedule_an_appointment.cs",
            "Description": "should rescheduler successfully",
            "WhenList": [
              "reschedule appointment"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "3763",
            "FileName": "when_reschedule_an_appointment.cs",
            "Description": "should keep origin value",
            "WhenList": [
              "reschedule appointment fail"
            ],
            "ThenList": [
              "should not remove the original appointment"
            ],
            "Children": []
          },
          {
            "$id": "3764",
            "FileName": "when_reschedule_an_appointment.cs",
            "Description": "when only change contact number but existing appointment time is not available in new scheduler",
            "WhenList": [
              "reschedule appointment"
            ],
            "ThenList": [
              "should return ok",
              "should update contact number"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3765",
    "FileName": "when_reschedule_an_appointment_for_WR_with_an_invalid_coordinator.cs",
    "Description": "when set an appointment for WR with an invalid coordinator",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3766",
        "FileName": "when_reschedule_an_appointment_for_WR_with_an_invalid_coordinator.cs",
        "Description": "when schedule appointment with invalid coordinator",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return bad request",
          "should not save the work record scheduler appointment info",
          "should not save the appointment scheduler info"
        ],
        "Children": []
      },
      {
        "$id": "3767",
        "FileName": "when_reschedule_an_appointment_for_WR_with_an_invalid_coordinator.cs",
        "Description": "when reschedule appointment with invalid coordinator",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3768",
            "FileName": "when_reschedule_an_appointment_for_WR_with_an_invalid_coordinator.cs",
            "Description": "when schedule time change",
            "WhenList": [
              "reschedule appointment"
            ],
            "ThenList": [
              "should return bad request",
              "should not update the work record scheduler appointment info",
              "should not update the appointment scheduler info"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3769",
        "FileName": "when_reschedule_an_appointment_for_WR_with_an_invalid_coordinator.cs",
        "Description": "when cancel schedule appointment with invalid coordinator",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3770",
            "FileName": "when_reschedule_an_appointment_for_WR_with_an_invalid_coordinator.cs",
            "Description": "when cancel scheduler appointment",
            "WhenList": [
              "cancel appointment"
            ],
            "ThenList": [
              "should return bad request",
              "should not update the work record scheduler appointment info",
              "should not update the appointment scheduler info"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3771",
    "FileName": "when_reschedule_an_appointment_sad_path.cs",
    "Description": "when reschedule an appointment sad path",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3772",
        "FileName": "when_reschedule_an_appointment_sad_path.cs",
        "Description": "request in same scheduler but not avaiable timeslot",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "3773",
        "FileName": "when_reschedule_an_appointment_sad_path.cs",
        "Description": "request with invalid briefing addresses",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3774",
            "FileName": "when_reschedule_an_appointment_sad_path.cs",
            "Description": "when reschedule with empty briefing address",
            "WhenList": [
              "reschedule"
            ],
            "ThenList": [
              "should not allow to reschedule"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3775",
        "FileName": "when_reschedule_an_appointment_sad_path.cs",
        "Description": "request with invalid contact number",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3776",
            "FileName": "when_reschedule_an_appointment_sad_path.cs",
            "Description": "when reschedule with empty contact number",
            "WhenList": [
              "reschedule"
            ],
            "ThenList": [
              "should not allow to reschedule"
            ],
            "Children": []
          },
          {
            "$id": "3777",
            "FileName": "when_reschedule_an_appointment_sad_path.cs",
            "Description": "when from my taxes and reschedule with changed contact number to empty",
            "WhenList": [
              "reschedule at pw c office and reschedule"
            ],
            "ThenList": [
              "should not allow to reschedule"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3778",
        "FileName": "when_reschedule_an_appointment_sad_path.cs",
        "Description": "request from default scheduler to custom scheduler",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3779",
            "FileName": "when_reschedule_an_appointment_sad_path.cs",
            "Description": "should reschedule fail when scheduler id and engagement id do not match",
            "WhenList": [
              "reschedule appointment with default scheduler id"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "3780",
            "FileName": "when_reschedule_an_appointment_sad_path.cs",
            "Description": "should throw not avaiable exception when recheduling for unavaiable timeslot",
            "WhenList": [
              "reschedule appointment"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3781",
    "FileName": "when_reschedule_an_appointment_which_is_outside_of_available_times.cs",
    "Description": "when reschedule an appointment which is outside of available times",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3782",
        "FileName": "when_reschedule_an_appointment_which_is_outside_of_available_times.cs",
        "Description": "when reschedule time slot is unavailable",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3783",
            "FileName": "when_reschedule_an_appointment_which_is_outside_of_available_times.cs",
            "Description": "when assignee time zone is greenwich standard time",
            "WhenList": [
              "reschedule appointment"
            ],
            "ThenList": [
              "should return ok",
              "should update work record scheduled date time and contact number after rescheduled an appointment"
            ],
            "Children": []
          },
          {
            "$id": "3784",
            "FileName": "when_reschedule_an_appointment_which_is_outside_of_available_times.cs",
            "Description": "when assignee time zone is china standard time",
            "WhenList": [
              "reschedule appointment"
            ],
            "ThenList": [
              "should return ok",
              "should update work record scheduled date time and contact number after rescheduled an appointment"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3785",
        "FileName": "when_reschedule_an_appointment_which_is_outside_of_available_times.cs",
        "Description": "when reschedule time slot is available",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok",
          "should still contain rescheduled time and release original scheduled time in available time slots"
        ],
        "Children": []
      },
      {
        "$id": "3786",
        "FileName": "when_reschedule_an_appointment_which_is_outside_of_available_times.cs",
        "Description": "when reschedule an outside appointment already scheduled by outside of working time",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "3787",
        "FileName": "when_reschedule_an_appointment_which_is_outside_of_available_times.cs",
        "Description": "when reschedule an inside appointment already scheduled by outside of working time",
        "WhenList": [
          "reschedule appointment"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3788",
    "FileName": "when_schedule_an_appointment.cs",
    "Description": "when schedule an appointment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3789",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when online briefing work record service status is not no issues",
        "WhenList": [
          "scheduler an appointment"
        ],
        "ThenList": [
          "should return forbidden request"
        ],
        "Children": []
      },
      {
        "$id": "3790",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when time to schedule is available time slot",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3791",
            "FileName": "when_schedule_an_appointment.cs",
            "Description": "when assignee time zone is greenwich standard time",
            "WhenList": [
              "appoint scheduler for online briefing work record"
            ],
            "ThenList": [
              "should return created",
              "should update work record scheduled date time and contact number and briefing method and briefing address and move milestone after scheduled an appointment",
              "should add new calendar identifier and sequence to briefing info for icalendar files",
              "should record work record activity history",
              "should store scheduler event record",
              "should not contain scheduled time in available time slots",
              "should send notification to coordinator",
              "should send confirmation email to assignee"
            ],
            "Children": []
          },
          {
            "$id": "3792",
            "FileName": "when_schedule_an_appointment.cs",
            "Description": "when assignee time zone is china standard time",
            "WhenList": [
              "appoint scheduler for online briefing work record"
            ],
            "ThenList": [
              "should return created",
              "should update work record scheduled date time and contact number and move milestone after scheduled an appointment"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3793",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when time to schedule is not available time slot",
        "WhenList": [
          "schedule an appointment"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3794",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule an appointment already scheduled",
        "WhenList": [
          "schedule an appointment already scheduled"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3795",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment for not existing scheduler",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3796",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment on the wrong scheduler",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3797",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment with no contact number",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3798",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment with no briefing address",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3799",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment with time not valid",
        "WhenList": [
          "scheduler an appointment"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3800",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment with other briefing method and details",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return created",
          "should add briefing method to available briefing method"
        ],
        "Children": []
      },
      {
        "$id": "3801",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment with no briefing address and briefing method as by phone",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "3802",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment with briefing method which not belong to available briefing method",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return created",
          "should add briefing method to available briefing method"
        ],
        "Children": []
      },
      {
        "$id": "3803",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment with invalid briefing method",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3804",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment from my taxes with briefing method not contained in available breifing methods",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3805",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment the engagement id was remove with custom scheduler",
        "WhenList": [
          "schedule appointment"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3806",
        "FileName": "when_schedule_an_appointment.cs",
        "Description": "when schedule appointment for briefing work record with notify milestone",
        "WhenList": [
          "appoint scheduler for online briefing work record"
        ],
        "ThenList": [
          "should return created",
          "should update work record scheduled date time and contact number and move milestone after scheduled an appointment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3807",
    "FileName": "when_schedule_an_appointment_which_is_outside_of_available_times.cs",
    "Description": "when schedule an appointment which is outside of available times",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3808",
        "FileName": "when_schedule_an_appointment_which_is_outside_of_available_times.cs",
        "Description": "when time to schedule is unavailable time slot",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3809",
            "FileName": "when_schedule_an_appointment_which_is_outside_of_available_times.cs",
            "Description": "when assignee time zone is greenwich standard time",
            "WhenList": [
              "appoint scheduler for online briefing work record"
            ],
            "ThenList": [
              "should return created",
              "should update work record scheduled date time and contact number and briefing method and briefing address and move milestone after scheduled an appointment",
              "should record work record activity history",
              "should store scheduler event record",
              "should send notification to coordinator",
              "should send confirmation email to assignee"
            ],
            "Children": []
          },
          {
            "$id": "3810",
            "FileName": "when_schedule_an_appointment_which_is_outside_of_available_times.cs",
            "Description": "when assignee time zone is china standard time",
            "WhenList": [
              "appoint scheduler for online briefing work record"
            ],
            "ThenList": [
              "should return created",
              "should update work record scheduled date time and contact number and move milestone after scheduled an appointment"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3811",
        "FileName": "when_schedule_an_appointment_which_is_outside_of_available_times.cs",
        "Description": "when time to schedule is available time slot",
        "WhenList": [
          "schedule an appointment"
        ],
        "ThenList": [
          "should return created",
          "should still contain scheduled time and release original scheduled time in available time slots"
        ],
        "Children": []
      },
      {
        "$id": "3812",
        "FileName": "when_schedule_an_appointment_which_is_outside_of_available_times.cs",
        "Description": "when schedule an outside appointment already scheduled by outside of working time",
        "WhenList": [
          "schedule an appointment already scheduled"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "3813",
        "FileName": "when_schedule_an_appointment_which_is_outside_of_available_times.cs",
        "Description": "when schedule an inside appointment already scheduled by outside of working time",
        "WhenList": [
          "schedule an appointment already scheduled"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3814",
    "FileName": "when_turn_on_online_sheduler.cs",
    "Description": "when turn on online sheduler",
    "WhenList": [
      "tun on online scheduler"
    ],
    "ThenList": [
      "should return ok",
      "should get default hourly resources",
      "should briefing defaule working day are from mon to fri"
    ],
    "Children": []
  },
  {
    "$id": "3815",
    "FileName": "when_update_custom_scheduler_setting.cs",
    "Description": "when update custom scheduler setting",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3816",
        "FileName": "when_update_custom_scheduler_setting.cs",
        "Description": "when office level role update scheduler settings",
        "WhenList": [
          "update scheduler setting"
        ],
        "ThenList": [
          "should return ok",
          "should update scheduler settings"
        ],
        "Children": []
      },
      {
        "$id": "3817",
        "FileName": "when_update_custom_scheduler_setting.cs",
        "Description": "when update scheduler settings with existing name",
        "WhenList": [
          "update scheduler setting"
        ],
        "ThenList": [
          "should return forbidden",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "3818",
        "FileName": "when_update_custom_scheduler_setting.cs",
        "Description": "when office level role update scheduler settings but name not change",
        "WhenList": [
          "update scheduler setting"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3819",
    "FileName": "when_update_scheduler_resource_numbers.cs",
    "Description": "when update scheduler resource numbers",
    "WhenList": [
      "update scheduler setting"
    ],
    "ThenList": [
      "should return ok",
      "should return updated resource numbers",
      "should delete resource number",
      "should at least have one resource number",
      "should distinct resource number if there are duplicated resource number"
    ],
    "Children": []
  },
  {
    "$id": "3820",
    "FileName": "when_update_scheduler_setting.cs",
    "Description": "when update scheduler setting",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3821",
        "FileName": "when_update_scheduler_setting.cs",
        "Description": "office level role can update scheduler setting",
        "WhenList": [
          "update scheduler setting"
        ],
        "ThenList": [
          "should return ok",
          "should update name successfully"
        ],
        "Children": []
      },
      {
        "$id": "3822",
        "FileName": "when_update_scheduler_setting.cs",
        "Description": "should forbidden if general role update scheduler setting",
        "WhenList": [
          "when update scheduler with general role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3823",
        "FileName": "when_update_scheduler_setting.cs",
        "Description": "should forbidden if current user not in the scheduler office",
        "WhenList": [
          "when update scheduler with general role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3824",
        "FileName": "when_update_scheduler_setting.cs",
        "Description": "country level user can update schedulers belongs to his country",
        "WhenList": [
          "when update scheduler with country level role"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "3825",
        "FileName": "when_update_scheduler_setting.cs",
        "Description": "country level user cannot update schedulers not belongs to his country",
        "WhenList": [
          "when update scheduler with country level role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3826",
        "FileName": "when_update_scheduler_setting.cs",
        "Description": "global admin can update any scheduler",
        "WhenList": [
          "when update scheduler with global admin"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3827",
    "FileName": "when_update_unavailable_days_for_scheduler.cs",
    "Description": "when update unavailable days for scheduler",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3828",
        "FileName": "when_update_unavailable_days_for_scheduler.cs",
        "Description": "when add unavailable day",
        "WhenList": [
          "add unavailable day"
        ],
        "ThenList": [
          "should return ok",
          "should update success"
        ],
        "Children": []
      },
      {
        "$id": "3829",
        "FileName": "when_update_unavailable_days_for_scheduler.cs",
        "Description": "when remove unavailable day",
        "WhenList": [
          "remove existing unavailable day"
        ],
        "ThenList": [
          "should return ok",
          "should update success"
        ],
        "Children": []
      },
      {
        "$id": "3830",
        "FileName": "when_update_unavailable_days_for_scheduler.cs",
        "Description": "when edit unavailable day",
        "WhenList": [
          "remove existing unavailable day"
        ],
        "ThenList": [
          "should return ok",
          "should update success"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3831",
    "FileName": "when_update_unavailable_days_for_scheduler.cs",
    "Description": "office level role can update scheduler unavailable days",
    "WhenList": [
      "add unavailable day"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "3832",
    "FileName": "when_update_unavailable_days_for_scheduler.cs",
    "Description": "general level role cannot update scheduler unavailable days",
    "WhenList": [
      "add unavailable day"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "3833",
    "FileName": "when_update_unavailable_days_for_scheduler.cs",
    "Description": "country level role can update scheduler unavailable days",
    "WhenList": [
      "add unavailable day"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "3834",
    "FileName": "when_update_unavailable_days_for_scheduler.cs",
    "Description": "global level role can update scheduler unavailable days",
    "WhenList": [
      "add unavailable day"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "3835",
    "FileName": "when_update_unavailable_days_for_scheduler.cs",
    "Description": "when update unavailable days for scheduler with non standard request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3836",
        "FileName": "when_update_unavailable_days_for_scheduler.cs",
        "Description": "when update scheduler with duplicate dates",
        "WhenList": [
          "add duplicate unavailable days"
        ],
        "ThenList": [
          "should return ok",
          "should save unique dates"
        ],
        "Children": []
      },
      {
        "$id": "3837",
        "FileName": "when_update_unavailable_days_for_scheduler.cs",
        "Description": "when update with invalid date",
        "WhenList": [
          "update with invalid date"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3838",
    "FileName": "when_update_weekly_availability.cs",
    "Description": "when update weekly availability",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3839",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "office level role can update weekly availability",
        "WhenList": [
          "update weekly availability"
        ],
        "ThenList": [
          "should return ok",
          "should return updated hourly resources"
        ],
        "Children": []
      },
      {
        "$id": "3840",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "should return bad request when update weekly availability without input effective date",
        "WhenList": [
          "update weekly availability"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3841",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "should return bad request when update weekly availability with input duplicated effective dates",
        "WhenList": [
          "update weekly availability"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "3842",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "should distinct hourly resource if there are duplicated hourly resource",
        "WhenList": [
          "when update schedule with duplicate hourly resources"
        ],
        "ThenList": [
          "should distinct hourly resource"
        ],
        "Children": []
      },
      {
        "$id": "3843",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "should forbidden if general role update scheduler setting",
        "WhenList": [
          "when update scheduler with general role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3844",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "should forbidden if current user not in the scheduler office",
        "WhenList": [
          "when update scheduler with general role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3845",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "country level user can update schedulers belongs to his country",
        "WhenList": [
          "when update scheduler with country level role"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "3846",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "country level user cannot update schedulers not belongs to his country",
        "WhenList": [
          "when update scheduler with country level role"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3847",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "global admin can update any scheduler",
        "WhenList": [
          "when update scheduler with global admin"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "3848",
        "FileName": "when_update_weekly_availability.cs",
        "Description": "should not update when weekly availability not found",
        "WhenList": [
          "when update scheduler with global admin"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3849",
    "FileName": "when_quick_search_assignee_in_restricted_engagement_without_mock.cs",
    "Description": "when quick search assignee in restricted engagement without mock",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3850",
        "FileName": "when_quick_search_assignee_in_restricted_engagement_without_mock.cs",
        "Description": "when current user in one of engagements acl",
        "WhenList": [
          "search assignees"
        ],
        "ThenList": [
          "should return assignee detail"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3851",
    "FileName": "when_quick_search_assignee_without_mock.cs",
    "Description": "when quick search assignee without mock",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3852",
        "FileName": "when_quick_search_assignee_without_mock.cs",
        "Description": "when search assignee by acl staff",
        "WhenList": [
          "search assignees"
        ],
        "ThenList": [
          "should return assignee detail"
        ],
        "Children": []
      },
      {
        "$id": "3853",
        "FileName": "when_quick_search_assignee_without_mock.cs",
        "Description": "when search assignee by global admin",
        "WhenList": [
          "search assignees"
        ],
        "ThenList": [
          "should return assignee detail"
        ],
        "Children": []
      },
      {
        "$id": "3854",
        "FileName": "when_quick_search_assignee_without_mock.cs",
        "Description": "when search assignee by basic information",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return 200",
          "should return assignee detail"
        ],
        "Children": []
      },
      {
        "$id": "3855",
        "FileName": "when_quick_search_assignee_without_mock.cs",
        "Description": "when search assignee with sharp prefix",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should search out assignee with specific id"
        ],
        "Children": []
      },
      {
        "$id": "3856",
        "FileName": "when_quick_search_assignee_without_mock.cs",
        "Description": "when search assignee by specical character",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return 200 ok"
        ],
        "Children": []
      },
      {
        "$id": "3857",
        "FileName": "when_quick_search_assignee_without_mock.cs",
        "Description": "when search assignee by email",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return result with correct email"
        ],
        "Children": []
      },
      {
        "$id": "3858",
        "FileName": "when_quick_search_assignee_without_mock.cs",
        "Description": "when search assignee by engagement name",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return result with correct engagement name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3859",
    "FileName": "when_quick_search_engagement_without_mock.cs",
    "Description": "when quick search engagement without mock",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3860",
        "FileName": "when_quick_search_engagement_without_mock.cs",
        "Description": "when search engagements by basic information",
        "WhenList": [
          "search engagements"
        ],
        "ThenList": [
          "should return 200",
          "should return engagement detail"
        ],
        "Children": []
      },
      {
        "$id": "3861",
        "FileName": "when_quick_search_engagement_without_mock.cs",
        "Description": "when search by global admin",
        "WhenList": [
          "search engagement"
        ],
        "ThenList": [
          "search out all engagements"
        ],
        "Children": []
      },
      {
        "$id": "3862",
        "FileName": "when_quick_search_engagement_without_mock.cs",
        "Description": "when search non social security engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3863",
            "FileName": "when_quick_search_engagement_without_mock.cs",
            "Description": "when search by staff of other practice type",
            "WhenList": [
              "search engagement"
            ],
            "ThenList": [
              "should not return engagement"
            ],
            "Children": []
          },
          {
            "$id": "3864",
            "FileName": "when_quick_search_engagement_without_mock.cs",
            "Description": "when search by staff with common practice type",
            "WhenList": [
              "search engagement"
            ],
            "ThenList": [
              "should return engagement"
            ],
            "Children": []
          },
          {
            "$id": "3865",
            "FileName": "when_quick_search_engagement_without_mock.cs",
            "Description": "when search by staff of same practice type",
            "WhenList": [
              "search engagement"
            ],
            "ThenList": [
              "should return engagement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3866",
        "FileName": "when_quick_search_engagement_without_mock.cs",
        "Description": "when search social security engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3867",
            "FileName": "when_quick_search_engagement_without_mock.cs",
            "Description": "when search by staff of the same practice type",
            "WhenList": [
              "search engagement"
            ],
            "ThenList": [
              "should return engagement"
            ],
            "Children": []
          },
          {
            "$id": "3868",
            "FileName": "when_quick_search_engagement_without_mock.cs",
            "Description": "when search by staff of other practice types",
            "WhenList": [
              "search engagement"
            ],
            "ThenList": [
              "should not return engagement"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3869",
    "FileName": "when_quick_search_work_record_restricted_assignee_without_mock.cs",
    "Description": "when quick search work record restricted assignee without mock",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3870",
        "FileName": "when_quick_search_work_record_restricted_assignee_without_mock.cs",
        "Description": "when search non social security work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3871",
            "FileName": "when_quick_search_work_record_restricted_assignee_without_mock.cs",
            "Description": "when search by engagement acl staff and assignee acl staff",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return work records"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3872",
        "FileName": "when_quick_search_work_record_restricted_assignee_without_mock.cs",
        "Description": "when search by global admin",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return work records"
        ],
        "Children": []
      },
      {
        "$id": "3873",
        "FileName": "when_quick_search_work_record_restricted_assignee_without_mock.cs",
        "Description": "when search by not acl",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3874",
    "FileName": "when_quick_search_work_record_without_mock.cs",
    "Description": "when quick search work record without mock",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3875",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when search non social security work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3876",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "when search by staff of other practice type",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should not return work record"
            ],
            "Children": []
          },
          {
            "$id": "3877",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "when search by staff with common practice type",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return work records filtered by practice type and GO mig inactive status"
            ],
            "Children": []
          },
          {
            "$id": "3878",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "when search by staff of same practice type",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return work records"
            ],
            "Children": []
          },
          {
            "$id": "3879",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "when search by acl staff",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return work records"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3880",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when search by global admin in the same office",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return work records"
        ],
        "Children": []
      },
      {
        "$id": "3881",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "search by global admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3882",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "when of other practice type",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return work records"
            ],
            "Children": []
          },
          {
            "$id": "3883",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "when in other office",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return work records"
            ],
            "Children": []
          },
          {
            "$id": "3884",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "search by assignee id by global admin in other office",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return correct work record"
            ],
            "Children": []
          },
          {
            "$id": "3885",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "search by assignee id by global admin of other practice type",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return correct work record"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3886",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when search by not acl",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return work records"
        ],
        "Children": []
      },
      {
        "$id": "3887",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when search social security work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3888",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "when search by staff of the same practice type",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return work records"
            ],
            "Children": []
          },
          {
            "$id": "3889",
            "FileName": "when_quick_search_work_record_without_mock.cs",
            "Description": "when search by staff of other practice types",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should not return work records"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "3890",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when search by assignee id with sharp prefix",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return work records"
        ],
        "Children": []
      },
      {
        "$id": "3891",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when search by staff of other office",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should not return work records"
        ],
        "Children": []
      },
      {
        "$id": "3892",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when quick searh workrecord by workrecord name",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return OK",
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "3893",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when quick searh briefing work record",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return OK",
          "should return briefing work record"
        ],
        "Children": []
      },
      {
        "$id": "3894",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when quick searh workrecord by assignee id",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return OK",
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "3895",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when quick searh workrecord with slash in name",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return OK",
          "should return correct work record"
        ],
        "Children": []
      },
      {
        "$id": "3896",
        "FileName": "when_quick_search_work_record_without_mock.cs",
        "Description": "when quick searh workrecord by assignee id and slash",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return OK",
          "should return correct work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3897",
    "FileName": "when_quick_search_assignee.cs",
    "Description": "when quick search assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3898",
        "FileName": "when_quick_search_assignee.cs",
        "Description": "when search assignee by basic information",
        "WhenList": [
          "search assignee"
        ],
        "ThenList": [
          "should return 200",
          "should return assignee detail",
          "should return sorted assignees by last name then first name"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3899",
    "FileName": "when_quick_search_engagement.cs",
    "Description": "when quick search engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3900",
        "FileName": "when_quick_search_engagement.cs",
        "Description": "when search engagement by basic information",
        "WhenList": [
          "search engagement"
        ],
        "ThenList": [
          "should return 200",
          "should return engagement detail"
        ],
        "Children": []
      },
      {
        "$id": "3901",
        "FileName": "when_quick_search_engagement.cs",
        "Description": "when search out all active engagement",
        "WhenList": [
          "search engagement"
        ],
        "ThenList": [
          "should only search out one active engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3902",
    "FileName": "when_quick_search_work_record.cs",
    "Description": "when quick search work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3903",
        "FileName": "when_quick_search_work_record.cs",
        "Description": "when create tax work records",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return OK",
          "should return correct work record",
          "should return assignees sorted by last name then first name"
        ],
        "Children": []
      },
      {
        "$id": "3904",
        "FileName": "when_quick_search_work_record.cs",
        "Description": "when create immigration workrecord",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return OK",
          "should return correct work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3905",
    "FileName": "when_search_throw_an_exception.cs",
    "Description": "when search throw an exception",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3906",
        "FileName": "when_search_throw_an_exception.cs",
        "Description": "search assginee",
        "WhenList": [
          "search"
        ],
        "ThenList": [
          "should return 200 ok"
        ],
        "Children": []
      },
      {
        "$id": "3907",
        "FileName": "when_search_throw_an_exception.cs",
        "Description": "search workrecord",
        "WhenList": [
          "search"
        ],
        "ThenList": [
          "should return 200 ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3908",
    "FileName": "should_send_assignee_self_nomination_event.cs",
    "Description": "when assignee self nomination by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3909",
        "FileName": "should_send_assignee_self_nomination_event.cs",
        "Description": "should send assignee nomination events",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should self nominate successfully"
        ],
        "Children": []
      },
      {
        "$id": "3910",
        "FileName": "should_send_assignee_self_nomination_event.cs",
        "Description": "should not send self nominate event",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return forbidden",
          "should not self nominate successfully"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3911",
    "FileName": "should_send_assignee_self_nomination_event.cs",
    "Description": "when assignee self nomination by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3912",
        "FileName": "should_send_assignee_self_nomination_event.cs",
        "Description": "should send assignee nomination events",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should self nominate successfully"
        ],
        "Children": []
      },
      {
        "$id": "3913",
        "FileName": "should_send_assignee_self_nomination_event.cs",
        "Description": "should not send self nominate event",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return forbidden",
          "should self nominate successfully"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3914",
    "FileName": "when_assignee_self_nominate_by_staff.cs",
    "Description": "when staff self nominate for assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3915",
        "FileName": "when_assignee_self_nominate_by_staff.cs",
        "Description": "when self nominate and staff office is one of the assignee engagements coordinating offices",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should self nominate successfully"
        ],
        "Children": []
      },
      {
        "$id": "3916",
        "FileName": "when_assignee_self_nominate_by_staff.cs",
        "Description": "when self nominate and assignee has work record",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should self nominate successfully"
        ],
        "Children": []
      },
      {
        "$id": "3917",
        "FileName": "when_assignee_self_nominate_by_staff.cs",
        "Description": "when self nominate and staff office not subscribed in assignee engagements",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3918",
        "FileName": "when_assignee_self_nominate_by_staff.cs",
        "Description": "when the staff is already self nominated",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3919",
        "FileName": "when_assignee_self_nominate_by_staff.cs",
        "Description": "when assignee has a work record",
        "WhenList": [
          "load assignee"
        ],
        "ThenList": [
          "should not contain self nominated status",
          "should contain self nominated link"
        ],
        "Children": []
      },
      {
        "$id": "3920",
        "FileName": "when_assignee_self_nominate_by_staff.cs",
        "Description": "when self nominated and then work record created",
        "WhenList": [
          "load assignee"
        ],
        "ThenList": [
          "should contain self nominated status",
          "should not contain self nominated link"
        ],
        "Children": []
      },
      {
        "$id": "3921",
        "FileName": "when_assignee_self_nominate_by_staff.cs",
        "Description": "when assignee has work record and staff in work record team",
        "WhenList": [
          "load assignee"
        ],
        "ThenList": [
          "should contain self nominated status",
          "should not contain self nominated link"
        ],
        "Children": []
      },
      {
        "$id": "3922",
        "FileName": "when_assignee_self_nominate_by_staff.cs",
        "Description": "when self nominated and then work record assigned to sofia",
        "WhenList": [
          "load assignee"
        ],
        "ThenList": [
          "should not contain self nominated link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3923",
    "FileName": "when_delete_work_record_to_delete_self_nominate.cs",
    "Description": "when delete work record to delete self nominate",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3924",
        "FileName": "when_delete_work_record_to_delete_self_nominate.cs",
        "Description": "should delete nominated record",
        "WhenList": [
          "delete"
        ],
        "ThenList": [
          "should delete self nominated record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3925",
    "FileName": "when_get_immigration_work_record_with_self_nominate_by_staff.cs",
    "Description": "when get immigration work record with self nominate by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3926",
        "FileName": "when_get_immigration_work_record_with_self_nominate_by_staff.cs",
        "Description": "should return self nomination link when can do it",
        "WhenList": [
          "view work record"
        ],
        "ThenList": [
          "should return self nomination link",
          "should not mark has self nominated"
        ],
        "Children": []
      },
      {
        "$id": "3927",
        "FileName": "when_get_immigration_work_record_with_self_nominate_by_staff.cs",
        "Description": "should not return self nomination link when staff without relation to work record",
        "WhenList": [
          "view work record"
        ],
        "ThenList": [
          "should return self nomination link",
          "should not mark has self nominated"
        ],
        "Children": []
      },
      {
        "$id": "3928",
        "FileName": "when_get_immigration_work_record_with_self_nominate_by_staff.cs",
        "Description": "should view restricted info when self nominated",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should view restricted info",
          "should mark as self nominated"
        ],
        "Children": []
      },
      {
        "$id": "3929",
        "FileName": "when_get_immigration_work_record_with_self_nominate_by_staff.cs",
        "Description": "should return self nomination link when check list assigned to staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3930",
            "FileName": "when_get_immigration_work_record_with_self_nominate_by_staff.cs",
            "Description": "before assign",
            "WhenList": [
              "view work record"
            ],
            "ThenList": [
              "should return self nomination link"
            ],
            "Children": []
          },
          {
            "$id": "3931",
            "FileName": "when_get_immigration_work_record_with_self_nominate_by_staff.cs",
            "Description": "after assign",
            "WhenList": [
              "view work record"
            ],
            "ThenList": [
              "should return self nomination link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3932",
    "FileName": "when_get_social_security_work_record_with_self_nomiate_by_staff.cs",
    "Description": "when get social security work record with self nomiate by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3933",
        "FileName": "when_get_social_security_work_record_with_self_nomiate_by_staff.cs",
        "Description": "when get work record only in coording office",
        "WhenList": [
          "view work record"
        ],
        "ThenList": [
          "should return self nomination link",
          "should not mark has self nominated"
        ],
        "Children": []
      },
      {
        "$id": "3934",
        "FileName": "when_get_social_security_work_record_with_self_nomiate_by_staff.cs",
        "Description": "when get work record only in coording office and assign to check list",
        "WhenList": [
          "view work record"
        ],
        "ThenList": [
          "should return self nomination link",
          "should not mark has self nominated"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3935",
    "FileName": "when_get_tax_work_record_with_self_nominate_by_staff.cs",
    "Description": "when get tax work record with self nominate by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3936",
        "FileName": "when_get_tax_work_record_with_self_nominate_by_staff.cs",
        "Description": "should return self nomination link when task assigned to staff office",
        "WhenList": [
          "view work record"
        ],
        "ThenList": [
          "should return self nomination link",
          "should not mark has self nominated"
        ],
        "Children": []
      },
      {
        "$id": "3937",
        "FileName": "when_get_tax_work_record_with_self_nominate_by_staff.cs",
        "Description": "should not return self nomination link when john in responsible office",
        "WhenList": [
          "given work record"
        ],
        "ThenList": [
          "should not return self nomination link",
          "should not mark has self nominated"
        ],
        "Children": []
      },
      {
        "$id": "3938",
        "FileName": "when_get_tax_work_record_with_self_nominate_by_staff.cs",
        "Description": "should not return self nomination link when staff in work record team",
        "WhenList": [
          "given work record"
        ],
        "ThenList": [
          "should not return self nomination link",
          "should not mark has self nominated"
        ],
        "Children": []
      },
      {
        "$id": "3939",
        "FileName": "when_get_tax_work_record_with_self_nominate_by_staff.cs",
        "Description": "should not return self nomination link when staff without relation to work record",
        "WhenList": [
          "view work record"
        ],
        "ThenList": [
          "should return self nomination link",
          "should not mark has self nominated"
        ],
        "Children": []
      },
      {
        "$id": "3940",
        "FileName": "when_get_tax_work_record_with_self_nominate_by_staff.cs",
        "Description": "should view restricted info when self nominated",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should be able to view restricted info",
          "should historize self nomination",
          "should mark has self nominated"
        ],
        "Children": []
      },
      {
        "$id": "3941",
        "FileName": "when_get_tax_work_record_with_self_nominate_by_staff.cs",
        "Description": "should return self nomination link when check list assigned to staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3942",
            "FileName": "when_get_tax_work_record_with_self_nominate_by_staff.cs",
            "Description": "before assign",
            "WhenList": [
              "view work record"
            ],
            "ThenList": [
              "should return self nomination link"
            ],
            "Children": []
          },
          {
            "$id": "3943",
            "FileName": "when_get_tax_work_record_with_self_nominate_by_staff.cs",
            "Description": "after assign",
            "WhenList": [
              "view work record"
            ],
            "ThenList": [
              "should return self nomination link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3944",
    "FileName": "when_work_record_self_nominate_by_staff.cs",
    "Description": "when work record self nominate by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3945",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should not need to self nominate with office of staff is work record responsible office",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return 409 as status code"
        ],
        "Children": []
      },
      {
        "$id": "3946",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should not need to self nominate with office of staff is in work record team",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return 409 as status code"
        ],
        "Children": []
      },
      {
        "$id": "3947",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should be able to self nominate first time with staff office as one of the tasks responsible office",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should self nominate successfully"
        ],
        "Children": []
      },
      {
        "$id": "3948",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should can self nominated first time with office of staff is engagement coordinating office",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should self nominated successfully"
        ],
        "Children": []
      },
      {
        "$id": "3949",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should be able to self nominate first time with staff office as one of engagement work offices",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "3950",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should can not nominate when staff is not related to engagement",
        "WhenList": [
          "self nominate again"
        ],
        "ThenList": [
          "should return 403 as status code"
        ],
        "Children": []
      },
      {
        "$id": "3951",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should can not nominate when staff office not assigned to work record and not at coordinating office nor work office",
        "WhenList": [
          "self nominate again"
        ],
        "ThenList": [
          "should return 403 as status code"
        ],
        "Children": []
      },
      {
        "$id": "3952",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should no need nominate when staff assigned to task",
        "WhenList": [
          "self nominate again"
        ],
        "ThenList": [
          "should return 409 as status code"
        ],
        "Children": []
      },
      {
        "$id": "3953",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should can not nominate when task has assigned to another staff in my office",
        "WhenList": [
          "self nominate"
        ],
        "ThenList": [
          "should return 403 as status code"
        ],
        "Children": []
      },
      {
        "$id": "3954",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should fail when self nominated again",
        "WhenList": [
          "self nominate again"
        ],
        "ThenList": [
          "should return 409 as status code"
        ],
        "Children": []
      },
      {
        "$id": "3955",
        "FileName": "when_work_record_self_nominate_by_staff.cs",
        "Description": "should fail when self nominated after assign staff to check list",
        "WhenList": [
          "self nominate again"
        ],
        "ThenList": [
          "should return 409 as status code"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3956",
    "FileName": "when_assignee_assignment_changed.cs",
    "Description": "when assignee assignment changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3957",
        "FileName": "when_assignee_assignment_changed.cs",
        "Description": "when assingee without work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3958",
            "FileName": "when_assignee_assignment_changed.cs",
            "Description": "when change one us assingnment country to no us with no us home country and multi us assignments",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "3959",
            "FileName": "when_assignee_assignment_changed.cs",
            "Description": "when change one us assingnment country to no us with no us home country and multi us assignments and no tax engagement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "3960",
            "FileName": "when_assignee_assignment_changed.cs",
            "Description": "when change all us assingnment country to no us with no us home country and multi us assignments",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "3961",
            "FileName": "when_assignee_assignment_changed.cs",
            "Description": "when change all us assingnment country to no us with us home country and multi us assignments",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "3962",
            "FileName": "when_assignee_assignment_changed.cs",
            "Description": "when change all us assingnment country to no us with us home country and multi us assignments and no tax engagement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "3963",
            "FileName": "when_assignee_assignment_changed.cs",
            "Description": "when change one us assignment country to no us with no us home country and multi us assignment and multi client",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "3964",
    "FileName": "when_assignee_created.cs",
    "Description": "when assignee created",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3965",
        "FileName": "when_assignee_created.cs",
        "Description": "when filter by assignee ids given assignee with home country us",
        "WhenList": [
          "create assignee event"
        ],
        "ThenList": [
          "should return assignee with active status"
        ],
        "Children": []
      },
      {
        "$id": "3966",
        "FileName": "when_assignee_created.cs",
        "Description": "when filter by assignee ids given assignee with host country us",
        "WhenList": [
          "create assignee event"
        ],
        "ThenList": [
          "should return assignee with active status"
        ],
        "Children": []
      },
      {
        "$id": "3967",
        "FileName": "when_assignee_created.cs",
        "Description": "when filter by assignee ids given assignee with host and home country us",
        "WhenList": [
          "create assignee event"
        ],
        "ThenList": [
          "should return assignee with active status"
        ],
        "Children": []
      },
      {
        "$id": "3968",
        "FileName": "when_assignee_created.cs",
        "Description": "when filter by assignee ids given assignee without tax engagement",
        "WhenList": [
          "create assignee event"
        ],
        "ThenList": [
          "should return assignee with active status"
        ],
        "Children": []
      },
      {
        "$id": "3969",
        "FileName": "when_assignee_created.cs",
        "Description": "when filter by assignee ids given assignee with private client",
        "WhenList": [
          "create assignee event"
        ],
        "ThenList": [
          "should return assignee with active status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3970",
    "FileName": "when_assignee_deleted.cs",
    "Description": "when relate to us assignee deleted",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3971",
        "FileName": "when_assignee_deleted.cs",
        "Description": "after assignee name changed",
        "WhenList": [
          "get latest assignee status"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee deleted event with expired"
        ],
        "Children": []
      },
      {
        "$id": "3972",
        "FileName": "when_assignee_deleted.cs",
        "Description": "after work record created",
        "WhenList": [
          "get latest assignee status"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee deleted event with expired"
        ],
        "Children": []
      },
      {
        "$id": "3973",
        "FileName": "when_assignee_deleted.cs",
        "Description": "when create assignee with 2 engagements cross public clients",
        "WhenList": [
          "get latest assignee status"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee deleted event for each client with expired status"
        ],
        "Children": []
      },
      {
        "$id": "3974",
        "FileName": "when_assignee_deleted.cs",
        "Description": "when create assignee with 2 engagements cross public and private clients",
        "WhenList": [
          "get latest assignee status"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee deleted event with expired status only for public client"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3975",
    "FileName": "when_assignee_first_name_changed.cs",
    "Description": "when assignee first name changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3976",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given uk assignee with an open tax work record responsbiled by us office",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return served assignee"
        ],
        "Children": []
      },
      {
        "$id": "3977",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given uk assignee with us responsible active non tax work record",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should not return assignee"
        ],
        "Children": []
      },
      {
        "$id": "3978",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given uk assignee with us responsible office but done work record",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return assignee with expired"
        ],
        "Children": []
      },
      {
        "$id": "3979",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given uk assignee with only not us responsible office but done work record",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return assignee with expired status"
        ],
        "Children": []
      },
      {
        "$id": "3980",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given uk assignee with us responsible task assignment",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return assignee with active status"
        ],
        "Children": []
      },
      {
        "$id": "3981",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given uk assignee with us responsible checklist task",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return assignee with active status"
        ],
        "Children": []
      },
      {
        "$id": "3982",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given uk assignee under private client with us responsible active work record",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should not return assignee"
        ],
        "Children": []
      },
      {
        "$id": "3983",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given uk inactive assignee with us responsible active work record",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return with expired"
        ],
        "Children": []
      },
      {
        "$id": "3984",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given uk restricted assignee with us responsible active work record",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return with expired"
        ],
        "Children": []
      },
      {
        "$id": "3985",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given assignee with 2 engagements cross clients",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return served assignee for each client"
        ],
        "Children": []
      },
      {
        "$id": "3986",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by work record ids given assignee with 2 engagements cross clients",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return served assignee for client"
        ],
        "Children": []
      },
      {
        "$id": "3987",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by non tax work record id given assignee with tax work record and immigration work record",
        "WhenList": [
          "send immigration work record id"
        ],
        "ThenList": [
          "should return empty served assignee for client"
        ],
        "Children": []
      },
      {
        "$id": "3988",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given 2 assignees",
        "WhenList": [
          "send assignee ids"
        ],
        "ThenList": [
          "should return 2 served assignees for client"
        ],
        "Children": []
      },
      {
        "$id": "3989",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee id given assignee with briefing tax work record",
        "WhenList": [
          "send assignee id"
        ],
        "ThenList": [
          "should return served assignee for client"
        ],
        "Children": []
      },
      {
        "$id": "3990",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids and work record ids given assignee with 2 engagements cross clients",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return served assignee for each client"
        ],
        "Children": []
      },
      {
        "$id": "3991",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by assignee ids given assignee with 2 engagements cross clients and create us uk workrecord",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return served assignee for each client"
        ],
        "Children": []
      },
      {
        "$id": "3992",
        "FileName": "when_assignee_first_name_changed.cs",
        "Description": "when filter by work record ids given assignee with 2 engagements cross clients and create uk workrecord",
        "WhenList": [
          "create assignee first name changed event"
        ],
        "ThenList": [
          "should return served assignee for each client"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "3993",
    "FileName": "when_assingee_home_country_changed.cs",
    "Description": "when assingee home country changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "3994",
        "FileName": "when_assingee_home_country_changed.cs",
        "Description": "when assingee without work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "3995",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from us to no us without any us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "3996",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from us to no us without any us assigement and tax engagement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "3997",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from no us to us without any us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "3998",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from us to no us with only one us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "3999",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from no us to us with only one us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4000",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from no us to us with only one us assigement and tax engagement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4001",
        "FileName": "when_assingee_home_country_changed.cs",
        "Description": "when assingee with work record responsbiled by us office at last one work record milestone not done",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4002",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from us to no us without any us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4003",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from no us to us without any us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4004",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from us to no us with only one us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4005",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from no us to us with only one us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4006",
        "FileName": "when_assingee_home_country_changed.cs",
        "Description": "when assingee with work record responsbiled by us office all work record milestone done",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4007",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from us to no us without any us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4008",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from no us to us without any us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4009",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from us to no us with only one us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4010",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from no us to us with only one us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4011",
        "FileName": "when_assingee_home_country_changed.cs",
        "Description": "when assingee with work record responsbiled by no us office at last one work record milestone not done",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4012",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from us to no us without any us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4013",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from no us to us without any us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4014",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from us to no us with only one us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          },
          {
            "$id": "4015",
            "FileName": "when_assingee_home_country_changed.cs",
            "Description": "when change home country from no us to us with only one us assigement",
            "WhenList": [
              "create assignee event"
            ],
            "ThenList": [
              "should return assignee with active status"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4016",
    "FileName": "when_assingee_restricted_changed.cs",
    "Description": "when assingee restricted changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4017",
        "FileName": "when_assingee_restricted_changed.cs",
        "Description": "when filter by assignee ids given uk assignee restricted with us responsible open or close tax work record",
        "WhenList": [
          "create assignee restricted"
        ],
        "ThenList": [
          "should return with expired"
        ],
        "Children": []
      },
      {
        "$id": "4018",
        "FileName": "when_assingee_restricted_changed.cs",
        "Description": "when filter by work record ids given uk assignee restricted with us responsible open or close tax work record",
        "WhenList": [
          "create assignee restricted"
        ],
        "ThenList": [
          "should return with expired"
        ],
        "Children": []
      },
      {
        "$id": "4019",
        "FileName": "when_assingee_restricted_changed.cs",
        "Description": "when filter by work record ids and assignee ids given uk assignee restricted with us responsible open or close tax work record",
        "WhenList": [
          "create assignee restricted"
        ],
        "ThenList": [
          "should return with expired"
        ],
        "Children": []
      },
      {
        "$id": "4020",
        "FileName": "when_assingee_restricted_changed.cs",
        "Description": "when filter by assignee ids given uk assignee restricted with no us responsible open tax work record",
        "WhenList": [
          "create assignee restricted"
        ],
        "ThenList": [
          "should return none"
        ],
        "Children": []
      },
      {
        "$id": "4021",
        "FileName": "when_assingee_restricted_changed.cs",
        "Description": "when filter by assignee ids given uk inactive assignee restricted with us responsible open tax work record",
        "WhenList": [
          "create assignee restircted"
        ],
        "ThenList": [
          "should return with expired"
        ],
        "Children": []
      },
      {
        "$id": "4022",
        "FileName": "when_assingee_restricted_changed.cs",
        "Description": "when filter by assignee ids given uk private assignee restricted with us responsible open tax work record",
        "WhenList": [
          "create assignee restricted"
        ],
        "ThenList": [
          "should return none"
        ],
        "Children": []
      },
      {
        "$id": "4023",
        "FileName": "when_assingee_restricted_changed.cs",
        "Description": "when filter by assignee ids given assignee with 2 engagements cross clients",
        "WhenList": [
          "get latest assignee status"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee with expired"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4024",
    "FileName": "when_assingee_unrestricted_changed.cs",
    "Description": "when assingee unrestricted changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4025",
        "FileName": "when_assingee_unrestricted_changed.cs",
        "Description": "when filter by assignee ids given uk assignee unrestricted with us responsible open tax work record",
        "WhenList": [
          "create assignee restircted"
        ],
        "ThenList": [
          "should return with actived"
        ],
        "Children": []
      },
      {
        "$id": "4026",
        "FileName": "when_assingee_unrestricted_changed.cs",
        "Description": "when filter by assignee ids given uk assignee unrestricted with us responsible close tax work record",
        "WhenList": [
          "create assignee restircted"
        ],
        "ThenList": [
          "should return with expired"
        ],
        "Children": []
      },
      {
        "$id": "4027",
        "FileName": "when_assingee_unrestricted_changed.cs",
        "Description": "when filter by assignee ids given uk assignee unrestricted with no us responsible open tax work record",
        "WhenList": [
          "create assignee restircted"
        ],
        "ThenList": [
          "should return none"
        ],
        "Children": []
      },
      {
        "$id": "4028",
        "FileName": "when_assingee_unrestricted_changed.cs",
        "Description": "when filter by assignee ids given uk inactive assignee unrestricted with us responsible open tax work record",
        "WhenList": [
          "create assignee restircted"
        ],
        "ThenList": [
          "should return none"
        ],
        "Children": []
      },
      {
        "$id": "4029",
        "FileName": "when_assingee_unrestricted_changed.cs",
        "Description": "when filter by assignee ids given uk private assignee unrestricted with us responsible open tax work record",
        "WhenList": [
          "create assignee restircted"
        ],
        "ThenList": [
          "should return none"
        ],
        "Children": []
      },
      {
        "$id": "4030",
        "FileName": "when_assingee_unrestricted_changed.cs",
        "Description": "when filter by assignee ids create assignee with 2 engagements cross clients",
        "WhenList": [
          "get latest assignee status"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee with expired"
        ],
        "Children": []
      },
      {
        "$id": "4031",
        "FileName": "when_assingee_unrestricted_changed.cs",
        "Description": "when filter by assignee ids given assignee with 2 engagements cross clients and create us uk workrecord",
        "WhenList": [
          "get latest assignee status"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee with expired"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4032",
    "FileName": "when_briefing_work_record_created.cs",
    "Description": "when briefing work record created",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4033",
        "FileName": "when_briefing_work_record_created.cs",
        "Description": "when filter by work record ids given uk assignee with us responsible active briefing work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return asignee with active status"
        ],
        "Children": []
      },
      {
        "$id": "4034",
        "FileName": "when_briefing_work_record_created.cs",
        "Description": "when filter by work record ids given uk assignee with us responsible active non tax work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should not return given asignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4035",
    "FileName": "when_tax_work_record_created.cs",
    "Description": "when tax work record created",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4036",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given cn assignee with uk responsible active tax return work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee responsibility changed event with active"
        ],
        "Children": []
      },
      {
        "$id": "4037",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given us assignee with uk responsible active tax work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee responsibility changed event with active"
        ],
        "Children": []
      },
      {
        "$id": "4038",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given uk assignee with us responsible active non tax work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee responsibility changed event with active"
        ],
        "Children": []
      },
      {
        "$id": "4039",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given uk assignee with us responsible office but done work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee responsibility changed event with expired"
        ],
        "Children": []
      },
      {
        "$id": "4040",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given uk assignee with us responsible task assignment",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee responsibility changed event with active status"
        ],
        "Children": []
      },
      {
        "$id": "4041",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given uk assignee with us responsible checklist task",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee responsibility changed event with active status"
        ],
        "Children": []
      },
      {
        "$id": "4042",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given uk assignee under private client with us responsible active work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should not return assignee responsibility changed event"
        ],
        "Children": []
      },
      {
        "$id": "4043",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given uk inactive assignee with us responsible active work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should not return assignee responsibility changed event"
        ],
        "Children": []
      },
      {
        "$id": "4044",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given uk restricted assignee with us responsible active work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should not return assignee responsibility changed event"
        ],
        "Children": []
      },
      {
        "$id": "4045",
        "FileName": "when_tax_work_record_created.cs",
        "Description": "when filter by work record id given uk assignee with us responsible work record deleted",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee responsibility changed event with active"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4046",
    "FileName": "when_work_record_checklist_responsibility_office_changed.cs",
    "Description": "when work record checklist responsibility office changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4047",
        "FileName": "when_work_record_checklist_responsibility_office_changed.cs",
        "Description": "given kayla with checklist item and responsibility to us work record",
        "WhenList": [
          "change work record checklist responsibility to us"
        ],
        "ThenList": [
          "should return ok",
          "should return active assignee"
        ],
        "Children": []
      },
      {
        "$id": "4048",
        "FileName": "when_work_record_checklist_responsibility_office_changed.cs",
        "Description": "given kayla with checklist item and responsibility to non us work record responsibility by us",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return ok",
          "should return expired assingee"
        ],
        "Children": []
      },
      {
        "$id": "4049",
        "FileName": "when_work_record_checklist_responsibility_office_changed.cs",
        "Description": "given kayal with checklist item and responsibility to us work record responsibility by us",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return ok",
          "should return expired assingee"
        ],
        "Children": []
      },
      {
        "$id": "4050",
        "FileName": "when_work_record_checklist_responsibility_office_changed.cs",
        "Description": "given kayla with checklist item and responsibility to non us work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return ok",
          "should return expired assingee"
        ],
        "Children": []
      },
      {
        "$id": "4051",
        "FileName": "when_work_record_checklist_responsibility_office_changed.cs",
        "Description": "given kayla with checklist item and responsibility to us briefing work record",
        "WhenList": [
          "change work record checklist responsibility to us"
        ],
        "ThenList": [
          "should return OK",
          "should return active assignee"
        ],
        "Children": []
      },
      {
        "$id": "4052",
        "FileName": "when_work_record_checklist_responsibility_office_changed.cs",
        "Description": "given kayla with checklist item and responsibility to uk immigration briefing work record",
        "WhenList": [
          "change work record checklist responsibility to us"
        ],
        "ThenList": [
          "should return ok",
          "should not return assignee"
        ],
        "Children": []
      },
      {
        "$id": "4053",
        "FileName": "when_work_record_checklist_responsibility_office_changed.cs",
        "Description": "given kayla with checklist item and responsibility to non us briefing work record responsibility by us",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return ok",
          "should return expired assingee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4054",
    "FileName": "when_work_record_completed.cs",
    "Description": "when work record completed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4055",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk assignee with us responsible office but done work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee responsibility changed event with expired"
        ],
        "Children": []
      },
      {
        "$id": "4056",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk assignee with us responsible active tax work record and done tax work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee with active"
        ],
        "Children": []
      },
      {
        "$id": "4057",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk assignee with us responsible active non tax work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return none assingee"
        ],
        "Children": []
      },
      {
        "$id": "4058",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk assignee with us responsible task assignment tax work record done",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee expired"
        ],
        "Children": []
      },
      {
        "$id": "4059",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk assignee with us responsible checklist task done tax work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee expired"
        ],
        "Children": []
      },
      {
        "$id": "4060",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk assignee under private client with us responsible done work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return none assingee"
        ],
        "Children": []
      },
      {
        "$id": "4061",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk inactive assignee with us responsible done work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return none assingee"
        ],
        "Children": []
      },
      {
        "$id": "4062",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk restricted assignee with us responsible done work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return none assingee"
        ],
        "Children": []
      },
      {
        "$id": "4063",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk assignee with us responsible work record deleted",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return none assingee"
        ],
        "Children": []
      },
      {
        "$id": "4064",
        "FileName": "when_work_record_completed.cs",
        "Description": "when given uk assignee with us responsible office but done briefing work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return assignee with expired"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4065",
    "FileName": "when_work_record_completed_for_assignee_cross_clients.cs",
    "Description": "when work record completed for assignee cross clients",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4066",
        "FileName": "when_work_record_completed_for_assignee_cross_clients.cs",
        "Description": "when given assignee cross clients with done work record for one client and initiated work record for another",
        "WhenList": [
          "get served assignee status"
        ],
        "ThenList": [
          "should return assignee responsibility changed event with expired"
        ],
        "Children": []
      },
      {
        "$id": "4067",
        "FileName": "when_work_record_completed_for_assignee_cross_clients.cs",
        "Description": "when given assignee cross clients with done work record for one client and no work record for another",
        "WhenList": [
          "get served assignee status"
        ],
        "ThenList": [
          "should return assignee from two clients",
          "should return assignee from oracle with expired",
          "should return assignee from IBM with active"
        ],
        "Children": []
      },
      {
        "$id": "4068",
        "FileName": "when_work_record_completed_for_assignee_cross_clients.cs",
        "Description": "when given assignee cross clients with open work record for one client and no work record for another",
        "WhenList": [
          "get served assignee status"
        ],
        "ThenList": [
          "should return assignee from two clients",
          "should return assignee from oracle with active",
          "should return assignee from IBM with active"
        ],
        "Children": []
      },
      {
        "$id": "4069",
        "FileName": "when_work_record_completed_for_assignee_cross_clients.cs",
        "Description": "when given assignee cross clients with done work record for one client and another with done work record",
        "WhenList": [
          "get served assignee status"
        ],
        "ThenList": [
          "should return assignee from two clients",
          "should return assignee from oracle with expired",
          "should return assignee from IBM with expired"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4070",
    "FileName": "when_work_record_task_responsibility_office_changed.cs",
    "Description": "when work record task responsibility office changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4071",
        "FileName": "when_work_record_task_responsibility_office_changed.cs",
        "Description": "given kayla with non tax work record",
        "WhenList": [
          "create work record created event"
        ],
        "ThenList": [
          "should return none assingee"
        ],
        "Children": []
      },
      {
        "$id": "4072",
        "FileName": "when_work_record_task_responsibility_office_changed.cs",
        "Description": "given kayla with uk responsibled work record",
        "WhenList": [
          "one task assigned to us"
        ],
        "ThenList": [
          "should get active assignee record"
        ],
        "Children": []
      },
      {
        "$id": "4073",
        "FileName": "when_work_record_task_responsibility_office_changed.cs",
        "Description": "given kayla with uk responsibled briefing work record",
        "WhenList": [
          "one task assigned to us"
        ],
        "ThenList": [
          "should get active assignee record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4074",
    "FileName": "when_display_evaluation_overview_on_myMobility_dashboard.cs",
    "Description": "when display evaluation overview on my mobility dashboard",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should return overview"
    ],
    "Children": []
  },
  {
    "$id": "4075",
    "FileName": "when_display_overview_with_0_survies.cs",
    "Description": "when display overview with 0 survies",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "4076",
    "FileName": "when_display_totoal_answer_and_total_rates.cs",
    "Description": "when display totoal answer and total rates",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return overview"
    ],
    "Children": []
  },
  {
    "$id": "4077",
    "FileName": "when_there_are_survies_from_different_years.cs",
    "Description": "when there are survies from different years",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return overview"
    ],
    "Children": []
  },
  {
    "$id": "4078",
    "FileName": "when_batch_update_evaluation_by_workrecord.cs",
    "Description": "when batch update evaluation by workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4079",
        "FileName": "when_batch_update_evaluation_by_workrecord.cs",
        "Description": "when workrecord has enabled evaluation",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4080",
            "FileName": "when_batch_update_evaluation_by_workrecord.cs",
            "Description": "should batch update evaluation to be enabled",
            "WhenList": [
              "update evaluation for work record"
            ],
            "ThenList": [
              "should return ok",
              "should update evaluations"
            ],
            "Children": []
          },
          {
            "$id": "4081",
            "FileName": "when_batch_update_evaluation_by_workrecord.cs",
            "Description": "should reminder disable when batch update evaludation to be disabled",
            "WhenList": [
              "update evaluation for work record"
            ],
            "ThenList": [
              "evaludaton reminder shouble be disable"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4082",
    "FileName": "when_create_evaluation_comment.cs",
    "Description": "when create evaluation comment",
    "WhenList": [
      "send add comment request"
    ],
    "ThenList": [
      "should return created",
      "should create successfully",
      "should record history"
    ],
    "Children": []
  },
  {
    "$id": "4083",
    "FileName": "when_create_evaluation_reminder.cs",
    "Description": "when create evaluation reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4084",
        "FileName": "when_create_evaluation_reminder.cs",
        "Description": "when for tax work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4085",
            "FileName": "when_create_evaluation_reminder.cs",
            "Description": "when create survey and send email successfully",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should create first evaluation reminder",
              "should send first reminder email",
              "should create second reminder",
              "should send second reminder email"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4086",
        "FileName": "when_create_evaluation_reminder.cs",
        "Description": "when work record responsiblie office has no teammailbox",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send reminder from tax contact email"
        ],
        "Children": []
      },
      {
        "$id": "4087",
        "FileName": "when_create_evaluation_reminder.cs",
        "Description": "when work record responsiblie office has no teammailbox or tax contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should send reminder email from pwc no reply"
        ],
        "Children": []
      },
      {
        "$id": "4088",
        "FileName": "when_create_evaluation_reminder.cs",
        "Description": "when for immigration work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should send reminder email from no reply"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4089",
    "FileName": "when_create_survey.cs",
    "Description": "when create survey",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4090",
        "FileName": "when_create_survey.cs",
        "Description": "when for tax work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4091",
            "FileName": "when_create_survey.cs",
            "Description": "when create survey and send email successfully",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should send invitation email with survey link",
              "should create evaluation survey"
            ],
            "Children": []
          },
          {
            "$id": "4092",
            "FileName": "when_create_survey.cs",
            "Description": "when work record responsiblie office has no teammailbox",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should send invitation email with survey link"
            ],
            "Children": []
          },
          {
            "$id": "4093",
            "FileName": "when_create_survey.cs",
            "Description": "when work record responsiblie office has no teammailbox or tax contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should send invitation email with survey link"
            ],
            "Children": []
          },
          {
            "$id": "4094",
            "FileName": "when_create_survey.cs",
            "Description": "when send invitation for existed survey",
            "WhenList": [
              "send email again if last time failed"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should not create survey again"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4095",
        "FileName": "when_create_survey.cs",
        "Description": "when for immigration work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should send invitation email with survey link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4096",
    "FileName": "when_create_survey_with_other_culture.cs",
    "Description": "when create survey with culture",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK as status code",
      "should send invitation email with survey link",
      "should create evaluation survey"
    ],
    "Children": []
  },
  {
    "$id": "4097",
    "FileName": "when_delete_evaluation_comment.cs",
    "Description": "when delete evaluation comment",
    "WhenList": [
      "send edit comment request"
    ],
    "ThenList": [
      "should return ok",
      "should be deleted successfully",
      "should record history"
    ],
    "Children": []
  },
  {
    "$id": "4098",
    "FileName": "when_edit_evaluation_comment.cs",
    "Description": "when edit evaluation comment",
    "WhenList": [
      "send edit comment request"
    ],
    "ThenList": [
      "should return ok",
      "should be edited successfully",
      "should record history"
    ],
    "Children": []
  },
  {
    "$id": "4099",
    "FileName": "when_get_average_rates_grouped_by_country.cs",
    "Description": "when get average rates grouped by country",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4100",
        "FileName": "when_get_average_rates_grouped_by_country.cs",
        "Description": "when engagement is tax and with year ending",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return average rates grouped by country"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4101",
    "FileName": "when_get_evaluation_by_workrecord.cs",
    "Description": "when get evaluation by workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4102",
        "FileName": "when_get_evaluation_by_workrecord.cs",
        "Description": "when work record has evaluation",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4103",
            "FileName": "when_get_evaluation_by_workrecord.cs",
            "Description": "when evaluation enabled on engagement level with evaluation answer",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return evaluation under work record"
            ],
            "Children": []
          },
          {
            "$id": "4104",
            "FileName": "when_get_evaluation_by_workrecord.cs",
            "Description": "when evaluation enabled on engagement level without answer",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return evaluation under work record"
            ],
            "Children": []
          },
          {
            "$id": "4105",
            "FileName": "when_get_evaluation_by_workrecord.cs",
            "Description": "when evaluation disabled on engagement level",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return evaluation under work record"
            ],
            "Children": []
          },
          {
            "$id": "4106",
            "FileName": "when_get_evaluation_by_workrecord.cs",
            "Description": "when disabled on engagement but invitation is already sent",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return evaluation under work record"
            ],
            "Children": []
          },
          {
            "$id": "4107",
            "FileName": "when_get_evaluation_by_workrecord.cs",
            "Description": "when evaluation enabled with cancelled immigration work record",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return evaluation under work record"
            ],
            "Children": []
          },
          {
            "$id": "4108",
            "FileName": "when_get_evaluation_by_workrecord.cs",
            "Description": "when evaluation enabled with no filing requirement tax return work record",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return evaluation under work record"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4109",
        "FileName": "when_get_evaluation_by_workrecord.cs",
        "Description": "when work record does not have evaluation",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4110",
            "FileName": "when_get_evaluation_by_workrecord.cs",
            "Description": "when evaluation enabled on engagement level",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return evaluation under work record"
            ],
            "Children": []
          },
          {
            "$id": "4111",
            "FileName": "when_get_evaluation_by_workrecord.cs",
            "Description": "when evaluation disabled on engagement level",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return evaluation under work record"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4112",
    "FileName": "when_get_evaluation_invitation_and_reminder_date.cs",
    "Description": "when get evaluation invitation and reminder date",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4113",
        "FileName": "when_get_evaluation_invitation_and_reminder_date.cs",
        "Description": "when invitation not sent",
        "WhenList": [
          "get evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return invitation date"
        ],
        "Children": []
      },
      {
        "$id": "4114",
        "FileName": "when_get_evaluation_invitation_and_reminder_date.cs",
        "Description": "when invitation sent",
        "WhenList": [
          "get evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return invitation date"
        ],
        "Children": []
      },
      {
        "$id": "4115",
        "FileName": "when_get_evaluation_invitation_and_reminder_date.cs",
        "Description": "when invitation sent first remainder",
        "WhenList": [
          "get evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return invitation date"
        ],
        "Children": []
      },
      {
        "$id": "4116",
        "FileName": "when_get_evaluation_invitation_and_reminder_date.cs",
        "Description": "when invitation sent last remainder",
        "WhenList": [
          "get evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should return invitation date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4117",
    "FileName": "when_get_evaluation_report_by_nancy.cs",
    "Description": "when get evaluation report by nancy",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should return report"
    ],
    "Children": []
  },
  {
    "$id": "4118",
    "FileName": "when_get_evaluation_report_by_nancy_with_UDF_filter.cs",
    "Description": "when get evaluation report by nancy with UDF filter",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should return report"
    ],
    "Children": []
  },
  {
    "$id": "4119",
    "FileName": "when_get_evaluation_settings_by_engagement.cs",
    "Description": "when get evaluation settings by engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4120",
        "FileName": "when_get_evaluation_settings_by_engagement.cs",
        "Description": "when get engagement evaluation settings",
        "WhenList": [
          "get engagement evaluation settings"
        ],
        "ThenList": [
          "should return ok",
          "should return evaluation settings of engagement"
        ],
        "Children": []
      },
      {
        "$id": "4121",
        "FileName": "when_get_evaluation_settings_by_engagement.cs",
        "Description": "when engagement does not exist",
        "WhenList": [
          "get engagement evaluation settings"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "4122",
        "FileName": "when_get_evaluation_settings_by_engagement.cs",
        "Description": "when engagement evaluation settings does not exist",
        "WhenList": [
          "get engagement evaluation settings"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4123",
    "FileName": "when_get_evaluation_status.cs",
    "Description": "when get evaluation status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4124",
        "FileName": "when_get_evaluation_status.cs",
        "Description": "when work record does not have evaluation",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4125",
            "FileName": "when_get_evaluation_status.cs",
            "Description": "when evaluation enabled on engagement level",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return off status"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4126",
        "FileName": "when_get_evaluation_status.cs",
        "Description": "when work record has evaluation",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4127",
            "FileName": "when_get_evaluation_status.cs",
            "Description": "when evaluation disabled on engagement level",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return off status"
            ],
            "Children": []
          },
          {
            "$id": "4128",
            "FileName": "when_get_evaluation_status.cs",
            "Description": "when evaluation enabled on engagement level",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return not sent status"
            ],
            "Children": []
          },
          {
            "$id": "4129",
            "FileName": "when_get_evaluation_status.cs",
            "Description": "when invitation has already sent",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return sent status"
            ],
            "Children": []
          },
          {
            "$id": "4130",
            "FileName": "when_get_evaluation_status.cs",
            "Description": "when kayla completed the evaluation",
            "WhenList": [
              "get evaluation"
            ],
            "ThenList": [
              "should return ok",
              "should return completed status"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4131",
    "FileName": "when_get_evaluation_survey_template_detail.cs",
    "Description": "when get evaluation survey template detail",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4132",
        "FileName": "when_get_evaluation_survey_template_detail.cs",
        "Description": "when get tax evaluation template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return template"
        ],
        "Children": []
      },
      {
        "$id": "4133",
        "FileName": "when_get_evaluation_survey_template_detail.cs",
        "Description": "when get immigration evaluation template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return template"
        ],
        "Children": []
      },
      {
        "$id": "4134",
        "FileName": "when_get_evaluation_survey_template_detail.cs",
        "Description": "when get social security evaluation template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return template"
        ],
        "Children": []
      },
      {
        "$id": "4135",
        "FileName": "when_get_evaluation_survey_template_detail.cs",
        "Description": "when get technology evaluation template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 204 as status code",
          "should return template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4136",
    "FileName": "when_get_evaluation_templates.cs",
    "Description": "when get evaluation templates",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4137",
        "FileName": "when_get_evaluation_templates.cs",
        "Description": "when get tax evaluation template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return template"
        ],
        "Children": []
      },
      {
        "$id": "4138",
        "FileName": "when_get_evaluation_templates.cs",
        "Description": "when get immigration evaluation template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return template"
        ],
        "Children": []
      },
      {
        "$id": "4139",
        "FileName": "when_get_evaluation_templates.cs",
        "Description": "when get social security evaluation template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4140",
    "FileName": "when_get_scheduled_evaluations_to_send_invitation.cs",
    "Description": "when get scheduled evaluations to send invitation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4141",
        "FileName": "when_get_scheduled_evaluations_to_send_invitation.cs",
        "Description": "when get evaluation to send invitation",
        "WhenList": [
          "get evaluations to be created list"
        ],
        "ThenList": [
          "should return ok",
          "should include create evaluation link"
        ],
        "Children": []
      },
      {
        "$id": "4142",
        "FileName": "when_get_scheduled_evaluations_to_send_invitation.cs",
        "Description": "when get evaluation with different practice type to send invitation",
        "WhenList": [
          "get evaluations to be created list"
        ],
        "ThenList": [
          "should return ok",
          "should include create evaluation link"
        ],
        "Children": []
      },
      {
        "$id": "4143",
        "FileName": "when_get_scheduled_evaluations_to_send_invitation.cs",
        "Description": "should not send invitation if already existed",
        "WhenList": [
          "get evaluation to be sent"
        ],
        "ThenList": [
          "should return ok",
          "should include create evaluation link"
        ],
        "Children": []
      },
      {
        "$id": "4144",
        "FileName": "when_get_scheduled_evaluations_to_send_invitation.cs",
        "Description": "when work record mile stone not move to complete",
        "WhenList": [
          "get evaluation to be sent"
        ],
        "ThenList": [
          "should return ok",
          "should not send invitation if not move to complete"
        ],
        "Children": []
      },
      {
        "$id": "4145",
        "FileName": "when_get_scheduled_evaluations_to_send_invitation.cs",
        "Description": "when work record service status not noissues",
        "WhenList": [
          "get evaluation to be sent"
        ],
        "ThenList": [
          "should return ok",
          "should not send invitation if work record has issues"
        ],
        "Children": []
      },
      {
        "$id": "4146",
        "FileName": "when_get_scheduled_evaluations_to_send_invitation.cs",
        "Description": "when work record with no filing requirement",
        "WhenList": [
          "get evaluation to be sent"
        ],
        "ThenList": [
          "should return ok",
          "should not send invitation if work record with no filing requirement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4147",
    "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_immigration_work_record.cs",
    "Description": "when get scheduled evaluations to send reminder for immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4148",
        "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_immigration_work_record.cs",
        "Description": "when get evaluation to send first reminder",
        "WhenList": [
          "get evaluations to send reminder"
        ],
        "ThenList": [
          "should return ok",
          "should include create evaluation reminder link"
        ],
        "Children": []
      },
      {
        "$id": "4149",
        "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_immigration_work_record.cs",
        "Description": "when get evaluation to send second reminder",
        "WhenList": [
          "get evaluations to send reminder"
        ],
        "ThenList": [
          "should return ok",
          "should include create evaluation reminder link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4150",
    "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_social_security_work_record.cs",
    "Description": "when get scheduled evaluations to send reminder for social security work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4151",
        "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_social_security_work_record.cs",
        "Description": "when get evaluation to send first reminder",
        "WhenList": [
          "get evaluations to send reminder"
        ],
        "ThenList": [
          "should return ok",
          "should include create evaluation reminder link"
        ],
        "Children": []
      },
      {
        "$id": "4152",
        "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_social_security_work_record.cs",
        "Description": "when get evaluation to send second reminder",
        "WhenList": [
          "get evaluations to send reminder"
        ],
        "ThenList": [
          "should return ok",
          "should include create evaluation reminder link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4153",
    "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_tax_work_record.cs",
    "Description": "when get scheduled evaluations to send reminder for tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4154",
        "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_tax_work_record.cs",
        "Description": "when get evaluation to send first reminder",
        "WhenList": [
          "get evaluations to send reminder"
        ],
        "ThenList": [
          "should return ok",
          "should include create evaluation reminder link"
        ],
        "Children": []
      },
      {
        "$id": "4155",
        "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_tax_work_record.cs",
        "Description": "when get evaluation to send second reminder",
        "WhenList": [
          "get evaluations to send reminder"
        ],
        "ThenList": [
          "should return ok",
          "should include create evaluation reminder link"
        ],
        "Children": []
      },
      {
        "$id": "4156",
        "FileName": "when_get_scheduled_evaluations_to_send_reminder_for_tax_work_record.cs",
        "Description": "when have one work record with no filing requirement and satisfied first and second reminder criteria",
        "WhenList": [
          "get evaluations to send reminder"
        ],
        "ThenList": [
          "should not send first reminder and second reminder"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4157",
    "FileName": "when_get_survey_results.cs",
    "Description": "when get survey results",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4158",
        "FileName": "when_get_survey_results.cs",
        "Description": "when get all countries",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return average rates and details from all countries"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4159",
    "FileName": "when_sync_evalucation_survey_answer.cs",
    "Description": "when sync evalucation survey answer",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4160",
        "FileName": "when_sync_evalucation_survey_answer.cs",
        "Description": "should sync new answer",
        "WhenList": [
          "asked to sync answers"
        ],
        "ThenList": [
          "should return ok",
          "should sync answer",
          "should not send unsatisfied email"
        ],
        "Children": []
      },
      {
        "$id": "4161",
        "FileName": "when_sync_evalucation_survey_answer.cs",
        "Description": "should not sync answers if already synced",
        "WhenList": [
          "asked to sync answers"
        ],
        "ThenList": [
          "should return ok",
          "should not sync synced answer"
        ],
        "Children": []
      },
      {
        "$id": "4162",
        "FileName": "when_sync_evalucation_survey_answer.cs",
        "Description": "should not sync answers if survey not submitted",
        "WhenList": [
          "asked to sync answers"
        ],
        "ThenList": [
          "should return ok",
          "should not sync unsubmitted survey"
        ],
        "Children": []
      },
      {
        "$id": "4163",
        "FileName": "when_sync_evalucation_survey_answer.cs",
        "Description": "should not sync answers if survey not open",
        "WhenList": [
          "asked to sync answers"
        ],
        "ThenList": [
          "should return ok",
          "should not sync unsubmitted survey"
        ],
        "Children": []
      },
      {
        "$id": "4164",
        "FileName": "when_sync_evalucation_survey_answer.cs",
        "Description": "should sync answers if survey is less than 59 days",
        "WhenList": [
          "asked to sync answers"
        ],
        "ThenList": [
          "should return ok",
          "should sync unsubmitted survey"
        ],
        "Children": []
      },
      {
        "$id": "4165",
        "FileName": "when_sync_evalucation_survey_answer.cs",
        "Description": "should not sync answers if survey is over than 60 days",
        "WhenList": [
          "asked to sync answers"
        ],
        "ThenList": [
          "should return ok",
          "should not sync unsubmitted survey"
        ],
        "Children": []
      },
      {
        "$id": "4166",
        "FileName": "when_sync_evalucation_survey_answer.cs",
        "Description": "should return internal server error when sync faild",
        "WhenList": [
          "asked to sync answers"
        ],
        "ThenList": [
          "should throw exception",
          "should sync success answer"
        ],
        "Children": []
      },
      {
        "$id": "4167",
        "FileName": "when_sync_evalucation_survey_answer.cs",
        "Description": "should send email when evaluation overall question get 1 or 2 points",
        "WhenList": [
          "of sync answer"
        ],
        "ThenList": [
          "should return ok",
          "should send email to contacts in WR responsible office"
        ],
        "Children": []
      },
      {
        "$id": "4168",
        "FileName": "when_sync_evalucation_survey_answer.cs",
        "Description": "should send email without cc when evaluation get low score and coordinating office is same as responsible office",
        "WhenList": [
          "of sync answer"
        ],
        "ThenList": [
          "should return ok",
          "should send email to contacts in WR responsible office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4169",
    "FileName": "when_sync_templates.cs",
    "Description": "when sync templates",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4170",
        "FileName": "when_sync_templates.cs",
        "Description": "when sync active and non expired templates",
        "WhenList": [
          "sync api called"
        ],
        "ThenList": [
          "should return ok",
          "should sync templates",
          "should not sync inactive and expired templates"
        ],
        "Children": []
      },
      {
        "$id": "4171",
        "FileName": "when_sync_templates.cs",
        "Description": "when sync templates as proper practice type",
        "WhenList": [
          "sync api called"
        ],
        "ThenList": [
          "should return ok",
          "should only sync templates for valid practice type",
          "should sync tax templates",
          "should sync immi templates",
          "should sync social security templates"
        ],
        "Children": []
      },
      {
        "$id": "4172",
        "FileName": "when_sync_templates.cs",
        "Description": "when sync updated templates",
        "WhenList": [
          "sync api called"
        ],
        "ThenList": [
          "should return ok",
          "should only add newly added templates",
          "should update name for exist templates"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4173",
    "FileName": "when_update_evaluation_by_workrecord.cs",
    "Description": "when update evaluation by workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4174",
        "FileName": "when_update_evaluation_by_workrecord.cs",
        "Description": "when workrecord has enabled evaluation",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4175",
            "FileName": "when_update_evaluation_by_workrecord.cs",
            "Description": "when turn off evaluation",
            "WhenList": [
              "update evaluation for work record"
            ],
            "ThenList": [
              "should return ok",
              "should disable evaluation",
              "should not update evaluation template",
              "should record activity history for work record"
            ],
            "Children": []
          },
          {
            "$id": "4176",
            "FileName": "when_update_evaluation_by_workrecord.cs",
            "Description": "when change template for enabled evaluation",
            "WhenList": [
              "update evaluation for work record"
            ],
            "ThenList": [
              "should return ok",
              "should update evaluation template"
            ],
            "Children": []
          },
          {
            "$id": "4177",
            "FileName": "when_update_evaluation_by_workrecord.cs",
            "Description": "when evaluation not changed",
            "WhenList": [
              "update evaluation for work record but not change anything"
            ],
            "ThenList": [
              "should not record activity history for work record"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4178",
        "FileName": "when_update_evaluation_by_workrecord.cs",
        "Description": "when work record does not have evaluation",
        "WhenList": [
          "update evaluation for work reord"
        ],
        "ThenList": [
          "should return ok",
          "should create new service evaluation for work record",
          "should record activity history for work record"
        ],
        "Children": []
      },
      {
        "$id": "4179",
        "FileName": "when_update_evaluation_by_workrecord.cs",
        "Description": "when disabled on engagement level",
        "WhenList": [
          "turn on service evaluation on work record"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4180",
    "FileName": "when_update_evaluation_reminder_by_workrecord.cs",
    "Description": "when update evaluation reminder by workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4181",
        "FileName": "when_update_evaluation_reminder_by_workrecord.cs",
        "Description": "when work record and engagement have enabled evaluation",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4182",
            "FileName": "when_update_evaluation_reminder_by_workrecord.cs",
            "Description": "when turn off reminder for this evaluation",
            "WhenList": [
              "update evaluation for work record"
            ],
            "ThenList": [
              "should return ok",
              "should disable reminder",
              "should record activity history for work record"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4183",
        "FileName": "when_update_evaluation_reminder_by_workrecord.cs",
        "Description": "when engagement has disabled evaluation",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4184",
            "FileName": "when_update_evaluation_reminder_by_workrecord.cs",
            "Description": "when turn off reminder for this evaluation",
            "WhenList": [
              "update evaluation for work record"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4185",
        "FileName": "when_update_evaluation_reminder_by_workrecord.cs",
        "Description": "should forbidden when evaluation does not exist",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4186",
            "FileName": "when_update_evaluation_reminder_by_workrecord.cs",
            "Description": "when update reminder for this evaluation",
            "WhenList": [
              "update evaluation for work record"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4187",
        "FileName": "when_update_evaluation_reminder_by_workrecord.cs",
        "Description": "should forbidden when evaluation is disabled",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "4188",
    "FileName": "when_update_evaluation_settings_for_engagement.cs",
    "Description": "when update evaluation settings for engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4189",
        "FileName": "when_update_evaluation_settings_for_engagement.cs",
        "Description": "when engagement does not have evaluation settings",
        "WhenList": [
          "update evaluation for engagement"
        ],
        "ThenList": [
          "should return created",
          "should create evaluation settings for engagement successfully"
        ],
        "Children": []
      },
      {
        "$id": "4190",
        "FileName": "when_update_evaluation_settings_for_engagement.cs",
        "Description": "when engagement has evaluation settings",
        "WhenList": [
          "update evaluation for engagement"
        ],
        "ThenList": [
          "should return ok",
          "should update evaluation settings for engagement successfully"
        ],
        "Children": []
      },
      {
        "$id": "4191",
        "FileName": "when_update_evaluation_settings_for_engagement.cs",
        "Description": "when engagement has evaluation settings enabled",
        "WhenList": [
          "update evaluation for engagement"
        ],
        "ThenList": [
          "should turn off ongoing work records evaluations",
          "should turn off all work records evaluations reminder",
          "should not affect work records with service evaluation invitation sent"
        ],
        "Children": []
      },
      {
        "$id": "4192",
        "FileName": "when_update_evaluation_settings_for_engagement.cs",
        "Description": "when engagement does not exist",
        "WhenList": [
          "update evaluation for engagement"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4193",
    "FileName": "when_update_service_evaluation_settings_for_engagement_with_different_roles.cs",
    "Description": "when update service evaluation settings for engagement with different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4194",
        "FileName": "when_update_service_evaluation_settings_for_engagement_with_different_roles.cs",
        "Description": "when update with engagement admin",
        "WhenList": [
          "update evaluation for engagement"
        ],
        "ThenList": [
          "should return ok",
          "should update evaluation settings for engagement successfully"
        ],
        "Children": []
      },
      {
        "$id": "4195",
        "FileName": "when_update_service_evaluation_settings_for_engagement_with_different_roles.cs",
        "Description": "when update with normal staff",
        "WhenList": [
          "update evaluation for engagement"
        ],
        "ThenList": [
          "should return forbidden",
          "should not update"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4196",
    "FileName": "the_httpMethodOverrideModule_overrides_method_according_to_custom_header.cs",
    "Description": "the http method override module overrides method according to custom header",
    "WhenList": [
      "the module replaces the http method"
    ],
    "ThenList": [
      "should be delete instead of post"
    ],
    "Children": []
  },
  {
    "$id": "4197",
    "FileName": "when_get_sourced_assginee.cs",
    "Description": "when get sourced assginee",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 200 ok",
      "should has correct response"
    ],
    "Children": []
  },
  {
    "$id": "4198",
    "FileName": "when_get_sourced_briefing_work_record.cs",
    "Description": "when get sourced briefing work record",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should has correct response"
    ],
    "Children": []
  },
  {
    "$id": "4199",
    "FileName": "when_get_sourced_engagement.cs",
    "Description": "when get sourced engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4200",
        "FileName": "when_get_sourced_engagement.cs",
        "Description": "should get base info",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200 ok",
          "should has correct response"
        ],
        "Children": []
      },
      {
        "$id": "4201",
        "FileName": "when_get_sourced_engagement.cs",
        "Description": "should get acl info",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200 ok",
          "should has correct response"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4202",
    "FileName": "when_get_sourced_immigration_work_record.cs",
    "Description": "when get sourced immigration work record",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should get null year"
    ],
    "Children": []
  },
  {
    "$id": "4203",
    "FileName": "when_get_sourced_staff_from_eventstore.cs",
    "Description": "when get sourced staff from eventstore",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4204",
        "FileName": "when_get_sourced_staff_from_eventstore.cs",
        "Description": "should get latest staff",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200 ok",
          "should has correct response"
        ],
        "Children": []
      },
      {
        "$id": "4205",
        "FileName": "when_get_sourced_staff_from_eventstore.cs",
        "Description": "should get staff at specific version",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200 ok",
          "should has correct response"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4206",
    "FileName": "when_get_sourced_tax_work_record.cs",
    "Description": "when get sourced tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4207",
        "FileName": "when_get_sourced_tax_work_record.cs",
        "Description": "get sourced tax work record",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200 ok",
          "should has correct response"
        ],
        "Children": []
      },
      {
        "$id": "4208",
        "FileName": "when_get_sourced_tax_work_record.cs",
        "Description": "get sourced tax work record with checklist items",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200 ok",
          "should has checklist items"
        ],
        "Children": []
      },
      {
        "$id": "4209",
        "FileName": "when_get_sourced_tax_work_record.cs",
        "Description": "get sourced tax work record with responsible office",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200 ok",
          "should has correct response"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4210",
    "FileName": "when_get_sourced_team.cs",
    "Description": "when get sourced team",
    "WhenList": [
      "get resource"
    ],
    "ThenList": [
      "should return ok",
      "should return correct content"
    ],
    "Children": []
  },
  {
    "$id": "4211",
    "FileName": "when_country_role_approve_pending_staffs.cs",
    "Description": "when country role approve pending staffs",
    "WhenList": [
      "approve pending general staff"
    ],
    "ThenList": [
      "should be forbidden"
    ],
    "Children": []
  },
  {
    "$id": "4212",
    "FileName": "when_country_role_reject_pending_staffs.cs",
    "Description": "when country role reject pending staffs",
    "WhenList": [
      "reject pending general staff"
    ],
    "ThenList": [
      "should be forbidden"
    ],
    "Children": []
  },
  {
    "$id": "4213",
    "FileName": "when_general_role_approve_pending_staffs.cs",
    "Description": "when general role approve pending staffs",
    "WhenList": [
      "approve pending general staff"
    ],
    "ThenList": [
      "should be forbidden"
    ],
    "Children": []
  },
  {
    "$id": "4214",
    "FileName": "when_global_admin_approve_pending_staffs.cs",
    "Description": "when global admin approve pending staffs",
    "WhenList": [
      "approve pending general staff"
    ],
    "ThenList": [
      "should be forbidden"
    ],
    "Children": []
  },
  {
    "$id": "4215",
    "FileName": "when_office_role_approve_active_staff.cs",
    "Description": "when office role approve active staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4216",
        "FileName": "when_office_role_approve_active_staff.cs",
        "Description": "when user has pending practice type",
        "WhenList": [
          "when active user has pending practice type"
        ],
        "ThenList": [
          "should be no content"
        ],
        "Children": []
      },
      {
        "$id": "4217",
        "FileName": "when_office_role_approve_active_staff.cs",
        "Description": "when user without pending practice type",
        "WhenList": [
          "when active user has pending practice type"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4218",
    "FileName": "when_office_role_approve_pending_staff.cs",
    "Description": "when office role approve pending staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4219",
        "FileName": "when_office_role_approve_pending_staff.cs",
        "Description": "when approve general user",
        "WhenList": [
          "when pending user is approved"
        ],
        "ThenList": [
          "should return 204 no content",
          "should only update status access and practice types",
          "should generate event"
        ],
        "Children": []
      },
      {
        "$id": "4220",
        "FileName": "when_office_role_approve_pending_staff.cs",
        "Description": "when approve country level user",
        "WhenList": [
          "given"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4221",
    "FileName": "when_office_role_approve_pending_staffs.cs",
    "Description": "when office role approve pending staffs",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4222",
        "FileName": "when_office_role_approve_pending_staffs.cs",
        "Description": "when approve pending staffs from same office",
        "WhenList": [
          "approve pending general staff"
        ],
        "ThenList": [
          "should be no content"
        ],
        "Children": []
      },
      {
        "$id": "4223",
        "FileName": "when_office_role_approve_pending_staffs.cs",
        "Description": "when approve pending staffs from other office",
        "WhenList": [
          "approve pending general staff"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4224",
    "FileName": "when_office_role_reject_pending_staffs.cs",
    "Description": "when office role reject pending staffs",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4225",
        "FileName": "when_office_role_reject_pending_staffs.cs",
        "Description": "when reject pending staffs from same office",
        "WhenList": [
          "reject pending general staff"
        ],
        "ThenList": [
          "should be no content"
        ],
        "Children": []
      },
      {
        "$id": "4226",
        "FileName": "when_office_role_reject_pending_staffs.cs",
        "Description": "when reject pending staffs from other office",
        "WhenList": [
          "reject pending general staff"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4227",
        "FileName": "when_office_role_reject_pending_staffs.cs",
        "Description": "when reject active staffs",
        "WhenList": [
          "reject pending general staff"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4228",
    "FileName": "when_country_role_approve_and_reject_staff_practice_type.cs",
    "Description": "when country role approve and reject staff practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4229",
        "FileName": "when_country_role_approve_and_reject_staff_practice_type.cs",
        "Description": "when approve other country staff",
        "WhenList": [
          "when aprove and reject practice type of pending user"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4230",
        "FileName": "when_country_role_approve_and_reject_staff_practice_type.cs",
        "Description": "when approve my country staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4231",
            "FileName": "when_country_role_approve_and_reject_staff_practice_type.cs",
            "Description": "when approve tax practice type",
            "WhenList": [
              "when aprove and reject practice type of pending user"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "4232",
            "FileName": "when_country_role_approve_and_reject_staff_practice_type.cs",
            "Description": "when reject immigration practice type",
            "WhenList": [
              "when aprove and reject practice type of pending user"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4233",
    "FileName": "when_general_role_approve_and_reject_staff_practice_type.cs",
    "Description": "when general role approve and reject staff practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4234",
        "FileName": "when_general_role_approve_and_reject_staff_practice_type.cs",
        "Description": "when approve general user",
        "WhenList": [
          "when aprove and reject practice type of pending user"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4235",
    "FileName": "when_global_admin_approve_and_reject_staff_practice_type.cs",
    "Description": "when global admin approve and reject staff practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4236",
        "FileName": "when_global_admin_approve_and_reject_staff_practice_type.cs",
        "Description": "when reject all practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4237",
            "FileName": "when_global_admin_approve_and_reject_staff_practice_type.cs",
            "Description": "when staff with pending staff email",
            "WhenList": [
              "when reject practice type of pending user"
            ],
            "ThenList": [
              "should return 204 no content"
            ],
            "Children": []
          },
          {
            "$id": "4238",
            "FileName": "when_global_admin_approve_and_reject_staff_practice_type.cs",
            "Description": "when staff without pending staff email",
            "WhenList": [
              "when reject practice type of pending user"
            ],
            "ThenList": [
              "should return 204 no content"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4239",
        "FileName": "when_global_admin_approve_and_reject_staff_practice_type.cs",
        "Description": "when practice type is not pending",
        "WhenList": [
          "when reject practice type of pending user"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4240",
    "FileName": "when_immigration_approver_approve_and_reject_staff_practice_type.cs",
    "Description": "when immigration approver approve and reject staff practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4241",
        "FileName": "when_immigration_approver_approve_and_reject_staff_practice_type.cs",
        "Description": "when immigration approver with immigration practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4242",
            "FileName": "when_immigration_approver_approve_and_reject_staff_practice_type.cs",
            "Description": "when reject immigration",
            "WhenList": [
              "when aprove and reject practice type of pending user"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "4243",
            "FileName": "when_immigration_approver_approve_and_reject_staff_practice_type.cs",
            "Description": "when approve tax",
            "WhenList": [
              "when aprove and reject practice type of pending user"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4244",
        "FileName": "when_immigration_approver_approve_and_reject_staff_practice_type.cs",
        "Description": "when immigration approver without immigration practice type",
        "WhenList": [
          "when aprove and reject practice type of pending user"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4245",
    "FileName": "when_office_role_approve_and_reject_staff_practice_type.cs",
    "Description": "when office role approve and reject staff practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4246",
        "FileName": "when_office_role_approve_and_reject_staff_practice_type.cs",
        "Description": "when tax and social security user approve tax practice type",
        "WhenList": [
          "when aprove and reject practice type of pending user"
        ],
        "ThenList": [
          "should return ok",
          "should only update status access and practice types",
          "should only get pending practice types",
          "should generate event"
        ],
        "Children": []
      },
      {
        "$id": "4247",
        "FileName": "when_office_role_approve_and_reject_staff_practice_type.cs",
        "Description": "when tax and social security user approve technology practice type",
        "WhenList": [
          "when aprove and reject practice type of pending user"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4248",
        "FileName": "when_office_role_approve_and_reject_staff_practice_type.cs",
        "Description": "when tax user reject social security practice type",
        "WhenList": [
          "when aprove and reject practice type of pending user"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4249",
    "FileName": "when_technology_approver_approve_and_reject_staff_practice_type.cs",
    "Description": "when technology approver approve and reject staff practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4250",
        "FileName": "when_technology_approver_approve_and_reject_staff_practice_type.cs",
        "Description": "when technology approver with technology practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4251",
            "FileName": "when_technology_approver_approve_and_reject_staff_practice_type.cs",
            "Description": "when reject technology",
            "WhenList": [
              "when aprove and reject practice type of pending user"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "4252",
            "FileName": "when_technology_approver_approve_and_reject_staff_practice_type.cs",
            "Description": "when reject immigration",
            "WhenList": [
              "when aprove and reject practice type of pending user"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "4253",
            "FileName": "when_technology_approver_approve_and_reject_staff_practice_type.cs",
            "Description": "when approve tax",
            "WhenList": [
              "when aprove and reject practice type of pending user"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4254",
        "FileName": "when_technology_approver_approve_and_reject_staff_practice_type.cs",
        "Description": "when technology approver without technology practice type",
        "WhenList": [
          "when aprove and reject practice type of pending user"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4255",
    "FileName": "when_approve_pending_staff.cs",
    "Description": "when approve pending staff",
    "WhenList": [
      "when pending user is approved"
    ],
    "ThenList": [
      "should generate staff join event"
    ],
    "Children": []
  },
  {
    "$id": "4256",
    "FileName": "when_approve_staff_by_practice_type.cs",
    "Description": "when approve staff by practice type",
    "WhenList": [
      "when pending user is approved"
    ],
    "ThenList": [
      "should send email to new staff when apply is dealt",
      "should generate staff joined event correctly"
    ],
    "Children": []
  },
  {
    "$id": "4257",
    "FileName": "when_batch_create_staff.cs",
    "Description": "when batch create staff",
    "WhenList": [
      "create staff"
    ],
    "ThenList": [
      "should return 200 ok",
      "should raise staff created event"
    ],
    "Children": []
  },
  {
    "$id": "4258",
    "FileName": "when_change_staff_profile.cs",
    "Description": "when change staff profile",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4259",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when change staff first name",
        "WhenList": [
          "change staff name"
        ],
        "ThenList": [
          "should raise staff profile changed event"
        ],
        "Children": []
      },
      {
        "$id": "4260",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when change staff last name",
        "WhenList": [
          "change staff name"
        ],
        "ThenList": [
          "should raise staff profile changed event"
        ],
        "Children": []
      },
      {
        "$id": "4261",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when save staff profile without any change",
        "WhenList": [
          "save staff profile without any change"
        ],
        "ThenList": [
          "should not raise staff profile changed event"
        ],
        "Children": []
      },
      {
        "$id": "4262",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when save staff profile with change other field",
        "WhenList": [
          "save staff profile"
        ],
        "ThenList": [
          "should not raise staff profile changed event"
        ],
        "Children": []
      },
      {
        "$id": "4263",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when change staff email",
        "WhenList": [
          "change staff email"
        ],
        "ThenList": [
          "should raise staff profile changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4264",
    "FileName": "when_create_active_staff.cs",
    "Description": "when create active staff",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should raise staff created event and joined practice event"
    ],
    "Children": []
  },
  {
    "$id": "4265",
    "FileName": "when_create_staff.cs",
    "Description": "when create staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4266",
        "FileName": "when_create_staff.cs",
        "Description": "when create staff with valid request",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 201 created",
          "should create staff",
          "should raise staff created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4267",
    "FileName": "when_inactivate_staff.cs",
    "Description": "when inactivate staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4268",
        "FileName": "when_inactivate_staff.cs",
        "Description": "should inactivate staff and log",
        "WhenList": [
          "inactivate staff"
        ],
        "ThenList": [
          "should return no content",
          "event meta data should has modifier info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4269",
    "FileName": "when_reassign_checklist_reponsibility.cs",
    "Description": "when reassign checklist reponsibility",
    "WhenList": [
      "reassign checklist responsibility"
    ],
    "ThenList": [
      "should be ok",
      "should generate checklist reponsibility changed event"
    ],
    "Children": []
  },
  {
    "$id": "4270",
    "FileName": "when_reassign_task_reponsibility.cs",
    "Description": "when reassign task reponsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4271",
        "FileName": "when_reassign_task_reponsibility.cs",
        "Description": "should generate task reponsibility change event",
        "WhenList": [
          "reassign task reponsibility"
        ],
        "ThenList": [
          "should return 200",
          "should generate task assignment event changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4272",
    "FileName": "when_register_staff.cs",
    "Description": "when register staff",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should raise staff created event"
    ],
    "Children": []
  },
  {
    "$id": "4273",
    "FileName": "when_update_staff_office.cs",
    "Description": "when update staff office",
    "WhenList": [
      "changing staff to leeds office"
    ],
    "ThenList": [
      "should raise staff office changed event to msmq"
    ],
    "Children": []
  },
  {
    "$id": "4274",
    "FileName": "when_update_staff_practice_types.cs",
    "Description": "when update staff practice types",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4275",
        "FileName": "when_update_staff_practice_types.cs",
        "Description": "when practice types changed",
        "WhenList": [
          "update staff practice types to immigration"
        ],
        "ThenList": [
          "should raise staff practice types changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "4276",
        "FileName": "when_update_staff_practice_types.cs",
        "Description": "when practice types not changed",
        "WhenList": [
          "update staff practice types to immigration"
        ],
        "ThenList": [
          "should not raise staff practice types changed event to eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4277",
    "FileName": "when_approve_pending_staff.cs",
    "Description": "when approve pending staff",
    "WhenList": [
      "when pending user is approved"
    ],
    "ThenList": [
      "should generate staff join event"
    ],
    "Children": []
  },
  {
    "$id": "4278",
    "FileName": "when_approve_staff_by_practice_type.cs",
    "Description": "when approve staff by practice type",
    "WhenList": [
      "when pending user is approved"
    ],
    "ThenList": [
      "should send email to new staff when apply is dealt",
      "should generate staff joined event correctly"
    ],
    "Children": []
  },
  {
    "$id": "4279",
    "FileName": "when_batch_create_staff.cs",
    "Description": "when batch create staff",
    "WhenList": [
      "create staff"
    ],
    "ThenList": [
      "should return 200 ok",
      "should raise staff created event"
    ],
    "Children": []
  },
  {
    "$id": "4280",
    "FileName": "when_change_staff_profile.cs",
    "Description": "when change staff profile",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4281",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when change staff first name",
        "WhenList": [
          "change staff name"
        ],
        "ThenList": [
          "should raise staff profile changed event"
        ],
        "Children": []
      },
      {
        "$id": "4282",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when change staff last name",
        "WhenList": [
          "change staff name"
        ],
        "ThenList": [
          "should raise staff profile changed event"
        ],
        "Children": []
      },
      {
        "$id": "4283",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when save staff profile without any change",
        "WhenList": [
          "save staff profile without any change"
        ],
        "ThenList": [
          "should not raise staff profile changed event"
        ],
        "Children": []
      },
      {
        "$id": "4284",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when save staff profile with change other field",
        "WhenList": [
          "save staff profile"
        ],
        "ThenList": [
          "should not raise staff profile changed event"
        ],
        "Children": []
      },
      {
        "$id": "4285",
        "FileName": "when_change_staff_profile.cs",
        "Description": "when change staff email",
        "WhenList": [
          "change staff email"
        ],
        "ThenList": [
          "should raise staff profile changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4286",
    "FileName": "when_create_active_staff.cs",
    "Description": "when create active staff",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should raise staff created event and joined practice event"
    ],
    "Children": []
  },
  {
    "$id": "4287",
    "FileName": "when_create_staff.cs",
    "Description": "when create staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4288",
        "FileName": "when_create_staff.cs",
        "Description": "when create staff with valid request",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 201 created",
          "should create staff",
          "should raise staff created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4289",
    "FileName": "when_inactivate_staff.cs",
    "Description": "when inactivate staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4290",
        "FileName": "when_inactivate_staff.cs",
        "Description": "should inactivate staff and log",
        "WhenList": [
          "inactivate staff"
        ],
        "ThenList": [
          "should return no content",
          "should raise event into eventstore",
          "event meta data should has modifier info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4291",
    "FileName": "when_reassign_checklist_reponsibility.cs",
    "Description": "when reassign checklist reponsibility",
    "WhenList": [
      "reassign checklist responsibility"
    ],
    "ThenList": [
      "should be ok",
      "should generate checklist reponsibility changed event"
    ],
    "Children": []
  },
  {
    "$id": "4292",
    "FileName": "when_reassign_task_reponsibility.cs",
    "Description": "when reassign task reponsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4293",
        "FileName": "when_reassign_task_reponsibility.cs",
        "Description": "should generate task reponsibility change event",
        "WhenList": [
          "reassign task reponsibility"
        ],
        "ThenList": [
          "should return 200",
          "should generate task assignment event changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4294",
    "FileName": "when_register_staff.cs",
    "Description": "when register staff",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should raise staff created event"
    ],
    "Children": []
  },
  {
    "$id": "4295",
    "FileName": "when_update_staff_office.cs",
    "Description": "when update staff office",
    "WhenList": [
      "changing staff to leeds office"
    ],
    "ThenList": [
      "should raise staff office changed event to eventstore"
    ],
    "Children": []
  },
  {
    "$id": "4296",
    "FileName": "when_update_staff_practice_types.cs",
    "Description": "when update staff practice types",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4297",
        "FileName": "when_update_staff_practice_types.cs",
        "Description": "when practice types changed",
        "WhenList": [
          "update staff practice types to immigration"
        ],
        "ThenList": [
          "should raise staff practice types changed event to eventstore"
        ],
        "Children": []
      },
      {
        "$id": "4298",
        "FileName": "when_update_staff_practice_types.cs",
        "Description": "when practice types not changed",
        "WhenList": [
          "update staff practice types to immigration"
        ],
        "ThenList": [
          "should not raise staff practice types changed event to eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4299",
    "FileName": "when_get_assignee_general_contact_handover_works_of_staff.cs",
    "Description": "when get assignee general contact handover works of staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4300",
        "FileName": "when_get_assignee_general_contact_handover_works_of_staff.cs",
        "Description": "when is only general contact for one assignee",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement administrator handover"
        ],
        "Children": []
      },
      {
        "$id": "4301",
        "FileName": "when_get_assignee_general_contact_handover_works_of_staff.cs",
        "Description": "when is not only general contact for one assignee",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement administrator handover"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4302",
    "FileName": "when_get_briefing_coordinator_handover_works_of_staff.cs",
    "Description": "when get briefing coordinator handover works of staff",
    "WhenList": [
      "get handover"
    ],
    "ThenList": [
      "should return ok",
      "should return briefing coordinator handover"
    ],
    "Children": []
  },
  {
    "$id": "4303",
    "FileName": "when_get_engagement_admin_handover_works_of_staff.cs",
    "Description": "when get engagement admin handover works of staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4304",
        "FileName": "when_get_engagement_admin_handover_works_of_staff.cs",
        "Description": "when is not administrator",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement administrator handover"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4305",
    "FileName": "when_get_engagement_office_primary_contacts_handover_works_of_staff.cs",
    "Description": "when get engagement office primary contacts handover works of staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4306",
        "FileName": "when_get_engagement_office_primary_contacts_handover_works_of_staff.cs",
        "Description": "when is primary contact for one engagement coordinating office",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement primary contact handover"
        ],
        "Children": []
      },
      {
        "$id": "4307",
        "FileName": "when_get_engagement_office_primary_contacts_handover_works_of_staff.cs",
        "Description": "when is primary contact for one engagement work office",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement primary contact handover"
        ],
        "Children": []
      },
      {
        "$id": "4308",
        "FileName": "when_get_engagement_office_primary_contacts_handover_works_of_staff.cs",
        "Description": "when is primary contact for one engagement delegated office",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement primary contact handover"
        ],
        "Children": []
      },
      {
        "$id": "4309",
        "FileName": "when_get_engagement_office_primary_contacts_handover_works_of_staff.cs",
        "Description": "when is primary contact for one engagement coordinate office",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement primary contact handover"
        ],
        "Children": []
      },
      {
        "$id": "4310",
        "FileName": "when_get_engagement_office_primary_contacts_handover_works_of_staff.cs",
        "Description": "when is primary contact for multiple engagements responsible office",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return engagement primary contact handover"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4311",
    "FileName": "when_get_handover_by_different_access_roles.cs",
    "Description": "when get handover by different access roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4312",
        "FileName": "when_get_handover_by_different_access_roles.cs",
        "Description": "when general staff get handover work of other staff",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4313",
        "FileName": "when_get_handover_by_different_access_roles.cs",
        "Description": "when general staff get handover work of himself",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4314",
        "FileName": "when_get_handover_by_different_access_roles.cs",
        "Description": "when country level staff get handover work of staff from same country",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4315",
        "FileName": "when_get_handover_by_different_access_roles.cs",
        "Description": "when country level staff get handover work of staff from another country",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4316",
        "FileName": "when_get_handover_by_different_access_roles.cs",
        "Description": "when global admin get handover work",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4317",
        "FileName": "when_get_handover_by_different_access_roles.cs",
        "Description": "when office level staff get handover work of staff belong to his office",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4318",
        "FileName": "when_get_handover_by_different_access_roles.cs",
        "Description": "when office level staff get handover work of staff not belong to his office",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4319",
    "FileName": "when_get_questionnaire_contact_handover_works_of_staff.cs",
    "Description": "when get questionnaire contact handover works of staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4320",
        "FileName": "when_get_questionnaire_contact_handover_works_of_staff.cs",
        "Description": "when kayla has tax workrecord of different countries and years",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return questionnaire contact handover for latest work record of each country"
        ],
        "Children": []
      },
      {
        "$id": "4321",
        "FileName": "when_get_questionnaire_contact_handover_works_of_staff.cs",
        "Description": "when is questionnaire contact for deleted kayla",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return questionnaire contact handover"
        ],
        "Children": []
      },
      {
        "$id": "4322",
        "FileName": "when_get_questionnaire_contact_handover_works_of_staff.cs",
        "Description": "when is questionnaire contact for mulitple kaylas each with workrecords",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return latest questionnaire contact handover"
        ],
        "Children": []
      },
      {
        "$id": "4323",
        "FileName": "when_get_questionnaire_contact_handover_works_of_staff.cs",
        "Description": "when kayla has immigartion workrecord",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should not return questionnaire contact handover for immigration"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4324",
    "FileName": "when_get_staff_current_works_records_count.cs",
    "Description": "when get staff current works records count",
    "WhenList": [
      "get handover"
    ],
    "ThenList": [
      "should return ok",
      "should calc sofia current work counts"
    ],
    "Children": []
  },
  {
    "$id": "4325",
    "FileName": "when_get_team_admin_handover_works_of_staff.cs",
    "Description": "when get team admin handover works of staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4326",
        "FileName": "when_get_team_admin_handover_works_of_staff.cs",
        "Description": "when is the only administrator for one team",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return team administrator handover"
        ],
        "Children": []
      },
      {
        "$id": "4327",
        "FileName": "when_get_team_admin_handover_works_of_staff.cs",
        "Description": "when is not administrator",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should not return team administrator handover"
        ],
        "Children": []
      },
      {
        "$id": "4328",
        "FileName": "when_get_team_admin_handover_works_of_staff.cs",
        "Description": "when is not only administrators of a team",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should not return team administrator handover"
        ],
        "Children": []
      },
      {
        "$id": "4329",
        "FileName": "when_get_team_admin_handover_works_of_staff.cs",
        "Description": "when is the only administrator of multiple teams",
        "WhenList": [
          "get handover"
        ],
        "ThenList": [
          "should return ok",
          "should return team administrator handover"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4330",
    "FileName": "when_handover_assignee_general_contact_staff_work.cs",
    "Description": "when handover assignee general contact staff work",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4331",
        "FileName": "when_handover_assignee_general_contact_staff_work.cs",
        "Description": "when handover for normal assignee",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to grace"
        ],
        "Children": []
      },
      {
        "$id": "4332",
        "FileName": "when_handover_assignee_general_contact_staff_work.cs",
        "Description": "when handover for restricted assignee with restricted engagement",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assigne to grace"
        ],
        "Children": []
      },
      {
        "$id": "4333",
        "FileName": "when_handover_assignee_general_contact_staff_work.cs",
        "Description": "when reassigned staff already on acl list",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assigne to grace"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4334",
    "FileName": "when_handover_enagement_admin_staff_work.cs",
    "Description": "when handover enagement admin staff work",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 201",
      "should assign to grace"
    ],
    "Children": []
  },
  {
    "$id": "4335",
    "FileName": "when_handover_enagement_primary_contact_staff_work.cs",
    "Description": "when handover enagement primary contact staff work",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4336",
        "FileName": "when_handover_enagement_primary_contact_staff_work.cs",
        "Description": "should handover engagement primary contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return created",
          "should assign to new staff",
          "should raise engagment coordinating office primary contact changed event"
        ],
        "Children": []
      },
      {
        "$id": "4337",
        "FileName": "when_handover_enagement_primary_contact_staff_work.cs",
        "Description": "should handover engagement work office contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to new staff",
          "should raise engagment working office primary contact changed event"
        ],
        "Children": []
      },
      {
        "$id": "4338",
        "FileName": "when_handover_enagement_primary_contact_staff_work.cs",
        "Description": "should handover engagement delegated office contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to new staff",
          "should raise engagment working office primary contact changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4339",
    "FileName": "when_handover_questionnaire_contact_staff_work.cs",
    "Description": "when handover questionnaire contact staff work",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4340",
        "FileName": "when_handover_questionnaire_contact_staff_work.cs",
        "Description": "when handover questionnaire contact for normal assignee",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to grace"
        ],
        "Children": []
      },
      {
        "$id": "4341",
        "FileName": "when_handover_questionnaire_contact_staff_work.cs",
        "Description": "when handover questionnaire contact for restricted assignee",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return 201",
          "should assign to grace and add grace to acl"
        ],
        "Children": []
      },
      {
        "$id": "4342",
        "FileName": "when_handover_questionnaire_contact_staff_work.cs",
        "Description": "when handover questionnaire contact for restricted assignee in restricted engagement",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return 201",
          "should assign to grace and add grace to acl"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4343",
    "FileName": "when_handover_staff_briefing_work_record_coordinator_work.cs",
    "Description": "when handover staff briefing work record coordinator work",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4344",
        "FileName": "when_handover_staff_briefing_work_record_coordinator_work.cs",
        "Description": "when handover for normal assignee",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to grace"
        ],
        "Children": []
      },
      {
        "$id": "4345",
        "FileName": "when_handover_staff_briefing_work_record_coordinator_work.cs",
        "Description": "when handover with restricted engagement to staff on acl",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to grace and grace can view briefing work record"
        ],
        "Children": []
      },
      {
        "$id": "4346",
        "FileName": "when_handover_staff_briefing_work_record_coordinator_work.cs",
        "Description": "when handover with restricted engagement to staff not on acl",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to grace and grace can view briefing work record"
        ],
        "Children": []
      },
      {
        "$id": "4347",
        "FileName": "when_handover_staff_briefing_work_record_coordinator_work.cs",
        "Description": "when handover with restricted assignee to staff on acl",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to grace and grace can view briefing work record"
        ],
        "Children": []
      },
      {
        "$id": "4348",
        "FileName": "when_handover_staff_briefing_work_record_coordinator_work.cs",
        "Description": "when handover with restricted assignee to staff not on acl",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to grace and grace can view briefing work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4349",
    "FileName": "when_handover_team_admin_staff_work.cs",
    "Description": "when handover team admin staff work",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 201",
      "should assign to grace"
    ],
    "Children": []
  },
  {
    "$id": "4350",
    "FileName": "when_inactivate_staff_by_general_level_role.cs",
    "Description": "when inactivate staff by general level role",
    "WhenList": [
      "inactivate staff"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "4351",
    "FileName": "when_inactivate_staff_by_office_level_role.cs",
    "Description": "when inactivate staff by office level role",
    "WhenList": [
      "inactivate staff"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "4352",
    "FileName": "when_inactivate_staff_should_clear_staff_related_responsibility.cs",
    "Description": "when inactivate staff should clear staff related responsibility",
    "WhenList": [
      "inactivate staff"
    ],
    "ThenList": [
      "should return no content",
      "should clear all assignee acl",
      "should clear all engagement acl",
      "should clear staff todo subscription responsibitity",
      "should remove sofia from teams",
      "should remove team with 1 admin and clear work record team"
    ],
    "Children": []
  },
  {
    "$id": "4353",
    "FileName": "when_inactivate_staff_should_inactivate_staff_and_log.cs",
    "Description": "when inactivate staff should inactivate staff and log",
    "WhenList": [
      "inactivate staff"
    ],
    "ThenList": [
      "should return no content",
      "should log inacitve history",
      "should not get inactive sofia"
    ],
    "Children": []
  },
  {
    "$id": "4354",
    "FileName": "when_inactivate_staff_should_inactivate_staff_as_secondary_contact.cs",
    "Description": "when inactivate staff should inactivate staff as secondary contact",
    "WhenList": [
      "inactivate staff"
    ],
    "ThenList": [
      "should return no content",
      "should log inacitve history",
      "should not get inactive sofia"
    ],
    "Children": []
  },
  {
    "$id": "4355",
    "FileName": "when_inactivate_staff_should_remove_from_efile_group.cs",
    "Description": "when inactivate staff should remove from efile group",
    "WhenList": [
      "inactivate staff"
    ],
    "ThenList": [
      "should return no content",
      "should remove efile group member"
    ],
    "Children": []
  },
  {
    "$id": "4356",
    "FileName": "when_inactivate_staff_should_remove_personal_tasks.cs",
    "Description": "when inactivate staff should remove personal tasks",
    "WhenList": [
      "inactivate staff"
    ],
    "ThenList": [
      "should return created"
    ],
    "Children": []
  },
  {
    "$id": "4357",
    "FileName": "when_inactivate_staff_who_is_admin_and_memeber_as_well_in_team.cs",
    "Description": "when inactivate staff who is admin and memeber as well in team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4358",
        "FileName": "when_inactivate_staff_who_is_admin_and_memeber_as_well_in_team.cs",
        "Description": "when staff is the only person in the team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "team should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "4359",
        "FileName": "when_inactivate_staff_who_is_admin_and_memeber_as_well_in_team.cs",
        "Description": "when there is one more memeber in the team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should remove staff from both admin and member of the team"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4360",
    "FileName": "when_inactivate_staff_who_is_manual_auth_admin.cs",
    "Description": "when inactivate staff who is manual auth admin",
    "WhenList": [
      "inactivate staff"
    ],
    "ThenList": [
      "should return no content",
      "should remove manual auth admin"
    ],
    "Children": []
  },
  {
    "$id": "4361",
    "FileName": "when_inactivate_staff_who_is_one_of_the_admins_in_team.cs",
    "Description": "when inactivate staff who is one of the admins in team",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "staff should be removed from the team"
    ],
    "Children": []
  },
  {
    "$id": "4362",
    "FileName": "when_inactivate_staff_who_is_one_of_the_members_in_team.cs",
    "Description": "when inactivate staff who is one of the members in team",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "staff should be removed from the team"
    ],
    "Children": []
  },
  {
    "$id": "4363",
    "FileName": "when_inactivate_staff_who_is_the_only_admin_and_there_are_members_in_team.cs",
    "Description": "when inactivate staff who is the only admin and there are members in team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4364",
        "FileName": "when_inactivate_staff_who_is_the_only_admin_and_there_are_members_in_team.cs",
        "Description": "has candidate admin in the same office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "staff should be replaced by an office level role who is in the same office and whose practice types cover practice types of inactivated staff"
        ],
        "Children": []
      },
      {
        "$id": "4365",
        "FileName": "when_inactivate_staff_who_is_the_only_admin_and_there_are_members_in_team.cs",
        "Description": "has candidate admin in other office of the same country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "staff should be replaced by an office level role who is in other office of the same country and whose practice types cover practice types of inactivated staff"
        ],
        "Children": []
      },
      {
        "$id": "4366",
        "FileName": "when_inactivate_staff_who_is_the_only_admin_and_there_are_members_in_team.cs",
        "Description": "has candidate admin in the same country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "staff should be replaced by a country level role who is in the same country with inactivated staff"
        ],
        "Children": []
      },
      {
        "$id": "4367",
        "FileName": "when_inactivate_staff_who_is_the_only_admin_and_there_are_members_in_team.cs",
        "Description": "has candidate admin from global admins",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "staff should be replaced by a global admin"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4368",
    "FileName": "when_inactivate_staff_who_is_the_only_staff_in_team.cs",
    "Description": "when inactivate staff who is the only staff in team",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "team should be removed"
    ],
    "Children": []
  },
  {
    "$id": "4369",
    "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff.cs",
    "Description": "when get assignee briefing coordinator responsiblity for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4370",
        "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff.cs",
        "Description": "normal briefing coordinator",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return staff briefing coordinator responsiblities"
        ],
        "Children": []
      },
      {
        "$id": "4371",
        "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff.cs",
        "Description": "when get briefing coordinator role for work record with issues",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should only return staff briefing coordinator of no issue work records"
        ],
        "Children": []
      },
      {
        "$id": "4372",
        "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff.cs",
        "Description": "when get briefing coordinator role for work records with milestone done",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should only return staff briefing coordinator of not done work records"
        ],
        "Children": []
      },
      {
        "$id": "4373",
        "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff.cs",
        "Description": "briefing coordinator from deleted assignee",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return staff briefing coordinator responsiblities"
        ],
        "Children": []
      },
      {
        "$id": "4374",
        "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff.cs",
        "Description": "when get briefing corrdinator role from work record of inactive engagement",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return no staff briefing coordinator responsiblities"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4375",
    "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff_and_practice_type.cs",
    "Description": "when get assignee briefing coordinator responsiblity for staff and practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4376",
        "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff_and_practice_type.cs",
        "Description": "normal briefing coordinator",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4377",
            "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff_and_practice_type.cs",
            "Description": "should get responsibility successfully",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should return staff briefing coordinator responsiblities"
            ],
            "Children": []
          },
          {
            "$id": "4378",
            "FileName": "when_get_assignee_briefing_coordinator_responsiblity_for_staff_and_practice_type.cs",
            "Description": "should return 400 if any of practice type is invalid",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 400"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4379",
    "FileName": "when_get_assignee_PwC_contacts_responsiblity_for_staff.cs",
    "Description": "when get assignee pw c contacts responsiblity for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4380",
        "FileName": "when_get_assignee_PwC_contacts_responsiblity_for_staff.cs",
        "Description": "get assignee contacts",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return staff assignee contacts responsiblities"
        ],
        "Children": []
      },
      {
        "$id": "4381",
        "FileName": "when_get_assignee_PwC_contacts_responsiblity_for_staff.cs",
        "Description": "assignee pw c contact",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4382",
            "FileName": "when_get_assignee_PwC_contacts_responsiblity_for_staff.cs",
            "Description": "when get normal assignee contact",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should return staff assignee pw c contact responsiblities"
            ],
            "Children": []
          },
          {
            "$id": "4383",
            "FileName": "when_get_assignee_PwC_contacts_responsiblity_for_staff.cs",
            "Description": "when assignee has multiple engagement and all contact with staff",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should return staff assignee pw c contact responsiblities"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4384",
    "FileName": "when_get_assignee_PwC_contacts_responsiblity_for_staff_and_practice_type.cs",
    "Description": "when get assignee pw c contacts responsiblity for staff and practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4385",
        "FileName": "when_get_assignee_PwC_contacts_responsiblity_for_staff_and_practice_type.cs",
        "Description": "get assignee contacts",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return staff assignee contacts responsiblities"
        ],
        "Children": []
      },
      {
        "$id": "4386",
        "FileName": "when_get_assignee_PwC_contacts_responsiblity_for_staff_and_practice_type.cs",
        "Description": "when assignee has multiple engagement and all contact with staff",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return staff assignee pw c contact responsiblities"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4387",
    "FileName": "when_get_assignee_quecstionnaire_contacts_responsiblity_for_staff.cs",
    "Description": "when get assignee questionnaire contacts responsiblity for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4388",
        "FileName": "when_get_assignee_quecstionnaire_contacts_responsiblity_for_staff.cs",
        "Description": "noraml questionnaire",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return staff questionnaire contact responsiblities"
        ],
        "Children": []
      },
      {
        "$id": "4389",
        "FileName": "when_get_assignee_quecstionnaire_contacts_responsiblity_for_staff.cs",
        "Description": "when work record oforganizer is NOT no issues",
        "WhenList": [
          "get questionnaire contact responsibility"
        ],
        "ThenList": [
          "should be 200",
          "should only return staff of no issue work records"
        ],
        "Children": []
      },
      {
        "$id": "4390",
        "FileName": "when_get_assignee_quecstionnaire_contacts_responsiblity_for_staff.cs",
        "Description": "when get organizer of tax work record has been done over 275 days",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should not return any responsiblities"
        ],
        "Children": []
      },
      {
        "$id": "4391",
        "FileName": "when_get_assignee_quecstionnaire_contacts_responsiblity_for_staff.cs",
        "Description": "should only get opened immigration workrecords",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should only return ongoing immigration workrecords responsiblities"
        ],
        "Children": []
      },
      {
        "$id": "4392",
        "FileName": "when_get_assignee_quecstionnaire_contacts_responsiblity_for_staff.cs",
        "Description": "should get latest active wr and all open old workrecords for each country",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return latest active wr and all open old workrecords for each country"
        ],
        "Children": []
      },
      {
        "$id": "4393",
        "FileName": "when_get_assignee_quecstionnaire_contacts_responsiblity_for_staff.cs",
        "Description": "should not get nonlatest completed work record",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return empty result if the questionniare contact is not sofia for the latest tax return work record"
        ],
        "Children": []
      },
      {
        "$id": "4394",
        "FileName": "when_get_assignee_quecstionnaire_contacts_responsiblity_for_staff.cs",
        "Description": "should get all work record with different tax year",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return empty result if the questionniare contact is not sofia for the latest tax return work record"
        ],
        "Children": []
      },
      {
        "$id": "4395",
        "FileName": "when_get_assignee_quecstionnaire_contacts_responsiblity_for_staff.cs",
        "Description": "should not get work record from inactive engagement",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should not return staff questionnaire contact responsiblities"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4396",
    "FileName": "when_get_assignee_questionnaire_contacts_responsiblity_for_staff_and_practice_type.cs",
    "Description": "when get assignee questionnaire contacts responsiblity for staff and practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4397",
        "FileName": "when_get_assignee_questionnaire_contacts_responsiblity_for_staff_and_practice_type.cs",
        "Description": "noraml questionnaire",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4398",
            "FileName": "when_get_assignee_questionnaire_contacts_responsiblity_for_staff_and_practice_type.cs",
            "Description": "should get responsibility for tax",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should return staff questionnaire contact responsiblities"
            ],
            "Children": []
          },
          {
            "$id": "4399",
            "FileName": "when_get_assignee_questionnaire_contacts_responsiblity_for_staff_and_practice_type.cs",
            "Description": "should get responsibility for immigration",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should return staff questionnaire contact responsiblities"
            ],
            "Children": []
          },
          {
            "$id": "4400",
            "FileName": "when_get_assignee_questionnaire_contacts_responsiblity_for_staff_and_practice_type.cs",
            "Description": "should return 400 if any of practice type is invalid",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 400"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4401",
    "FileName": "when_get_checklist_responsibility_for_staff.cs",
    "Description": "when get checklist responsibility for staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 200",
      "should return non issue work record related checklist",
      "should return uncompleted and unremoved check list which is assigned to sofia"
    ],
    "Children": []
  },
  {
    "$id": "4402",
    "FileName": "when_get_checklist_responsibility_for_staff.cs",
    "Description": "when sofia has checklist responsibility from deleted assignee",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 200",
      "should return non issue work record related checklist"
    ],
    "Children": []
  },
  {
    "$id": "4403",
    "FileName": "when_get_checklist_responsibility_for_staff.cs",
    "Description": "when sofia has checklist responsibility from inactive engagement",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 200",
      "should return non issue work record related checklist"
    ],
    "Children": []
  },
  {
    "$id": "4404",
    "FileName": "when_get_checklist_responsibility_for_staff_and_practice_type.cs",
    "Description": "when get checklist responsibility for staff and practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4405",
        "FileName": "when_get_checklist_responsibility_for_staff_and_practice_type.cs",
        "Description": "should get successfully",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return non issue work record related checklist",
          "should return uncompleted and unremoved check list which is assigned to sofia"
        ],
        "Children": []
      },
      {
        "$id": "4406",
        "FileName": "when_get_checklist_responsibility_for_staff_and_practice_type.cs",
        "Description": "should return 400 if any of practice type is invalid",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 400"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4407",
    "FileName": "when_get_checklist_responsibility_from_work_record_for_restricted_engagement_and_restricted_assignee.cs",
    "Description": "when get checklist responsibility from work record for restricted engagement and restricted assignee",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 200",
      "should add candidate staff to restricted assignee and engagement acl"
    ],
    "Children": []
  },
  {
    "$id": "4408",
    "FileName": "when_get_checklist_responsibility_with_different_work_record_type_for_staff.cs",
    "Description": "when get checklist responsibility with different work record type for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4409",
        "FileName": "when_get_checklist_responsibility_with_different_work_record_type_for_staff.cs",
        "Description": "should get tax return and tax other compilance work record checklist responsibility",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return work record related checklist"
        ],
        "Children": []
      },
      {
        "$id": "4410",
        "FileName": "when_get_checklist_responsibility_with_different_work_record_type_for_staff.cs",
        "Description": "should get certificate of coverage and social security other compliance work record checklist responsibility",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return work record related checklist"
        ],
        "Children": []
      },
      {
        "$id": "4411",
        "FileName": "when_get_checklist_responsibility_with_different_work_record_type_for_staff.cs",
        "Description": "should get immigration work record checklist responsibility",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return work record related checklist"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4412",
    "FileName": "when_get_engagement_roles_responsibility_for_staff.cs",
    "Description": "when get engagement roles responsibility for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4413",
        "FileName": "when_get_engagement_roles_responsibility_for_staff.cs",
        "Description": "when get engagement roles",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return staff engagment admin responsiblities",
          "should return staff primary contact responsiblities",
          "should return staff second contact responsiblities",
          "should return delegated office primary contact responsiblities",
          "should return delegated office only primary contact responsiblities",
          "should return subscribed office secondary contact responsiblities",
          "should return subscribed office office engagement admin responsiblities"
        ],
        "Children": []
      },
      {
        "$id": "4414",
        "FileName": "when_get_engagement_roles_responsibility_for_staff.cs",
        "Description": "when get engagement roles given inactivated engagements",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return staff engagment admin responsiblities"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4415",
    "FileName": "when_get_engagement_roles_responsibility_for_staff_and_practice_type.cs",
    "Description": "when get engagement roles responsibility for staff and practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4416",
        "FileName": "when_get_engagement_roles_responsibility_for_staff_and_practice_type.cs",
        "Description": "when get engagement roles",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4417",
            "FileName": "when_get_engagement_roles_responsibility_for_staff_and_practice_type.cs",
            "Description": "should get tax engagement roles",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should return tax engagment admin responsiblities"
            ],
            "Children": []
          },
          {
            "$id": "4418",
            "FileName": "when_get_engagement_roles_responsibility_for_staff_and_practice_type.cs",
            "Description": "should get immigration and social security engagement roles",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should return immigration and social security engagment admin responsiblities"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4419",
    "FileName": "when_get_staff_responsiblity_summary_for_staff.cs",
    "Description": "when get staff responsiblity summary for staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 200",
      "should return summary"
    ],
    "Children": []
  },
  {
    "$id": "4420",
    "FileName": "when_get_staff_responsiblity_summary_for_staff_and_practice_type.cs",
    "Description": "when get staff responsiblity summary for staff and practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4421",
        "FileName": "when_get_staff_responsiblity_summary_for_staff_and_practice_type.cs",
        "Description": "should get successfully",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return summary"
        ],
        "Children": []
      },
      {
        "$id": "4422",
        "FileName": "when_get_staff_responsiblity_summary_for_staff_and_practice_type.cs",
        "Description": "should return 400 if any of practice type is invalid",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 400"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4423",
    "FileName": "when_get_work_record_revision_task_responsibility_for_staff.cs",
    "Description": "when get work record revision task responsibility for staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should return uncompleted revision task which is assigned to sofia"
    ],
    "Children": []
  },
  {
    "$id": "4424",
    "FileName": "when_get_work_record_revision_task_responsibility_for_staff_and_practice_type.cs",
    "Description": "when get work record revision task responsibility for staff and practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4425",
        "FileName": "when_get_work_record_revision_task_responsibility_for_staff_and_practice_type.cs",
        "Description": "should get revision task by work record practice type",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return revision task"
        ],
        "Children": []
      },
      {
        "$id": "4426",
        "FileName": "when_get_work_record_revision_task_responsibility_for_staff_and_practice_type.cs",
        "Description": "should not get revision task by another practice type",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should return empty result"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4427",
    "FileName": "when_get_work_record_task_for_staff_assinged_to_employee_work_record_task.cs",
    "Description": "when get work record task for staff assinged to employee work record task",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 200 ok",
      "should not with employee work record task",
      "should not get task responsibility for employer work record"
    ],
    "Children": []
  },
  {
    "$id": "4428",
    "FileName": "when_get_work_record_task_responsibility_for_staff.cs",
    "Description": "when get work record task responsibility for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4429",
        "FileName": "when_get_work_record_task_responsibility_for_staff.cs",
        "Description": "should not get tasks from has issue work records",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should only get task responsibility for non issue related work record"
        ],
        "Children": []
      },
      {
        "$id": "4430",
        "FileName": "when_get_work_record_task_responsibility_for_staff.cs",
        "Description": "should get correct work record milestone name for briefing work record",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should only get correct mile stone name for briefing work record"
        ],
        "Children": []
      },
      {
        "$id": "4431",
        "FileName": "when_get_work_record_task_responsibility_for_staff.cs",
        "Description": "when sofia has two task and one is completed while the other is uncompleted",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should only return uncompleted task which is assigned to sofia"
        ],
        "Children": []
      },
      {
        "$id": "4432",
        "FileName": "when_get_work_record_task_responsibility_for_staff.cs",
        "Description": "when sofia has one crossed out task",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should NOT return crossed out task even it is assigned to sofia"
        ],
        "Children": []
      },
      {
        "$id": "4433",
        "FileName": "when_get_work_record_task_responsibility_for_staff.cs",
        "Description": "when sofia has multiple uncompleted tasks",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return two uncompleted tasks"
        ],
        "Children": []
      },
      {
        "$id": "4434",
        "FileName": "when_get_work_record_task_responsibility_for_staff.cs",
        "Description": "when sofia has responsibility from work records",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should only return work record with uncompleted task"
        ],
        "Children": []
      },
      {
        "$id": "4435",
        "FileName": "when_get_work_record_task_responsibility_for_staff.cs",
        "Description": "when sofia has responsibility from deleted assignee",
        "WhenList": [
          "get task responsibility"
        ],
        "ThenList": [
          "should NOT get any task responsibility"
        ],
        "Children": []
      },
      {
        "$id": "4436",
        "FileName": "when_get_work_record_task_responsibility_for_staff.cs",
        "Description": "when sofia has responsibility from inactive engagement",
        "WhenList": [
          "get task responsibility"
        ],
        "ThenList": [
          "should NOT get any task responsibility"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4437",
    "FileName": "when_get_work_record_task_responsibility_for_staff_and_practice_type.cs",
    "Description": "when get work record task responsibility for staff and practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4438",
        "FileName": "when_get_work_record_task_responsibility_for_staff_and_practice_type.cs",
        "Description": "should get staff work record task resposibilities by practice type",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should get task resposibility successfully"
        ],
        "Children": []
      },
      {
        "$id": "4439",
        "FileName": "when_get_work_record_task_responsibility_for_staff_and_practice_type.cs",
        "Description": "should return 400 if any of practice type is invalid",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 400"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4440",
    "FileName": "when_get_work_record_task_responsibility_with_different_work_record_type_for_staff.cs",
    "Description": "when get work record task responsibility with different work record type for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4441",
        "FileName": "when_get_work_record_task_responsibility_with_different_work_record_type_for_staff.cs",
        "Description": "should get tax return and tax other compilance work record responsibility",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return two tasks"
        ],
        "Children": []
      },
      {
        "$id": "4442",
        "FileName": "when_get_work_record_task_responsibility_with_different_work_record_type_for_staff.cs",
        "Description": "should get certificate of coverage and social security other compliance work record responsibility",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return two tasks"
        ],
        "Children": []
      },
      {
        "$id": "4443",
        "FileName": "when_get_work_record_task_responsibility_with_different_work_record_type_for_staff.cs",
        "Description": "should get immigration general work record responsibility",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return one task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4444",
    "FileName": "when_reassign_assignee_contacts_for_staff_with_different_user.cs",
    "Description": "when reassign assignee contacts for staff with different user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4445",
        "FileName": "when_reassign_assignee_contacts_for_staff_with_different_user.cs",
        "Description": "when is self",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should allowed"
        ],
        "Children": []
      },
      {
        "$id": "4446",
        "FileName": "when_reassign_assignee_contacts_for_staff_with_different_user.cs",
        "Description": "when is general user",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should not allowed"
        ],
        "Children": []
      },
      {
        "$id": "4447",
        "FileName": "when_reassign_assignee_contacts_for_staff_with_different_user.cs",
        "Description": "when with other office level role",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should not allowed"
        ],
        "Children": []
      },
      {
        "$id": "4448",
        "FileName": "when_reassign_assignee_contacts_for_staff_with_different_user.cs",
        "Description": "when with other country level role",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should not allowed"
        ],
        "Children": []
      },
      {
        "$id": "4449",
        "FileName": "when_reassign_assignee_contacts_for_staff_with_different_user.cs",
        "Description": "when with global admin",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should allowed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4450",
    "FileName": "when_reassign_assignee_contacts_for_staff_with_invalid_request.cs",
    "Description": "when reassign assignee contacts for staff with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4451",
        "FileName": "when_reassign_assignee_contacts_for_staff_with_invalid_request.cs",
        "Description": "when with invalid uri",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4452",
    "FileName": "when_reassign_assignee_contacts_for_staff_with_work_record_service_status.cs",
    "Description": "when reassign assignee contacts for staff with work record service status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4453",
        "FileName": "when_reassign_assignee_contacts_for_staff_with_work_record_service_status.cs",
        "Description": "when with invalid service status",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return ok",
          "should not update the qustionnair contact"
        ],
        "Children": []
      },
      {
        "$id": "4454",
        "FileName": "when_reassign_assignee_contacts_for_staff_with_work_record_service_status.cs",
        "Description": "when with valid service status",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return ok",
          "should not update the qustionnair contact"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4455",
    "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
    "Description": "when reassign assignee pwc contacts for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4456",
        "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
        "Description": "when is normal assignee",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4457",
            "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
            "Description": "when target staff is NOT pw c contact of assignee",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should reassign assignee contact to new staff"
            ],
            "Children": []
          },
          {
            "$id": "4458",
            "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
            "Description": "when target staff is pw c contact of assignee",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should reassign assignee contact to new staff"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4459",
        "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
        "Description": "when assignee is deleted during reassigning",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200"
        ],
        "Children": []
      },
      {
        "$id": "4460",
        "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
        "Description": "when assignee have multiple engagement and all conatct with staff",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should return 200 ok",
          "should only update corresponding contact"
        ],
        "Children": []
      },
      {
        "$id": "4461",
        "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
        "Description": "when restricted engagement and reassign to staff not in acl",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign assignee contact to new staff",
          "should add target staff to engagement acl and reserve source sofia"
        ],
        "Children": []
      },
      {
        "$id": "4462",
        "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
        "Description": "when restricted assignee",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4463",
            "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
            "Description": "when target staff is NOT in normal ACL",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should reassign assignee pwc contact to new staff",
              "should add target staff to acl and reverse source staff"
            ],
            "Children": []
          },
          {
            "$id": "4464",
            "FileName": "when_reassign_assignee_pwc_contacts_for_staff.cs",
            "Description": "when target staff is in normal ACL",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should remove target staff out of normal acl"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4465",
    "FileName": "when_reassign_assignee_questionnaire_contacts_for_staff.cs",
    "Description": "when reassign assignee questionnaire contacts for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4466",
        "FileName": "when_reassign_assignee_questionnaire_contacts_for_staff.cs",
        "Description": "when is normal assignee",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign assignee contact to new staff"
        ],
        "Children": []
      },
      {
        "$id": "4467",
        "FileName": "when_reassign_assignee_questionnaire_contacts_for_staff.cs",
        "Description": "when assignee is deleted during reassigning",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200"
        ],
        "Children": []
      },
      {
        "$id": "4468",
        "FileName": "when_reassign_assignee_questionnaire_contacts_for_staff.cs",
        "Description": "when restricted engagement and reassign to staff not in acl",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign questionnaire contact to new staff",
          "should add new staff to engagement acl"
        ],
        "Children": []
      },
      {
        "$id": "4469",
        "FileName": "when_reassign_assignee_questionnaire_contacts_for_staff.cs",
        "Description": "when restricted assignee",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign questionnaire contact to new staff",
          "should add target staff to acl and reserve source staff"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4470",
    "FileName": "when_reassign_checklist_task_responsibility_for_staff.cs",
    "Description": "when reassign checklist task responsibility for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4471",
        "FileName": "when_reassign_checklist_task_responsibility_for_staff.cs",
        "Description": "when reassign checklist responsibility to staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4472",
            "FileName": "when_reassign_checklist_task_responsibility_for_staff.cs",
            "Description": "office role can reasssign checklist responsibility",
            "WhenList": [
              "reassign checklist reponsibility"
            ],
            "ThenList": [
              "should return 200",
              "should return checklist responsibility info"
            ],
            "Children": []
          },
          {
            "$id": "4473",
            "FileName": "when_reassign_checklist_task_responsibility_for_staff.cs",
            "Description": "general role can not reassign checklist responsiblity",
            "WhenList": [
              "reassign checklist reponsibility"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4474",
        "FileName": "when_reassign_checklist_task_responsibility_for_staff.cs",
        "Description": "when assignee is restricted while target staff not in ACL",
        "WhenList": [
          "reassign checklist reponsibility"
        ],
        "ThenList": [
          "should return ok",
          "should add target staff into restricted assignee acl"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4475",
    "FileName": "when_reassign_engagement_admin_responsibility_for_staff.cs",
    "Description": "when reassign engagement admin responsibility for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4476",
        "FileName": "when_reassign_engagement_admin_responsibility_for_staff.cs",
        "Description": "when reassigning engagement admins",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign staff engagment admin responsiblities"
        ],
        "Children": []
      },
      {
        "$id": "4477",
        "FileName": "when_reassign_engagement_admin_responsibility_for_staff.cs",
        "Description": "when general level role can not reassign enagement admin",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be forbidden",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "4478",
        "FileName": "when_reassign_engagement_admin_responsibility_for_staff.cs",
        "Description": "when office level role can only inactivate his own office staff",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be forbidden",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "4479",
        "FileName": "when_reassign_engagement_admin_responsibility_for_staff.cs",
        "Description": "when reassigned engagement admin practice type is different from engagement",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4480",
    "FileName": "when_reassign_engagement_admin_who_is_auth_admin.cs",
    "Description": "when reassign engagement admin who is auth admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4481",
        "FileName": "when_reassign_engagement_admin_who_is_auth_admin.cs",
        "Description": "when reassigning engagement admins",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign staff engagment admin responsiblities and remove auth from auth admins"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4482",
    "FileName": "when_reassign_engagement_coordinating_contacts_for_staff.cs",
    "Description": "when reassign engagement coordinating contacts for staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 200",
      "should reassign staff engagment coordinating contacts responsiblities"
    ],
    "Children": []
  },
  {
    "$id": "4483",
    "FileName": "when_reassign_engagement_delegated_coordinating_office_contacts_for_staff.cs",
    "Description": "when reassign engagement delegated coordinating office contacts for staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 200",
      "should reassign staff engagment delegated office contacts responsiblities"
    ],
    "Children": []
  },
  {
    "$id": "4484",
    "FileName": "when_reassign_engagement_roles_for_staff.cs",
    "Description": "when reassign engagement roles for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4485",
        "FileName": "when_reassign_engagement_roles_for_staff.cs",
        "Description": "when reassign engagement admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4486",
            "FileName": "when_reassign_engagement_roles_for_staff.cs",
            "Description": "when reassing engagement admins",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be 200",
              "should reassign staff engagment admin responsiblities",
              "should generate engagement office change event and admin change event"
            ],
            "Children": []
          },
          {
            "$id": "4487",
            "FileName": "when_reassign_engagement_roles_for_staff.cs",
            "Description": "when general level role can not reassign enagement admin",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be forbidden",
              "should return error message"
            ],
            "Children": []
          },
          {
            "$id": "4488",
            "FileName": "when_reassign_engagement_roles_for_staff.cs",
            "Description": "when office level role can only inactivate his own office staff",
            "WhenList": [
              "reassign work"
            ],
            "ThenList": [
              "should be forbidden",
              "should return error message"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4489",
        "FileName": "when_reassign_engagement_roles_for_staff.cs",
        "Description": "when reassign engagement coordinating office contact",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign staff engagment admin responsiblities",
          "should generate coordinating office contact change event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4490",
    "FileName": "when_reassign_engagement_subscribed_office_contacts_for_staff.cs",
    "Description": "when reassign engagement subscribed office contacts for staff",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should be 200",
      "should reassign staff engagment work office contacts responsiblities",
      "should have only primary contact"
    ],
    "Children": []
  },
  {
    "$id": "4491",
    "FileName": "when_reassign_engagement_subscribed_office_contacts_for_staff_with_invalid_request.cs",
    "Description": "when reassign engagement subscribed office contacts for staff with invalid request",
    "WhenList": [
      "reassign work"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "4492",
    "FileName": "when_reassign_engagement_subscribed_office_office_engagement_admin_for_staff.cs",
    "Description": "when reassign engagement subscribed office office engagement admin for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4493",
        "FileName": "when_reassign_engagement_subscribed_office_office_engagement_admin_for_staff.cs",
        "Description": "when reassigning office engagement admin",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign staff engagment admin responsiblities"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4494",
    "FileName": "when_reassign_work_record_briefing_coordinator_for_staff.cs",
    "Description": "when reassign work record briefing coordinator for staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4495",
        "FileName": "when_reassign_work_record_briefing_coordinator_for_staff.cs",
        "Description": "when is normal assignee",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign briefing coordinator to new staff"
        ],
        "Children": []
      },
      {
        "$id": "4496",
        "FileName": "when_reassign_work_record_briefing_coordinator_for_staff.cs",
        "Description": "when restricted engagement and reassign to staff not in acl",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign briefing coordinator to new staff",
          "should add new staff to engagement acl and keep orgin staff in acl"
        ],
        "Children": []
      },
      {
        "$id": "4497",
        "FileName": "when_reassign_work_record_briefing_coordinator_for_staff.cs",
        "Description": "when restricted assignee",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be 200",
          "should reassign briefing coordinator to new staff",
          "should add new staff to acl and keep origin staff in acl"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4498",
    "FileName": "when_reassign_work_record_task_responsibility_for_non_restricted_engagment_and_assignee.cs",
    "Description": "when reassign work record task responsibility for non restricted engagment and assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4499",
        "FileName": "when_reassign_work_record_task_responsibility_for_non_restricted_engagment_and_assignee.cs",
        "Description": "when reassign task responsibility to staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4500",
            "FileName": "when_reassign_work_record_task_responsibility_for_non_restricted_engagment_and_assignee.cs",
            "Description": "office level role can reassign task responsibility",
            "WhenList": [
              "reassign task reponsibility"
            ],
            "ThenList": [
              "should return 200",
              "should return checklist responsibility info"
            ],
            "Children": []
          },
          {
            "$id": "4501",
            "FileName": "when_reassign_work_record_task_responsibility_for_non_restricted_engagment_and_assignee.cs",
            "Description": "general level role can not reassign task responsibility",
            "WhenList": [
              "reassign task reponsibility"
            ],
            "ThenList": [
              "should return 403"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4502",
        "FileName": "when_reassign_work_record_task_responsibility_for_non_restricted_engagment_and_assignee.cs",
        "Description": "when reassign revision task responsiblity to staff",
        "WhenList": [
          "reassign revions task to another staff"
        ],
        "ThenList": [
          "should return ok",
          "should revision task respionsiblilty to another staff"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4503",
    "FileName": "when_reassign_work_record_task_responsibility_for_non_restricted_engagment_but_restricted_assignee.cs",
    "Description": "when reassign work record task responsibility for non restricted engagment but restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4504",
        "FileName": "when_reassign_work_record_task_responsibility_for_non_restricted_engagment_but_restricted_assignee.cs",
        "Description": "when reassign task responsibility to staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4505",
            "FileName": "when_reassign_work_record_task_responsibility_for_non_restricted_engagment_but_restricted_assignee.cs",
            "Description": "should add candidate staff to acl normal list if the candidate not in acl",
            "WhenList": [
              "reassign task reponsibility"
            ],
            "ThenList": [
              "should return 200",
              "should get correct assignee acl normal list"
            ],
            "Children": []
          },
          {
            "$id": "4506",
            "FileName": "when_reassign_work_record_task_responsibility_for_non_restricted_engagment_but_restricted_assignee.cs",
            "Description": "should acl no need to add staff to acl if the candidate are pwc contact",
            "WhenList": [
              "reassign task reponsibility"
            ],
            "ThenList": [
              "should return 200",
              "should get correct assignee acl normal list"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4507",
    "FileName": "when_reassign_work_record_task_responsibility_for_restricted_engagement.cs",
    "Description": "when reassign work record task responsibility for restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4508",
        "FileName": "when_reassign_work_record_task_responsibility_for_restricted_engagement.cs",
        "Description": "when reassign task responsibility to staff for non restricted assignee",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4509",
            "FileName": "when_reassign_work_record_task_responsibility_for_restricted_engagement.cs",
            "Description": "should add candidate staff to engagement acl normal list if the candidate not in acl",
            "WhenList": [
              "reassign task reponsibility"
            ],
            "ThenList": [
              "should return 200",
              "should get correct assignee acl normal list"
            ],
            "Children": []
          },
          {
            "$id": "4510",
            "FileName": "when_reassign_work_record_task_responsibility_for_restricted_engagement.cs",
            "Description": "should restricted engament acl no need to add staff to acl if the candidate are engagement admin",
            "WhenList": [
              "reassign task reponsibility"
            ],
            "ThenList": [
              "should return 200",
              "should get correct assignee acl normal list"
            ],
            "Children": []
          },
          {
            "$id": "4511",
            "FileName": "when_reassign_work_record_task_responsibility_for_restricted_engagement.cs",
            "Description": "should restricted engament acl no need to add staff to acl if the candidate are primary contact",
            "WhenList": [
              "reassign task reponsibility"
            ],
            "ThenList": [
              "should return 200",
              "should get correct assignee acl normal list"
            ],
            "Children": []
          },
          {
            "$id": "4512",
            "FileName": "when_reassign_work_record_task_responsibility_for_restricted_engagement.cs",
            "Description": "should restricted engament acl no need to add staff to acl if the candidate are second contact",
            "WhenList": [
              "reassign task reponsibility"
            ],
            "ThenList": [
              "should return 200",
              "should get correct assignee acl normal list"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4513",
        "FileName": "when_reassign_work_record_task_responsibility_for_restricted_engagement.cs",
        "Description": "when reassign task responsibility to staff for restricted assignee",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4514",
            "FileName": "when_reassign_work_record_task_responsibility_for_restricted_engagement.cs",
            "Description": "should add candidate staff to engagement acl normal list if the candidate not in acl",
            "WhenList": [
              "reassign task reponsibility"
            ],
            "ThenList": [
              "should return 200",
              "should add candidate to assignee acl instead of restricted engagement acl"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4515",
    "FileName": "when_reassign_work_record_task_responsibility_to_work_pool.cs",
    "Description": "when reassign work record task responsibility to work pool",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4516",
        "FileName": "when_reassign_work_record_task_responsibility_to_work_pool.cs",
        "Description": "when reassign task responsibility to work pool",
        "WhenList": [
          "reassign task reponsibility"
        ],
        "ThenList": [
          "should return 200",
          "should clear responsibility and change responsible office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4517",
    "FileName": "when_reassign_work_record_task_responsibility_to_work_pool_with_checklist_task.cs",
    "Description": "when reassign work record task responsibility to work pool with checklist task",
    "WhenList": [
      "reassign task reponsibility"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": [
      {
        "$id": "4518",
        "FileName": "when_reassign_work_record_task_responsibility_to_work_pool_with_checklist_task.cs",
        "Description": "when reassign task responsibility to work pool",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "4519",
    "FileName": "when_reassign_work_record_task_responsibility_to_work_pool_with_relationless_office.cs",
    "Description": "when reassign work record task responsibility to work pool with relationless office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4520",
        "FileName": "when_reassign_work_record_task_responsibility_to_work_pool_with_relationless_office.cs",
        "Description": "when reassign task responsibility to work pool",
        "WhenList": [
          "reassign task reponsibility"
        ],
        "ThenList": [
          "should return bad request",
          "should keep the origin responsibility"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4521",
    "FileName": "when_register_staff.cs",
    "Description": "when register staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4522",
        "FileName": "when_register_staff.cs",
        "Description": "when register staff with valid request",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 201 created",
          "should create staff",
          "should create user"
        ],
        "Children": []
      },
      {
        "$id": "4523",
        "FileName": "when_register_staff.cs",
        "Description": "when register tax staff",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 201 created",
          "should create staff",
          "should create user",
          "should send notification to tax office level and cc user"
        ],
        "Children": []
      },
      {
        "$id": "4524",
        "FileName": "when_register_staff.cs",
        "Description": "when register multiple practicetype staff",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 201 created",
          "should create staff",
          "should create user",
          "should send notification to immigration specific office level and cc user"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4525",
    "FileName": "when_staff_has_not_been_approved_for_5_days.cs",
    "Description": "when staff has not been approved for 5 days",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4526",
        "FileName": "when_staff_has_not_been_approved_for_5_days.cs",
        "Description": "when staff has not been approved or rejected any practice type",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return OK",
          "should send reminder for pending staff",
          "should send reminder to office level role and cc country level role"
        ],
        "Children": []
      },
      {
        "$id": "4527",
        "FileName": "when_staff_has_not_been_approved_for_5_days.cs",
        "Description": "when staff has been rejected certain practice type for 5 days",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return OK",
          "should not send reminder"
        ],
        "Children": []
      },
      {
        "$id": "4528",
        "FileName": "when_staff_has_not_been_approved_for_5_days.cs",
        "Description": "when staff has been pending less than 5 days",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return OK",
          "should only send reminder for pending staff for 5 days"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4529",
    "FileName": "StaffSearchValidationTest.cs",
    "Description": "staff search validation test",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4530",
        "FileName": "StaffSearchValidationTest.cs",
        "Description": "when search with invalid country uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "4531",
        "FileName": "StaffSearchValidationTest.cs",
        "Description": "when search with invalid office uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4532",
    "FileName": "when_batch_create_staff_with_correct_and_incorrect_office.cs",
    "Description": "when batch create staff with correct and incorrect office",
    "WhenList": [
      "create staff"
    ],
    "ThenList": [
      "should return 200 ok",
      "should create correct staff user info",
      "should succeed",
      "should send notification to user"
    ],
    "Children": []
  },
  {
    "$id": "4533",
    "FileName": "when_batch_create_staff_with_correct_and_incorrect_practice_types.cs",
    "Description": "when batch create staff with correct and incorrect practice types",
    "WhenList": [
      "create staff"
    ],
    "ThenList": [
      "should return 200 ok",
      "should create correct staff user info",
      "should get import messages"
    ],
    "Children": []
  },
  {
    "$id": "4534",
    "FileName": "when_batch_create_staff_with_incorrect_xlsx_format.cs",
    "Description": "when batch create staff with incorrect xlsx format",
    "WhenList": [
      "create staff"
    ],
    "ThenList": [
      "should return bad request",
      "should not create staff user info",
      "should not send notification to user"
    ],
    "Children": []
  },
  {
    "$id": "4535",
    "FileName": "when_disable_linkedin_prompt.cs",
    "Description": "when disable linkedin prompt",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should not need prompt for linkedin"
    ],
    "Children": []
  },
  {
    "$id": "4536",
    "FileName": "when_fuzzy_search_staff_by_name.cs",
    "Description": "when fuzzy search staff by name",
    "WhenList": [],
    "ThenList": [
      "should return staff if matched by first name",
      "should return staff if matched by last name",
      "should return staff if matched by last name of two letters",
      "should return empty list if not matched",
      "should return staff list if matched by fullname 1",
      "should return staff list if matched by fullname 2",
      "should return staff list if matched by fullname 3",
      "should return staff list if matched by formal name",
      "should return staff list if matched by fullname with middle name",
      "should return staff if matched by first name and office uri",
      "should return staff if matched by first name but not office uri"
    ],
    "Children": []
  },
  {
    "$id": "4537",
    "FileName": "when_get_a_partner.cs",
    "Description": "when get a partner",
    "WhenList": [
      "get partner staff"
    ],
    "ThenList": [
      "should get a partner"
    ],
    "Children": []
  },
  {
    "$id": "4538",
    "FileName": "when_get_office_level_staff_full_names.cs",
    "Description": "when get office level staff full names",
    "WhenList": [
      "get office level staff full name"
    ],
    "ThenList": [
      "should return ok",
      "should get office level staff full name in the same office"
    ],
    "Children": []
  },
  {
    "$id": "4539",
    "FileName": "when_get_open_work_records_by_staff_id.cs",
    "Description": "when get open work records by staff id",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 200",
      "should get work records"
    ],
    "Children": []
  },
  {
    "$id": "4540",
    "FileName": "when_get_open_work_records_by_staff_id_with_inactive_go_migration_assignee.cs",
    "Description": "when get open work records by staff id with inactive go migration assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should be ok",
      "should return workrecord with active assignee"
    ],
    "Children": []
  },
  {
    "$id": "4541",
    "FileName": "when_get_open_work_records_by_staff_id_with_invalid_assignee.cs",
    "Description": "when get open work records by staff id with invalid assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should be ok",
      "should return workrecord with active assignee"
    ],
    "Children": []
  },
  {
    "$id": "4542",
    "FileName": "when_get_staff_by_id.cs",
    "Description": "when get staff by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4543",
        "FileName": "when_get_staff_by_id.cs",
        "Description": "when get staff with links",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should return ok",
          "should get staff with links"
        ],
        "Children": []
      },
      {
        "$id": "4544",
        "FileName": "when_get_staff_by_id.cs",
        "Description": "when get staff with multiple guids",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should return ok",
          "should get multiple guids"
        ],
        "Children": []
      },
      {
        "$id": "4545",
        "FileName": "when_get_staff_by_id.cs",
        "Description": "when general role get staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return guid together"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4546",
    "FileName": "when_get_staff_email_white_list.cs",
    "Description": "when get staff email white list",
    "WhenList": [
      "get email white list"
    ],
    "ThenList": [
      "should return ok",
      "should get whole staff email white list"
    ],
    "Children": []
  },
  {
    "$id": "4547",
    "FileName": "when_get_staff_info.cs",
    "Description": "when get staff info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4548",
        "FileName": "when_get_staff_info.cs",
        "Description": "with general role user",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should not contain edit office link",
          "should not contain edit staff link"
        ],
        "Children": []
      },
      {
        "$id": "4549",
        "FileName": "when_get_staff_info.cs",
        "Description": "with office level role user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4550",
            "FileName": "when_get_staff_info.cs",
            "Description": "get staff who is in the same office with current user",
            "WhenList": [
              "get staff"
            ],
            "ThenList": [
              "should contain edit office link",
              "should contain edit staff link"
            ],
            "Children": []
          },
          {
            "$id": "4551",
            "FileName": "when_get_staff_info.cs",
            "Description": "get staff who is in another office with current user",
            "WhenList": [
              "get staff"
            ],
            "ThenList": [
              "should not contain edit office link",
              "should not contain edit staff link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4552",
        "FileName": "when_get_staff_info.cs",
        "Description": "with office country role user",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4553",
            "FileName": "when_get_staff_info.cs",
            "Description": "get staff who is in the same country with current user",
            "WhenList": [
              "get staff"
            ],
            "ThenList": [
              "should contain edit office link",
              "should contain edit staff link"
            ],
            "Children": []
          },
          {
            "$id": "4554",
            "FileName": "when_get_staff_info.cs",
            "Description": "get staff who is in another country with current user",
            "WhenList": [
              "get staff"
            ],
            "ThenList": [
              "should not contain edit office link",
              "should not contain edit staff link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4555",
        "FileName": "when_get_staff_info.cs",
        "Description": "with global admin",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should contain edit office link",
          "should contain edit staff link"
        ],
        "Children": []
      },
      {
        "$id": "4556",
        "FileName": "when_get_staff_info.cs",
        "Description": "with immigration approver",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should contain edit office link",
          "should contain edit staff link"
        ],
        "Children": []
      },
      {
        "$id": "4557",
        "FileName": "when_get_staff_info.cs",
        "Description": "with technology approver",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should contain edit office link",
          "should contain edit staff link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4558",
    "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
    "Description": "when get staff with pending practice type by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4559",
        "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
        "Description": "when get staff has been approved all practice type",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "4560",
        "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
        "Description": "when office user get pending staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4561",
            "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
            "Description": "when office user in same office",
            "WhenList": [
              "get staff"
            ],
            "ThenList": [
              "should return ok",
              "should get staff with practice type",
              "should get staff who is partner"
            ],
            "Children": []
          },
          {
            "$id": "4562",
            "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
            "Description": "when office role in other office get pending staff",
            "WhenList": [
              "when get staff"
            ],
            "ThenList": [
              "should return ok",
              "should get staff without approve staff link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4563",
        "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
        "Description": "when country user get pending staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4564",
            "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
            "Description": "when get other country pending staff",
            "WhenList": [
              "get staff"
            ],
            "ThenList": [
              "should return ok",
              "should get staff practice type can not approve"
            ],
            "Children": []
          },
          {
            "$id": "4565",
            "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
            "Description": "when get my country pending staff",
            "WhenList": [
              "get staff"
            ],
            "ThenList": [
              "should return ok",
              "should get staff practice type can not approve"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4566",
        "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
        "Description": "when global admin get pending staff",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should return ok",
          "should get staff without approve staff link"
        ],
        "Children": []
      },
      {
        "$id": "4567",
        "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
        "Description": "when immigration approver get pending staff",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should return ok",
          "should get staff without approve staff link"
        ],
        "Children": []
      },
      {
        "$id": "4568",
        "FileName": "when_get_staff_with_pending_practice_type_by_id.cs",
        "Description": "when technology approver get pending staff",
        "WhenList": [
          "get staff"
        ],
        "ThenList": [
          "should return ok",
          "should get staff without approve staff link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4569",
    "FileName": "when_load_all_staffs.cs",
    "Description": "when load all staffs",
    "WhenList": [
      "get all staffs"
    ],
    "ThenList": [
      "should succeed and return all staff which ordered by full name and office name"
    ],
    "Children": []
  },
  {
    "$id": "4570",
    "FileName": "when_load_myself_staff_information_by_id_from_staff_resource.cs",
    "Description": "when load myself staff information by id from staff resource",
    "WhenList": [
      "get by id"
    ],
    "ThenList": [
      "should return staff succeed"
    ],
    "Children": []
  },
  {
    "$id": "4571",
    "FileName": "when_load_other_staff_information_by_id_from_staff_resource.cs",
    "Description": "when load other staff information by id from staff resource",
    "WhenList": [
      "get by id"
    ],
    "ThenList": [
      "should return staff succeed"
    ],
    "Children": [
      {
        "$id": "4572",
        "FileName": "when_load_other_staff_information_by_id_from_staff_resource.cs",
        "Description": "when current user is office level",
        "WhenList": [],
        "ThenList": [
          "should return general staff employee id",
          "should return office level staff employee id in same office",
          "should return country level staff employee id in same office",
          "should return other office staff employee id in other office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4573",
    "FileName": "when_not_update_staff_with_new_access_level.cs",
    "Description": "when not update staff with new access level",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return forbidden",
      "should not update staff basic info"
    ],
    "Children": []
  },
  {
    "$id": "4574",
    "FileName": "when_search_staff_apply_practicetype_filter.cs",
    "Description": "when search staff apply practicetype filter",
    "WhenList": [],
    "ThenList": [
      "should return tax staff list when apply practice type and current user is tax"
    ],
    "Children": []
  },
  {
    "$id": "4575",
    "FileName": "when_search_staff_by_assignee.cs",
    "Description": "when search staff by assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4576",
        "FileName": "when_search_staff_by_assignee.cs",
        "Description": "when search staff for normal assignee with normal engagement and apply engagement rule",
        "WhenList": [
          "of search"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4577",
        "FileName": "when_search_staff_by_assignee.cs",
        "Description": "when search staff for restricted assignee with normal engagement",
        "WhenList": [
          "of search"
        ],
        "ThenList": [
          "should return ok",
          "should return staffs on acl"
        ],
        "Children": []
      },
      {
        "$id": "4578",
        "FileName": "when_search_staff_by_assignee.cs",
        "Description": "when search staff for restricted assignee with restricted engagement and apply engagement rule",
        "WhenList": [
          "of search"
        ],
        "ThenList": [
          "should return ok",
          "should filter with assignee acl"
        ],
        "Children": []
      },
      {
        "$id": "4579",
        "FileName": "when_search_staff_by_assignee.cs",
        "Description": "when search staff for normal assignee with restricted engagements and apply engagement rule",
        "WhenList": [
          "of search"
        ],
        "ThenList": [
          "should return ok",
          "should filter with assignee acl"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4580",
    "FileName": "when_search_staff_by_country.cs",
    "Description": "when search staff by country",
    "WhenList": [],
    "ThenList": [
      "should return empty list if not matched",
      "should return all staff if no criteria specified",
      "should return staff if matched by country uri",
      "should return empty list even if matched by country uri but pending staff"
    ],
    "Children": []
  },
  {
    "$id": "4581",
    "FileName": "when_search_staff_by_criteria_return_uris.cs",
    "Description": "when search staff by criteria return uris",
    "WhenList": [],
    "ThenList": [
      "should return all staff if no criteria specified",
      "should return staff if matched by first name",
      "should return staff if matched by last name",
      "should return staff if matched by last name of two letters",
      "should return staff list if matched by fullname pattern 1",
      "should return staff list if matched by fullname pattern 2",
      "should return staff list if matched by fullname pattern 3",
      "should return staff list if matched by formal name",
      "should return staff list if matched by fullname with middle name",
      "should return empty list if name not matched",
      "should return staff if matched by office uri",
      "should return empty list if office not matched",
      "should return empty list if country not matched",
      "should return staff if matched by country uri",
      "should fail with 400 if country uri is invalid",
      "should fail with 400 if office uri is invalid",
      "should return staff list if matched by role partner",
      "should return staff list if matched by country level role",
      "should return staff list if matched by office level role",
      "should only return limited staff according to top"
    ],
    "Children": []
  },
  {
    "$id": "4582",
    "FileName": "when_search_staff_by_email.cs",
    "Description": "when search staff by email",
    "WhenList": [],
    "ThenList": [
      "should return empty list if not matched",
      "should return staff if matched email",
      "should return empty if even matched email but pending staff",
      "should return pending staff if search includes pending staff"
    ],
    "Children": []
  },
  {
    "$id": "4583",
    "FileName": "when_search_staff_by_employee_id.cs",
    "Description": "when search staff by employee id",
    "WhenList": [],
    "ThenList": [
      "should return empty list if not matched",
      "should return all staff if no criteria specified",
      "should return staff if matched by country uri"
    ],
    "Children": []
  },
  {
    "$id": "4584",
    "FileName": "when_search_staff_by_engagement.cs",
    "Description": "when search staff by engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4585",
        "FileName": "when_search_staff_by_engagement.cs",
        "Description": "when search staff for restricted engagement",
        "WhenList": [
          "of search"
        ],
        "ThenList": [
          "should return ok",
          "should return staffs on acl"
        ],
        "Children": []
      },
      {
        "$id": "4586",
        "FileName": "when_search_staff_by_engagement.cs",
        "Description": "when search staff by normal engagement",
        "WhenList": [
          "of search"
        ],
        "ThenList": [
          "should return ok",
          "should return staffs on acl"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4587",
    "FileName": "when_search_staff_by_practice_type.cs",
    "Description": "when search staff by practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4588",
        "FileName": "when_search_staff_by_practice_type.cs",
        "Description": "when search by tax",
        "WhenList": [
          "search by pratice type"
        ],
        "ThenList": [
          "should return ok",
          "should search out staff by practice type"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4589",
    "FileName": "when_search_staff_by_practice_type_return_uris.cs",
    "Description": "when search staff by practice type return uris",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4590",
        "FileName": "when_search_staff_by_practice_type_return_uris.cs",
        "Description": "when search staff of tax",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should search out approved staff by practice type"
        ],
        "Children": []
      },
      {
        "$id": "4591",
        "FileName": "when_search_staff_by_practice_type_return_uris.cs",
        "Description": "when pending staff exists",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should search out pending staff by practice type"
        ],
        "Children": []
      },
      {
        "$id": "4592",
        "FileName": "when_search_staff_by_practice_type_return_uris.cs",
        "Description": "when rejected staff exists",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not search out rejected staff by practice type"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4593",
    "FileName": "when_search_staff_by_uris.cs",
    "Description": "when search staff by uris",
    "WhenList": [
      "send request with uris"
    ],
    "ThenList": [
      "should succeed",
      "should get staff by uris"
    ],
    "Children": []
  },
  {
    "$id": "4594",
    "FileName": "when_search_staff_in_offices.cs",
    "Description": "when search staff in offices",
    "WhenList": [],
    "ThenList": [
      "should return staff in specified offices",
      "should return staff in specified offices with top",
      "should return staff in specified offices with the term",
      "should return staff in specified offices with the term including parenthesis",
      "should return staff in specified offices with the term including parenthesis and office prefix",
      "should return staff in specified offices with the term including parenthesis and office prefix and country abbre",
      "should return staff in specified offices with the term including parenthesis and office prefix and country abbre and right parenthesis"
    ],
    "Children": []
  },
  {
    "$id": "4595",
    "FileName": "when_update_staffs_infor_by_general_role.cs",
    "Description": "when update staffs by general role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4596",
        "FileName": "when_update_staffs_infor_by_general_role.cs",
        "Description": "when update self basic information",
        "WhenList": [
          "update self basic info"
        ],
        "ThenList": [
          "should success",
          "should change general role infor"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4597",
    "FileName": "when_update_staffs_info_by_global_admin.cs",
    "Description": "when update staffs info by global admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4598",
        "FileName": "when_update_staffs_info_by_global_admin.cs",
        "Description": "when update general user",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change general role infor"
        ],
        "Children": []
      },
      {
        "$id": "4599",
        "FileName": "when_update_staffs_info_by_global_admin.cs",
        "Description": "when reaching the country level role limited number",
        "WhenList": [
          "update general role to country level"
        ],
        "ThenList": [
          "should return bad request",
          "should return message"
        ],
        "Children": []
      },
      {
        "$id": "4600",
        "FileName": "when_update_staffs_info_by_global_admin.cs",
        "Description": "when reaching the office level role limited number",
        "WhenList": [
          "update staff role to office level"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "4601",
        "FileName": "when_update_staffs_info_by_global_admin.cs",
        "Description": "when update country level role",
        "WhenList": [
          "update general staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change country role infor"
        ],
        "Children": []
      },
      {
        "$id": "4602",
        "FileName": "when_update_staffs_info_by_global_admin.cs",
        "Description": "when update a global admin staff",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change staff infor"
        ],
        "Children": []
      },
      {
        "$id": "4603",
        "FileName": "when_update_staffs_info_by_global_admin.cs",
        "Description": "when update office level staff",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change staff infor"
        ],
        "Children": []
      },
      {
        "$id": "4604",
        "FileName": "when_update_staffs_info_by_global_admin.cs",
        "Description": "when update self info",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change general role infor"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4605",
    "FileName": "when_update_staffs_office.cs",
    "Description": "when update staff office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4606",
        "FileName": "when_update_staffs_office.cs",
        "Description": "should clear staff related responsibility",
        "WhenList": [
          "changing staff to leeds office"
        ],
        "ThenList": [
          "should return no content",
          "should clear all assignee acl",
          "should clear all engagement acl"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4607",
    "FileName": "when_update_staffs_role_info_by_country_level.cs",
    "Description": "when update staffs role info by country level",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4608",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when reaching the country level role limited number",
        "WhenList": [
          "update general role to country level"
        ],
        "ThenList": [
          "should return bad request",
          "should return message"
        ],
        "Children": []
      },
      {
        "$id": "4609",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when reaching the office level role limited number",
        "WhenList": [
          "update staff role to office level"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "4610",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update general user from same country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change general role infor"
        ],
        "Children": []
      },
      {
        "$id": "4611",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update general role access level to higher from same country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4612",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update general role from different country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4613",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update office level staff from same country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should update staff infor"
        ],
        "Children": []
      },
      {
        "$id": "4614",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update office level staff to higher level from same country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "4615",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update office level staff from different country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "4616",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update country level role from same country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should update staff infor"
        ],
        "Children": []
      },
      {
        "$id": "4617",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update country level staff to higher level from same country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "4618",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update country level role from different country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4619",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update global admin role from same country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should update staff infor"
        ],
        "Children": []
      },
      {
        "$id": "4620",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update global admin role from different country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should return forbidden when try to modify global admin"
        ],
        "Children": []
      },
      {
        "$id": "4621",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update global admin staff access level from same country",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4622",
        "FileName": "when_update_staffs_role_info_by_country_level.cs",
        "Description": "when update self info",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change general role infor"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4623",
    "FileName": "when_update_staff_employee_ids.cs",
    "Description": "when update staff employee ids",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4624",
        "FileName": "when_update_staff_employee_ids.cs",
        "Description": "when add employee ids by herself",
        "WhenList": [
          "changing staff to leeds office"
        ],
        "ThenList": [
          "should return no content",
          "should succeed changing employee ids"
        ],
        "Children": []
      },
      {
        "$id": "4625",
        "FileName": "when_update_staff_employee_ids.cs",
        "Description": "when delete employee ids by herself",
        "WhenList": [
          "changing staff to leeds office"
        ],
        "ThenList": [
          "should return bad request",
          "should not delete employee ids"
        ],
        "Children": []
      },
      {
        "$id": "4626",
        "FileName": "when_update_staff_employee_ids.cs",
        "Description": "when delete employee ids",
        "WhenList": [
          "delete staff one employee id"
        ],
        "ThenList": [
          "should return bad request",
          "should not delete staff employee ids"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4627",
    "FileName": "when_update_staff_infor_by_office_level_role.cs",
    "Description": "when update staff infor by office level role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4628",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update general role from same office",
        "WhenList": [
          "update general staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change general role infor"
        ],
        "Children": []
      },
      {
        "$id": "4629",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update general role access level to higher from same office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4630",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update general role from different office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4631",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when reaching the office level role limited number",
        "WhenList": [
          "update staff role to office level"
        ],
        "ThenList": [
          "should return bad request",
          "should return message"
        ],
        "Children": []
      },
      {
        "$id": "4632",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update country level staff from different office",
        "WhenList": [
          "update general staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4633",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update country level staff from same office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change staff infor"
        ],
        "Children": []
      },
      {
        "$id": "4634",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update country level staff access level from same office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4635",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update global admin staff from different office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4636",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update global admin staff from same office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change staff infor"
        ],
        "Children": []
      },
      {
        "$id": "4637",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update global admin staff access level from same office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4638",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update office level staff from different office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4639",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update office level staff from same office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change staff infor"
        ],
        "Children": []
      },
      {
        "$id": "4640",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update office level staff access level to low level from same office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should succeed",
          "should change staff infor"
        ],
        "Children": []
      },
      {
        "$id": "4641",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update office level staff access level to higher level from same office",
        "WhenList": [
          "update staff info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4642",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update self info",
        "WhenList": [
          "update self info"
        ],
        "ThenList": [
          "should succeed",
          "should change self infor"
        ],
        "Children": []
      },
      {
        "$id": "4643",
        "FileName": "when_update_staff_infor_by_office_level_role.cs",
        "Description": "when update self access level to higher level",
        "WhenList": [
          "update self info"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4644",
    "FileName": "when_update_staff_practice_type.cs",
    "Description": "when update staff practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4645",
        "FileName": "when_update_staff_practice_type.cs",
        "Description": "when update staff practice type by oneself with access global admin",
        "WhenList": [
          "changing staff to tax practice type"
        ],
        "ThenList": [
          "should return no content",
          "should succeed changing practice type"
        ],
        "Children": []
      },
      {
        "$id": "4646",
        "FileName": "when_update_staff_practice_type.cs",
        "Description": "when update staff practice type by oneself with access below global admin",
        "WhenList": [
          "changing staff to tax practice type"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4647",
        "FileName": "when_update_staff_practice_type.cs",
        "Description": "when update staff practice type by lou",
        "WhenList": [
          "changing staff to tax practice type"
        ],
        "ThenList": [
          "should return no content",
          "should succeed changing practice type"
        ],
        "Children": []
      },
      {
        "$id": "4648",
        "FileName": "when_update_staff_practice_type.cs",
        "Description": "when update staff practice type by grace no an immigration approver",
        "WhenList": [
          "changing staff to tax practice type"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4649",
        "FileName": "when_update_staff_practice_type.cs",
        "Description": "when update staff practice type by grace no an technology approver",
        "WhenList": [
          "changing staff to tax practice type"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4650",
        "FileName": "when_update_staff_practice_type.cs",
        "Description": "when update staff practice type by grace no have sofia practice type",
        "WhenList": [
          "changing staff to tax practice type"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4651",
        "FileName": "when_update_staff_practice_type.cs",
        "Description": "when update staff practice type by grace with restricted engagement",
        "WhenList": [
          "changing staff to tax practice type"
        ],
        "ThenList": [
          "should return no content",
          "should remove staff from engagement acl"
        ],
        "Children": []
      },
      {
        "$id": "4652",
        "FileName": "when_update_staff_practice_type.cs",
        "Description": "when update staff practice type by grace with restricted assignee",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4653",
            "FileName": "when_update_staff_practice_type.cs",
            "Description": "delete tax and immi practice type",
            "WhenList": [
              "change staff practice type"
            ],
            "ThenList": [
              "should return no content",
              "should remove staff from assignee acl"
            ],
            "Children": []
          },
          {
            "$id": "4654",
            "FileName": "when_update_staff_practice_type.cs",
            "Description": "delete immi practice type",
            "WhenList": [
              "change staff practice type"
            ],
            "ThenList": [
              "should return no content",
              "should remove staff from assignee acl"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4655",
        "FileName": "when_update_staff_practice_type.cs",
        "Description": "when remove staff tax practice type by grace",
        "WhenList": [
          "inactivate staff"
        ],
        "ThenList": [
          "should return no content",
          "should remove efile group member"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4656",
    "FileName": "when_create_tag.cs",
    "Description": "when create tag",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4657",
        "FileName": "when_create_tag.cs",
        "Description": "when request is valid and current user is global admin",
        "WhenList": [
          "create tag"
        ],
        "ThenList": [
          "should succeed",
          "should create tag"
        ],
        "Children": []
      },
      {
        "$id": "4658",
        "FileName": "when_create_tag.cs",
        "Description": "when current user is country level",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4659",
            "FileName": "when_create_tag.cs",
            "Description": "when create tag for office in my country",
            "WhenList": [
              "create tag"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          },
          {
            "$id": "4660",
            "FileName": "when_create_tag.cs",
            "Description": "when create tag for office out of my country",
            "WhenList": [
              "create tag"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4661",
        "FileName": "when_create_tag.cs",
        "Description": "when current user is office level",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4662",
            "FileName": "when_create_tag.cs",
            "Description": "when create tag for my office",
            "WhenList": [
              "create tag"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          },
          {
            "$id": "4663",
            "FileName": "when_create_tag.cs",
            "Description": "when create tag for other office",
            "WhenList": [
              "create tag"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4664",
        "FileName": "when_create_tag.cs",
        "Description": "when current user is general level",
        "WhenList": [
          "create tag"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4665",
        "FileName": "when_create_tag.cs",
        "Description": "when request is invalid",
        "WhenList": [
          "create tag"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4666",
    "FileName": "when_get_tags.cs",
    "Description": "when get tags",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4667",
        "FileName": "when_get_tags.cs",
        "Description": "when get tag by a office uri",
        "WhenList": [
          "get tags"
        ],
        "ThenList": [
          "should succeed",
          "should return tags by office uri"
        ],
        "Children": []
      },
      {
        "$id": "4668",
        "FileName": "when_get_tags.cs",
        "Description": "when get tags by office uris",
        "WhenList": [
          "get tags"
        ],
        "ThenList": [
          "should succeed",
          "should return tags for each office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4669",
    "FileName": "when_get_tag_by_id.cs",
    "Description": "when get tag by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4670",
        "FileName": "when_get_tag_by_id.cs",
        "Description": "when user is global admin",
        "WhenList": [
          "get tag"
        ],
        "ThenList": [
          "should succeed",
          "should return tag by tag id"
        ],
        "Children": []
      },
      {
        "$id": "4671",
        "FileName": "when_get_tag_by_id.cs",
        "Description": "when user is counrty level",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4672",
            "FileName": "when_get_tag_by_id.cs",
            "Description": "when get tag in my country",
            "WhenList": [
              "get tag"
            ],
            "ThenList": [
              "should succeed",
              "should return tag by tag id"
            ],
            "Children": []
          },
          {
            "$id": "4673",
            "FileName": "when_get_tag_by_id.cs",
            "Description": "when get tag out of my country",
            "WhenList": [
              "get tag"
            ],
            "ThenList": [
              "should succeed",
              "should return tag by tag id"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4674",
        "FileName": "when_get_tag_by_id.cs",
        "Description": "when user is office level",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4675",
            "FileName": "when_get_tag_by_id.cs",
            "Description": "when get tag in my office",
            "WhenList": [
              "get tag"
            ],
            "ThenList": [
              "should succeed",
              "should return tag by tag id"
            ],
            "Children": []
          },
          {
            "$id": "4676",
            "FileName": "when_get_tag_by_id.cs",
            "Description": "when get tag out of my office",
            "WhenList": [
              "get tag"
            ],
            "ThenList": [
              "should succeed",
              "should return tag by tag id"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4677",
        "FileName": "when_get_tag_by_id.cs",
        "Description": "when is general user",
        "WhenList": [
          "get tag"
        ],
        "ThenList": [
          "should succeed",
          "should return tag by tag id"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4678",
    "FileName": "when_update_tag.cs",
    "Description": "when update tag",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4679",
        "FileName": "when_update_tag.cs",
        "Description": "when request is valid and current user is global admin",
        "WhenList": [
          "update tag"
        ],
        "ThenList": [
          "should return ok",
          "should update tag"
        ],
        "Children": []
      },
      {
        "$id": "4680",
        "FileName": "when_update_tag.cs",
        "Description": "when current user is country level",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4681",
            "FileName": "when_update_tag.cs",
            "Description": "when update tag for office in my country",
            "WhenList": [
              "update tag"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "4682",
            "FileName": "when_update_tag.cs",
            "Description": "when update tag for office out of my country",
            "WhenList": [
              "update tag"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4683",
        "FileName": "when_update_tag.cs",
        "Description": "when current user is office level",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4684",
            "FileName": "when_update_tag.cs",
            "Description": "when update tag for my office",
            "WhenList": [
              "update tag"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "4685",
            "FileName": "when_update_tag.cs",
            "Description": "when update tag for other office",
            "WhenList": [
              "update tag"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4686",
        "FileName": "when_update_tag.cs",
        "Description": "when current user is general level",
        "WhenList": [
          "update tag"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4687",
        "FileName": "when_update_tag.cs",
        "Description": "when request is invalid",
        "WhenList": [
          "update tag"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4688",
    "FileName": "when_create_tasktemplate_by_global_admin.cs",
    "Description": "when create tasktemplate by global admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4689",
        "FileName": "when_create_tasktemplate_by_global_admin.cs",
        "Description": "when create tax task template with valid request",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should get 201",
          "should return uri of created task template in location header",
          "should create task template"
        ],
        "Children": []
      },
      {
        "$id": "4690",
        "FileName": "when_create_tasktemplate_by_global_admin.cs",
        "Description": "when create immigration task template with valid request",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should get 201",
          "should return uri of created task template in location header",
          "should create task template"
        ],
        "Children": []
      },
      {
        "$id": "4691",
        "FileName": "when_create_tasktemplate_by_global_admin.cs",
        "Description": "when create social security task template with valid request",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should get 201",
          "should return uri of created task template in location header",
          "should create task template"
        ],
        "Children": []
      },
      {
        "$id": "4692",
        "FileName": "when_create_tasktemplate_by_global_admin.cs",
        "Description": "when create task temlpate without specifying tasks",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should get 201",
          "should return uri of created task template in location header"
        ],
        "Children": []
      },
      {
        "$id": "4693",
        "FileName": "when_create_tasktemplate_by_global_admin.cs",
        "Description": "when create task temlpate with invalid request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4694",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when name is not given",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4695",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when name is empty",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4696",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when name exceeds max length limit 255",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4697",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when owned by is not given",
            "WhenList": [
              "given request without owned country"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4698",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when owned by is invalid",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4699",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when task name is not provided",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4700",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when task name is invalid",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4701",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when task name exceeds max length limit 255",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4702",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when subscribed office country uri is invalid",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4703",
            "FileName": "when_create_tasktemplate_by_global_admin.cs",
            "Description": "when name is duplicated",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 409 CONFLICT as status code"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4704",
    "FileName": "when_create_tasktemplate_for_engagement.cs",
    "Description": "when create tasktemplate for engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4705",
        "FileName": "when_create_tasktemplate_for_engagement.cs",
        "Description": "when create engagement task template with valid request",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should get 201",
          "should return uri of created task template in location header",
          "should create task template"
        ],
        "Children": []
      },
      {
        "$id": "4706",
        "FileName": "when_create_tasktemplate_for_engagement.cs",
        "Description": "when create task temlpate without specifying tasks",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should get 201",
          "should return uri of created task template in location header"
        ],
        "Children": []
      },
      {
        "$id": "4707",
        "FileName": "when_create_tasktemplate_for_engagement.cs",
        "Description": "when create task temlpate with invalid request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4708",
            "FileName": "when_create_tasktemplate_for_engagement.cs",
            "Description": "when name is not given",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4709",
            "FileName": "when_create_tasktemplate_for_engagement.cs",
            "Description": "when name is empty",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4710",
            "FileName": "when_create_tasktemplate_for_engagement.cs",
            "Description": "when name exceeds max length limit 255",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4711",
            "FileName": "when_create_tasktemplate_for_engagement.cs",
            "Description": "when owned by is not given",
            "WhenList": [
              "given request without owned country"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4712",
            "FileName": "when_create_tasktemplate_for_engagement.cs",
            "Description": "when owned by is invalid",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4713",
            "FileName": "when_create_tasktemplate_for_engagement.cs",
            "Description": "when task name is not provided",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4714",
            "FileName": "when_create_tasktemplate_for_engagement.cs",
            "Description": "when task name is invalid",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          },
          {
            "$id": "4715",
            "FileName": "when_create_tasktemplate_for_engagement.cs",
            "Description": "when task name exceeds max length limit 255",
            "WhenList": [
              "create task template"
            ],
            "ThenList": [
              "should return 400 BAD REQUEST as status code"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4716",
    "FileName": "when_create_tasktemplate_for_engagement_by_different_user.cs",
    "Description": "when create tasktemplate for engagement by different user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4717",
        "FileName": "when_create_tasktemplate_for_engagement_by_different_user.cs",
        "Description": "when staff is engagement admin",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should get 201",
          "should return uri of created task template in location header",
          "should create task template"
        ],
        "Children": []
      },
      {
        "$id": "4718",
        "FileName": "when_create_tasktemplate_for_engagement_by_different_user.cs",
        "Description": "when staff is not engagement admin",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4719",
        "FileName": "when_create_tasktemplate_for_engagement_by_different_user.cs",
        "Description": "show create task template when staff is coordinating primary contact",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "4720",
        "FileName": "when_create_tasktemplate_for_engagement_by_different_user.cs",
        "Description": "show create task template when staff is coordinating secondary contact",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "4721",
        "FileName": "when_create_tasktemplate_for_engagement_by_different_user.cs",
        "Description": "show create task template when staff is delegated primary contact",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "4722",
        "FileName": "when_create_tasktemplate_for_engagement_by_different_user.cs",
        "Description": "show create task template when staff is delegated secondary contact",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should be created"
        ],
        "Children": []
      },
      {
        "$id": "4723",
        "FileName": "when_create_tasktemplate_for_engagement_by_different_user.cs",
        "Description": "when staff is global admin",
        "WhenList": [
          "create with valid request"
        ],
        "ThenList": [
          "should get 201"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4724",
    "FileName": "when_delete_template_should_delete_dirty_data.cs",
    "Description": "when delete template should delete dirty data",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4725",
        "FileName": "when_delete_template_should_delete_dirty_data.cs",
        "Description": "when delete task from task template used by two workrecord",
        "WhenList": [
          "delete the task from template after create work record"
        ],
        "ThenList": [
          "should delete assignments if not started and keeping started task"
        ],
        "Children": []
      },
      {
        "$id": "4726",
        "FileName": "when_delete_template_should_delete_dirty_data.cs",
        "Description": "when delete task from task template used only once",
        "WhenList": [
          "delete the task from template after create work record"
        ],
        "ThenList": [
          "should delete assignments if not started and keeping started task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4727",
    "FileName": "when_get_all_checklist_templates_for_others.cs",
    "Description": "when get all checklist templates for others",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should get all checklist templates"
    ],
    "Children": []
  },
  {
    "$id": "4728",
    "FileName": "when_get_all_task_templates.cs",
    "Description": "when get all task templates",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should get all task templates"
    ],
    "Children": []
  },
  {
    "$id": "4729",
    "FileName": "when_get_all_task_templates_for_others.cs",
    "Description": "when get all task templates for others",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should get all task templates"
    ],
    "Children": []
  },
  {
    "$id": "4730",
    "FileName": "when_get_engagement_task_templates.cs",
    "Description": "when get engagment task templates",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should get task template for engagment"
    ],
    "Children": []
  },
  {
    "$id": "4731",
    "FileName": "when_get_merged_checklist_definitions.cs",
    "Description": "when get merged checklist definitions",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4732",
        "FileName": "when_get_merged_checklist_definitions.cs",
        "Description": "should return empty when does not given any checklist template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get default task definitions in default task template"
        ],
        "Children": []
      },
      {
        "$id": "4733",
        "FileName": "when_get_merged_checklist_definitions.cs",
        "Description": "should return tasks in checklist template when only given checklist template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get task definitions in task template"
        ],
        "Children": []
      },
      {
        "$id": "4734",
        "FileName": "when_get_merged_checklist_definitions.cs",
        "Description": "should return tasks in engaged checklist template when only given engagement checklist template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get task definitions in task template"
        ],
        "Children": []
      },
      {
        "$id": "4735",
        "FileName": "when_get_merged_checklist_definitions.cs",
        "Description": "should return tasks in checklist template and engagement checklist template when given engaged task template and task template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get task definitions in task template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4736",
    "FileName": "when_get_merged_task_definitions.cs",
    "Description": "when get merged task definitions",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4737",
        "FileName": "when_get_merged_task_definitions.cs",
        "Description": "when task template with custom task definitions for all milestones",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4738",
            "FileName": "when_get_merged_task_definitions.cs",
            "Description": "should return default tasks in default task template when does not given any task template",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should get default task definitions in default task template"
            ],
            "Children": []
          },
          {
            "$id": "4739",
            "FileName": "when_get_merged_task_definitions.cs",
            "Description": "should return default employer tasks in default task template when does not give any task template and give employer type",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should get default task definitions in default task template"
            ],
            "Children": []
          },
          {
            "$id": "4740",
            "FileName": "when_get_merged_task_definitions.cs",
            "Description": "should return bad request when get employer task template for immgration",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad reqeust"
            ],
            "Children": []
          },
          {
            "$id": "4741",
            "FileName": "when_get_merged_task_definitions.cs",
            "Description": "should return tasks in task template when only given task template",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should get task definitions in task template"
            ],
            "Children": []
          },
          {
            "$id": "4742",
            "FileName": "when_get_merged_task_definitions.cs",
            "Description": "should return tasks in engaged task template when only given engaged task template",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should get task definitions in task template"
            ],
            "Children": []
          },
          {
            "$id": "4743",
            "FileName": "when_get_merged_task_definitions.cs",
            "Description": "should return tasks in task template and engaged task template when given engaged task template and task template",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should get task definitions in task template"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4744",
        "FileName": "when_get_merged_task_definitions.cs",
        "Description": "when task template with custom task definitions for some milestones",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4745",
            "FileName": "when_get_merged_task_definitions.cs",
            "Description": "country task template with default task definition",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return default task definition from default task template"
            ],
            "Children": []
          },
          {
            "$id": "4746",
            "FileName": "when_get_merged_task_definitions.cs",
            "Description": "engagement task template with default task definition",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return default task definition from default task template"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4747",
    "FileName": "when_get_merged_task_definitions_for_immigration_work_record.cs",
    "Description": "when get merged task definitions for immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4748",
        "FileName": "when_get_merged_task_definitions_for_immigration_work_record.cs",
        "Description": "should return merged tasks given country and engagement task template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get task definitions"
        ],
        "Children": []
      },
      {
        "$id": "4749",
        "FileName": "when_get_merged_task_definitions_for_immigration_work_record.cs",
        "Description": "should return merged tasks with default tasks and definition tasks",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get task definitions"
        ],
        "Children": []
      },
      {
        "$id": "4750",
        "FileName": "when_get_merged_task_definitions_for_immigration_work_record.cs",
        "Description": "should return default tasks with service milestone when get immigration application work record tasks",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get default task definitions in default task template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4751",
    "FileName": "when_get_task_template.cs",
    "Description": "when get task template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4752",
        "FileName": "when_get_task_template.cs",
        "Description": "when get with existing task template id",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4753",
            "FileName": "when_get_task_template.cs",
            "Description": "when is country level role",
            "WhenList": [
              "when get task template details"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should contains template edit link"
            ],
            "Children": []
          },
          {
            "$id": "4754",
            "FileName": "when_get_task_template.cs",
            "Description": "when is general user",
            "WhenList": [
              "when get task template details"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should return task template details info"
            ],
            "Children": []
          },
          {
            "$id": "4755",
            "FileName": "when_get_task_template.cs",
            "Description": "when is office level",
            "WhenList": [
              "when get task template details"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should contains template edit link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4756",
    "FileName": "when_get_task_templates_for_inactive_engagement.cs",
    "Description": "when get task templates for inactive engagement",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should get task template for engagment"
    ],
    "Children": []
  },
  {
    "$id": "4757",
    "FileName": "when_get_task_template_by_different_users.cs",
    "Description": "when get task template by different users",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4758",
        "FileName": "when_get_task_template_by_different_users.cs",
        "Description": "when get with existing task template id",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4759",
            "FileName": "when_get_task_template_by_different_users.cs",
            "Description": "when is global admin",
            "WhenList": [
              "when get task template details"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should return task template details info"
            ],
            "Children": []
          },
          {
            "$id": "4760",
            "FileName": "when_get_task_template_by_different_users.cs",
            "Description": "when is engagement admin",
            "WhenList": [
              "when get task template details"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should contain the edit link"
            ],
            "Children": []
          },
          {
            "$id": "4761",
            "FileName": "when_get_task_template_by_different_users.cs",
            "Description": "when is not engagement admin",
            "WhenList": [
              "when get task template details"
            ],
            "ThenList": [
              "should return 200 OK as status code",
              "should not contain the edit link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4762",
    "FileName": "when_search_for_task_templates.cs",
    "Description": "when search for task templates",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should get one task templates"
    ],
    "Children": []
  },
  {
    "$id": "4763",
    "FileName": "when_update_engagement_task_template.cs",
    "Description": "when update engagement task template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4764",
        "FileName": "when_update_engagement_task_template.cs",
        "Description": "when update task template with valid request",
        "WhenList": [
          "when get task template details"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      },
      {
        "$id": "4765",
        "FileName": "when_update_engagement_task_template.cs",
        "Description": "when update task template",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4766",
            "FileName": "when_update_engagement_task_template.cs",
            "Description": "by engagement role",
            "WhenList": [
              "when get task template details"
            ],
            "ThenList": [
              "should return 200 OK as status code"
            ],
            "Children": []
          },
          {
            "$id": "4767",
            "FileName": "when_update_engagement_task_template.cs",
            "Description": "by global admin",
            "WhenList": [
              "when get task template details"
            ],
            "ThenList": [
              "should return 200 OK as status code"
            ],
            "Children": []
          },
          {
            "$id": "4768",
            "FileName": "when_update_engagement_task_template.cs",
            "Description": "by not engagemt role or global admin",
            "WhenList": [
              "when get task template details"
            ],
            "ThenList": [
              "should be forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4769",
    "FileName": "when_update_immigration_task_template_by_global_admin.cs",
    "Description": "when update immigration task template by global admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4770",
        "FileName": "when_update_immigration_task_template_by_global_admin.cs",
        "Description": "when update task template with valid request",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4771",
    "FileName": "when_update_task_template_by_country_level_and_general_user.cs",
    "Description": "when update task template by country level and general user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4772",
        "FileName": "when_update_task_template_by_country_level_and_general_user.cs",
        "Description": "when the user is country user and task template owned by is different with the user country",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4773",
            "FileName": "when_update_task_template_by_country_level_and_general_user.cs",
            "Description": "when update task template name",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "4774",
            "FileName": "when_update_task_template_by_country_level_and_general_user.cs",
            "Description": "when update task template task definitions",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "4775",
            "FileName": "when_update_task_template_by_country_level_and_general_user.cs",
            "Description": "when add new task template task definition",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "4776",
            "FileName": "when_update_task_template_by_country_level_and_general_user.cs",
            "Description": "when update task template subscriptions with different countries",
            "WhenList": [
              "when update task template"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4777",
        "FileName": "when_update_task_template_by_country_level_and_general_user.cs",
        "Description": "when update task template with template owned by equal with country user",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4778",
        "FileName": "when_update_task_template_by_country_level_and_general_user.cs",
        "Description": "when general user update task template",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4779",
    "FileName": "when_update_task_template_by_global_admin.cs",
    "Description": "when update task template by global admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4780",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with valid request",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      },
      {
        "$id": "4781",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with empty tasks",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      },
      {
        "$id": "4782",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with invalid request",
        "WhenList": [
          "when get task template details"
        ],
        "ThenList": [
          "should return 400 BADREQUEST as status code"
        ],
        "Children": []
      },
      {
        "$id": "4783",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with service with practice type does not match template practice type",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4784",
    "FileName": "when_update_task_template_by_global_admin.cs",
    "Description": "when update task template with task template has empty task by global admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4785",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with change task name",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      },
      {
        "$id": "4786",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with delete initated task",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      },
      {
        "$id": "4787",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with add new task",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4788",
    "FileName": "when_update_task_template_by_global_admin.cs",
    "Description": "when updete old task template for compatible reason",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4789",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with change task name",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      },
      {
        "$id": "4790",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with delete initated task",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      },
      {
        "$id": "4791",
        "FileName": "when_update_task_template_by_global_admin.cs",
        "Description": "when update task template with add new task",
        "WhenList": [
          "when update task template"
        ],
        "ThenList": [
          "should return 200 OK as status code",
          "should return task template details info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4792",
    "FileName": "when_receive_file_cabinet_event.cs",
    "Description": "when receive file cabinet event",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4793",
        "FileName": "when_receive_file_cabinet_event.cs",
        "Description": "should save tax return file when receive publish event",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should save tax return file"
        ],
        "Children": []
      },
      {
        "$id": "4794",
        "FileName": "when_receive_file_cabinet_event.cs",
        "Description": "should save tax return file when receive upload event",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should save tax return file"
        ],
        "Children": []
      },
      {
        "$id": "4795",
        "FileName": "when_receive_file_cabinet_event.cs",
        "Description": "should delete tax return file when receive delete event",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should delete tax return file"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4796",
    "FileName": "when_change_engagement_reminder_status.cs",
    "Description": "when change engagement reminder status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4797",
        "FileName": "when_change_engagement_reminder_status.cs",
        "Description": "when turn on reminder",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4798",
            "FileName": "when_change_engagement_reminder_status.cs",
            "Description": "should send email for nonissue and nofillingrequirement taxreturn workrecord",
            "WhenList": [
              "job trigger tax return report download reminder"
            ],
            "ThenList": [
              "should return ok",
              "should send email",
              "should record record reminder time and file info"
            ],
            "Children": []
          },
          {
            "$id": "4799",
            "FileName": "when_change_engagement_reminder_status.cs",
            "Description": "should sent email only once for one reminder",
            "WhenList": [
              "job trigger tax return report download reminder"
            ],
            "ThenList": [
              "should no need send email any more"
            ],
            "Children": []
          },
          {
            "$id": "4800",
            "FileName": "when_change_engagement_reminder_status.cs",
            "Description": "should email from be team mailbox",
            "WhenList": [
              "job trigger tax return report download reminder"
            ],
            "ThenList": [
              "should email from is team mailbox"
            ],
            "Children": []
          },
          {
            "$id": "4801",
            "FileName": "when_change_engagement_reminder_status.cs",
            "Description": "should email from be questionnaire contact when team mailbox is empty",
            "WhenList": [
              "job trigger tax return report download reminder"
            ],
            "ThenList": [
              "should email from is team mailbox"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4802",
        "FileName": "when_change_engagement_reminder_status.cs",
        "Description": "when turn off reminder",
        "WhenList": [
          "job trigger send email"
        ],
        "ThenList": [
          "should not send any email"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4803",
    "FileName": "when_set_follow_up_reminder.cs",
    "Description": "when set follow up reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4804",
        "FileName": "when_set_follow_up_reminder.cs",
        "Description": "should send email for nonissue and nofillingrequirement taxreturn workrecord",
        "WhenList": [
          "job trigger tax return report download reminder"
        ],
        "ThenList": [
          "should return ok",
          "should send email",
          "should record record reminder time and file info"
        ],
        "Children": []
      },
      {
        "$id": "4805",
        "FileName": "when_set_follow_up_reminder.cs",
        "Description": "should send only one email for nonissue and nofillingrequirement taxreturn workrecord",
        "WhenList": [
          "job trigger tax return report download reminder after turn off and turn on"
        ],
        "ThenList": [
          "should return ok",
          "should send email",
          "should record record reminder time and file info"
        ],
        "Children": []
      },
      {
        "$id": "4806",
        "FileName": "when_set_follow_up_reminder.cs",
        "Description": "should send email for initial reminder and first follow up reminder",
        "WhenList": [
          "job trigger tax return report download reminder"
        ],
        "ThenList": [
          "should return ok",
          "should send two emails",
          "should record record reminder time and file info"
        ],
        "Children": []
      },
      {
        "$id": "4807",
        "FileName": "when_set_follow_up_reminder.cs",
        "Description": "should send follow up reminder emails",
        "WhenList": [],
        "ThenList": [
          "should send follow up reminders and record history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4808",
    "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled.cs",
    "Description": "when tax return workrecord tax return report reminder enabled",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4809",
        "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled.cs",
        "Description": "should not send email for work record",
        "WhenList": [],
        "ThenList": [
          "should not send email"
        ],
        "Children": []
      },
      {
        "$id": "4810",
        "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled.cs",
        "Description": "should only send first email for work record in engagement with followup reminders disabled",
        "WhenList": [
          "job trigger tax return report download reminder"
        ],
        "ThenList": [
          "should return ok",
          "should only send first email for work record"
        ],
        "Children": []
      },
      {
        "$id": "4811",
        "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled.cs",
        "Description": "should only send email for work record whose tax return report reminder enabled",
        "WhenList": [
          "job trigger tax return report download reminder"
        ],
        "ThenList": [
          "should return ok",
          "should send email for one work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4812",
    "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled_and_workrecord_four_eyes_review_disabled.cs",
    "Description": "when tax return workrecord tax return report reminder enabled and workrecord four eyes review disabled",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4813",
        "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled_and_workrecord_four_eyes_review_disabled.cs",
        "Description": "should not send email for work record",
        "WhenList": [],
        "ThenList": [
          "should not send email"
        ],
        "Children": []
      },
      {
        "$id": "4814",
        "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled_and_workrecord_four_eyes_review_disabled.cs",
        "Description": "should only send email for work record whose tax return report reminder enabled",
        "WhenList": [
          "job trigger tax return report download reminder"
        ],
        "ThenList": [
          "should return ok",
          "should send email for one work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4815",
    "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled_and_work_record_is_inactive.cs",
    "Description": "when tax return workrecord tax return report reminder enabled and work record is inactive",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4816",
        "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled_and_work_record_is_inactive.cs",
        "Description": "should not send email for work record when engagement is inactive",
        "WhenList": [],
        "ThenList": [
          "should not send email"
        ],
        "Children": []
      },
      {
        "$id": "4817",
        "FileName": "when_tax_return_workrecord_tax_return_report_reminder_enabled_and_work_record_is_inactive.cs",
        "Description": "should not send email for work record when assignee is inactive",
        "WhenList": [],
        "ThenList": [
          "should not send email"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4818",
    "FileName": "when_tax_return_workrecord_with_team_mail_box.cs",
    "Description": "when tax return workrecord with team mail box",
    "WhenList": [
      "job trigger tax return report download reminder"
    ],
    "ThenList": [
      "should return ok",
      "should send email for one work record"
    ],
    "Children": []
  },
  {
    "$id": "4819",
    "FileName": "when_change_team_admins.cs",
    "Description": "when change team admins",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4820",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when add a team administator",
        "WhenList": [
          "add an administator to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team administators change event"
        ],
        "Children": []
      },
      {
        "$id": "4821",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when remove a team administrator",
        "WhenList": [
          "remove an administator from team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team administators change event"
        ],
        "Children": []
      },
      {
        "$id": "4822",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when add two team administrators",
        "WhenList": [
          "add two administators to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4823",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when change a team administrators",
        "WhenList": [
          "change administators to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4824",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when inactive a team adminstrator",
        "WhenList": [
          "inactive an admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4825",
        "FileName": "when_change_team_admins.cs",
        "Description": "should not raise team information changed event when not change administrators",
        "WhenList": [
          "not change"
        ],
        "ThenList": [
          "should return ok",
          "should not raise event"
        ],
        "Children": []
      },
      {
        "$id": "4826",
        "FileName": "when_change_team_admins.cs",
        "Description": "should not raise team information changed event when inactive an staff is not admin",
        "WhenList": [
          "inactive an staff"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4827",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when inactive last team admin and a office level staff exist",
        "WhenList": [
          "inactive the admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4828",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when inactive last team admin and a country level staff exist",
        "WhenList": [
          "inactive the admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4829",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when inactive last team admin and a global level staff exist",
        "WhenList": [
          "inactive an admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4830",
    "FileName": "when_change_team_members.cs",
    "Description": "when change team members",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4831",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise change team members event when add a team member",
        "WhenList": [
          "add an member to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4832",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise change team members event when add two team members",
        "WhenList": [
          "add two administators to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4833",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise change team members event when change members",
        "WhenList": [
          "add two administators to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4834",
        "FileName": "when_change_team_members.cs",
        "Description": "should not raise team members change event when not change members",
        "WhenList": [
          "not change just update"
        ],
        "ThenList": [
          "should return ok",
          "should not raise event"
        ],
        "Children": []
      },
      {
        "$id": "4835",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise team members change event when remove a member",
        "WhenList": [
          "remove a member from team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4836",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise team members change event when remove all members",
        "WhenList": [
          "remove all members from team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4837",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise team members changed event when inactive a team member",
        "WhenList": [
          "inactive an member"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4838",
        "FileName": "when_change_team_members.cs",
        "Description": "should not raise team members changed event when inactive an staff is not member",
        "WhenList": [
          "inactive an admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4839",
    "FileName": "when_create_team.cs",
    "Description": "when create team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4840",
        "FileName": "when_create_team.cs",
        "Description": "should create team with member",
        "WhenList": [
          "create team for office"
        ],
        "ThenList": [
          "should return created",
          "should raise team created event"
        ],
        "Children": []
      },
      {
        "$id": "4841",
        "FileName": "when_create_team.cs",
        "Description": "should create team without member",
        "WhenList": [
          "create team for office"
        ],
        "ThenList": [
          "should return created",
          "should raise team created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4842",
    "FileName": "when_delete_team.cs",
    "Description": "when delete team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4843",
        "FileName": "when_delete_team.cs",
        "Description": "should raise team deleted event when inactive last team administrator with non members",
        "WhenList": [
          "inactive the admin"
        ],
        "ThenList": [
          "should return no content",
          "should raise team deleted event"
        ],
        "Children": []
      },
      {
        "$id": "4844",
        "FileName": "when_delete_team.cs",
        "Description": "should raise team deleted event when inactive last team administrator with same members",
        "WhenList": [
          "inactive the admin"
        ],
        "ThenList": [
          "should return no content",
          "should raise team deleted event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4845",
    "FileName": "when_change_team_admins.cs",
    "Description": "when change team admins",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4846",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when add a team administator",
        "WhenList": [
          "add an administator to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team administators change event"
        ],
        "Children": []
      },
      {
        "$id": "4847",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when remove a team administrator",
        "WhenList": [
          "remove an administator from team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team administators change event"
        ],
        "Children": []
      },
      {
        "$id": "4848",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when add two team administrators",
        "WhenList": [
          "add two administators to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4849",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when change a team administrators",
        "WhenList": [
          "change administators to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4850",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when inactive a team adminstrator",
        "WhenList": [
          "inactive an admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4851",
        "FileName": "when_change_team_admins.cs",
        "Description": "should not raise team information changed event when not change administrators",
        "WhenList": [
          "not change"
        ],
        "ThenList": [
          "should return ok",
          "should not raise event"
        ],
        "Children": []
      },
      {
        "$id": "4852",
        "FileName": "when_change_team_admins.cs",
        "Description": "should not raise team information changed event when inactive an staff is not admin",
        "WhenList": [
          "inactive an staff"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4853",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when inactive last team admin and a office level staff exist",
        "WhenList": [
          "inactive the admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4854",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when inactive last team admin and a country level staff exist",
        "WhenList": [
          "inactive the admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      },
      {
        "$id": "4855",
        "FileName": "when_change_team_admins.cs",
        "Description": "should raise team information changed event when inactive last team admin and a global level staff exist",
        "WhenList": [
          "inactive an admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team information changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4856",
    "FileName": "when_change_team_members.cs",
    "Description": "when change team members",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4857",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise change team members event when add a team member",
        "WhenList": [
          "add an member to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4858",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise change team members event when add two team members",
        "WhenList": [
          "add two administators to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4859",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise change team members event when change members",
        "WhenList": [
          "add two administators to team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4860",
        "FileName": "when_change_team_members.cs",
        "Description": "should not raise team members change event when not change members",
        "WhenList": [
          "not change just update"
        ],
        "ThenList": [
          "should return ok",
          "should not raise event"
        ],
        "Children": []
      },
      {
        "$id": "4861",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise team members change event when remove a member",
        "WhenList": [
          "remove a member from team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4862",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise team members change event when remove all members",
        "WhenList": [
          "remove all members from team"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4863",
        "FileName": "when_change_team_members.cs",
        "Description": "should raise team members changed event when inactive a team member",
        "WhenList": [
          "inactive an member"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      },
      {
        "$id": "4864",
        "FileName": "when_change_team_members.cs",
        "Description": "should not raise team members changed event when inactive an staff is not member",
        "WhenList": [
          "inactive an admin"
        ],
        "ThenList": [
          "should return ok",
          "should raise team member change event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4865",
    "FileName": "when_create_team.cs",
    "Description": "when create team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4866",
        "FileName": "when_create_team.cs",
        "Description": "should create team with member",
        "WhenList": [
          "create team for office"
        ],
        "ThenList": [
          "should return created",
          "should raise team created event"
        ],
        "Children": []
      },
      {
        "$id": "4867",
        "FileName": "when_create_team.cs",
        "Description": "should create team without member",
        "WhenList": [
          "create team for office"
        ],
        "ThenList": [
          "should return created",
          "should raise team created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4868",
    "FileName": "when_delete_team.cs",
    "Description": "when delete team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4869",
        "FileName": "when_delete_team.cs",
        "Description": "should raise team deleted event when inactive last team administrator with non members",
        "WhenList": [
          "inactive the admin"
        ],
        "ThenList": [
          "should return no content",
          "should raise team deleted event"
        ],
        "Children": []
      },
      {
        "$id": "4870",
        "FileName": "when_delete_team.cs",
        "Description": "should raise team deleted event when inactive last team administrator with same members",
        "WhenList": [
          "inactive the admin"
        ],
        "ThenList": [
          "should return no content",
          "should raise team deleted event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4871",
    "FileName": "when_create_team.cs",
    "Description": "when create team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4872",
        "FileName": "when_create_team.cs",
        "Description": "should create team with proper infomation",
        "WhenList": [
          "create team for office"
        ],
        "ThenList": [
          "should return created",
          "should return created team"
        ],
        "Children": []
      },
      {
        "$id": "4873",
        "FileName": "when_create_team.cs",
        "Description": "should not create team with exisited name",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4874",
            "FileName": "when_create_team.cs",
            "Description": "when duplicate name in same office",
            "WhenList": [
              "create with existed name in same office"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "4875",
            "FileName": "when_create_team.cs",
            "Description": "when name duplicate in different office",
            "WhenList": [
              "create with existed team name of other office"
            ],
            "ThenList": [
              "should return created"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4876",
        "FileName": "when_create_team.cs",
        "Description": "should contain at least one administrator",
        "WhenList": [
          "create with existed name"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "4877",
        "FileName": "when_create_team.cs",
        "Description": "should request members valid",
        "WhenList": [
          "create with invalid member uri"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "4878",
        "FileName": "when_create_team.cs",
        "Description": "should request admin valid",
        "WhenList": [
          "create with invalid member uri"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "4879",
        "FileName": "when_create_team.cs",
        "Description": "should contain at most three administrators",
        "WhenList": [
          "create with existed name"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4880",
    "FileName": "when_create_team_with_different_role.cs",
    "Description": "when create team with different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4881",
        "FileName": "when_create_team_with_different_role.cs",
        "Description": "when current user is general role",
        "WhenList": [
          "create team for office"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4882",
        "FileName": "when_create_team_with_different_role.cs",
        "Description": "when is office level role",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4883",
            "FileName": "when_create_team_with_different_role.cs",
            "Description": "can create team for self office",
            "WhenList": [
              "create team for office"
            ],
            "ThenList": [
              "should return created"
            ],
            "Children": []
          },
          {
            "$id": "4884",
            "FileName": "when_create_team_with_different_role.cs",
            "Description": "can not create team for other office",
            "WhenList": [
              "create team for office"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4885",
        "FileName": "when_create_team_with_different_role.cs",
        "Description": "when is country role",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4886",
            "FileName": "when_create_team_with_different_role.cs",
            "Description": "can create team for office in self country",
            "WhenList": [
              "create team for office"
            ],
            "ThenList": [
              "should return created"
            ],
            "Children": []
          },
          {
            "$id": "4887",
            "FileName": "when_create_team_with_different_role.cs",
            "Description": "can not create team for office in other country",
            "WhenList": [
              "create team for office"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4888",
        "FileName": "when_create_team_with_different_role.cs",
        "Description": "when is global admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4889",
            "FileName": "when_create_team_with_different_role.cs",
            "Description": "can create team for office in self country",
            "WhenList": [
              "create team for office"
            ],
            "ThenList": [
              "should return created"
            ],
            "Children": []
          },
          {
            "$id": "4890",
            "FileName": "when_create_team_with_different_role.cs",
            "Description": "can create team for other office",
            "WhenList": [
              "create team for office"
            ],
            "ThenList": [
              "should return created"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4891",
    "FileName": "when_get_office_teams.cs",
    "Description": "when get office teams",
    "WhenList": [
      "get teams"
    ],
    "ThenList": [
      "should return ok",
      "should return teams ordered by name"
    ],
    "Children": []
  },
  {
    "$id": "4892",
    "FileName": "when_get_staff_teams.cs",
    "Description": "when get staff teams",
    "WhenList": [
      "get teams"
    ],
    "ThenList": [
      "should return ok",
      "should return teams"
    ],
    "Children": []
  },
  {
    "$id": "4893",
    "FileName": "when_get_team.cs",
    "Description": "when get team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4894",
        "FileName": "when_get_team.cs",
        "Description": "when get team by globle admin",
        "WhenList": [
          "get team by id"
        ],
        "ThenList": [
          "should return ok",
          "should return team"
        ],
        "Children": []
      },
      {
        "$id": "4895",
        "FileName": "when_get_team.cs",
        "Description": "when get team by country level staff of same country",
        "WhenList": [
          "get team by id"
        ],
        "ThenList": [
          "should return ok",
          "should return team"
        ],
        "Children": []
      },
      {
        "$id": "4896",
        "FileName": "when_get_team.cs",
        "Description": "when get team by office level staff of same office",
        "WhenList": [
          "get team by id"
        ],
        "ThenList": [
          "should return ok",
          "should return team"
        ],
        "Children": []
      },
      {
        "$id": "4897",
        "FileName": "when_get_team.cs",
        "Description": "when get team by team administrator",
        "WhenList": [
          "get team by id"
        ],
        "ThenList": [
          "should return ok",
          "should return team"
        ],
        "Children": []
      },
      {
        "$id": "4898",
        "FileName": "when_get_team.cs",
        "Description": "when get team by office level staff of other office",
        "WhenList": [
          "get team by id"
        ],
        "ThenList": [
          "should return ok",
          "should return team"
        ],
        "Children": []
      },
      {
        "$id": "4899",
        "FileName": "when_get_team.cs",
        "Description": "when get team by general staff",
        "WhenList": [
          "get team by id"
        ],
        "ThenList": [
          "should return ok",
          "should return team"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4900",
    "FileName": "when_update_team.cs",
    "Description": "when update team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4901",
        "FileName": "when_update_team.cs",
        "Description": "when update team general information",
        "WhenList": [
          "update team"
        ],
        "ThenList": [
          "should return ok",
          "should update team"
        ],
        "Children": []
      },
      {
        "$id": "4902",
        "FileName": "when_update_team.cs",
        "Description": "when update team with duplicate members",
        "WhenList": [
          "update team"
        ],
        "ThenList": [
          "should return ok",
          "should update team"
        ],
        "Children": []
      },
      {
        "$id": "4903",
        "FileName": "when_update_team.cs",
        "Description": "when update team name to an duplicated name of same office",
        "WhenList": [
          "update team"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "4904",
        "FileName": "when_update_team.cs",
        "Description": "when update team with invalid admins",
        "WhenList": [
          "update team"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "4905",
        "FileName": "when_update_team.cs",
        "Description": "when update team with invalid members",
        "WhenList": [
          "update team"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "4906",
        "FileName": "when_update_team.cs",
        "Description": "when update team name to an duplicated name of different office",
        "WhenList": [
          "update team"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4907",
    "FileName": "when_update_team_with_different_user.cs",
    "Description": "when update team with different user",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4908",
        "FileName": "when_update_team_with_different_user.cs",
        "Description": "when is general user",
        "WhenList": [
          "update team"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4909",
        "FileName": "when_update_team_with_different_user.cs",
        "Description": "when is office level role",
        "WhenList": [
          "update team for office"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4910",
        "FileName": "when_update_team_with_different_user.cs",
        "Description": "when is country level role",
        "WhenList": [
          "update team for office"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4911",
        "FileName": "when_update_team_with_different_user.cs",
        "Description": "when is global admin",
        "WhenList": [
          "update team for office"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4912",
        "FileName": "when_update_team_with_different_user.cs",
        "Description": "when is team admin",
        "WhenList": [
          "update team for office"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4913",
    "FileName": "when_get_tiger_constants.cs",
    "Description": "when get tiger constants",
    "WhenList": [
      "get tiger constant from api"
    ],
    "ThenList": [
      "should get constant value"
    ],
    "Children": []
  },
  {
    "$id": "4914",
    "FileName": "when_convert_timezone.cs",
    "Description": "when convert timezone",
    "WhenList": [
      "send request"
    ],
    "ThenList": [
      "should convert time zone correctly"
    ],
    "Children": []
  },
  {
    "$id": "4915",
    "FileName": "when_convert_timezone_to_dto.cs",
    "Description": "when convert timezone to dto",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should convert to dto"
    ],
    "Children": []
  },
  {
    "$id": "4916",
    "FileName": "when_get_all_timezones.cs",
    "Description": "when get all timezones",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should get all timezones in order",
      "should get DST offset of timezone",
      "should get normal offset of timezone"
    ],
    "Children": []
  },
  {
    "$id": "4917",
    "FileName": "when_complete_completed_personal_task.cs",
    "Description": "when complete completed personal task",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return conflict"
    ],
    "Children": []
  },
  {
    "$id": "4918",
    "FileName": "when_complete_todo_item_for_personal_task.cs",
    "Description": "when complete todo item for personal task",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return successful",
      "should update unfinished personal task status to finished"
    ],
    "Children": []
  },
  {
    "$id": "4919",
    "FileName": "when_create_personal_task.cs",
    "Description": "when create personal task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4920",
        "FileName": "when_create_personal_task.cs",
        "Description": "when creating a personal task without engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get 201",
          "should get the correct personal task"
        ],
        "Children": []
      },
      {
        "$id": "4921",
        "FileName": "when_create_personal_task.cs",
        "Description": "when creating a personal task with an engagement not subscribing the staff office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4922",
        "FileName": "when_create_personal_task.cs",
        "Description": "when creating a personal task with an engagement practice type different with staff practice type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4923",
        "FileName": "when_create_personal_task.cs",
        "Description": "with an invalid request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4924",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when subject is empty",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4925",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when subject is over 140 characters",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4926",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when due date is empty",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4927",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when due date earlier than today",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4928",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when due date is invalid",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4929",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when performer uri is empty",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4930",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when performer uri is invalid",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4931",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when creator uri is empty",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4932",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when creator uri is invalid",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4933",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail given not exsiting engagement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4934",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail given not exsiting assignee",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4935",
            "FileName": "when_create_personal_task.cs",
            "Description": "should fail when notes exceed 140 characters",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4936",
    "FileName": "when_marking_a_personal_task_as_urgent.cs",
    "Description": "when marking a personal task as urgent",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should be marked as urgent"
    ],
    "Children": []
  },
  {
    "$id": "4937",
    "FileName": "when_unmarking_a_personal_task_as_urgent.cs",
    "Description": "when unmarking a personal task as urgent",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should be unmarked as urgent"
    ],
    "Children": []
  },
  {
    "$id": "4938",
    "FileName": "when_update_personal_task.cs",
    "Description": "when update personal task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4939",
        "FileName": "when_update_personal_task.cs",
        "Description": "when updating a personal task",
        "WhenList": [
          "updating personal task"
        ],
        "ThenList": [
          "should return http status ok",
          "should update the todo item"
        ],
        "Children": []
      },
      {
        "$id": "4940",
        "FileName": "when_update_personal_task.cs",
        "Description": "when updating a finished task",
        "WhenList": [
          "updating a task"
        ],
        "ThenList": [
          "should return conflict"
        ],
        "Children": []
      },
      {
        "$id": "4941",
        "FileName": "when_update_personal_task.cs",
        "Description": "when updating a personal task with due date set to original value",
        "WhenList": [
          "updating a personal task"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "4942",
        "FileName": "when_update_personal_task.cs",
        "Description": "when updating a personal task with an engagement not subscribing the staff office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4943",
        "FileName": "when_update_personal_task.cs",
        "Description": "when updating a personal task with an engagement practice type different with staff practice type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "4944",
        "FileName": "when_update_personal_task.cs",
        "Description": "with an invalid request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4945",
            "FileName": "when_update_personal_task.cs",
            "Description": "should failed when subject is empty",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4946",
            "FileName": "when_update_personal_task.cs",
            "Description": "should failed when subject is over 140 characters",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4947",
            "FileName": "when_update_personal_task.cs",
            "Description": "should failed when due date is empty",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4948",
            "FileName": "when_update_personal_task.cs",
            "Description": "should failed when due date earlier than today",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4949",
            "FileName": "when_update_personal_task.cs",
            "Description": "should failed when due date is invalid",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4950",
            "FileName": "when_update_personal_task.cs",
            "Description": "should failed given not exsiting engagement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4951",
            "FileName": "when_update_personal_task.cs",
            "Description": "should failed given not exsiting assignee",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          },
          {
            "$id": "4952",
            "FileName": "when_update_personal_task.cs",
            "Description": "should failed when notes exceed 140 characters",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should get 400"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4953",
    "FileName": "when_update_personal_task_with_restricted_assignee.cs",
    "Description": "when update personal task with restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4954",
        "FileName": "when_update_personal_task_with_restricted_assignee.cs",
        "Description": "should return 400 when contain restricted engagement without user in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get 400"
        ],
        "Children": []
      },
      {
        "$id": "4955",
        "FileName": "when_update_personal_task_with_restricted_assignee.cs",
        "Description": "should return 400 when contain restricted assignee without user in acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get 400"
        ],
        "Children": []
      },
      {
        "$id": "4956",
        "FileName": "when_update_personal_task_with_restricted_assignee.cs",
        "Description": "should return ok when contain restricted assignee with pwc contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get 200"
        ],
        "Children": []
      },
      {
        "$id": "4957",
        "FileName": "when_update_personal_task_with_restricted_assignee.cs",
        "Description": "should return ok when contain restricted assignee with acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get 200"
        ],
        "Children": []
      },
      {
        "$id": "4958",
        "FileName": "when_update_personal_task_with_restricted_assignee.cs",
        "Description": "should update success when contain restricted assignee with global admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get 200"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4959",
    "FileName": "when_get_staff_to_do_list_by_immigration_application.cs",
    "Description": "when get staff to do list by immigration application",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4960",
        "FileName": "when_get_staff_to_do_list_by_immigration_application.cs",
        "Description": "when subscribe a staff with assigned task from work milestone",
        "WhenList": [
          "get subscribe staffs to do list"
        ],
        "ThenList": [
          "should return subscribed to do list summary"
        ],
        "Children": []
      },
      {
        "$id": "4961",
        "FileName": "when_get_staff_to_do_list_by_immigration_application.cs",
        "Description": "when subscribe a staff with assigned task from service milestone",
        "WhenList": [
          "get subscribe staffs to do list"
        ],
        "ThenList": [
          "should return subscribed to do list summary"
        ],
        "Children": []
      },
      {
        "$id": "4962",
        "FileName": "when_get_staff_to_do_list_by_immigration_application.cs",
        "Description": "when subscribe a staff with assigned task from service milestone of additional service",
        "WhenList": [
          "get subscribe staffs to do list"
        ],
        "ThenList": [
          "should return subscribed to do list summary"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4963",
    "FileName": "when_get_staff_to_do_list_by_tax_return.cs",
    "Description": "when get staff to do list by tax return",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4964",
        "FileName": "when_get_staff_to_do_list_by_tax_return.cs",
        "Description": "when subscribe a staff with tax practice type and no work record type",
        "WhenList": [
          "get subscribe staffs to do list"
        ],
        "ThenList": [
          "should return subscribed to do list summary"
        ],
        "Children": []
      },
      {
        "$id": "4965",
        "FileName": "when_get_staff_to_do_list_by_tax_return.cs",
        "Description": "when subscribe a staff with tax practice type and work record type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4966",
            "FileName": "when_get_staff_to_do_list_by_tax_return.cs",
            "Description": "when search tax return work record",
            "WhenList": [
              "get subscribe staffs tax return only to do list"
            ],
            "ThenList": [
              "should return staff tax return only to do list summary"
            ],
            "Children": []
          },
          {
            "$id": "4967",
            "FileName": "when_get_staff_to_do_list_by_tax_return.cs",
            "Description": "when search tax other compliance work record",
            "WhenList": [
              "get subscribe staffs tax other compliance to do list"
            ],
            "ThenList": [
              "should return staff tax other compliance to do list summary"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4968",
    "FileName": "when_get_subscribed_staffs_to_do_list.cs",
    "Description": "when get subscribed staffs to do list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4969",
        "FileName": "when_get_subscribed_staffs_to_do_list.cs",
        "Description": "when subscribe immi staff",
        "WhenList": [
          "get subscribe staffs to do list"
        ],
        "ThenList": [
          "should return subscribed to do list summary",
          "should get right result when subscribe multiple staffs"
        ],
        "Children": []
      },
      {
        "$id": "4970",
        "FileName": "when_get_subscribed_staffs_to_do_list.cs",
        "Description": "when subscribe multi staff with immi and tax practice type",
        "WhenList": [
          "get subscribe staffs to do list"
        ],
        "ThenList": [
          "should return subscribed to do list summary"
        ],
        "Children": []
      },
      {
        "$id": "4971",
        "FileName": "when_get_subscribed_staffs_to_do_list.cs",
        "Description": "when subscribe a staff with both immi and tax practice type",
        "WhenList": [
          "get subscribe staffs to do list"
        ],
        "ThenList": [
          "should return subscribed to do list summary"
        ],
        "Children": []
      },
      {
        "$id": "4972",
        "FileName": "when_get_subscribed_staffs_to_do_list.cs",
        "Description": "when subscribe a staff with todo items from inactive assignees",
        "WhenList": [
          "get subscribe staffs to do list"
        ],
        "ThenList": [
          "should return subscribed to do list summary"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4973",
    "FileName": "when_subscribe_other_staffs_to_do_list.cs",
    "Description": "when subscribe other staffs to do list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4974",
        "FileName": "when_subscribe_other_staffs_to_do_list.cs",
        "Description": "when subscribe staff",
        "WhenList": [
          "subscribe staffs to do list"
        ],
        "ThenList": [
          "should return created",
          "should get subscribed staff"
        ],
        "Children": []
      },
      {
        "$id": "4975",
        "FileName": "when_subscribe_other_staffs_to_do_list.cs",
        "Description": "when subscribe staff repeatly",
        "WhenList": [
          "subscribe the same staff again"
        ],
        "ThenList": [
          "should return forbidden",
          "should not get repeate staff"
        ],
        "Children": []
      },
      {
        "$id": "4976",
        "FileName": "when_subscribe_other_staffs_to_do_list.cs",
        "Description": "when subscribe self",
        "WhenList": [
          "subscribe self"
        ],
        "ThenList": [
          "should return forbidden",
          "should not get self"
        ],
        "Children": []
      },
      {
        "$id": "4977",
        "FileName": "when_subscribe_other_staffs_to_do_list.cs",
        "Description": "when subscribe staff only has technology practice type",
        "WhenList": [
          "subscribe self"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4978",
    "FileName": "when_unsubscribe_other_staffs_to_do_list.cs",
    "Description": "when unsubscribe other staffs to do list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4979",
        "FileName": "when_unsubscribe_other_staffs_to_do_list.cs",
        "Description": "when unsubscribe staff",
        "WhenList": [
          "unsubscribe sofia from grace subscription"
        ],
        "ThenList": [
          "should return no content",
          "should get subscribed staff"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4980",
    "FileName": "when_find_staff_todo_list_for_system_tasks.cs",
    "Description": "when find staff todo list for tasks and checklist items",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4981",
        "FileName": "when_find_staff_todo_list_for_system_tasks.cs",
        "Description": "when get to do list for given staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return successful",
          "should return only my to do items"
        ],
        "Children": []
      },
      {
        "$id": "4982",
        "FileName": "when_find_staff_todo_list_for_system_tasks.cs",
        "Description": "when get to do list with initiated workcords",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return correct days in current milestone"
        ],
        "Children": []
      },
      {
        "$id": "4983",
        "FileName": "when_find_staff_todo_list_for_system_tasks.cs",
        "Description": "when get to do list after missing item received",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return my to do items with correct status of missing items"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4984",
    "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_of_social_securtiy.cs",
    "Description": "when find staff todo list for tasks and checklist items of other practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4985",
        "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_of_social_securtiy.cs",
        "Description": "when find staff todo list with work records of different practice types",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should get all immigration todo items"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4986",
    "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_with_briefing_work_record.cs",
    "Description": "when find staff todo list for tasks and checklist items with briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4987",
        "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_with_briefing_work_record.cs",
        "Description": "when get to do list for given staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return successful",
          "should return my to do items with briefing tasks"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "4988",
    "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_with_revision_tasks.cs",
    "Description": "when find staff todo list for tasks and checklist items with revision tasks",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4989",
        "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_with_revision_tasks.cs",
        "Description": "when add revison task to one given staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4990",
            "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_with_revision_tasks.cs",
            "Description": "when get todo list of john",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should only return revision task todo item"
            ],
            "Children": []
          },
          {
            "$id": "4991",
            "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_with_revision_tasks.cs",
            "Description": "when get todo list of sofia",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return no work record task to do item"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "4992",
        "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_with_revision_tasks.cs",
        "Description": "when add revison task to given staffs",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "4993",
            "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_with_revision_tasks.cs",
            "Description": "when get todo list of john",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should only return revision to do item"
            ],
            "Children": []
          },
          {
            "$id": "4994",
            "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_with_revision_tasks.cs",
            "Description": "when get todo list of sofia",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return no work record task to do item"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "4995",
    "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
    "Description": "when find staff todo list for tasks of immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "4996",
        "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
        "Description": "when immigration work record in service milestone status",
        "WhenList": [
          "get todo item"
        ],
        "ThenList": [
          "should get service name and current service milestone name in item"
        ],
        "Children": []
      },
      {
        "$id": "4997",
        "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
        "Description": "when immigration work record in work milestone status",
        "WhenList": [
          "get todo item"
        ],
        "ThenList": [
          "should get empty string service name and current service milestone name in item"
        ],
        "Children": []
      },
      {
        "$id": "4998",
        "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
        "Description": "when immigration work record with multiple additional service in service milestone status",
        "WhenList": [
          "get todo item"
        ],
        "ThenList": [
          "should get empty string service name and current service milestone name in item"
        ],
        "Children": []
      },
      {
        "$id": "4999",
        "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
        "Description": "when immigration application work records have task templates and in work milestones",
        "WhenList": [
          "get staff s todo items"
        ],
        "ThenList": [
          "should only get the first task"
        ],
        "Children": []
      },
      {
        "$id": "5000",
        "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
        "Description": "when immigration application work records have task templates and in service milestones",
        "WhenList": [
          "get staff s todo items"
        ],
        "ThenList": [
          "should only get the first task"
        ],
        "Children": []
      },
      {
        "$id": "5001",
        "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
        "Description": "when general immigration work records have task templates",
        "WhenList": [
          "get staff s todo items"
        ],
        "ThenList": [
          "should only get the first task"
        ],
        "Children": []
      },
      {
        "$id": "5002",
        "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
        "Description": "when general immigration work records have task templates and revision tasks",
        "WhenList": [
          "get staff s todo items"
        ],
        "ThenList": [
          "should only get all tasks in inreview milestone"
        ],
        "Children": []
      },
      {
        "$id": "5003",
        "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
        "Description": "when immigration application work records with applications and in service milestones",
        "WhenList": [
          "get staff s todo items"
        ],
        "ThenList": [
          "should only get the first task"
        ],
        "Children": []
      },
      {
        "$id": "5004",
        "FileName": "when_find_staff_todo_list_for_tasks_of_immigration_work_record.cs",
        "Description": "when moving back immigration application work record service milestones",
        "WhenList": [
          "get staff s todo items"
        ],
        "ThenList": [
          "should only get the first task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5005",
    "FileName": "when_find_staff_todo_list_for_tasks_of_social_security.cs",
    "Description": "when find staff todo list for tasks of social security",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5006",
        "FileName": "when_find_staff_todo_list_for_tasks_of_social_security.cs",
        "Description": "when find staff todo list with work records of social security",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should return ok",
          "should get first social security todo item"
        ],
        "Children": []
      },
      {
        "$id": "5007",
        "FileName": "when_find_staff_todo_list_for_tasks_of_social_security.cs",
        "Description": "when find staff todo list with work records of social security with revision task",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should return ok",
          "should get first social security todo item"
        ],
        "Children": []
      },
      {
        "$id": "5008",
        "FileName": "when_find_staff_todo_list_for_tasks_of_social_security.cs",
        "Description": "when staff complete uncompletable task",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5009",
    "FileName": "when_find_staff_todo_list_for_tasks_with_start_link.cs",
    "Description": "when find staff todo list for tasks with start link",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5010",
        "FileName": "when_find_staff_todo_list_for_tasks_with_start_link.cs",
        "Description": "when get to do list for given staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return successful",
          "should return my to do items with task start link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5011",
    "FileName": "when_find_staff_todo_list_items_according_to_task_status_change.cs",
    "Description": "when find staff todo list items according to task status change",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5012",
        "FileName": "when_find_staff_todo_list_items_according_to_task_status_change.cs",
        "Description": "when get to do list after finishing task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return my to do list as empty"
        ],
        "Children": []
      },
      {
        "$id": "5013",
        "FileName": "when_find_staff_todo_list_items_according_to_task_status_change.cs",
        "Description": "when get to do list after starting task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return task as not set in to do list"
        ],
        "Children": []
      },
      {
        "$id": "5014",
        "FileName": "when_find_staff_todo_list_items_according_to_task_status_change.cs",
        "Description": "when get to do list after finished task was undone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return successful",
          "should return my to do list with all tasks in not set section"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5015",
    "FileName": "when_mark_task_as_coimpleted.cs",
    "Description": "when complete todo item for work record task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5016",
        "FileName": "when_mark_task_as_coimpleted.cs",
        "Description": "should mark as completed successfully",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5017",
            "FileName": "when_mark_task_as_coimpleted.cs",
            "Description": "when tax return work record tasks",
            "WhenList": [
              "mark todo task as completed"
            ],
            "ThenList": [
              "should return successful",
              "should update task status to finished"
            ],
            "Children": []
          },
          {
            "$id": "5018",
            "FileName": "when_mark_task_as_coimpleted.cs",
            "Description": "when tax other compliance work record tasks",
            "WhenList": [
              "mark todo task as completed"
            ],
            "ThenList": [
              "should return successful",
              "should update task status to finished"
            ],
            "Children": []
          },
          {
            "$id": "5019",
            "FileName": "when_mark_task_as_coimpleted.cs",
            "Description": "when immigration application work record tasks",
            "WhenList": [
              "mark todo task as completed"
            ],
            "ThenList": [
              "should return successful",
              "should update task status to finished"
            ],
            "Children": []
          },
          {
            "$id": "5020",
            "FileName": "when_mark_task_as_coimpleted.cs",
            "Description": "when immigration genearl work record tasks",
            "WhenList": [
              "mark todo task as completed"
            ],
            "ThenList": [
              "should return successful",
              "should update task status to finished"
            ],
            "Children": []
          },
          {
            "$id": "5021",
            "FileName": "when_mark_task_as_coimpleted.cs",
            "Description": "when social security coc work record tasks",
            "WhenList": [
              "mark todo task as completed"
            ],
            "ThenList": [
              "should return successful",
              "should update task status to finished"
            ],
            "Children": []
          },
          {
            "$id": "5022",
            "FileName": "when_mark_task_as_coimpleted.cs",
            "Description": "when social security other compliance work record tasks",
            "WhenList": [
              "mark todo task as completed"
            ],
            "ThenList": [
              "should return successful",
              "should update task status to finished"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5023",
    "FileName": "when_mark_todo_task_as_started.cs",
    "Description": "when mark todo task as started",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5024",
        "FileName": "when_mark_todo_task_as_started.cs",
        "Description": "should start todo task successfully",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5025",
            "FileName": "when_mark_todo_task_as_started.cs",
            "Description": "when tax return work record tasks",
            "WhenList": [
              "start the task"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          },
          {
            "$id": "5026",
            "FileName": "when_mark_todo_task_as_started.cs",
            "Description": "when tax other compliance work record tasks",
            "WhenList": [
              "start the task"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          },
          {
            "$id": "5027",
            "FileName": "when_mark_todo_task_as_started.cs",
            "Description": "when immigration application work record tasks",
            "WhenList": [
              "start the task"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          },
          {
            "$id": "5028",
            "FileName": "when_mark_todo_task_as_started.cs",
            "Description": "when immigration general work record tasks",
            "WhenList": [
              "start the task"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          },
          {
            "$id": "5029",
            "FileName": "when_mark_todo_task_as_started.cs",
            "Description": "when social security coc work record tasks",
            "WhenList": [
              "start the task"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          },
          {
            "$id": "5030",
            "FileName": "when_mark_todo_task_as_started.cs",
            "Description": "when social security other compliance work record tasks",
            "WhenList": [
              "start the task"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          },
          {
            "$id": "5031",
            "FileName": "when_mark_todo_task_as_started.cs",
            "Description": "when tax briefing work record tasks",
            "WhenList": [
              "start the task"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          },
          {
            "$id": "5032",
            "FileName": "when_mark_todo_task_as_started.cs",
            "Description": "when immigration briefing work record tasks",
            "WhenList": [
              "start the task"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5033",
        "FileName": "when_mark_todo_task_as_started.cs",
        "Description": "should not start todo task not belong to curernt user",
        "WhenList": [
          "start the task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5034",
    "FileName": "when_reassign_todo_task_item.cs",
    "Description": "when reassign todo task item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5035",
        "FileName": "when_reassign_todo_task_item.cs",
        "Description": "when task of john is reassigneed to sofia",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5036",
            "FileName": "when_reassign_todo_task_item.cs",
            "Description": "when get to do list of john",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return successful",
              "should remove todo item in johns todo list"
            ],
            "Children": []
          },
          {
            "$id": "5037",
            "FileName": "when_reassign_todo_task_item.cs",
            "Description": "when get to do list of sofia",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return successful",
              "should show todo item in notset section of sofias todo list"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5038",
        "FileName": "when_reassign_todo_task_item.cs",
        "Description": "when get to do list after task was reassigneed to office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return successful",
          "should remove todo item in johns todo list"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5039",
    "FileName": "when_reassign_todo_task_item_for_immigration_work_record.cs",
    "Description": "when reassign todo task item for immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5040",
        "FileName": "when_reassign_todo_task_item_for_immigration_work_record.cs",
        "Description": "when task of john is reassigneed to sofia",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5041",
            "FileName": "when_reassign_todo_task_item_for_immigration_work_record.cs",
            "Description": "when get to do list of john",
            "WhenList": [
              "get todo item"
            ],
            "ThenList": [
              "should remove todo item in johns todo list"
            ],
            "Children": []
          },
          {
            "$id": "5042",
            "FileName": "when_reassign_todo_task_item_for_immigration_work_record.cs",
            "Description": "when get to do list of sofia",
            "WhenList": [
              "get todo item"
            ],
            "ThenList": [
              "should show todo item in notset section of sofias todo list"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5043",
    "FileName": "when_start_todo_for_denied_workrecord.cs",
    "Description": "when start todo for denied workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5044",
        "FileName": "when_start_todo_for_denied_workrecord.cs",
        "Description": "should not start todo task which is denied",
        "WhenList": [
          "start denied workrecord task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5045",
    "FileName": "when_change_system_todo_item_status.cs",
    "Description": "when change system todo item status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5046",
        "FileName": "when_change_system_todo_item_status.cs",
        "Description": "when sofia select a task todo item and change its section",
        "WhenList": [
          "change todo item section from notset to today"
        ],
        "ThenList": [
          "should return successful",
          "should change the todo item section as today"
        ],
        "Children": []
      },
      {
        "$id": "5047",
        "FileName": "when_change_system_todo_item_status.cs",
        "Description": "when sofia select a checklist item and change its section",
        "WhenList": [
          "change todo item section from notset to today"
        ],
        "ThenList": [
          "should return successful",
          "should change the todo item section as today"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5048",
    "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_of_not_no_issues_work_record.cs",
    "Description": "when find staff todo list for tasks and checklist items of not no issues work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5049",
        "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_of_not_no_issues_work_record.cs",
        "Description": "when get to do list for given staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return successful",
          "should return todo items of no issued work records"
        ],
        "Children": []
      },
      {
        "$id": "5050",
        "FileName": "when_find_staff_todo_list_for_tasks_and_checklist_items_of_not_no_issues_work_record.cs",
        "Description": "when get to do list include work record that has questionnaire",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return successful",
          "should return checklist todo item"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5051",
    "FileName": "when_find_staff_todo_list_with_personal_tasks.cs",
    "Description": "when find staff todo list with personal tasks",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return successful",
      "should return only my unfinished to do items"
    ],
    "Children": []
  },
  {
    "$id": "5052",
    "FileName": "when_get_checklist_todo_items_by_checklist_ids.cs",
    "Description": "when get checklist todo items by checklist ids",
    "WhenList": [
      "get checklist todo items by checklist item ids"
    ],
    "ThenList": [
      "should return ok",
      "should get checklist todo items"
    ],
    "Children": []
  },
  {
    "$id": "5053",
    "FileName": "when_get_revision_task_to_do_list_with_inactive_assignee.cs",
    "Description": "when get revision task to do list with inactive assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5054",
        "FileName": "when_get_revision_task_to_do_list_with_inactive_assignee.cs",
        "Description": "when get revision task to do list by general role",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should only get to do item from inactive assignee"
        ],
        "Children": []
      },
      {
        "$id": "5055",
        "FileName": "when_get_revision_task_to_do_list_with_inactive_assignee.cs",
        "Description": "when get revision task to do list by global admin",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should only get to do item from inactive assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5056",
    "FileName": "when_get_revision_task_to_do_list_with_inactive_engagement.cs",
    "Description": "when get revision task to do list with inactive engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5057",
        "FileName": "when_get_revision_task_to_do_list_with_inactive_engagement.cs",
        "Description": "when get revision task to do list by general role",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should only get to do item from inactive assignee"
        ],
        "Children": []
      },
      {
        "$id": "5058",
        "FileName": "when_get_revision_task_to_do_list_with_inactive_engagement.cs",
        "Description": "when get revision task to do list by global admin",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should only get to do item from inactive assignee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5059",
    "FileName": "when_get_staff_work_record_task_to_do_list.cs",
    "Description": "when get staff work record task to do list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5060",
        "FileName": "when_get_staff_work_record_task_to_do_list.cs",
        "Description": "when get work record tasks only for tax",
        "WhenList": [
          "get workrecord task to do"
        ],
        "ThenList": [
          "should return ok",
          "should return work record task todo"
        ],
        "Children": []
      },
      {
        "$id": "5061",
        "FileName": "when_get_staff_work_record_task_to_do_list.cs",
        "Description": "when get work record tasks only for immigration",
        "WhenList": [
          "get workrecord task to do"
        ],
        "ThenList": [
          "should return ok",
          "should return work record task todo"
        ],
        "Children": []
      },
      {
        "$id": "5062",
        "FileName": "when_get_staff_work_record_task_to_do_list.cs",
        "Description": "when get work record tasks only for social security",
        "WhenList": [
          "get workrecord task to do"
        ],
        "ThenList": [
          "should return ok",
          "should return work record task todo"
        ],
        "Children": []
      },
      {
        "$id": "5063",
        "FileName": "when_get_staff_work_record_task_to_do_list.cs",
        "Description": "when filtered by practice type",
        "WhenList": [
          "get workrecord task to do"
        ],
        "ThenList": [
          "should return ok",
          "should return work record task todo"
        ],
        "Children": []
      },
      {
        "$id": "5064",
        "FileName": "when_get_staff_work_record_task_to_do_list.cs",
        "Description": "when filtered by work record type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5065",
            "FileName": "when_get_staff_work_record_task_to_do_list.cs",
            "Description": "when search tax return to do",
            "WhenList": [
              "get workrecord task to do"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          },
          {
            "$id": "5066",
            "FileName": "when_get_staff_work_record_task_to_do_list.cs",
            "Description": "when search other compliance to do",
            "WhenList": [
              "get workrecord task to do"
            ],
            "ThenList": [
              "should return ok",
              "should return work record task todo"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5067",
        "FileName": "when_get_staff_work_record_task_to_do_list.cs",
        "Description": "should filter todo item reassign link by uac",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5068",
            "FileName": "when_get_staff_work_record_task_to_do_list.cs",
            "Description": "when filter by engagement responsible office",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "5069",
                "FileName": "when_get_staff_work_record_task_to_do_list.cs",
                "Description": "should not filter by current user office same with engagement responsible office",
                "WhenList": [
                  "get staff tasks"
                ],
                "ThenList": [
                  "should return ok",
                  "should return work record task todo"
                ],
                "Children": []
              },
              {
                "$id": "5070",
                "FileName": "when_get_staff_work_record_task_to_do_list.cs",
                "Description": "should filter by engagement responsible office",
                "WhenList": [
                  "get staff tasks"
                ],
                "ThenList": [
                  "should return ok",
                  "should return work record task todo"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "5071",
            "FileName": "when_get_staff_work_record_task_to_do_list.cs",
            "Description": "when filter acl",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "5072",
                "FileName": "when_get_staff_work_record_task_to_do_list.cs",
                "Description": "should not filter when in acl of engagement and assignee",
                "WhenList": [
                  "get staff tasks"
                ],
                "ThenList": [
                  "should return ok",
                  "should return work record task todo"
                ],
                "Children": []
              },
              {
                "$id": "5073",
                "FileName": "when_get_staff_work_record_task_to_do_list.cs",
                "Description": "should not filter when is global admin",
                "WhenList": [
                  "get staff tasks"
                ],
                "ThenList": [
                  "should return ok",
                  "should return work record task todo"
                ],
                "Children": []
              },
              {
                "$id": "5074",
                "FileName": "when_get_staff_work_record_task_to_do_list.cs",
                "Description": "should filter when in not acl of engagement and assignee",
                "WhenList": [
                  "get staff tasks"
                ],
                "ThenList": [
                  "should return ok",
                  "should return work record task todo"
                ],
                "Children": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "$id": "5075",
    "FileName": "when_get_to_do_list_with_deleted_assignee.cs",
    "Description": "when get to do list with deleted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5076",
        "FileName": "when_get_to_do_list_with_deleted_assignee.cs",
        "Description": "when get work record tasks",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5077",
            "FileName": "when_get_to_do_list_with_deleted_assignee.cs",
            "Description": "general role",
            "WhenList": [
              "get todo items"
            ],
            "ThenList": [
              "should not return to do items"
            ],
            "Children": []
          },
          {
            "$id": "5078",
            "FileName": "when_get_to_do_list_with_deleted_assignee.cs",
            "Description": "admin role",
            "WhenList": [
              "get todo items"
            ],
            "ThenList": [
              "should not return to do items"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5079",
        "FileName": "when_get_to_do_list_with_deleted_assignee.cs",
        "Description": "when get checklist tasks",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5080",
            "FileName": "when_get_to_do_list_with_deleted_assignee.cs",
            "Description": "general role",
            "WhenList": [
              "get todo items"
            ],
            "ThenList": [
              "should not return checklist items"
            ],
            "Children": []
          },
          {
            "$id": "5081",
            "FileName": "when_get_to_do_list_with_deleted_assignee.cs",
            "Description": "admin role",
            "WhenList": [
              "get todo items"
            ],
            "ThenList": [
              "should not return checklist items"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5082",
    "FileName": "when_get_to_do_list_with_inactive_go_migration_assignee.cs",
    "Description": "when get to do list with inactive go migration assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5083",
        "FileName": "when_get_to_do_list_with_inactive_go_migration_assignee.cs",
        "Description": "when get personal task",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should get one task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5084",
    "FileName": "when_get_to_do_personal_task_with_inactive_assignee.cs",
    "Description": "when get to do personal task with inactive assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5085",
        "FileName": "when_get_to_do_personal_task_with_inactive_assignee.cs",
        "Description": "when get personal task by general role",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should get one task"
        ],
        "Children": []
      },
      {
        "$id": "5086",
        "FileName": "when_get_to_do_personal_task_with_inactive_assignee.cs",
        "Description": "when get personal task by global admin",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should get one task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5087",
    "FileName": "when_get_to_do_personal_task_with_inactive_engagement.cs",
    "Description": "when get to do personal task with inactive engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5088",
        "FileName": "when_get_to_do_personal_task_with_inactive_engagement.cs",
        "Description": "when get to do personal task by general role",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should get one task"
        ],
        "Children": []
      },
      {
        "$id": "5089",
        "FileName": "when_get_to_do_personal_task_with_inactive_engagement.cs",
        "Description": "when get to do personal task by global admin",
        "WhenList": [
          "get to do list"
        ],
        "ThenList": [
          "should get one task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5090",
    "FileName": "when_get_work_record_task_to_do_list_with_inactive_assignee.cs",
    "Description": "when get work record task to do list with inactive assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5091",
        "FileName": "when_get_work_record_task_to_do_list_with_inactive_assignee.cs",
        "Description": "when get work record task to do list by general role",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5092",
            "FileName": "when_get_work_record_task_to_do_list_with_inactive_assignee.cs",
            "Description": "when get my to do list",
            "WhenList": [
              "get to do list"
            ],
            "ThenList": [
              "should only get to do items from active assignee"
            ],
            "Children": []
          },
          {
            "$id": "5093",
            "FileName": "when_get_work_record_task_to_do_list_with_inactive_assignee.cs",
            "Description": "when get staff to do list",
            "WhenList": [
              "get to do list"
            ],
            "ThenList": [
              "should only get to do items from active assignee"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5094",
        "FileName": "when_get_work_record_task_to_do_list_with_inactive_assignee.cs",
        "Description": "when get work record task to do list by global admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5095",
            "FileName": "when_get_work_record_task_to_do_list_with_inactive_assignee.cs",
            "Description": "when get my to do list",
            "WhenList": [
              "get to do list"
            ],
            "ThenList": [
              "should only get to do items from active assignee"
            ],
            "Children": []
          },
          {
            "$id": "5096",
            "FileName": "when_get_work_record_task_to_do_list_with_inactive_assignee.cs",
            "Description": "when get staff to do list",
            "WhenList": [
              "get to do list"
            ],
            "ThenList": [
              "should only get to do items from active assignee"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5097",
    "FileName": "when_get_work_record_task_to_do_list_with_inactive_engagement.cs",
    "Description": "when get work record task to do list with inactive engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5098",
        "FileName": "when_get_work_record_task_to_do_list_with_inactive_engagement.cs",
        "Description": "when get work record task to do list by general role",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5099",
            "FileName": "when_get_work_record_task_to_do_list_with_inactive_engagement.cs",
            "Description": "when get my to do list",
            "WhenList": [
              "get to do list"
            ],
            "ThenList": [
              "should only get to do items from active engagement"
            ],
            "Children": []
          },
          {
            "$id": "5100",
            "FileName": "when_get_work_record_task_to_do_list_with_inactive_engagement.cs",
            "Description": "when get staff to do list",
            "WhenList": [
              "get to do list"
            ],
            "ThenList": [
              "should only get to do items from active engagement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5101",
        "FileName": "when_get_work_record_task_to_do_list_with_inactive_engagement.cs",
        "Description": "when get work record task to do list by global admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5102",
            "FileName": "when_get_work_record_task_to_do_list_with_inactive_engagement.cs",
            "Description": "when get my to do list",
            "WhenList": [
              "get to do list"
            ],
            "ThenList": [
              "should only get to do items from active engagement"
            ],
            "Children": []
          },
          {
            "$id": "5103",
            "FileName": "when_get_work_record_task_to_do_list_with_inactive_engagement.cs",
            "Description": "when get staff to do list",
            "WhenList": [
              "get to do list"
            ],
            "ThenList": [
              "should only get to do items from active engagement"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5104",
    "FileName": "when_batch_update_type_of_service_fee_for_practice_type.cs",
    "Description": "when batch update type of service fee for practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5105",
        "FileName": "when_batch_update_type_of_service_fee_for_practice_type.cs",
        "Description": "when practice type is tax",
        "WhenList": [
          "update tax type of service fee"
        ],
        "ThenList": [
          "should call billing service to update fee"
        ],
        "Children": []
      },
      {
        "$id": "5106",
        "FileName": "when_batch_update_type_of_service_fee_for_practice_type.cs",
        "Description": "when practice type is immigration",
        "WhenList": [
          "update immigration type of service fee"
        ],
        "ThenList": [
          "should call billing service to update fee"
        ],
        "Children": []
      },
      {
        "$id": "5107",
        "FileName": "when_batch_update_type_of_service_fee_for_practice_type.cs",
        "Description": "when practice type is social security",
        "WhenList": [
          "update social security type of service fee"
        ],
        "ThenList": [
          "should not call billing service to update fee"
        ],
        "Children": []
      },
      {
        "$id": "5108",
        "FileName": "when_batch_update_type_of_service_fee_for_practice_type.cs",
        "Description": "when practice type is technology",
        "WhenList": [
          "update technology type of service fee"
        ],
        "ThenList": [
          "should not call billing service to update fee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5109",
    "FileName": "when_batch_update_type_of_service_with_invalid_requests.cs",
    "Description": "when batch update type of service with invalid requests",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5110",
        "FileName": "when_batch_update_type_of_service_with_invalid_requests.cs",
        "Description": "when update two country services",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5111",
        "FileName": "when_batch_update_type_of_service_with_invalid_requests.cs",
        "Description": "when update services with duplicate description for same country and practice type",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5112",
        "FileName": "when_batch_update_type_of_service_with_invalid_requests.cs",
        "Description": "when requests with duplicate uri",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return bad request with duplication uri message"
        ],
        "Children": []
      },
      {
        "$id": "5113",
        "FileName": "when_batch_update_type_of_service_with_invalid_requests.cs",
        "Description": "when requests without duplicate uri",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5114",
        "FileName": "when_batch_update_type_of_service_with_invalid_requests.cs",
        "Description": "when create services with duplicate name for same country",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5115",
        "FileName": "when_batch_update_type_of_service_with_invalid_requests.cs",
        "Description": "when update services with different practice type",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5116",
    "FileName": "when_create_new_type_of_service.cs",
    "Description": "when create new type of service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5117",
        "FileName": "when_create_new_type_of_service.cs",
        "Description": "when create type of service without price",
        "WhenList": [
          "global admin role staff create other country service"
        ],
        "ThenList": [
          "should return ok",
          "should create a service"
        ],
        "Children": []
      },
      {
        "$id": "5118",
        "FileName": "when_create_new_type_of_service.cs",
        "Description": "when create type of service with price",
        "WhenList": [
          "global admin role staff create other country service"
        ],
        "ThenList": [
          "should create a service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5119",
    "FileName": "when_inactivate_types_of_service_which_linked_with_engagement_type_of_service.cs",
    "Description": "when inactivate types of service which linked with engagement type of service",
    "WhenList": [
      "update"
    ],
    "ThenList": [
      "should success",
      "should inactive linked engagement type of service status",
      "should not inactive not linked engagement type of service status"
    ],
    "Children": []
  },
  {
    "$id": "5120",
    "FileName": "when_update_inused_types_of_service.cs",
    "Description": "when update inused types of service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5121",
        "FileName": "when_update_inused_types_of_service.cs",
        "Description": "when update inused types of service with valid request",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should success",
          "should update description and status of type of service",
          "should not update rest fields of type of service"
        ],
        "Children": []
      },
      {
        "$id": "5122",
        "FileName": "when_update_inused_types_of_service.cs",
        "Description": "when update inusing type of service with not updatable fields",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return bad request as status code",
          "should not update type of service"
        ],
        "Children": []
      },
      {
        "$id": "5123",
        "FileName": "when_update_inused_types_of_service.cs",
        "Description": "when update types of service with price in request",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should success",
          "should update price of type of service"
        ],
        "Children": []
      },
      {
        "$id": "5124",
        "FileName": "when_update_inused_types_of_service.cs",
        "Description": "when update types of service with empty price in request",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should success",
          "should update price of type of service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5125",
    "FileName": "when_update_master_chart_service_subcategory_for_existing_type_of_service.cs",
    "Description": "when update master chart service subcategory for existing type of service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5126",
        "FileName": "when_update_master_chart_service_subcategory_for_existing_type_of_service.cs",
        "Description": "when update master chart service subcategory",
        "WhenList": [
          "update service"
        ],
        "ThenList": [
          "should return ok",
          "should update existed service"
        ],
        "Children": []
      },
      {
        "$id": "5127",
        "FileName": "when_update_master_chart_service_subcategory_for_existing_type_of_service.cs",
        "Description": "when update master chart service subcategory to null",
        "WhenList": [
          "update service"
        ],
        "ThenList": [
          "should return no content",
          "should update existed service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5128",
    "FileName": "when_update_types_of_service_with_role.cs",
    "Description": "when update types of service with role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5129",
        "FileName": "when_update_types_of_service_with_role.cs",
        "Description": "when update types of service with general role",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should forbidden",
          "should not update type of service"
        ],
        "Children": []
      },
      {
        "$id": "5130",
        "FileName": "when_update_types_of_service_with_role.cs",
        "Description": "when update types of service with country level role",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return ok",
          "should update type of service"
        ],
        "Children": []
      },
      {
        "$id": "5131",
        "FileName": "when_update_types_of_service_with_role.cs",
        "Description": "when update type of service by other country level staff",
        "WhenList": [
          "country level role staff update other country service"
        ],
        "ThenList": [
          "should forbidden",
          "should not update type of service"
        ],
        "Children": []
      },
      {
        "$id": "5132",
        "FileName": "when_update_types_of_service_with_role.cs",
        "Description": "when update type of service by other country global admin",
        "WhenList": [
          "global admin role staff update other country service"
        ],
        "ThenList": [
          "should return ok",
          "should update type of service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5133",
    "FileName": "when_update_unused_types_of_service.cs",
    "Description": "when update unused types of service",
    "WhenList": [
      "update service"
    ],
    "ThenList": [
      "should return ok",
      "should update existed service"
    ],
    "Children": []
  },
  {
    "$id": "5134",
    "FileName": "when_update_unused_types_of_service_with_invalid_request.cs",
    "Description": "when update unused types of service with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5135",
        "FileName": "when_update_unused_types_of_service_with_invalid_request.cs",
        "Description": "when update unused types of service with empty description",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return BAD REQUEST as status code",
          "should not update existed service"
        ],
        "Children": []
      },
      {
        "$id": "5136",
        "FileName": "when_update_unused_types_of_service_with_invalid_request.cs",
        "Description": "when update unused types of service with empty jurisdiction",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return BAD REQUEST as status code",
          "should not update existed service"
        ],
        "Children": []
      },
      {
        "$id": "5137",
        "FileName": "when_update_unused_types_of_service_with_invalid_request.cs",
        "Description": "when update unused types of service with invalid jurisdiction",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return BAD REQUEST as status code",
          "should not update existed service"
        ],
        "Children": []
      },
      {
        "$id": "5138",
        "FileName": "when_update_unused_types_of_service_with_invalid_request.cs",
        "Description": "when update unused types of service with nonexisting jurisdiction",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return BAD REQUEST as status code",
          "should not update existed service"
        ],
        "Children": []
      },
      {
        "$id": "5139",
        "FileName": "when_update_unused_types_of_service_with_invalid_request.cs",
        "Description": "when update unused types of service with empty status",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return BAD REQUEST as status code",
          "should not update existed service"
        ],
        "Children": []
      },
      {
        "$id": "5140",
        "FileName": "when_update_unused_types_of_service_with_invalid_request.cs",
        "Description": "when update unused types of service with invalid status",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return BAD REQUEST as status code",
          "should not update existed service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5141",
    "FileName": "TestValidationWhenCreateService.cs",
    "Description": "test validation when create service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5142",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service without description",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      },
      {
        "$id": "5143",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service with empty description",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      },
      {
        "$id": "5144",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service without master chart of service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      },
      {
        "$id": "5145",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service without status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      },
      {
        "$id": "5146",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service with empty status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      },
      {
        "$id": "5147",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service with incorrect status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      },
      {
        "$id": "5148",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service without jurisdiction uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      },
      {
        "$id": "5149",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service with empty jurisdiction uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      },
      {
        "$id": "5150",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service with incorrect jurisdiction uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      },
      {
        "$id": "5151",
        "FileName": "TestValidationWhenCreateService.cs",
        "Description": "when create type of service with not exist jurisdiction uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be failed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5152",
    "FileName": "when_create_country_type_of_service_to_master_chart_of_service.cs",
    "Description": "when create country type of service to master chart of service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5153",
        "FileName": "when_create_country_type_of_service_to_master_chart_of_service.cs",
        "Description": "happy path",
        "WhenList": [
          "create new country type of service"
        ],
        "ThenList": [
          "should return created",
          "should get country service with two level master chart of service"
        ],
        "Children": []
      },
      {
        "$id": "5154",
        "FileName": "when_create_country_type_of_service_to_master_chart_of_service.cs",
        "Description": "invalid subcategory",
        "WhenList": [
          "create new country type of service"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5155",
        "FileName": "when_create_country_type_of_service_to_master_chart_of_service.cs",
        "Description": "when not has subcategory",
        "WhenList": [
          "create new country type of service"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "5156",
        "FileName": "when_create_country_type_of_service_to_master_chart_of_service.cs",
        "Description": "should return bad request when input undefined description on immigration",
        "WhenList": [
          "create new country type of service"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5157",
        "FileName": "when_create_country_type_of_service_to_master_chart_of_service.cs",
        "Description": "should return bad request when input include undefined description on immigration",
        "WhenList": [
          "create new country type of service"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5158",
        "FileName": "when_create_country_type_of_service_to_master_chart_of_service.cs",
        "Description": "should return ok when input undefined description on tax",
        "WhenList": [
          "create new country type of service"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5159",
        "FileName": "when_create_country_type_of_service_to_master_chart_of_service.cs",
        "Description": "should return ok when input undefined description on social security",
        "WhenList": [
          "create new country type of service"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5160",
    "FileName": "when_create_type_of_service_with_role.cs",
    "Description": "when create type of service with role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5161",
        "FileName": "when_create_type_of_service_with_role.cs",
        "Description": "when create type of service by general staff",
        "WhenList": [
          "general staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5162",
        "FileName": "when_create_type_of_service_with_role.cs",
        "Description": "when create type of service by country level staff",
        "WhenList": [
          "country level staff"
        ],
        "ThenList": [
          "should create",
          "should create a service"
        ],
        "Children": []
      },
      {
        "$id": "5163",
        "FileName": "when_create_type_of_service_with_role.cs",
        "Description": "when create type of service of other country by country level staff",
        "WhenList": [
          "country level role staff create other country service"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5164",
        "FileName": "when_create_type_of_service_with_role.cs",
        "Description": "when create type of service of other country by global admin",
        "WhenList": [
          "global admin role staff create other country service"
        ],
        "ThenList": [
          "should return created",
          "should create a service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5165",
    "FileName": "when_get_all_type_of_services.cs",
    "Description": "when get all type of services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5166",
        "FileName": "when_get_all_type_of_services.cs",
        "Description": "when get by country level role",
        "WhenList": [
          "find all services by country level role"
        ],
        "ThenList": [
          "should return ok",
          "should succeed and return create link for country level role"
        ],
        "Children": []
      },
      {
        "$id": "5167",
        "FileName": "when_get_all_type_of_services.cs",
        "Description": "when get slim",
        "WhenList": [
          "find all service"
        ],
        "ThenList": [
          "should return ok",
          "should succeed and return slim type of service dto"
        ],
        "Children": []
      },
      {
        "$id": "5168",
        "FileName": "when_get_all_type_of_services.cs",
        "Description": "when get by global admin",
        "WhenList": [
          "find all services by office level role"
        ],
        "ThenList": [
          "should return create service link"
        ],
        "Children": []
      },
      {
        "$id": "5169",
        "FileName": "when_get_all_type_of_services.cs",
        "Description": "when get by office level role",
        "WhenList": [
          "find all services by office level role"
        ],
        "ThenList": [
          "should not return create service link"
        ],
        "Children": []
      },
      {
        "$id": "5170",
        "FileName": "when_get_all_type_of_services.cs",
        "Description": "when get by general role",
        "WhenList": [
          "find all services by general role"
        ],
        "ThenList": [
          "should not return create service link"
        ],
        "Children": []
      },
      {
        "$id": "5171",
        "FileName": "when_get_all_type_of_services.cs",
        "Description": "master chart of service should not contains subcategories",
        "WhenList": [
          "find all services"
        ],
        "ThenList": [
          "should not contains subcategories"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5172",
    "FileName": "when_get_all_type_of_services_with_fee.cs",
    "Description": "when get all type of services with fee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5173",
        "FileName": "when_get_all_type_of_services_with_fee.cs",
        "Description": "when get by country level role",
        "WhenList": [
          "find all services by country level role"
        ],
        "ThenList": [
          "should return ok",
          "should not contains type of servcie for other countries",
          "should succeed and return price"
        ],
        "Children": []
      },
      {
        "$id": "5174",
        "FileName": "when_get_all_type_of_services_with_fee.cs",
        "Description": "when get by general level role",
        "WhenList": [
          "find all services by country level role"
        ],
        "ThenList": [
          "should return ok",
          "should not contains type of servcie for other countries",
          "should succeed and return fee"
        ],
        "Children": []
      },
      {
        "$id": "5175",
        "FileName": "when_get_all_type_of_services_with_fee.cs",
        "Description": "when get by office level role",
        "WhenList": [
          "find all services by country level role"
        ],
        "ThenList": [
          "should return ok",
          "should not contains type of servcie for other countries",
          "should succeed and return fee"
        ],
        "Children": []
      },
      {
        "$id": "5176",
        "FileName": "when_get_all_type_of_services_with_fee.cs",
        "Description": "when get by global admin",
        "WhenList": [
          "find all services by country level role"
        ],
        "ThenList": [
          "should return ok",
          "should contains type of servcie for all countries",
          "should succeed and return price"
        ],
        "Children": []
      },
      {
        "$id": "5177",
        "FileName": "when_get_all_type_of_services_with_fee.cs",
        "Description": "when get by immigration practice type sofia",
        "WhenList": [
          "get all services by immigration sofia"
        ],
        "ThenList": [
          "should return forbidden",
          "should not get tax practice type services"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5178",
    "FileName": "when_get_all_undefined_type_of_services.cs",
    "Description": "when get all undefined type of services",
    "WhenList": [
      "find all services by country level role"
    ],
    "ThenList": [
      "should return ok",
      "should succeed and return create link for country level role"
    ],
    "Children": []
  },
  {
    "$id": "5179",
    "FileName": "when_get_country_type_of_service_with_different_uac.cs",
    "Description": "when get country type of service with different uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5180",
        "FileName": "when_get_country_type_of_service_with_different_uac.cs",
        "Description": "when get type of service with country level",
        "WhenList": [
          "find all services by country level role"
        ],
        "ThenList": [
          "should return ok",
          "should has access to view and edit fee"
        ],
        "Children": []
      },
      {
        "$id": "5181",
        "FileName": "when_get_country_type_of_service_with_different_uac.cs",
        "Description": "when get type of service with office level",
        "WhenList": [
          "find all services by office level"
        ],
        "ThenList": [
          "should not has access to view and edit fee"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5182",
    "FileName": "when_get_types_of_service_resource_by_regime_and_record_type.cs",
    "Description": "when find all types of service resource",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed and return with jurisdictions and record types"
    ],
    "Children": []
  },
  {
    "$id": "5183",
    "FileName": "when_get_type_of_services_with_fee.cs",
    "Description": "when get type of services with fee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5184",
        "FileName": "when_get_type_of_services_with_fee.cs",
        "Description": "when get type of service with fee correctly",
        "WhenList": [
          "find all services by country level role"
        ],
        "ThenList": [
          "should return ok",
          "should succeed and return create link for country level role"
        ],
        "Children": []
      },
      {
        "$id": "5185",
        "FileName": "when_get_type_of_services_with_fee.cs",
        "Description": "when get type of service with fee but there is no fee from billing service for unkown reason",
        "WhenList": [
          "find all services by country level role"
        ],
        "ThenList": [
          "should return ok",
          "should succeed and return create link for country level role"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5186",
    "FileName": "when_get_user_by_GUID.cs",
    "Description": "when get user by GUID",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5187",
        "FileName": "when_get_user_by_GUID.cs",
        "Description": "when get user by different GUID of existing staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok of status code",
          "should return sofia",
          "when get user by another guid should get same staff info"
        ],
        "Children": []
      },
      {
        "$id": "5188",
        "FileName": "when_get_user_by_GUID.cs",
        "Description": "when get user with active status by GUID of existing staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return sofia with status"
        ],
        "Children": []
      },
      {
        "$id": "5189",
        "FileName": "when_get_user_by_GUID.cs",
        "Description": "when get user with pending status by GUID of existing staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return sofia with status"
        ],
        "Children": []
      },
      {
        "$id": "5190",
        "FileName": "when_get_user_by_GUID.cs",
        "Description": "when get user by GUID of non existing staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return not found of status code"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5191",
    "FileName": "when_update_user_preference_with_invalid_parameters.cs",
    "Description": "when update user preference with invalid parameters",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5192",
        "FileName": "when_update_user_preference_with_invalid_parameters.cs",
        "Description": "when update with other user identifier",
        "WhenList": [
          "when update user preference"
        ],
        "ThenList": [
          "should return 403 forbidden as status code",
          "should NOT update user preference"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5193",
    "FileName": "when_update_user_preference_with_valid_request.cs",
    "Description": "when update user preference with valid request",
    "WhenList": [
      "when update user preference"
    ],
    "ThenList": [
      "should return 204 no content as status code",
      "should update user preference"
    ],
    "Children": []
  },
  {
    "$id": "5194",
    "FileName": "when_user_login.cs",
    "Description": "when user login",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should update staff last login date"
    ],
    "Children": []
  },
  {
    "$id": "5195",
    "FileName": "when_create_video_briefing_with_invalid_request.cs",
    "Description": "when create video briefing with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5196",
        "FileName": "when_create_video_briefing_with_invalid_request.cs",
        "Description": "should return bad request when request is empty",
        "WhenList": [
          "send empty request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5197",
    "FileName": "when_create_video_briefing_with_valid_request.cs",
    "Description": "when create video briefing with valid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5198",
        "FileName": "when_create_video_briefing_with_valid_request.cs",
        "Description": "should create when request without engagement",
        "WhenList": [
          "send valid request"
        ],
        "ThenList": [
          "should return created",
          "should create new video briefing"
        ],
        "Children": []
      },
      {
        "$id": "5199",
        "FileName": "when_create_video_briefing_with_valid_request.cs",
        "Description": "should create when request with multiple engagements",
        "WhenList": [
          "send valid request"
        ],
        "ThenList": [
          "should return created",
          "should belongs to two engagements"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5200",
    "FileName": "when_show_video_briefing.cs",
    "Description": "when show video briefing",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5201",
        "FileName": "when_show_video_briefing.cs",
        "Description": "should return not found when video briefing id invalid",
        "WhenList": [
          "given briefing id invalid"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5202",
    "FileName": "when_batch_update_task_responsibility.cs",
    "Description": "when batch update task responsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5203",
        "FileName": "when_batch_update_task_responsibility.cs",
        "Description": "when batch update responsibility with legal request",
        "WhenList": [
          "update task assignments"
        ],
        "ThenList": [
          "should return ok",
          "should update assignments",
          "should update the activity history log"
        ],
        "Children": []
      },
      {
        "$id": "5204",
        "FileName": "when_batch_update_task_responsibility.cs",
        "Description": "when batch update responsibility for not stared revision task",
        "WhenList": [
          "update task assignments"
        ],
        "ThenList": [
          "should return ok",
          "should update assignments"
        ],
        "Children": []
      },
      {
        "$id": "5205",
        "FileName": "when_batch_update_task_responsibility.cs",
        "Description": "when batch update responsibility with illegal request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5206",
            "FileName": "when_batch_update_task_responsibility.cs",
            "Description": "when work record responsible office is different with staff office",
            "WhenList": [
              "update task assignments"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5207",
        "FileName": "when_batch_update_task_responsibility.cs",
        "Description": "when batch update responsibility with restricted engagements",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5208",
            "FileName": "when_batch_update_task_responsibility.cs",
            "Description": "should not be allowed to update by staff who is not on ACL",
            "WhenList": [
              "update task assignments by staff not on acl"
            ],
            "ThenList": [
              "should return ok",
              "should return with message",
              "should not update assignments"
            ],
            "Children": []
          },
          {
            "$id": "5209",
            "FileName": "when_batch_update_task_responsibility.cs",
            "Description": "should not be allowed to update responsibility to staff who is not on acl",
            "WhenList": [
              "update task assignments to staff not on acl"
            ],
            "ThenList": [
              "should return ok",
              "should return with message",
              "should not update assignments"
            ],
            "Children": []
          },
          {
            "$id": "5210",
            "FileName": "when_batch_update_task_responsibility.cs",
            "Description": "should be allowed to update responsibility to staff who is on acl by staff on acl",
            "WhenList": [
              "update task assignments"
            ],
            "ThenList": [
              "should return ok",
              "should update assignments"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5211",
        "FileName": "when_batch_update_task_responsibility.cs",
        "Description": "when batch update responsibility with restricted assignees",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5212",
            "FileName": "when_batch_update_task_responsibility.cs",
            "Description": "should not be allowed to update by staff not on acl",
            "WhenList": [
              "update task assignments by staff not on acl"
            ],
            "ThenList": [
              "should return ok",
              "should return with message",
              "should not update assignments"
            ],
            "Children": []
          },
          {
            "$id": "5213",
            "FileName": "when_batch_update_task_responsibility.cs",
            "Description": "should update responsiblity to staff who is on ACL by staff on acl",
            "WhenList": [
              "update task assignments"
            ],
            "ThenList": [
              "should return ok",
              "should update assignments"
            ],
            "Children": []
          },
          {
            "$id": "5214",
            "FileName": "when_batch_update_task_responsibility.cs",
            "Description": "should not be allowed to update responsiblity to staff who is not on ACL by staff on acl",
            "WhenList": [
              "update task assignments to staff not on acl"
            ],
            "ThenList": [
              "should return ok",
              "should return with message",
              "should not update assignments"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5215",
    "FileName": "when_batch_update_task_responsibility_with_invalid_serviceStatus.cs",
    "Description": "when batch update task responsibility with invalid service status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5216",
        "FileName": "when_batch_update_task_responsibility_with_invalid_serviceStatus.cs",
        "Description": "when batch update responsibility with legal request",
        "WhenList": [
          "update task assignments"
        ],
        "ThenList": [
          "should return ok",
          "should update assignments"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5217",
    "FileName": "when_search_batch_assign_briefing_workrecord_tasks_with_current_milestone.cs",
    "Description": "when search batch assign briefing workrecord tasks with current milestone",
    "WhenList": [
      "search work records"
    ],
    "ThenList": [
      "should only get work records tasks with current milestone"
    ],
    "Children": []
  },
  {
    "$id": "5218",
    "FileName": "when_search_batch_assign_online_briefing_workrecord_tasks.cs",
    "Description": "when search batch assign online briefing workrecord tasks",
    "WhenList": [
      "search batch assign tasks"
    ],
    "ThenList": [
      "should only filter out notify and schedule task"
    ],
    "Children": []
  },
  {
    "$id": "5219",
    "FileName": "when_search_batch_assign_tasks_for_global_admin.cs",
    "Description": "when search batch assign tasks for global admin",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5220",
        "FileName": "when_search_batch_assign_tasks_for_global_admin.cs",
        "Description": "when search by global admin",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should succeed",
          "should not filter by current user office"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5221",
    "FileName": "when_search_batch_assign_tasks_for_invalid_assignee.cs",
    "Description": "when search batch assign tasks for invalid assignee",
    "WhenList": [
      "search work records"
    ],
    "ThenList": [
      "should return ok",
      "should not return work records of invalid assignees"
    ],
    "Children": []
  },
  {
    "$id": "5222",
    "FileName": "when_search_batch_assign_tasks_with_team_filter.cs",
    "Description": "when search batch assign tasks with team filter",
    "WhenList": [
      "search work records"
    ],
    "ThenList": [
      "should only get work records tasks with team"
    ],
    "Children": []
  },
  {
    "$id": "5223",
    "FileName": "when_search_batch_assign_with_complexity.cs",
    "Description": "when search batch assign with complexity",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5224",
        "FileName": "when_search_batch_assign_with_complexity.cs",
        "Description": "should search only one eazy complexity work record",
        "WhenList": [
          "search with easy complexitry"
        ],
        "ThenList": [
          "should return ok",
          "should return only one work record"
        ],
        "Children": []
      },
      {
        "$id": "5225",
        "FileName": "when_search_batch_assign_with_complexity.cs",
        "Description": "should search all three work records",
        "WhenList": [
          "search with non complexitry"
        ],
        "ThenList": [
          "should return ok",
          "should return all three work record",
          "should return search result with complexity"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5226",
    "FileName": "when_search_batch_assign_work_record_tasks.cs",
    "Description": "when search batch assign work record tasks",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5227",
        "FileName": "when_search_batch_assign_work_record_tasks.cs",
        "Description": "when engagement is active",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5228",
            "FileName": "when_search_batch_assign_work_record_tasks.cs",
            "Description": "search immigration general work record",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return immigration work records"
            ],
            "Children": []
          },
          {
            "$id": "5229",
            "FileName": "when_search_batch_assign_work_record_tasks.cs",
            "Description": "search tax return work record",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return work records with questionnaire"
            ],
            "Children": []
          },
          {
            "$id": "5230",
            "FileName": "when_search_batch_assign_work_record_tasks.cs",
            "Description": "search briefing work record",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return briefing work record tasks"
            ],
            "Children": []
          },
          {
            "$id": "5231",
            "FileName": "when_search_batch_assign_work_record_tasks.cs",
            "Description": "search briefing work record with current milestone",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should return briefing work record tasks whose current milestone is schedule"
            ],
            "Children": []
          },
          {
            "$id": "5232",
            "FileName": "when_search_batch_assign_work_record_tasks.cs",
            "Description": "with all engagements",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "5233",
                "FileName": "when_search_batch_assign_work_record_tasks.cs",
                "Description": "with a general user",
                "WhenList": [
                  "search work records"
                ],
                "ThenList": [
                  "should succeed",
                  "should return sorted work records"
                ],
                "Children": []
              },
              {
                "$id": "5234",
                "FileName": "when_search_batch_assign_work_record_tasks.cs",
                "Description": "with a tax year",
                "WhenList": [
                  "search work records"
                ],
                "ThenList": [
                  "should succeed",
                  "should return sorted work records"
                ],
                "Children": []
              },
              {
                "$id": "5235",
                "FileName": "when_search_batch_assign_work_record_tasks.cs",
                "Description": "with a country level user",
                "WhenList": [
                  "search work records"
                ],
                "ThenList": [
                  "should succeed",
                  "should return work records"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "5236",
            "FileName": "when_search_batch_assign_work_record_tasks.cs",
            "Description": "with a user subscribed to a restricted engagement acl",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should succeed",
              "should return work records"
            ],
            "Children": []
          },
          {
            "$id": "5237",
            "FileName": "when_search_batch_assign_work_record_tasks.cs",
            "Description": "with staff subscribed to restricted assignee acl",
            "WhenList": [
              "search work records"
            ],
            "ThenList": [
              "should succeed",
              "should return work records"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5238",
        "FileName": "when_search_batch_assign_work_record_tasks.cs",
        "Description": "when engagement is inactive",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should NOT return work records in inactive engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5239",
    "FileName": "when_search_batch_assign_work_record_tasks_with_country_template_uri.cs",
    "Description": "when search batch assign work record tasks with country template uri",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5240",
        "FileName": "when_search_batch_assign_work_record_tasks_with_country_template_uri.cs",
        "Description": "given work record with country task tamplate only",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return work record with country task templates"
        ],
        "Children": []
      },
      {
        "$id": "5241",
        "FileName": "when_search_batch_assign_work_record_tasks_with_country_template_uri.cs",
        "Description": "given work record with both country task tamplate and engagement task template",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return empty list because the work record has two task templates"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5242",
    "FileName": "when_search_batch_assign_work_record_tasks_with_engagement_and_country_template_uri.cs",
    "Description": "when search batch assign work record tasks with engagement and country template uri",
    "WhenList": [
      "search work records"
    ],
    "ThenList": [
      "should return empty record bacause the work record has two task template"
    ],
    "Children": []
  },
  {
    "$id": "5243",
    "FileName": "when_search_batch_assign_work_record_tasks_with_engagement_template_uri.cs",
    "Description": "when search batch assign work record tasks with engagement template uri",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5244",
        "FileName": "when_search_batch_assign_work_record_tasks_with_engagement_template_uri.cs",
        "Description": "given workrecord with engagement task template only",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return serach result with engagment task template"
        ],
        "Children": []
      },
      {
        "$id": "5245",
        "FileName": "when_search_batch_assign_work_record_tasks_with_engagement_template_uri.cs",
        "Description": "given workrecord with both engagement task template and country task template",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return empty record bacause the work record has two task template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5246",
    "FileName": "when_search_batch_reassign_online_briefing_workrecord_tasks.cs",
    "Description": "when search batch reassign online briefing workrecord tasks",
    "WhenList": [
      "search batch assign tasks"
    ],
    "ThenList": [
      "should only filter out notify and schedule task"
    ],
    "Children": []
  },
  {
    "$id": "5247",
    "FileName": "when_search_tasks.cs",
    "Description": "when search tasks",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5248",
        "FileName": "when_search_tasks.cs",
        "Description": "when search tasks with one engagement selected",
        "WhenList": [
          "search tasks"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      },
      {
        "$id": "5249",
        "FileName": "when_search_tasks.cs",
        "Description": "when search tasks with all engagments selected",
        "WhenList": [
          "search tasks"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      },
      {
        "$id": "5250",
        "FileName": "when_search_tasks.cs",
        "Description": "when search by country level role",
        "WhenList": [
          "search tasks"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      },
      {
        "$id": "5251",
        "FileName": "when_search_tasks.cs",
        "Description": "when search task of immigration briefing work record",
        "WhenList": [
          "search tasks"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      },
      {
        "$id": "5252",
        "FileName": "when_search_tasks.cs",
        "Description": "when search tasks by tax return only",
        "WhenList": [
          "search tasks"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5253",
    "FileName": "when_search_tasks_for_invalid_assignee.cs",
    "Description": "when search tasks for invalid assignee",
    "WhenList": [
      "search tasks"
    ],
    "ThenList": [
      "should return ok",
      "should return search result"
    ],
    "Children": []
  },
  {
    "$id": "5254",
    "FileName": "when_search_tasks_which_related_to_restricted_assignee.cs",
    "Description": "when search tasks which related to restricted assignee",
    "WhenList": [
      "search tasks"
    ],
    "ThenList": [
      "should return ok",
      "should return search result"
    ],
    "Children": []
  },
  {
    "$id": "5255",
    "FileName": "when_search_tasks_which_related_to_restricted_engagement.cs",
    "Description": "when search tasks which related to restricted engagement",
    "WhenList": [
      "search tasks"
    ],
    "ThenList": [
      "should return ok",
      "should return search result"
    ],
    "Children": []
  },
  {
    "$id": "5256",
    "FileName": "when_search_tasks_without_responsibility.cs",
    "Description": "when search tasks without responsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5257",
        "FileName": "when_search_tasks_without_responsibility.cs",
        "Description": "when search tasks with one engagement selected",
        "WhenList": [
          "search tasks"
        ],
        "ThenList": [
          "should return ok",
          "should return 3 task within default template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5258",
    "FileName": "when_search_tasks_with_team_filter.cs",
    "Description": "when search tasks with team filter",
    "WhenList": [
      "send search task request"
    ],
    "ThenList": [
      "should return ok",
      "should return search result"
    ],
    "Children": []
  },
  {
    "$id": "5259",
    "FileName": "when_search_immigration_work_record_in_work_pool_with_briefing_work_record_type.cs",
    "Description": "when search immigration work record in work pool with briefing work record type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5260",
        "FileName": "when_search_immigration_work_record_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out briefing immigration work record given immigration work record",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return task"
        ],
        "Children": []
      },
      {
        "$id": "5261",
        "FileName": "when_search_immigration_work_record_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out briefing work record when given immigration briefing work record in milestone of schedule",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return work record"
        ],
        "Children": []
      },
      {
        "$id": "5262",
        "FileName": "when_search_immigration_work_record_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out all briefing immigration work records given 2 immigration work record",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return task"
        ],
        "Children": []
      },
      {
        "$id": "5263",
        "FileName": "when_search_immigration_work_record_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out briefing revison task instead of milestone task when given immigration briefing work record with revision tasks",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should only search out revision briefing task"
        ],
        "Children": []
      },
      {
        "$id": "5264",
        "FileName": "when_search_immigration_work_record_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should filter work record by current milestone when given immigration briefing work records",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should only search out revision briefing task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5265",
    "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
    "Description": "when search in work pool with briefing work record type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5266",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out tax briefing task when given tax briefing work record",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return task"
        ],
        "Children": []
      },
      {
        "$id": "5267",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out social security briefing task when given social security briefing work record",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return task"
        ],
        "Children": []
      },
      {
        "$id": "5268",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out briefing task when given tax briefing work record in milestone of schedule",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return task"
        ],
        "Children": []
      },
      {
        "$id": "5269",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out briefing task when given tax briefing work record and tax return work record",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should only search out unassigned briefing task"
        ],
        "Children": []
      },
      {
        "$id": "5270",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out tax return task when given tax briefing work record and tax return work record",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should only search out unassigned tax return task"
        ],
        "Children": []
      },
      {
        "$id": "5271",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out all briefing task when given 2 tax briefing work records",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should only search out all unassigned briefing task"
        ],
        "Children": []
      },
      {
        "$id": "5272",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out briefing revison task instead of milestone task when given tax briefing work record with revision tasks",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should only search out revision briefing task"
        ],
        "Children": []
      },
      {
        "$id": "5273",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should search out 2 briefing revison tasks when given tax briefing work record with 2 revision tasks",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should only search out revision briefing task"
        ],
        "Children": []
      },
      {
        "$id": "5274",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should filter with practice type when given tax briefing work record and immigration and social security work record",
        "WhenList": [
          "search work pool with briefing work record with tax"
        ],
        "ThenList": [
          "should be ok",
          "should only search out tax briefing task"
        ],
        "Children": []
      },
      {
        "$id": "5275",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should filter with tax year when given tax briefing work records of different year ending",
        "WhenList": [
          "search work pool with briefing work record with tax"
        ],
        "ThenList": [
          "should be ok",
          "should only search out tax briefing task"
        ],
        "Children": []
      },
      {
        "$id": "5276",
        "FileName": "when_search_in_work_pool_with_briefing_work_record_type.cs",
        "Description": "should filter with current milestone when given briefing work records",
        "WhenList": [
          "search work pool with briefing work record with tax"
        ],
        "ThenList": [
          "should be ok",
          "should only search out tax briefing task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5277",
    "FileName": "when_search_online_briefing_work_records_in_work_pool.cs",
    "Description": "when search online briefing work records in work pool",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5278",
        "FileName": "when_search_online_briefing_work_records_in_work_pool.cs",
        "Description": "should ignore auto completed task when given tax online briefing work record and current milestone is notify",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return task"
        ],
        "Children": []
      },
      {
        "$id": "5279",
        "FileName": "when_search_online_briefing_work_records_in_work_pool.cs",
        "Description": "should ignore auto completed task when given tax online briefing work record and current milestone is schedule",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return task"
        ],
        "Children": []
      },
      {
        "$id": "5280",
        "FileName": "when_search_online_briefing_work_records_in_work_pool.cs",
        "Description": "should ignore auto completed task when given tax online briefing work record and current milestone is complete",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return task"
        ],
        "Children": []
      },
      {
        "$id": "5281",
        "FileName": "when_search_online_briefing_work_records_in_work_pool.cs",
        "Description": "should ignore auto completed task when given ss online briefing work record and current milestone is notify",
        "WhenList": [
          "search work pool with briefing work recored"
        ],
        "ThenList": [
          "should be ok",
          "should return task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5282",
    "FileName": "when_search_work_pool.cs",
    "Description": "when search work pool",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5283",
        "FileName": "when_search_work_pool.cs",
        "Description": "when search work pool by practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5284",
            "FileName": "when_search_work_pool.cs",
            "Description": "search tax return work record",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should return ok",
              "should return search result"
            ],
            "Children": []
          },
          {
            "$id": "5285",
            "FileName": "when_search_work_pool.cs",
            "Description": "search other compliance work record task",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should return ok",
              "should return other compliance work record current task and revision tasks",
              "should not return the not used fields to minimize the json size"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5286",
        "FileName": "when_search_work_pool.cs",
        "Description": "when search work pool by search conditions",
        "WhenList": [
          "search work pool"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      },
      {
        "$id": "5287",
        "FileName": "when_search_work_pool.cs",
        "Description": "should use engagements practice type when search criteria includes engagement",
        "WhenList": [
          "search work pool"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      },
      {
        "$id": "5288",
        "FileName": "when_search_work_pool.cs",
        "Description": "when a work record questionnaire is back to in process status",
        "WhenList": [
          "set the questionnaire back to in process and search work pool"
        ],
        "ThenList": [
          "should succeed",
          "should not return the work record with in process questionnaire"
        ],
        "Children": []
      },
      {
        "$id": "5289",
        "FileName": "when_search_work_pool.cs",
        "Description": "when search work record that related to restricted engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5290",
            "FileName": "when_search_work_pool.cs",
            "Description": "when current user is not on engagements acl",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should succeed",
              "should not return the work record"
            ],
            "Children": []
          },
          {
            "$id": "5291",
            "FileName": "when_search_work_pool.cs",
            "Description": "when current user is not on engagements acl 1",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should succeed",
              "should not return the work record"
            ],
            "Children": []
          },
          {
            "$id": "5292",
            "FileName": "when_search_work_pool.cs",
            "Description": "when current user is on engagements acl",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should succeed",
              "should return the work record"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5293",
        "FileName": "when_search_work_pool.cs",
        "Description": "when search work pool for tax return type",
        "WhenList": [
          "search work pool"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5294",
    "FileName": "when_search_work_pool_for_invalid_assignee.cs",
    "Description": "when search work pool for invalid assignee",
    "WhenList": [
      "search work pool"
    ],
    "ThenList": [
      "should return ok",
      "should return search result"
    ],
    "Children": []
  },
  {
    "$id": "5295",
    "FileName": "when_search_work_pool_tasks.cs",
    "Description": "when search work pool tasks by workrecord type and year",
    "WhenList": [
      "search work pool"
    ],
    "ThenList": [
      "should return ok",
      "should return search result"
    ],
    "Children": []
  },
  {
    "$id": "5296",
    "FileName": "when_search_work_pool_tasks.cs",
    "Description": "when search work pool tasks",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5297",
        "FileName": "when_search_work_pool_tasks.cs",
        "Description": "when search work pool by practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5298",
            "FileName": "when_search_work_pool_tasks.cs",
            "Description": "when search tax return work record of assignee in inactive engagement",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should return ok",
              "should return search result"
            ],
            "Children": []
          },
          {
            "$id": "5299",
            "FileName": "when_search_work_pool_tasks.cs",
            "Description": "when search tax return work record with revision tasks",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should return ok",
              "should return search result"
            ],
            "Children": []
          },
          {
            "$id": "5300",
            "FileName": "when_search_work_pool_tasks.cs",
            "Description": "when search other compliance work record",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should return ok",
              "should return search result"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5301",
        "FileName": "when_search_work_pool_tasks.cs",
        "Description": "when search work pool tasks by task name",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5302",
            "FileName": "when_search_work_pool_tasks.cs",
            "Description": "when current task is not searched task name",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should return ok",
              "should not return task"
            ],
            "Children": []
          },
          {
            "$id": "5303",
            "FileName": "when_search_work_pool_tasks.cs",
            "Description": "when current task is searched task name",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should return ok",
              "should not return task"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5304",
        "FileName": "when_search_work_pool_tasks.cs",
        "Description": "when search work pool tasks by tag",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5305",
            "FileName": "when_search_work_pool_tasks.cs",
            "Description": "when current task is not assigned to searched tag",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should return ok",
              "should not return task"
            ],
            "Children": []
          },
          {
            "$id": "5306",
            "FileName": "when_search_work_pool_tasks.cs",
            "Description": "when current task is assigned to searched tag",
            "WhenList": [
              "search work pool"
            ],
            "ThenList": [
              "should return ok",
              "should not return task"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5307",
    "FileName": "when_search_work_pool_tasks_with_tag.cs",
    "Description": "when search work pool tasks with tag",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5308",
        "FileName": "when_search_work_pool_tasks_with_tag.cs",
        "Description": "should search out revision work record task by tag given work record",
        "WhenList": [
          "search work pool with tag condition"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      },
      {
        "$id": "5309",
        "FileName": "when_search_work_pool_tasks_with_tag.cs",
        "Description": "should not search out tasks by tag given work records with assignments of no tags",
        "WhenList": [
          "search work pool with tag condition"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5310",
    "FileName": "when_search_work_pool_tasks_with_team_filter.cs",
    "Description": "when search work pool tasks with team filter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5311",
        "FileName": "when_search_work_pool_tasks_with_team_filter.cs",
        "Description": "when search work pool by practice type",
        "WhenList": [
          "search work pool"
        ],
        "ThenList": [
          "should return ok",
          "should return search result"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5312",
    "FileName": "when_search_work_pool_with_complexity.cs",
    "Description": "when search work pool with complexity",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5313",
        "FileName": "when_search_work_pool_with_complexity.cs",
        "Description": "should return only one work record when search easy complexity work records",
        "WhenList": [
          "search with easy complexity"
        ],
        "ThenList": [
          "should return ok",
          "should return only one work record"
        ],
        "Children": []
      },
      {
        "$id": "5314",
        "FileName": "when_search_work_pool_with_complexity.cs",
        "Description": "should return all the three work records",
        "WhenList": [
          "search with non complexity"
        ],
        "ThenList": [
          "should return ok",
          "should return all three work record",
          "should get the search result with complexity"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5315",
    "FileName": "when_search_work_pool_with_restricted_assignee.cs",
    "Description": "when search work pool with restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5316",
        "FileName": "when_search_work_pool_with_restricted_assignee.cs",
        "Description": "when current user is not on assignee acl",
        "WhenList": [
          "search work pool"
        ],
        "ThenList": [
          "should succeed",
          "should not return the work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5317",
    "FileName": "when_search_work_pool_with_tag.cs",
    "Description": "when search work pool with tag",
    "WhenList": [
      "search work pool with tag condition"
    ],
    "ThenList": [
      "should return ok",
      "should return search result"
    ],
    "Children": []
  },
  {
    "$id": "5318",
    "FileName": "when_assign_responsibilities.cs",
    "Description": "when assign responsibilities",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5319",
        "FileName": "when_assign_responsibilities.cs",
        "Description": "when staff in delegated office",
        "WhenList": [
          "update responsibilities"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5320",
    "FileName": "when_search_work_pool.cs",
    "Description": "when search work pool",
    "WhenList": [
      "searching for work records"
    ],
    "ThenList": [
      "should succeed",
      "should not return kayla work record"
    ],
    "Children": []
  },
  {
    "$id": "5321",
    "FileName": "when_assign_responsibilities.cs",
    "Description": "when assign responsibilities",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5322",
        "FileName": "when_assign_responsibilities.cs",
        "Description": "should update unassigned tasks in current milestone when assignments are valid",
        "WhenList": [
          "update responsibilities"
        ],
        "ThenList": [
          "should return ok",
          "should update responsibilities",
          "should update the activity history log"
        ],
        "Children": []
      },
      {
        "$id": "5323",
        "FileName": "when_assign_responsibilities.cs",
        "Description": "should return error message when responsibility is not current user and not current users colleague",
        "WhenList": [
          "update responsibilities"
        ],
        "ThenList": [
          "should return ok",
          "should return errormessage"
        ],
        "Children": []
      },
      {
        "$id": "5324",
        "FileName": "when_assign_responsibilities.cs",
        "Description": "should return error message when task responsible office is invalid",
        "WhenList": [
          "update responsibilities"
        ],
        "ThenList": [
          "should return ok",
          "should return errormessage"
        ],
        "Children": []
      },
      {
        "$id": "5325",
        "FileName": "when_assign_responsibilities.cs",
        "Description": "should return error message when task responsibility was assigned",
        "WhenList": [
          "update responsibilities"
        ],
        "ThenList": [
          "should return ok",
          "should return errormessage"
        ],
        "Children": []
      },
      {
        "$id": "5326",
        "FileName": "when_assign_responsibilities.cs",
        "Description": "should return error message when work record is problematic",
        "WhenList": [
          "update responsibilities with valid responsibilities"
        ],
        "ThenList": [
          "should return ok",
          "should return errormessage"
        ],
        "Children": []
      },
      {
        "$id": "5327",
        "FileName": "when_assign_responsibilities.cs",
        "Description": "should return error message when current users office is not the same as work record responsible office and task assignment responsible office",
        "WhenList": [
          "update responsibilities with valid responsibilities"
        ],
        "ThenList": [
          "should return forbidden",
          "should return errormessage"
        ],
        "Children": []
      },
      {
        "$id": "5328",
        "FileName": "when_assign_responsibilities.cs",
        "Description": "should return error message when current user is not on engagements acl",
        "WhenList": [
          "update responsibilities"
        ],
        "ThenList": [
          "should return ok",
          "should return errormessage"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5329",
    "FileName": "when_assign_responsibily_with_restrict_assignee.cs",
    "Description": "when assign responsibily with restrict assignee",
    "WhenList": [
      "update responsibilities"
    ],
    "ThenList": [
      "should return error msg"
    ],
    "Children": []
  },
  {
    "$id": "5330",
    "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
    "Description": "when calculate brief work record notification time kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5331",
        "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
        "Description": "when calculating notification time and no work records exist",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5332",
        "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
        "Description": "when calculate kpi when has work records",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5333",
            "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
            "Description": "when calculate notification time on april 20 and without end date",
            "WhenList": [
              "when calculate kpi on first day"
            ],
            "ThenList": [
              "should return ok",
              "should return 0 for work record notification time kpi"
            ],
            "Children": []
          },
          {
            "$id": "5334",
            "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
            "Description": "when calculate notification time on april 21 and without end date",
            "WhenList": [
              "when calculate kpi on first day"
            ],
            "ThenList": [
              "should return ok",
              "should return 0 for work record notification time kpi"
            ],
            "Children": []
          },
          {
            "$id": "5335",
            "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
            "Description": "when calculate notification time on april 21 2017",
            "WhenList": [
              "when calculate kpi on first day"
            ],
            "ThenList": [
              "should return ok",
              "should return 366 for work record notification time kpi"
            ],
            "Children": []
          },
          {
            "$id": "5336",
            "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
            "Description": "when calculate notification time for briefing work record on april 25 with notify done on april 25",
            "WhenList": [
              "when notify milestone done on april 25 and calculate kpi on april 25"
            ],
            "ThenList": [
              "should return ok",
              "should return 5 for notification time kpi"
            ],
            "Children": []
          },
          {
            "$id": "5337",
            "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
            "Description": "when calculate notification time for briefing work record on april 26 with notify done on april 25",
            "WhenList": [
              "when notify milestone done on april 25 and calculate kpi on april 26"
            ],
            "ThenList": [
              "should return ok",
              "should return 5 for notification time kpi"
            ],
            "Children": []
          },
          {
            "$id": "5338",
            "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
            "Description": "when calculate notification time after service requested on date changed",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "5339",
                "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
                "Description": "when change service requested on date to april 22",
                "WhenList": [
                  "when change service requested date"
                ],
                "ThenList": [
                  "should return 3 when calculate kpi on april 26"
                ],
                "Children": []
              },
              {
                "$id": "5340",
                "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
                "Description": "when change service requested on date to april 26",
                "WhenList": [
                  "when change service requested date"
                ],
                "ThenList": [
                  "should return minus one when calculate kpi on april 26"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "5341",
            "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
            "Description": "when calculate notification time after changing end date",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "5342",
                "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
                "Description": "when move milestone back which changes notify done end date to null",
                "WhenList": [
                  "when move milestone back to notify"
                ],
                "ThenList": [
                  "should return 6 when calculate kpi on april 26"
                ],
                "Children": []
              },
              {
                "$id": "5343",
                "FileName": "when_calculate_brief_work_record_notification_time_kpi.cs",
                "Description": "when move milestone back and move forward again with notify done date changed to may 1",
                "WhenList": [
                  "when move milestone back and move forward again with notify done date changed"
                ],
                "ThenList": [
                  "should return 11 when calculate kpi on may 2"
                ],
                "Children": []
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "$id": "5344",
    "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
    "Description": "when calculate work record cycle time kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5345",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when work record in 2014 and 2015 exist",
        "WhenList": [
          "calculate kpi on april 21"
        ],
        "ThenList": [
          "should only calculate work record of 2015"
        ],
        "Children": []
      },
      {
        "$id": "5346",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when get cycle time on april 20",
        "WhenList": [
          "calculate kpi on april 20"
        ],
        "ThenList": [
          "should not get cycle time of not submitted work record",
          "should get cycle time of submitted work record"
        ],
        "Children": []
      },
      {
        "$id": "5347",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when get cycle time on april 21",
        "WhenList": [
          "calculate kpi on april 21"
        ],
        "ThenList": [
          "should return ok",
          "should get cycle time is null for work record in 2016"
        ],
        "Children": []
      },
      {
        "$id": "5348",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when assignee is marked as inactive",
        "WhenList": [
          "assignee is marked as inactive"
        ],
        "ThenList": [
          "should get cycle time of null"
        ],
        "Children": []
      },
      {
        "$id": "5349",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when set service status to cancelled",
        "WhenList": [
          "update service status to cancelled on 21"
        ],
        "ThenList": [
          "should get cycle time of null"
        ],
        "Children": []
      },
      {
        "$id": "5350",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when set service status to declined",
        "WhenList": [
          "update service status to cancelled on 21"
        ],
        "ThenList": [
          "should get cycle time of null"
        ],
        "Children": []
      },
      {
        "$id": "5351",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when move milestone to service initiated done on april 20 and get cycletime",
        "WhenList": [
          "calculate kpi on april 21"
        ],
        "ThenList": [
          "should return ok",
          "should get cycle time is 1",
          "should get cycle time of 35 after more than one month on may 28"
        ],
        "Children": []
      },
      {
        "$id": "5352",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when move milestone to service initiated done one april 20 and service delivered done on 2016 april 22",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5353",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "should get cycle time of 2 on aril 22",
            "WhenList": [],
            "ThenList": [
              "should return ok",
              "should get cycle time is 2 on april 22"
            ],
            "Children": []
          },
          {
            "$id": "5354",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "should get cycle time of on april 23",
            "WhenList": [
              "calculate work record kpi on april 23"
            ],
            "ThenList": [
              "should get cycle time is 2 on april 23"
            ],
            "Children": []
          },
          {
            "$id": "5355",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "should get cycle time of null when work record is marked as cancelled on april 23",
            "WhenList": [
              "work record is marked cancelled on april 23"
            ],
            "ThenList": [
              "should get cycle time of null",
              "should get cycle time if work record is marked no issue again"
            ],
            "Children": []
          },
          {
            "$id": "5356",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "should get cycle time of null when work record is marked as declined on april 23",
            "WhenList": [
              "work record is marked cancelled on april 23"
            ],
            "ThenList": [
              "should get cycle time of null"
            ],
            "Children": []
          },
          {
            "$id": "5357",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "should get cycle time of 2 when work record is marked as no filing requirement on april 23",
            "WhenList": [
              "work record is marked cancelled on april 23"
            ],
            "ThenList": [
              "should get cycle time of null",
              "should get cycle time if work record is marked no issue again"
            ],
            "Children": []
          },
          {
            "$id": "5358",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "should get cycle time of null when work record is marked as non complier on april 23",
            "WhenList": [
              "work record is marked cancelled on april 23"
            ],
            "ThenList": [
              "should get cycle time of null"
            ],
            "Children": []
          },
          {
            "$id": "5359",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "on april 23 move back",
            "WhenList": [],
            "ThenList": [
              "should do"
            ],
            "Children": []
          },
          {
            "$id": "5360",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "on april 23 move back and move to delivered done",
            "WhenList": [],
            "ThenList": [
              "should do recalculate cycle time"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5361",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when move milestone to service initiated done one april 20 mark as no filing requirement on 2016 april 22",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5362",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "on aril 22",
            "WhenList": [],
            "ThenList": [
              "should return ok",
              "should get cycle time is 2 on april 22"
            ],
            "Children": []
          },
          {
            "$id": "5363",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "on april 23",
            "WhenList": [
              "calculate work record kpi on april 23"
            ],
            "ThenList": [
              "should get cycle time is 2 on april 23"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5364",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when move milestone to service initiated done one april 20 mark as non complier on 2016 april 22",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5365",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "on aril 22",
            "WhenList": [],
            "ThenList": [
              "should return ok",
              "should get cycle time is 2 on april 22"
            ],
            "Children": []
          },
          {
            "$id": "5366",
            "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
            "Description": "on april 23",
            "WhenList": [
              "calculate work record kpi on april 23"
            ],
            "ThenList": [
              "should get cycle time is 2 on april 23"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5367",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when missing info is identified and received before questionaire submitted",
        "WhenList": [
          "calculate cycle time on 21"
        ],
        "ThenList": [
          "should get 1 for cycle time"
        ],
        "Children": []
      },
      {
        "$id": "5368",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when missing info is identified before questionaire submitted and received after questionaire submitted",
        "WhenList": [],
        "ThenList": [
          "calculate cycle time"
        ],
        "Children": []
      },
      {
        "$id": "5369",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when missing info is identified after questionaire submitted and received before delivered",
        "WhenList": [],
        "ThenList": [
          "should calculate cycle time"
        ],
        "Children": []
      },
      {
        "$id": "5370",
        "FileName": "when_calculate_work_record_cycle_time_kpi.cs",
        "Description": "when missing info identified and received less in than 24 hours",
        "WhenList": [],
        "ThenList": [
          "should calcuate cycle time"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5371",
    "FileName": "when_calculate_work_record_frontload_kpi.cs",
    "Description": "when calculate work record frontload kpi",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5372",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when calcuate frontload time on 2016 may 1",
        "WhenList": [
          "calculate work record frontload kpi"
        ],
        "ThenList": [
          "should return ok",
          "should return 11 for work record frontload kpi"
        ],
        "Children": []
      },
      {
        "$id": "5373",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when work record is marked as cancelled",
        "WhenList": [
          "work record is marked as cancelled on 21"
        ],
        "ThenList": [
          "should return null for work record frontload kpi"
        ],
        "Children": []
      },
      {
        "$id": "5374",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when work record is marked as declined",
        "WhenList": [
          "work record is marked as cancelled on 21"
        ],
        "ThenList": [
          "should return null for work record frontload kpi"
        ],
        "Children": []
      },
      {
        "$id": "5375",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when calculate frontload time",
        "WhenList": [
          "calculate work record frontload kpi"
        ],
        "ThenList": [
          "should retrun ok",
          "should return 1 for frontload kpi"
        ],
        "Children": []
      },
      {
        "$id": "5376",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when get frontload kpi for work record with unsubmitted questionnaire",
        "WhenList": [
          "calcuate work record kpi"
        ],
        "ThenList": [
          "should return ok",
          "should get frontload kpi for work record with unsubmitted questionnaire"
        ],
        "Children": []
      },
      {
        "$id": "5377",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when get frontload kpi for work record with unsubmitted questionnaire and status is non complier",
        "WhenList": [
          "calcuate work record kpi"
        ],
        "ThenList": [
          "should return ok",
          "should get frontload kpi for work record with unsubmitted questionnaire"
        ],
        "Children": []
      },
      {
        "$id": "5378",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when get frontload kpi on 2016 april 21",
        "WhenList": [
          "calculate work record kpi"
        ],
        "ThenList": [
          "should return ok",
          "should get front load kpi is 1"
        ],
        "Children": []
      },
      {
        "$id": "5379",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when service init completed two days after questionnaire submit",
        "WhenList": [
          "calculate work record kpi on april 22"
        ],
        "ThenList": [
          "should return ok",
          "should get front load kpi is 1"
        ],
        "Children": []
      },
      {
        "$id": "5380",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when reset work record service initiated done date when milestone is moved on the same day",
        "WhenList": [
          "calculate work record kpi"
        ],
        "ThenList": [
          "should return ok",
          "should calcuate frontload kpi using latest service initiated done date"
        ],
        "Children": []
      },
      {
        "$id": "5381",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when reset work record service initiated done date when milestone is moved on different days",
        "WhenList": [],
        "ThenList": [
          "should calcuate frontload kpi using latest service initiated done date"
        ],
        "Children": []
      },
      {
        "$id": "5382",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when change work record status to noncomplier one day after questionnaire submit",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5383",
            "FileName": "when_calculate_work_record_frontload_kpi.cs",
            "Description": "get frontload kpi on 2016 apirl 21",
            "WhenList": [
              "calculate work record kpi"
            ],
            "ThenList": [
              "should return ok",
              "should get front load kpi is 1"
            ],
            "Children": []
          },
          {
            "$id": "5384",
            "FileName": "when_calculate_work_record_frontload_kpi.cs",
            "Description": "get frontload kpi on 2016 apirl 22",
            "WhenList": [
              "calculate work record kpi on 2016 april 22"
            ],
            "ThenList": [
              "should get front load kpi is 1"
            ],
            "Children": []
          },
          {
            "$id": "5385",
            "FileName": "when_calculate_work_record_frontload_kpi.cs",
            "Description": "get frontload kpi on 2016 apirl 22 while change status back to noissues",
            "WhenList": [
              "calculate work record kpi"
            ],
            "ThenList": [
              "should get front load kpi is 2"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5386",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when chagne work record status to noncomplier two days after questionniare submit",
        "WhenList": [
          "calculate work record kpi"
        ],
        "ThenList": [
          "should get front load kpi is 2"
        ],
        "Children": []
      },
      {
        "$id": "5387",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when change work record status to nofiling one days later after questionnaire submit",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5388",
            "FileName": "when_calculate_work_record_frontload_kpi.cs",
            "Description": "get frontload kpi on 2016 apirl 21",
            "WhenList": [
              "calculate work record kpi"
            ],
            "ThenList": [
              "should return ok",
              "should get front load kpi is 1"
            ],
            "Children": []
          },
          {
            "$id": "5389",
            "FileName": "when_calculate_work_record_frontload_kpi.cs",
            "Description": "get frontload kpi on 2016 apirl 22",
            "WhenList": [
              "calculate work record kpi on 2016 april 22"
            ],
            "ThenList": [
              "should return ok",
              "should get front load kpi is 1"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5390",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when change work record status to nonfiling two days later after questionnaire submit",
        "WhenList": [
          "calculate work record kpi on 2016 april 22"
        ],
        "ThenList": [
          "should get front load kpi is 2"
        ],
        "Children": []
      },
      {
        "$id": "5391",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when work record has service initiated done date and no filing requirement date",
        "WhenList": [
          "when calculate work record kpi on may 3"
        ],
        "ThenList": [
          "should return ok",
          "should return 11 for work record frontload kpi"
        ],
        "Children": []
      },
      {
        "$id": "5392",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when work record has multiple missing items identified and has service initiated done and non complier and no filing date",
        "WhenList": [
          "when calculate work record kpi on june 26"
        ],
        "ThenList": [
          "should return ok",
          "should return 5 for work record frontload kpi"
        ],
        "Children": []
      },
      {
        "$id": "5393",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when work record has missing item identified",
        "WhenList": [
          "when calculate work record kpi on april 26"
        ],
        "ThenList": [
          "should return ok",
          "should return 5 for work record frontload kpi"
        ],
        "Children": []
      },
      {
        "$id": "5394",
        "FileName": "when_calculate_work_record_frontload_kpi.cs",
        "Description": "when work record has service initiated done date and non complier date",
        "WhenList": [
          "calculate work record frontload kpi on may 3"
        ],
        "ThenList": [
          "should return ok",
          "should return 11 for work record frontload kpi"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5395",
    "FileName": "when_scan_work_records_to_calculate_front_load_kpi.cs",
    "Description": "when scan work records to calculate front load kpi",
    "WhenList": [
      "calculate work record kpi one day after questionnaire submit"
    ],
    "ThenList": [
      "should get 5 work records kpi"
    ],
    "Children": []
  },
  {
    "$id": "5396",
    "FileName": "when_scan_work_records_to_calculate_notifiation_time_kpi.cs",
    "Description": "when scan work records to calculate notification time kpi",
    "WhenList": [
      "calculate work record kpi one day after service requested on date"
    ],
    "ThenList": [
      "should get 7 work records kpi"
    ],
    "Children": []
  },
  {
    "$id": "5397",
    "FileName": "when_update_tax_return_work_record_servie_status_or_update_no_filing_requirement_status.cs",
    "Description": "when update tax return work record servie status or update no filing requirement status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5398",
        "FileName": "when_update_tax_return_work_record_servie_status_or_update_no_filing_requirement_status.cs",
        "Description": "when update service status to non complier",
        "WhenList": [
          "udpate work record service status to non complier"
        ],
        "ThenList": [
          "should update work record non complier date"
        ],
        "Children": []
      },
      {
        "$id": "5399",
        "FileName": "when_update_tax_return_work_record_servie_status_or_update_no_filing_requirement_status.cs",
        "Description": "when update service status to no issues",
        "WhenList": [
          "udpate work work record service status to no issues"
        ],
        "ThenList": [
          "should update work record non complier date to null"
        ],
        "Children": []
      },
      {
        "$id": "5400",
        "FileName": "when_update_tax_return_work_record_servie_status_or_update_no_filing_requirement_status.cs",
        "Description": "when check no filing requirement",
        "WhenList": [
          "check work record no filing requirement"
        ],
        "ThenList": [
          "should update work record no filing date"
        ],
        "Children": []
      },
      {
        "$id": "5401",
        "FileName": "when_update_tax_return_work_record_servie_status_or_update_no_filing_requirement_status.cs",
        "Description": "when uncheck no filing requirement",
        "WhenList": [
          "uncheck work record no filing requirement"
        ],
        "ThenList": [
          "should update work record no filing date to null"
        ],
        "Children": []
      },
      {
        "$id": "5402",
        "FileName": "when_update_tax_return_work_record_servie_status_or_update_no_filing_requirement_status.cs",
        "Description": "when update service status and no filing requirement together",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5403",
            "FileName": "when_update_tax_return_work_record_servie_status_or_update_no_filing_requirement_status.cs",
            "Description": "when update service status and no filing requirement",
            "WhenList": [
              "udpate work record"
            ],
            "ThenList": [
              "should update work record non complier date and no filing date"
            ],
            "Children": []
          },
          {
            "$id": "5404",
            "FileName": "when_update_tax_return_work_record_servie_status_or_update_no_filing_requirement_status.cs",
            "Description": "when not updating service status and no filing requirement",
            "WhenList": [
              "when not updating both fields"
            ],
            "ThenList": [
              "should keep work record non complier date and no filing date"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5405",
    "FileName": "when_batch_get_work_records.cs",
    "Description": "when batch get work records",
    "WhenList": [
      "batch get work records"
    ],
    "ThenList": [
      "should batch get all work records",
      "should batch get all work records info",
      "should return bad request if exceeds limitation"
    ],
    "Children": []
  },
  {
    "$id": "5406",
    "FileName": "when_batch_get_work_records.cs",
    "Description": "when batch get work records with restricted engagements",
    "WhenList": [
      "batch get work records"
    ],
    "ThenList": [
      "should return ok",
      "should not restrict"
    ],
    "Children": []
  },
  {
    "$id": "5407",
    "FileName": "when_batch_update_basic_info_with_uac_on.cs",
    "Description": "when batch update basic info with uac on",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5408",
        "FileName": "when_batch_update_basic_info_with_uac_on.cs",
        "Description": "when update basic information",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should update the given work records"
        ],
        "Children": []
      },
      {
        "$id": "5409",
        "FileName": "when_batch_update_basic_info_with_uac_on.cs",
        "Description": "when update with null fields",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should NOT update the given work records"
        ],
        "Children": []
      },
      {
        "$id": "5410",
        "FileName": "when_batch_update_basic_info_with_uac_on.cs",
        "Description": "when update with invalid empty name",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 400 as status code",
          "should NOT update the given work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5411",
    "FileName": "when_batch_update_estimated_completion_date.cs",
    "Description": "when batch update estimated completion date",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5412",
        "FileName": "when_batch_update_estimated_completion_date.cs",
        "Description": "when update estimated completion date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should update the given work records"
        ],
        "Children": []
      },
      {
        "$id": "5413",
        "FileName": "when_batch_update_estimated_completion_date.cs",
        "Description": "when update estimated completion date for not no issues work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5414",
        "FileName": "when_batch_update_estimated_completion_date.cs",
        "Description": "when update estimated completion date for no filing required work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5415",
        "FileName": "when_batch_update_estimated_completion_date.cs",
        "Description": "when update estimated completion date but current user is not on engagements acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5416",
    "FileName": "when_batch_update_responsible_office_with_uac_on.cs",
    "Description": "when batch update responsible office with uac on",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5417",
        "FileName": "when_batch_update_responsible_office_with_uac_on.cs",
        "Description": "when update without responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5418",
        "FileName": "when_batch_update_responsible_office_with_uac_on.cs",
        "Description": "when update with any responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 403"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5419",
    "FileName": "when_batch_update_tax_return_workrecord.cs",
    "Description": "when batch update tax return workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5420",
        "FileName": "when_batch_update_tax_return_workrecord.cs",
        "Description": "when update with due date and contact",
        "WhenList": [
          "when batch update questionnaire due date and tax contact"
        ],
        "ThenList": [
          "should return 200 ok as response code",
          "should update existed tax return workrecord"
        ],
        "Children": []
      },
      {
        "$id": "5421",
        "FileName": "when_batch_update_tax_return_workrecord.cs",
        "Description": "when update with contact office and empty contact",
        "WhenList": [
          "when batch update questionnaire due date and tax contact"
        ],
        "ThenList": [
          "should return 200 ok as response code",
          "should questionnaire contact office changed"
        ],
        "Children": []
      },
      {
        "$id": "5422",
        "FileName": "when_batch_update_tax_return_workrecord.cs",
        "Description": "when update with contact and empty due date",
        "WhenList": [
          "when batch update questionnaire due date and tax contact"
        ],
        "ThenList": [
          "should return 200 ok as response code",
          "should update existed tax return workrecord"
        ],
        "Children": []
      },
      {
        "$id": "5423",
        "FileName": "when_batch_update_tax_return_workrecord.cs",
        "Description": "when update with empty contact and due date",
        "WhenList": [
          "when batch update questionnaire due date and tax contact"
        ],
        "ThenList": [
          "should return 200 ok as response code",
          "should update existed tax return workrecord"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5424",
    "FileName": "when_batch_update_tax_return_workrecord.cs",
    "Description": "when update with contact who are not on ACL",
    "WhenList": [
      "when batch update questionnaire due date and tax contact"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "5425",
    "FileName": "when_batch_update_tax_return_workrecord_with_invalid_request.cs",
    "Description": "when batch update tax return workrecord with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5426",
        "FileName": "when_batch_update_tax_return_workrecord_with_invalid_request.cs",
        "Description": "when batch update tax return work record with invalid date format",
        "WhenList": [
          "when batch update"
        ],
        "ThenList": [
          "should return bad request",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "5427",
        "FileName": "when_batch_update_tax_return_workrecord_with_invalid_request.cs",
        "Description": "when batch update tax return work record which service status is not no issues",
        "WhenList": [
          "when batch update"
        ],
        "ThenList": [
          "should return bad request",
          "should return error message"
        ],
        "Children": []
      },
      {
        "$id": "5428",
        "FileName": "when_batch_update_tax_return_workrecord_with_invalid_request.cs",
        "Description": "when batch update organizer with contact office is not subscribed by engagement",
        "WhenList": [
          "when batch update"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5429",
    "FileName": "when_batch_update_tax_return_workrecord_with_restricted_assignee.cs",
    "Description": "when batch update tax return workrecord with restricted assignee",
    "WhenList": [
      "when batch update questionnaire due date and tax contact"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "5430",
    "FileName": "when_batch_update_workrecord_with_invalid_request.cs",
    "Description": "when batch update workrecord with invalid request",
    "WhenList": [
      "when batch update"
    ],
    "ThenList": [
      "should return bad request",
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "5431",
    "FileName": "when_batch_update_work_record_assignment.cs",
    "Description": "when batch update work record assignment",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return OK",
      "should change workrecord assignment"
    ],
    "Children": []
  },
  {
    "$id": "5432",
    "FileName": "when_batch_update_work_record_assignment_with_invalid_request.cs",
    "Description": "when batch update work record assignment with invalid request",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return bad request",
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "5433",
    "FileName": "when_batch_update_work_record_assignment_with_invalid_service_status.cs",
    "Description": "when batch update work record assignment with invalid service status",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should not update the assignement",
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "5434",
    "FileName": "when_batch_update_work_record_name.cs",
    "Description": "when batch update work record name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5435",
        "FileName": "when_batch_update_work_record_name.cs",
        "Description": "when update tax work records",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5436",
            "FileName": "when_batch_update_work_record_name.cs",
            "Description": "when update basic information",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 as status code",
              "should update the given work records"
            ],
            "Children": []
          },
          {
            "$id": "5437",
            "FileName": "when_batch_update_work_record_name.cs",
            "Description": "when update with null fields",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 as status code",
              "should NOT update the given work records"
            ],
            "Children": []
          },
          {
            "$id": "5438",
            "FileName": "when_batch_update_work_record_name.cs",
            "Description": "when update with invalid empty name",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 400 as status code",
              "should NOT update the given work records"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5439",
        "FileName": "when_batch_update_work_record_name.cs",
        "Description": "when update for immigration work records",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should update the given work records"
        ],
        "Children": []
      },
      {
        "$id": "5440",
        "FileName": "when_batch_update_work_record_name.cs",
        "Description": "when update for work record with no filing",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should update the given work records"
        ],
        "Children": []
      },
      {
        "$id": "5441",
        "FileName": "when_batch_update_work_record_name.cs",
        "Description": "when update for work record with issues",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 403 as status code"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5442",
    "FileName": "when_batch_update_work_record_team.cs",
    "Description": "when batch update work record team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5443",
        "FileName": "when_batch_update_work_record_team.cs",
        "Description": "when update tax work records",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5444",
            "FileName": "when_batch_update_work_record_team.cs",
            "Description": "when update team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return OK",
              "should update team of the given work records"
            ],
            "Children": []
          },
          {
            "$id": "5445",
            "FileName": "when_batch_update_work_record_team.cs",
            "Description": "when update team with empty string",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 as status code",
              "should NOT update the given work records"
            ],
            "Children": []
          },
          {
            "$id": "5446",
            "FileName": "when_batch_update_work_record_team.cs",
            "Description": "when update team with invalid uri",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad reuqest"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5447",
        "FileName": "when_batch_update_work_record_team.cs",
        "Description": "when update for immigration work records",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update the given work records"
        ],
        "Children": []
      },
      {
        "$id": "5448",
        "FileName": "when_batch_update_work_record_team.cs",
        "Description": "when update for work record with no filing",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should update the given work records"
        ],
        "Children": []
      },
      {
        "$id": "5449",
        "FileName": "when_batch_update_work_record_team.cs",
        "Description": "when update for work record with issues",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 403 as status code"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5450",
    "FileName": "when_batch_update_billing_status.cs",
    "Description": "when batch update billing status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5451",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when update billing status to billed",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "5452",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when update billing status to not billed",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "5453",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when current user not belong to workrecord engagement coordinating office or workrecord responsible office",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5454",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when current user not belong to engagement coordinating office but belong to workrecord responsible office",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "5455",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when current user belong to engagement coordinating office but not belong to workrecord responsible office",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "5456",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when update without work record ids",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5457",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when update with not exist work record ids",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "5458",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when billing status is not billed but given invoice number and date billed",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5459",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when billing status is billed but not given invoice number and date billed",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5460",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when billing status is billed given date billed but not given invoice number",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "5461",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when work record has issues",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "5462",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when update billing status to billed for immgration",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "5463",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when update billing status to not billed for social security",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "5464",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when update billing status to billed for briefing",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "5465",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when update with invalid date billed",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5466",
        "FileName": "when_batch_update_billing_status.cs",
        "Description": "when update with invalid invoice number",
        "WhenList": [
          "batch update billing status"
        ],
        "ThenList": [
          "should return ok",
          "should update billing status",
          "should save history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5467",
    "FileName": "when_search_for_restrited_assignee.cs",
    "Description": "when search for restrited assignee",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should return work record of assignees under specified engagement"
    ],
    "Children": []
  },
  {
    "$id": "5468",
    "FileName": "when_search_work_record_for_update_billing_status.cs",
    "Description": "when search work record for update billing status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5469",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when search tax work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5470",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when practice type is null",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "5471",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when engagement is empty",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "5472",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when work record type is tax return with billed",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5473",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when work record type is tax other compliance with not billed",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5474",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when work record type is tax any work record type",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5475",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax practice type but current staff have no access to tax",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "5476",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax work record with responsibility office",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5477",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax work record with non responsibility office",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "5478",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax work record with CN country",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5479",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax work record with country any",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5480",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax work record with team",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5481",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax work record with tax year",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5482",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax work record with billed status",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5483",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax work record with not billed status",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5484",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when tax work record with no work record type and tax year",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5485",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when staff in tax work record responsible office",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5486",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when staff in engagement work office but not in tax work record responsible office",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5487",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when search social security work record",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specified engagement"
        ],
        "Children": []
      },
      {
        "$id": "5488",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when search immigration work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5489",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when work record type is general",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "5490",
            "FileName": "when_search_work_record_for_update_billing_status.cs",
            "Description": "when work record type is null",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5491",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when search briefing work record for immigration work record",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specified engagement"
        ],
        "Children": []
      },
      {
        "$id": "5492",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when search briefing work record for tax work record",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specified engagement"
        ],
        "Children": []
      },
      {
        "$id": "5493",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when search multiple work record from multiple assignees",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should sort work records by assignees name alphabetically"
        ],
        "Children": []
      },
      {
        "$id": "5494",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when search work records with issue",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should include work record with issues"
        ],
        "Children": []
      },
      {
        "$id": "5495",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when engagement is inactive",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specified engagement"
        ],
        "Children": []
      },
      {
        "$id": "5496",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when assignee is inactive",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specified engagement"
        ],
        "Children": []
      },
      {
        "$id": "5497",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when search tax return work records that has no filing requirement",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should include tax return work records that has no filing requirement"
        ],
        "Children": []
      },
      {
        "$id": "5498",
        "FileName": "when_search_work_record_for_update_billing_status.cs",
        "Description": "when search immigration with tax year",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5499",
    "FileName": "patch_update_billing_status_for_briefing_work_record.cs",
    "Description": "patch update billing status for briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5500",
        "FileName": "patch_update_billing_status_for_briefing_work_record.cs",
        "Description": "when update bill status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "5501",
        "FileName": "patch_update_billing_status_for_briefing_work_record.cs",
        "Description": "when only update invoice number",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      },
      {
        "$id": "5502",
        "FileName": "patch_update_billing_status_for_briefing_work_record.cs",
        "Description": "when only update invoice number to empty",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      },
      {
        "$id": "5503",
        "FileName": "patch_update_billing_status_for_briefing_work_record.cs",
        "Description": "when only update date billed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5504",
    "FileName": "patch_update_billing_status_for_immigration_work_record.cs",
    "Description": "patch update billing status for immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5505",
        "FileName": "patch_update_billing_status_for_immigration_work_record.cs",
        "Description": "when update bill status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "5506",
        "FileName": "patch_update_billing_status_for_immigration_work_record.cs",
        "Description": "when only update invoice number",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      },
      {
        "$id": "5507",
        "FileName": "patch_update_billing_status_for_immigration_work_record.cs",
        "Description": "when only update invoice number to empty",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      },
      {
        "$id": "5508",
        "FileName": "patch_update_billing_status_for_immigration_work_record.cs",
        "Description": "when only update date billed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5509",
    "FileName": "patch_update_billing_status_for_social_security_work_record.cs",
    "Description": "patch update billing status for socail security work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5510",
        "FileName": "patch_update_billing_status_for_social_security_work_record.cs",
        "Description": "when update bill status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "5511",
        "FileName": "patch_update_billing_status_for_social_security_work_record.cs",
        "Description": "when only update invoice number",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      },
      {
        "$id": "5512",
        "FileName": "patch_update_billing_status_for_social_security_work_record.cs",
        "Description": "when only update invoice number to empty",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      },
      {
        "$id": "5513",
        "FileName": "patch_update_billing_status_for_social_security_work_record.cs",
        "Description": "when only update date billed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5514",
    "FileName": "patch_update_billing_status_for_tax_other_compliance_work_record.cs",
    "Description": "patch update billing status for tax other compliance work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5515",
        "FileName": "patch_update_billing_status_for_tax_other_compliance_work_record.cs",
        "Description": "when update bill status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "5516",
        "FileName": "patch_update_billing_status_for_tax_other_compliance_work_record.cs",
        "Description": "when only update invoice number to empty",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5517",
    "FileName": "patch_update_billing_status_for_tax_return_work_record.cs",
    "Description": "patch update billing status for tax return work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5518",
        "FileName": "patch_update_billing_status_for_tax_return_work_record.cs",
        "Description": "when update bill status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "5519",
        "FileName": "patch_update_billing_status_for_tax_return_work_record.cs",
        "Description": "when only update invoice number",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      },
      {
        "$id": "5520",
        "FileName": "patch_update_billing_status_for_tax_return_work_record.cs",
        "Description": "when only update invoice number to empty",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      },
      {
        "$id": "5521",
        "FileName": "patch_update_billing_status_for_tax_return_work_record.cs",
        "Description": "when only update date billed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update billing"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5522",
    "FileName": "when_get_billing_status_by_briefing_work_record_id.cs",
    "Description": "when get billing status by briefing work record id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5523",
        "FileName": "when_get_billing_status_by_briefing_work_record_id.cs",
        "Description": "when get manually briefing work record by exist id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record information"
        ],
        "Children": []
      },
      {
        "$id": "5524",
        "FileName": "when_get_billing_status_by_briefing_work_record_id.cs",
        "Description": "when get online briefing work record by exist id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return online scheduling information"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5525",
    "FileName": "when_get_billing_status_by_immigration_work_record_id.cs",
    "Description": "when get billing status by immigration work record id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return bill status fields"
    ],
    "Children": []
  },
  {
    "$id": "5526",
    "FileName": "when_get_billing_status_by_social_security_work_record_id.cs",
    "Description": "when get billing status by social security work record id",
    "WhenList": [
      "get social security work record"
    ],
    "ThenList": [
      "should return bill status fields"
    ],
    "Children": []
  },
  {
    "$id": "5527",
    "FileName": "when_get_billing_status_by_tax_work_record_id.cs",
    "Description": "when get billing status by tax work record id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5528",
        "FileName": "when_get_billing_status_by_tax_work_record_id.cs",
        "Description": "when get tax return work record by exist id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get bill status"
        ],
        "Children": []
      },
      {
        "$id": "5529",
        "FileName": "when_get_billing_status_by_tax_work_record_id.cs",
        "Description": "when get tax other compliance work record by exist id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get bill status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5530",
    "FileName": "when_batch_send_online_briefing_work_record_notification.cs",
    "Description": "when batch send online briefing work record notification",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return accepted",
      "should send notification and move milestone to schedule"
    ],
    "Children": []
  },
  {
    "$id": "5531",
    "FileName": "when_batch_send_reminders.cs",
    "Description": "when batch send reminders",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5532",
        "FileName": "when_batch_send_reminders.cs",
        "Description": "when sending first reminders",
        "WhenList": [
          "send"
        ],
        "ThenList": [
          "should send"
        ],
        "Children": []
      },
      {
        "$id": "5533",
        "FileName": "when_batch_send_reminders.cs",
        "Description": "when sending final reminders",
        "WhenList": [
          "send"
        ],
        "ThenList": [
          "should send"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5534",
    "FileName": "when_get_briefing_work_record_with_external_links.cs",
    "Description": "when get briefing work record with external links",
    "WhenList": [
      "get briefing work record"
    ],
    "ThenList": [
      "should include external links information"
    ],
    "Children": []
  },
  {
    "$id": "5535",
    "FileName": "when_get_manually_briefing_work_record_by_id.cs",
    "Description": "when get manually briefing work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5536",
        "FileName": "when_get_manually_briefing_work_record_by_id.cs",
        "Description": "when get briefing work record by exist id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record information"
        ],
        "Children": []
      },
      {
        "$id": "5537",
        "FileName": "when_get_manually_briefing_work_record_by_id.cs",
        "Description": "when get briefing work record for staff with no access to private info",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not return pii flag"
        ],
        "Children": []
      },
      {
        "$id": "5538",
        "FileName": "when_get_manually_briefing_work_record_by_id.cs",
        "Description": "when get briefing work record with issues",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not return additional service link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5539",
    "FileName": "when_get_online_briefing_work_record_by_id.cs",
    "Description": "when get online briefing work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5540",
        "FileName": "when_get_online_briefing_work_record_by_id.cs",
        "Description": "when current milestone is notify",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return online scheduling information"
        ],
        "Children": []
      },
      {
        "$id": "5541",
        "FileName": "when_get_online_briefing_work_record_by_id.cs",
        "Description": "when current milestone is complete",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return online scheduling information"
        ],
        "Children": []
      },
      {
        "$id": "5542",
        "FileName": "when_get_online_briefing_work_record_by_id.cs",
        "Description": "when current milestone is schedule",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return online scheduling information"
        ],
        "Children": []
      },
      {
        "$id": "5543",
        "FileName": "when_get_online_briefing_work_record_by_id.cs",
        "Description": "when current milestone is post work",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not contain edit online schedule detail link"
        ],
        "Children": []
      },
      {
        "$id": "5544",
        "FileName": "when_get_online_briefing_work_record_by_id.cs",
        "Description": "when first reminder has been sent",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return online scheduling information"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5545",
    "FileName": "when_get_online_briefing_work_record_with_issues_by_id.cs",
    "Description": "when get online briefing work record with issues by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5546",
        "FileName": "when_get_online_briefing_work_record_with_issues_by_id.cs",
        "Description": "when get online briefing work record with issue and current milestone is notify",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record with limited links",
          "should not contain engagement custom fields link"
        ],
        "Children": []
      },
      {
        "$id": "5547",
        "FileName": "when_get_online_briefing_work_record_with_issues_by_id.cs",
        "Description": "when get online briefing work record with issue and current milestone is scheduled",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record with limited links",
          "should not contain engagement custom fields link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5548",
    "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
    "Description": "when get restrcited manually briefing work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5549",
        "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
        "Description": "when get work record of restricted assignee",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5550",
            "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
            "Description": "when get work record of assignee by staff not on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          },
          {
            "$id": "5551",
            "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
            "Description": "when get work record of assignee by staff on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "5552",
        "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
        "Description": "when get work record of restricted engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5553",
            "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
            "Description": "when get work record of assignee by staff not on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          },
          {
            "$id": "5554",
            "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
            "Description": "when get work record of assignee by staff on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5555",
    "FileName": "when_send_briefing_work_record_final_reminder.cs",
    "Description": "when send briefing work record final reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5556",
        "FileName": "when_send_briefing_work_record_final_reminder.cs",
        "Description": "when success",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return OK",
          "should not contain reminder links",
          "should send out reminder email with correct parameters",
          "should update final reminder datetime",
          "should save email history",
          "should save record activity history",
          "should get reminder history"
        ],
        "Children": []
      },
      {
        "$id": "5557",
        "FileName": "when_send_briefing_work_record_final_reminder.cs",
        "Description": "when assignee has registed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send out reminder email with correct parameters"
        ],
        "Children": []
      },
      {
        "$id": "5558",
        "FileName": "when_send_briefing_work_record_final_reminder.cs",
        "Description": "when sending final reminder twice",
        "WhenList": [
          "send final reminder twice"
        ],
        "ThenList": [
          "should return conflict"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5559",
    "FileName": "when_send_briefing_work_record_first_reminder.cs",
    "Description": "when send briefing work record first reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5560",
        "FileName": "when_send_briefing_work_record_first_reminder.cs",
        "Description": "when success",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return OK",
          "should send out reminder email with correct parameters",
          "should update first reminder datetime",
          "should save email history",
          "should save record activity history",
          "should get reminder history"
        ],
        "Children": []
      },
      {
        "$id": "5561",
        "FileName": "when_send_briefing_work_record_first_reminder.cs",
        "Description": "when assignee has registed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send out reminder email with correct parameters"
        ],
        "Children": []
      },
      {
        "$id": "5562",
        "FileName": "when_send_briefing_work_record_first_reminder.cs",
        "Description": "when send from staff office without team mail box",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send reminder email from briefing coordinator"
        ],
        "Children": []
      },
      {
        "$id": "5563",
        "FileName": "when_send_briefing_work_record_first_reminder.cs",
        "Description": "when send from staff office with team mail box",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send reminder email from team mail box",
          "should use team as contact"
        ],
        "Children": []
      },
      {
        "$id": "5564",
        "FileName": "when_send_briefing_work_record_first_reminder.cs",
        "Description": "when sending first reminder twice",
        "WhenList": [
          "send first reminder twice"
        ],
        "ThenList": [
          "should return conflict"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5565",
    "FileName": "when_send_briefing_work_record_upcoming_appointment_reminder.cs",
    "Description": "when send briefing work record upcoming appointment reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5566",
        "FileName": "when_send_briefing_work_record_upcoming_appointment_reminder.cs",
        "Description": "when success",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return OK",
          "should send out reminder with correct parameters",
          "should update upcoming notify status",
          "should save email history"
        ],
        "Children": []
      },
      {
        "$id": "5567",
        "FileName": "when_send_briefing_work_record_upcoming_appointment_reminder.cs",
        "Description": "when not scheduled",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return conflict"
        ],
        "Children": []
      },
      {
        "$id": "5568",
        "FileName": "when_send_briefing_work_record_upcoming_appointment_reminder.cs",
        "Description": "when already sent appoint reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return conflict"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5569",
    "FileName": "when_send_online_briefing_work_record_notification.cs",
    "Description": "when send online briefing work record notification",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5570",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when current user is coordinator",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return OK"
        ],
        "Children": []
      },
      {
        "$id": "5571",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when current user is from work record responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should move milestone to schedule",
          "should send notification email",
          "should record send notification history"
        ],
        "Children": []
      },
      {
        "$id": "5572",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when current user is from work record team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5573",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when assignee does not subscribe my taxes",
        "WhenList": [
          "send notification"
        ],
        "ThenList": [
          "should send notification email",
          "should record send notification history"
        ],
        "Children": []
      },
      {
        "$id": "5574",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when assignee with my taxes account created",
        "WhenList": [
          "send notification"
        ],
        "ThenList": [
          "should send notification email",
          "should record send notification history"
        ],
        "Children": []
      },
      {
        "$id": "5575",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when current user is assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return OK"
        ],
        "Children": []
      },
      {
        "$id": "5576",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when current user is from coordinating office not assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5577",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when current user is from delegated coordinating office not assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5578",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when current user office is assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5579",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when current user office is assigned to check list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5580",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when current user office is engagement subscribed office which not assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5581",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when send notification with unauthornized user",
        "WhenList": [
          "send notification"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5582",
        "FileName": "when_send_online_briefing_work_record_notification.cs",
        "Description": "when send notification to a work record with issue",
        "WhenList": [
          "send notification"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5583",
    "FileName": "when_send_online_briefing_work_record_notification_failed.cs",
    "Description": "when send online briefing work record notification failed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5584",
        "FileName": "when_send_online_briefing_work_record_notification_failed.cs",
        "Description": "when send notification that is already notified",
        "WhenList": [
          "send again"
        ],
        "ThenList": [
          "should return conflict",
          "should not send email again"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5585",
    "FileName": "when_send_online_briefing_work_record_notification_with_acl_rule.cs",
    "Description": "when send online briefing work record notification with acl rule",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5586",
        "FileName": "when_send_online_briefing_work_record_notification_with_acl_rule.cs",
        "Description": "when send notification for briefing wr using staff in restricted assignee acl",
        "WhenList": [
          "send notification"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5587",
        "FileName": "when_send_online_briefing_work_record_notification_with_acl_rule.cs",
        "Description": "when send notification for briefing wr using staff not in restricted assignee acl",
        "WhenList": [
          "send notification"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5588",
        "FileName": "when_send_online_briefing_work_record_notification_with_acl_rule.cs",
        "Description": "when send notification for briefing wr using staff in restricted engagement acl",
        "WhenList": [
          "send notification"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "5589",
        "FileName": "when_send_online_briefing_work_record_notification_with_acl_rule.cs",
        "Description": "when send notification for briefing wr using staff not in restricted engagement acl",
        "WhenList": [
          "send notification"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5590",
    "FileName": "when_get_briefing_work_record_of_inactive_assignee.cs",
    "Description": "when get briefing work record of inactive assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5591",
        "FileName": "when_get_briefing_work_record_of_inactive_assignee.cs",
        "Description": "when get briefing work record by general staff",
        "WhenList": [
          "get briefing work record"
        ],
        "ThenList": [
          "should return 200",
          "should get no action links"
        ],
        "Children": []
      },
      {
        "$id": "5592",
        "FileName": "when_get_briefing_work_record_of_inactive_assignee.cs",
        "Description": "when get briefing work record by global admin",
        "WhenList": [
          "get briefing work record"
        ],
        "ThenList": [
          "should return 200",
          "should get no action links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5593",
    "FileName": "when_get_briefing_work_record_by_SelfBasic_request.cs",
    "Description": "when get briefing work record by self basic request",
    "WhenList": [
      "get basic data of work record"
    ],
    "ThenList": [
      "should return ok",
      "should return self briefing link"
    ],
    "Children": []
  },
  {
    "$id": "5594",
    "FileName": "when_check_staff_on_work_record_acl.cs",
    "Description": "when check staff on work record acl",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5595",
        "FileName": "when_check_staff_on_work_record_acl.cs",
        "Description": "when check staff on acl correctly for restricted assingee work record",
        "WhenList": [
          "check staff on acl"
        ],
        "ThenList": [
          "should return ok",
          "should get correct result"
        ],
        "Children": []
      },
      {
        "$id": "5596",
        "FileName": "when_check_staff_on_work_record_acl.cs",
        "Description": "when check staff on acl correctly for restricted engagement work record",
        "WhenList": [
          "check staff on acl"
        ],
        "ThenList": [
          "should return ok",
          "should get correct result"
        ],
        "Children": []
      },
      {
        "$id": "5597",
        "FileName": "when_check_staff_on_work_record_acl.cs",
        "Description": "when check staff on delegating office primary contact correctly for restricted engagement work record",
        "WhenList": [
          "check staff on acl"
        ],
        "ThenList": [
          "should return ok",
          "should get correct result"
        ],
        "Children": []
      },
      {
        "$id": "5598",
        "FileName": "when_check_staff_on_work_record_acl.cs",
        "Description": "when check staff on working office acl correctly for restricted engagement work record",
        "WhenList": [
          "check staff on acl"
        ],
        "ThenList": [
          "should return ok",
          "should get correct result"
        ],
        "Children": []
      },
      {
        "$id": "5599",
        "FileName": "when_check_staff_on_work_record_acl.cs",
        "Description": "when check staff on acl correctly for work record not relate to restricted resource",
        "WhenList": [
          "check staff on acl"
        ],
        "ThenList": [
          "should return ok",
          "should get correct result"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5600",
    "FileName": "when_create_briefing_work_records_scheduling_method_not_match_engagement.cs",
    "Description": "when create briefing work records scheduling method not match engagement",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return badrequest"
    ],
    "Children": []
  },
  {
    "$id": "5601",
    "FileName": "when_create_briefing_work_records_scheduling_method_not_match_engagement.cs",
    "Description": "when create workrecord with engagenment scheduling method onlineonly",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return badrequest"
    ],
    "Children": []
  },
  {
    "$id": "5602",
    "FileName": "when_create_tax_manually_briefing_work_records.cs",
    "Description": "when create tax manually briefing work records",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return created",
      "should return work record link in header",
      "should create tax briefing work record",
      "should create correct milestones and tasks"
    ],
    "Children": []
  },
  {
    "$id": "5603",
    "FileName": "when_create_tax_manually_briefing_work_records_with_checklist_template.cs",
    "Description": "when create tax manually briefing work records with checklist template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5604",
        "FileName": "when_create_tax_manually_briefing_work_records_with_checklist_template.cs",
        "Description": "when create work record with office checklist template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should create work record with checklist template"
        ],
        "Children": []
      },
      {
        "$id": "5605",
        "FileName": "when_create_tax_manually_briefing_work_records_with_checklist_template.cs",
        "Description": "when create work record with engagement checklist template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should create work record with engagement checklist template"
        ],
        "Children": []
      },
      {
        "$id": "5606",
        "FileName": "when_create_tax_manually_briefing_work_records_with_checklist_template.cs",
        "Description": "when create work record with office checklist template and engagement checklist template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should create work record with checklist template and engagement checklist template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5607",
    "FileName": "when_create_tax_manually_briefing_work_records_with_checklist_template_and_acl.cs",
    "Description": "when create tax manually briefing work records with checklist template and acl",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5608",
        "FileName": "when_create_tax_manually_briefing_work_records_with_checklist_template_and_acl.cs",
        "Description": "when create with checklist assignments for staff not on acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should not create work record"
        ],
        "Children": []
      },
      {
        "$id": "5609",
        "FileName": "when_create_tax_manually_briefing_work_records_with_checklist_template_and_acl.cs",
        "Description": "when create with checklist assignments for staff on acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should create work record with checklist template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5610",
    "FileName": "when_create_tax_manually_briefing_work_records_with_task_assignments.cs",
    "Description": "when create tax manually briefing work records with task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5611",
        "FileName": "when_create_tax_manually_briefing_work_records_with_task_assignments.cs",
        "Description": "when create with task assignments for staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records with task assignments"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5612",
    "FileName": "when_create_tax_manually_briefing_work_records_with_task_assignments_with_acl.cs",
    "Description": "when create tax manually briefing work records with task assignments with acl",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5613",
        "FileName": "when_create_tax_manually_briefing_work_records_with_task_assignments_with_acl.cs",
        "Description": "when create with task assignments for staff not on acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden",
          "should not create work record"
        ],
        "Children": []
      },
      {
        "$id": "5614",
        "FileName": "when_create_tax_manually_briefing_work_records_with_task_assignments_with_acl.cs",
        "Description": "when create with task assignments for staff on acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be created",
          "should create work records with task assignments"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5615",
    "FileName": "when_create_tax_online_briefing_work_records.cs",
    "Description": "when create tax online briefing work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5616",
        "FileName": "when_create_tax_online_briefing_work_records.cs",
        "Description": "should created online briefing work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created",
          "should return work record link in header",
          "should create tax briefing work record",
          "should create correct milestones and tasks with auto complete flag"
        ],
        "Children": []
      },
      {
        "$id": "5617",
        "FileName": "when_create_tax_online_briefing_work_records.cs",
        "Description": "should populate pwc address automatically even without pwc office briefing method",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created",
          "should contain pwc address"
        ],
        "Children": []
      },
      {
        "$id": "5618",
        "FileName": "when_create_tax_online_briefing_work_records.cs",
        "Description": "when create with other briefing method",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created",
          "should contain other briefing method"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5619",
    "FileName": "when_batch_create_immigration_work_record.cs",
    "Description": "when batch create immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5620",
        "FileName": "when_batch_create_immigration_work_record.cs",
        "Description": "when batch create immigration work record with normal primary service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create workrecord eventually"
        ],
        "Children": []
      },
      {
        "$id": "5621",
        "FileName": "when_batch_create_immigration_work_record.cs",
        "Description": "when batch create immigration work record with undefined primary service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create workrecord eventually"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5622",
    "FileName": "when_batch_create_tax_work_record.cs",
    "Description": "when batch create tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5623",
        "FileName": "when_batch_create_tax_work_record.cs",
        "Description": "when create with invalid request data",
        "WhenList": [
          "sent batch creation request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5624",
        "FileName": "when_batch_create_tax_work_record.cs",
        "Description": "when create only for kayla",
        "WhenList": [
          "sent batch creation request"
        ],
        "ThenList": [
          "should accept the request",
          "should return location as indicator",
          "should create workrecord eventually"
        ],
        "Children": []
      },
      {
        "$id": "5625",
        "FileName": "when_batch_create_tax_work_record.cs",
        "Description": "when create for kayla and matt",
        "WhenList": [
          "sent batch creation request"
        ],
        "ThenList": [
          "should accept the request",
          "should return location as indicator"
        ],
        "Children": []
      },
      {
        "$id": "5626",
        "FileName": "when_batch_create_tax_work_record.cs",
        "Description": "when create by staff in delegated offices",
        "WhenList": [
          "sent batch creation request"
        ],
        "ThenList": [
          "should accept the request",
          "should return location as indicator",
          "creates workrecords"
        ],
        "Children": []
      },
      {
        "$id": "5627",
        "FileName": "when_batch_create_tax_work_record.cs",
        "Description": "assignee work reocrd response",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      },
      {
        "$id": "5628",
        "FileName": "when_batch_create_tax_work_record.cs",
        "Description": "work record data",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "5629",
    "FileName": "when_batch_create_tax_work_record_for_a_restricted_assignee.cs",
    "Description": "when batch create tax work record for a restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5630",
        "FileName": "when_batch_create_tax_work_record_for_a_restricted_assignee.cs",
        "Description": "when current user is not on assignee acl",
        "WhenList": [
          "sent batch creation request"
        ],
        "ThenList": [
          "should return bad request",
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5631",
    "FileName": "when_batch_create_tax_work_record_for_a_restricted_engagement.cs",
    "Description": "when batch create tax work record for a restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5632",
        "FileName": "when_batch_create_tax_work_record_for_a_restricted_engagement.cs",
        "Description": "when current user is not on engagements acl",
        "WhenList": [
          "sent batch creation request"
        ],
        "ThenList": [
          "should return bad request",
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5633",
    "FileName": "when_batch_create_tax_work_record_without_permission.cs",
    "Description": "when batch create tax work record without permission",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5634",
        "FileName": "when_batch_create_tax_work_record_without_permission.cs",
        "Description": "when create with permission",
        "WhenList": [
          "when batch create work record"
        ],
        "ThenList": [
          "should return accepted"
        ],
        "Children": []
      },
      {
        "$id": "5635",
        "FileName": "when_batch_create_tax_work_record_without_permission.cs",
        "Description": "when staff is not from available engaged offices for all engagements",
        "WhenList": [
          "when batch create work record"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5636",
    "FileName": "when_create_immigration_work_records.cs",
    "Description": "when create immigration work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5637",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "when create immigration work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create immigration work records",
          "should create primary application info"
        ],
        "Children": []
      },
      {
        "$id": "5638",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "when create immigration application work record with addtional service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create additional applications"
        ],
        "Children": []
      },
      {
        "$id": "5639",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "when create immigration work record with legacy genearl practice type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create immigration work records"
        ],
        "Children": []
      },
      {
        "$id": "5640",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "when create immigration work reocrd with task responsibility",
        "WhenList": [
          "create work reocrd"
        ],
        "ThenList": [
          "should create immigration work record with task responsibility"
        ],
        "Children": []
      },
      {
        "$id": "5641",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "when create immigration work record with invalid request",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5642",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "when create without specifying task assignment",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should bad request"
        ],
        "Children": []
      },
      {
        "$id": "5643",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "when create duplicated work record",
        "WhenList": [
          "create a duplicated work record"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "5644",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "when create immigration work record with addtional service and task responsibility",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should success",
          "should create additional applications"
        ],
        "Children": []
      },
      {
        "$id": "5645",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "when create immigration work record with two same addtional service and task responsibility",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should success",
          "should create additional applications"
        ],
        "Children": []
      },
      {
        "$id": "5646",
        "FileName": "when_create_immigration_work_records.cs",
        "Description": "should return bad request when create immigration work record with undefined primary service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5647",
    "FileName": "when_create_immigration_work_records_without_permission.cs",
    "Description": "when create immigration work records without permission",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5648",
        "FileName": "when_create_immigration_work_records_without_permission.cs",
        "Description": "when create immigration work record with permission",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "5649",
        "FileName": "when_create_immigration_work_records_without_permission.cs",
        "Description": "when create immigration work record with work office as responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "5650",
        "FileName": "when_create_immigration_work_records_without_permission.cs",
        "Description": "when staff is not from engaged offices",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5651",
        "FileName": "when_create_immigration_work_records_without_permission.cs",
        "Description": "when staff from work office create work record and use coordinating office as responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5652",
    "FileName": "when_create_immigration_work_records_with_task_template.cs",
    "Description": "when create immigration work records with task template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5653",
        "FileName": "when_create_immigration_work_records_with_task_template.cs",
        "Description": "when create immigration work record with office task template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records"
        ],
        "Children": []
      },
      {
        "$id": "5654",
        "FileName": "when_create_immigration_work_records_with_task_template.cs",
        "Description": "when create work record with engagement task template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records"
        ],
        "Children": []
      },
      {
        "$id": "5655",
        "FileName": "when_create_immigration_work_records_with_task_template.cs",
        "Description": "when create work record with task template that all tasks are default",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records"
        ],
        "Children": []
      },
      {
        "$id": "5656",
        "FileName": "when_create_immigration_work_records_with_task_template.cs",
        "Description": "when create work record with office task template and engagement task template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5657",
    "FileName": "when_create_immigration_work_records_with_undefined_primary_service.cs",
    "Description": "when create immigration work records with undefined primary service",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5658",
        "FileName": "when_create_immigration_work_records_with_undefined_primary_service.cs",
        "Description": "when create immigration work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create immigration work records",
          "should create primary application info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5659",
    "FileName": "when_create_immigration_work_record_with_evaluation.cs",
    "Description": "when create immigration work record with evaluation",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success",
      "should create evaluation"
    ],
    "Children": []
  },
  {
    "$id": "5660",
    "FileName": "when_create_single_tax_work_record_with_organizer.cs",
    "Description": "when create single tax work record with organizer",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success",
      "should create work records with question set"
    ],
    "Children": []
  },
  {
    "$id": "5661",
    "FileName": "when_create_single_tax_work_record_with_organizer.cs",
    "Description": "when create single tax work record with organizer using team mailbox",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success",
      "should create work records with question set"
    ],
    "Children": []
  },
  {
    "$id": "5662",
    "FileName": "when_create_social_security_coc_work_records.cs",
    "Description": "when create social security coc work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5663",
        "FileName": "when_create_social_security_coc_work_records.cs",
        "Description": "when create work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created",
          "should create work records"
        ],
        "Children": []
      },
      {
        "$id": "5664",
        "FileName": "when_create_social_security_coc_work_records.cs",
        "Description": "when create work record with incorrect expiry date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5665",
        "FileName": "when_create_social_security_coc_work_records.cs",
        "Description": "when create multiple work record in the same year",
        "WhenList": [
          "create another work record in the same year"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      },
      {
        "$id": "5666",
        "FileName": "when_create_social_security_coc_work_records.cs",
        "Description": "when create without specifying task assignment",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5667",
    "FileName": "when_create_social_security_other_compliance_work_records.cs",
    "Description": "when create social security other compliance work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5668",
        "FileName": "when_create_social_security_other_compliance_work_records.cs",
        "Description": "when create work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created",
          "should create work records"
        ],
        "Children": []
      },
      {
        "$id": "5669",
        "FileName": "when_create_social_security_other_compliance_work_records.cs",
        "Description": "when create multiple work record in the same year",
        "WhenList": [
          "create another work record in the same year"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5670",
    "FileName": "when_create_social_security_work_records_without_permission.cs",
    "Description": "when create social security work records without permission",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5671",
        "FileName": "when_create_social_security_work_records_without_permission.cs",
        "Description": "when create social security work record with permission",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "5672",
        "FileName": "when_create_social_security_work_records_without_permission.cs",
        "Description": "when create social security work record with work office as responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "5673",
        "FileName": "when_create_social_security_work_records_without_permission.cs",
        "Description": "when staff is not from engaged offices",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5674",
        "FileName": "when_create_social_security_work_records_without_permission.cs",
        "Description": "when staff from work office create work record and use coordinating office as responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5675",
    "FileName": "when_create_social_security_work_record_with_evaluation.cs",
    "Description": "when create social security work record with evaluation",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success",
      "should create evaluation"
    ],
    "Children": []
  },
  {
    "$id": "5676",
    "FileName": "when_create_tax_work_records.cs",
    "Description": "when create tax work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5677",
        "FileName": "when_create_tax_work_records.cs",
        "Description": "when create without any task assignments",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5678",
        "FileName": "when_create_tax_work_records.cs",
        "Description": "when create with incorrect task responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5679",
        "FileName": "when_create_tax_work_records.cs",
        "Description": "when create with missed task assignments",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5680",
    "FileName": "when_create_tax_work_records_without_permission.cs",
    "Description": "when create tax work records without permission",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5681",
        "FileName": "when_create_tax_work_records_without_permission.cs",
        "Description": "when create with permission",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "5682",
        "FileName": "when_create_tax_work_records_without_permission.cs",
        "Description": "when create with work office as responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "5683",
        "FileName": "when_create_tax_work_records_without_permission.cs",
        "Description": "when staff is not from engaged offices",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5684",
        "FileName": "when_create_tax_work_records_without_permission.cs",
        "Description": "when staff from work office create work record and use coordinating office as responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "5685",
        "FileName": "when_create_tax_work_records_without_permission.cs",
        "Description": "when staff from team as work record responsible office selected team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5686",
    "FileName": "when_create_tax_work_records_with_checklist_template.cs",
    "Description": "when create tax work records with checklist template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5687",
        "FileName": "when_create_tax_work_records_with_checklist_template.cs",
        "Description": "when create work record with office checklist template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should create work record with checklist template"
        ],
        "Children": []
      },
      {
        "$id": "5688",
        "FileName": "when_create_tax_work_records_with_checklist_template.cs",
        "Description": "when create work record with engagement checklist template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should create work record with engagement checklist template"
        ],
        "Children": []
      },
      {
        "$id": "5689",
        "FileName": "when_create_tax_work_records_with_checklist_template.cs",
        "Description": "when create work record with office checklist template and engagement checklist template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should create work record with checklist template and engagement checklist template"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5690",
    "FileName": "when_create_tax_work_records_with_checklist_template_with_restricted_assignee.cs",
    "Description": "when create tax work records with checklist template with restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5691",
        "FileName": "when_create_tax_work_records_with_checklist_template_with_restricted_assignee.cs",
        "Description": "when create staff is on acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should create work record with checklist template"
        ],
        "Children": []
      },
      {
        "$id": "5692",
        "FileName": "when_create_tax_work_records_with_checklist_template_with_restricted_assignee.cs",
        "Description": "when create staff is not on acl",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden",
          "should not create work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5693",
    "FileName": "when_create_tax_work_records_with_evaluation.cs",
    "Description": "when create tax work record with evaluation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5694",
        "FileName": "when_create_tax_work_records_with_evaluation.cs",
        "Description": "when engagement setting enabled",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create evaluation"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5695",
    "FileName": "when_create_tax_work_records_with_evaluation.cs",
    "Description": "when engagement setting disabled",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success",
      "should not create evaluation"
    ],
    "Children": []
  },
  {
    "$id": "5696",
    "FileName": "when_create_tax_work_records_with_evaluation.cs",
    "Description": "when without questionnaire",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success",
      "should not create evaluation"
    ],
    "Children": []
  },
  {
    "$id": "5697",
    "FileName": "when_create_tax_work_records_with_task_assignment.cs",
    "Description": "when create tax work records with task assignment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5698",
        "FileName": "when_create_tax_work_records_with_task_assignment.cs",
        "Description": "when create with invalid task assignment due to incorrect responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5699",
        "FileName": "when_create_tax_work_records_with_task_assignment.cs",
        "Description": "when create with missed task assignments",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5700",
        "FileName": "when_create_tax_work_records_with_task_assignment.cs",
        "Description": "when create with task assignments for office and tag",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records",
          "should update type of service to used"
        ],
        "Children": []
      },
      {
        "$id": "5701",
        "FileName": "when_create_tax_work_records_with_task_assignment.cs",
        "Description": "when create with task assignments for staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records",
          "should update type of service to used"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5702",
    "FileName": "when_create_tax_work_records_with_task_template.cs",
    "Description": "when create tax work records with task template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5703",
        "FileName": "when_create_tax_work_records_with_task_template.cs",
        "Description": "when create work record with office task template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records"
        ],
        "Children": []
      },
      {
        "$id": "5704",
        "FileName": "when_create_tax_work_records_with_task_template.cs",
        "Description": "when create work record with engagement task template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records"
        ],
        "Children": []
      },
      {
        "$id": "5705",
        "FileName": "when_create_tax_work_records_with_task_template.cs",
        "Description": "when create work record with task template that all tasks are default",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records"
        ],
        "Children": []
      },
      {
        "$id": "5706",
        "FileName": "when_create_tax_work_records_with_task_template.cs",
        "Description": "when create work record with office task template and engagement task template",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should create work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5707",
    "FileName": "when_create_tax_work_records_with_validation.cs",
    "Description": "when create tax work records with validation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5708",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create with empty name",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5709",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create without creation items",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5710",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create with non existed assignee",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5711",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create tax work record with organizer but without question set uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5712",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create tax return work record with organizer but without due date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5713",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create tax return work record with organizer but with invalid contact uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5714",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create tax work record with organizer without contact uri but with invalid contact office uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5715",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create tax work record with organizer but without contact uri and without contact office uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5716",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create tax work record with organizer with contact uri but without contact office uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5717",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create work record with invalid primary service uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5718",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create work record with not existing primary service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5719",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create work record with task template whose practice type differs from that of service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5720",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create work record with engagement task template whose practice type differs from that of service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5721",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create work record with checklist template whose practice type differs from that of service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5722",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create work record with engagement checklist template whose practice type differs from that of service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should NOT create any work records"
        ],
        "Children": []
      },
      {
        "$id": "5723",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create work record with mismatched countries",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5724",
        "FileName": "when_create_tax_work_records_with_validation.cs",
        "Description": "when create work record with mismatched work record type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5725",
    "FileName": "when_create_tax_work_record_for_a_restricted_engagement.cs",
    "Description": "when create tax work record for a restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5726",
        "FileName": "when_create_tax_work_record_for_a_restricted_engagement.cs",
        "Description": "when current user is not on engagements acl",
        "WhenList": [
          "of create"
        ],
        "ThenList": [
          "should return bad request",
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5727",
    "FileName": "when_create_tax_work_record_with_duplicated_work_records.cs",
    "Description": "when create tax work record with duplicated work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5728",
        "FileName": "when_create_tax_work_record_with_duplicated_work_records.cs",
        "Description": "when create with duplicated",
        "WhenList": [
          "create"
        ],
        "ThenList": [
          "should return conflict",
          "should ignore duplicated work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5729",
    "FileName": "when_create_tax_work_record_with_task_template_with_default_task_empty.cs",
    "Description": "when create tax work record with task template with default task empty",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should create work record with correct task assignments",
      "should create correct work record task template"
    ],
    "Children": []
  },
  {
    "$id": "5730",
    "FileName": "when_create_work_record_with_additional_services.cs",
    "Description": "when create work record with additional services",
    "WhenList": [
      "with new additional services"
    ],
    "ThenList": [
      "should return 200",
      "should create successfully"
    ],
    "Children": []
  },
  {
    "$id": "5731",
    "FileName": "when_create_work_record_with_additional_services.cs",
    "Description": "when create work record with invalid additional services",
    "WhenList": [
      "with new additional services"
    ],
    "ThenList": [
      "should return 400 bad request",
      "should return error message"
    ],
    "Children": []
  },
  {
    "$id": "5732",
    "FileName": "when_single_create_work_record_with_an_assignment.cs",
    "Description": "when single create work record with an assignment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5733",
        "FileName": "when_single_create_work_record_with_an_assignment.cs",
        "Description": "when create tax work record",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should return ok",
          "should get work record with assignment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5734",
    "FileName": "when_single_create_work_record_with_team.cs",
    "Description": "when single create work record with team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5735",
        "FileName": "when_single_create_work_record_with_team.cs",
        "Description": "when create tax work record",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should return ok",
          "should append team to work record",
          "should return bad request when team office is not responsible office"
        ],
        "Children": []
      },
      {
        "$id": "5736",
        "FileName": "when_single_create_work_record_with_team.cs",
        "Description": "when create immigration work record",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should return created",
          "should append team to work record"
        ],
        "Children": []
      },
      {
        "$id": "5737",
        "FileName": "when_single_create_work_record_with_team.cs",
        "Description": "when create social secuity work record",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should return created",
          "should append team to work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5738",
    "FileName": "when_get_immigration_work_record_restricted_custom_fields.cs",
    "Description": "when get immigration work record restricted custom fields",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5739",
        "FileName": "when_get_immigration_work_record_restricted_custom_fields.cs",
        "Description": "should get restricted custom fields when staff can view pii",
        "WhenList": [
          "load immi workrecord"
        ],
        "ThenList": [
          "should load succeeful",
          "should load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "5740",
        "FileName": "when_get_immigration_work_record_restricted_custom_fields.cs",
        "Description": "should get restricted custom fields when staff is in work record team",
        "WhenList": [
          "load immi workrecord"
        ],
        "ThenList": [
          "should load succeeful",
          "should load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "5741",
        "FileName": "when_get_immigration_work_record_restricted_custom_fields.cs",
        "Description": "should not get restricted custom fields when staff can not view pii",
        "WhenList": [
          "load immi workrecord"
        ],
        "ThenList": [
          "should load succeeful",
          "should not load restricted info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5742",
    "FileName": "when_get_tax_work_record_patch_custom_field_link_and_assigned_to_staff.cs",
    "Description": "when get tax work record patch custom field link",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5743",
        "FileName": "when_get_tax_work_record_patch_custom_field_link_and_assigned_to_staff.cs",
        "Description": "when assigned to current staff",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should load successfully",
          "should get custom field patch link"
        ],
        "Children": []
      },
      {
        "$id": "5744",
        "FileName": "when_get_tax_work_record_patch_custom_field_link_and_assigned_to_staff.cs",
        "Description": "when not assigned to current staff",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should load successfully",
          "should not get custom field patch link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5745",
    "FileName": "when_get_tax_work_record_with_country_custom_field.cs",
    "Description": "when get tax work record with country custom field",
    "WhenList": [
      "get"
    ],
    "ThenList": [
      "should return 200 ok",
      "should return work record information with country custom field"
    ],
    "Children": []
  },
  {
    "$id": "5746",
    "FileName": "when_get_tax_work_record_with_custom_fields_and_no_exist_value.cs",
    "Description": "when get tax work record with custom fields and no exist value",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should return custom field"
    ],
    "Children": []
  },
  {
    "$id": "5747",
    "FileName": "when_get_tax_work_record_with_restricted_country_custom_fields.cs",
    "Description": "when get tax work record with restricted country custom fields",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5748",
        "FileName": "when_get_tax_work_record_with_restricted_country_custom_fields.cs",
        "Description": "when assigned",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should return restricted country custom fields"
        ],
        "Children": []
      },
      {
        "$id": "5749",
        "FileName": "when_get_tax_work_record_with_restricted_country_custom_fields.cs",
        "Description": "when not assigned",
        "WhenList": [
          "get"
        ],
        "ThenList": [
          "should return restricted country custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5750",
    "FileName": "when_get_tax_work_record_with_restricted_engagement_custom_fields.cs",
    "Description": "when get tax work record with restricted engagement custom fields",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5751",
        "FileName": "when_get_tax_work_record_with_restricted_engagement_custom_fields.cs",
        "Description": "should get restricted custom fields when staff can view pii",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should load succeeful",
          "should load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "5752",
        "FileName": "when_get_tax_work_record_with_restricted_engagement_custom_fields.cs",
        "Description": "should get restricted custom fields when staff is in work record team",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should load succeeful",
          "should load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "5753",
        "FileName": "when_get_tax_work_record_with_restricted_engagement_custom_fields.cs",
        "Description": "should not get restricted custom fields when staff can not view pii",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should load succeeful",
          "should not load restricted info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5754",
    "FileName": "when_update_work_record_country_custom_field_value_with_correct_request.cs",
    "Description": "when update work record country custom field value with correct request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5755",
        "FileName": "when_update_work_record_country_custom_field_value_with_correct_request.cs",
        "Description": "when patch work record country custom fields",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should patch succeeful",
          "should update info",
          "and should clear info when patch empty string"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5756",
    "FileName": "when_update_work_record_engagement_custom_field_value_with_correct_request.cs",
    "Description": "when update work record engagement custom field value with correct request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5757",
        "FileName": "when_update_work_record_engagement_custom_field_value_with_correct_request.cs",
        "Description": "when patch update work record engagement custom fields",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should patch succeeful",
          "should update info"
        ],
        "Children": []
      },
      {
        "$id": "5758",
        "FileName": "when_update_work_record_engagement_custom_field_value_with_correct_request.cs",
        "Description": "when patch update work record engagement custom fields when staff in work record team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should patch succeeful",
          "should update info"
        ],
        "Children": []
      },
      {
        "$id": "5759",
        "FileName": "when_update_work_record_engagement_custom_field_value_with_correct_request.cs",
        "Description": "when patch update work record open engagement custom fields by staff in coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should patch succeeful",
          "should update info"
        ],
        "Children": []
      },
      {
        "$id": "5760",
        "FileName": "when_update_work_record_engagement_custom_field_value_with_correct_request.cs",
        "Description": "when patch update work record restricted engagement custom fields by staff in coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5761",
    "FileName": "when_decide_cqs_for_cpq_tax_return_in_process.cs",
    "Description": "when decide cqs for cpq tax return in process",
    "WhenList": [
      "when decide cpq tax return in process"
    ],
    "ThenList": [
      "should return OK",
      "should update question set id"
    ],
    "Children": []
  },
  {
    "$id": "5762",
    "FileName": "when_delete_briefing_work_record.cs",
    "Description": "when delete briefing work record",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return no content",
      "work record should be deleted",
      "should remove all todo item",
      "should remove all work record task",
      "should remove all work record task assignment",
      "should remove all work record task template",
      "should remove all work record checklist template",
      "should remove all work record checklist item",
      "should remove all milestone",
      "should remove all notes",
      "should remove all addition service",
      "should remove all out of works",
      "should remove scheduler appointment",
      "should create work record delete event"
    ],
    "Children": []
  },
  {
    "$id": "5763",
    "FileName": "when_delete_briefing_work_record.cs",
    "Description": "when delete briefing work record have files",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return conflict",
      "should return error message",
      "work record should NOT be deleted"
    ],
    "Children": []
  },
  {
    "$id": "5764",
    "FileName": "when_delete_briefing_work_record_under_uac_control.cs",
    "Description": "when delete briefing work record under uac control",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5765",
        "FileName": "when_delete_briefing_work_record_under_uac_control.cs",
        "Description": "when delete work record without permission",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return forbidden",
          "work record should not be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5766",
        "FileName": "when_delete_briefing_work_record_under_uac_control.cs",
        "Description": "when delete work record by staff in responsible office",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5767",
        "FileName": "when_delete_briefing_work_record_under_uac_control.cs",
        "Description": "when delete work record by staff in work record team",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5768",
        "FileName": "when_delete_briefing_work_record_under_uac_control.cs",
        "Description": "when delete work record by staff is coordinator",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return nocontent",
          "work record should not be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5769",
        "FileName": "when_delete_briefing_work_record_under_uac_control.cs",
        "Description": "when delete work record by acl",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5770",
            "FileName": "when_delete_briefing_work_record_under_uac_control.cs",
            "Description": "when not in acl",
            "WhenList": [
              "delete work record"
            ],
            "ThenList": [
              "should return nocontent",
              "work record should not be deleted"
            ],
            "Children": []
          },
          {
            "$id": "5771",
            "FileName": "when_delete_briefing_work_record_under_uac_control.cs",
            "Description": "when in acl",
            "WhenList": [
              "delete work record"
            ],
            "ThenList": [
              "should return nocontent",
              "work record should not be deleted"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5772",
    "FileName": "when_delete_immigration_work_record.cs",
    "Description": "when delete immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5773",
        "FileName": "when_delete_immigration_work_record.cs",
        "Description": "when delete briefing work record",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted",
          "should remove all todo item",
          "should remove all work record task",
          "should remove all work record task assignment",
          "should remove all work record task template",
          "should remove all work record checklist template",
          "should remove all work record checklist item",
          "should remove all milestone",
          "should remove all notes",
          "should remove all addition service",
          "should remove all out of works"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5774",
    "FileName": "when_delete_immi_application_work_record_with_questionnaire.cs",
    "Description": "when delete immi application work record with questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5775",
        "FileName": "when_delete_immi_application_work_record_with_questionnaire.cs",
        "Description": "when questionnaire is not submmited",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      },
      {
        "$id": "5776",
        "FileName": "when_delete_immi_application_work_record_with_questionnaire.cs",
        "Description": "when questionnaire is submmited",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return conflict"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5777",
    "FileName": "when_delete_immi_work_record_with_questionnaire.cs",
    "Description": "when delete immi work record with questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5778",
        "FileName": "when_delete_immi_work_record_with_questionnaire.cs",
        "Description": "when questionnaire is not submmited",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      },
      {
        "$id": "5779",
        "FileName": "when_delete_immi_work_record_with_questionnaire.cs",
        "Description": "when questionnaire is submmited",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return conflict"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5780",
    "FileName": "when_delete_migrated_work_record_by_sofia.cs",
    "Description": "when delete migrated work record by sofia",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should delete work record",
      "should remove go migration work record also"
    ],
    "Children": []
  },
  {
    "$id": "5781",
    "FileName": "when_delete_tax_return_work_record_with_questionnaire.cs",
    "Description": "when delete tax return work record with questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5782",
        "FileName": "when_delete_tax_return_work_record_with_questionnaire.cs",
        "Description": "when get work record",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should has delete link"
        ],
        "Children": []
      },
      {
        "$id": "5783",
        "FileName": "when_delete_tax_return_work_record_with_questionnaire.cs",
        "Description": "when work record with questionnaire is submitted",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted",
          "organizer should be deleted",
          "milestones should be deleted",
          "tasks should be deleted",
          "missingitemmails should be deleted",
          "missingitem should be deleted",
          "task templates should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5784",
        "FileName": "when_delete_tax_return_work_record_with_questionnaire.cs",
        "Description": "when assignee has work record related files",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return conflict",
          "should return error message"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5785",
    "FileName": "when_delete_work_record_under_uac_control.cs",
    "Description": "when delete work record under uac control",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5786",
        "FileName": "when_delete_work_record_under_uac_control.cs",
        "Description": "when delete work record with task assigned to staff",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5787",
        "FileName": "when_delete_work_record_under_uac_control.cs",
        "Description": "when delete work record with checklist assigned to staff",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5788",
        "FileName": "when_delete_work_record_under_uac_control.cs",
        "Description": "when delete work record without permission",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return forbidden",
          "work record should not be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5789",
        "FileName": "when_delete_work_record_under_uac_control.cs",
        "Description": "when delete work record by staff in responsible office",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5790",
        "FileName": "when_delete_work_record_under_uac_control.cs",
        "Description": "when delete work record by staff in work record team",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5791",
    "FileName": "when_delete_work_record_without_questionnaire.cs",
    "Description": "when delete work record without questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5792",
        "FileName": "when_delete_work_record_without_questionnaire.cs",
        "Description": "when staff in coordinating office",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted"
        ],
        "Children": []
      },
      {
        "$id": "5793",
        "FileName": "when_delete_work_record_without_questionnaire.cs",
        "Description": "when staff in work office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5794",
            "FileName": "when_delete_work_record_without_questionnaire.cs",
            "Description": "when delete work record successfully",
            "WhenList": [
              "delete work record"
            ],
            "ThenList": [
              "should return no content",
              "work record should be deleted"
            ],
            "Children": []
          },
          {
            "$id": "5795",
            "FileName": "when_delete_work_record_without_questionnaire.cs",
            "Description": "when assignee has work record related files",
            "WhenList": [
              "delete work record"
            ],
            "ThenList": [
              "should return conflict",
              "should return error message"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5796",
    "FileName": "when_delete_work_record_with_custom_fields.cs",
    "Description": "when delete work record with custom fields",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return no content",
      "work record should be deleted"
    ],
    "Children": []
  },
  {
    "$id": "5797",
    "FileName": "when_delete_work_record_with_employer_return.cs",
    "Description": "when delete work record with employer return",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return conflict"
    ],
    "Children": []
  },
  {
    "$id": "5798",
    "FileName": "when_delete_work_record_with_evaluation.cs",
    "Description": "when delete work record with evaluation",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return no content",
      "should delete the work record",
      "should delete related evaluation"
    ],
    "Children": []
  },
  {
    "$id": "5799",
    "FileName": "when_delete_work_record_with_evaluation_and_reminders.cs",
    "Description": "when delete work record with evaluation and reminders",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return no content",
      "work record should be deleted"
    ],
    "Children": []
  },
  {
    "$id": "5800",
    "FileName": "when_delete_work_record_with_evaluation_and_survey.cs",
    "Description": "when delete work record with evaluation and survey",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return conflict"
    ],
    "Children": []
  },
  {
    "$id": "5801",
    "FileName": "when_delete_work_record_with_external_links.cs",
    "Description": "when delete work record with external links",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return no content",
      "external link should be deleted",
      "work record should be deleted"
    ],
    "Children": []
  },
  {
    "$id": "5802",
    "FileName": "when_delete_work_record_with_restricted_engagement.cs",
    "Description": "when delete work record with restricted engagement",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return forbidden",
      "should return message"
    ],
    "Children": []
  },
  {
    "$id": "5803",
    "FileName": "when_delete_work_record_with_templates.cs",
    "Description": "when delete work record with templates",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5804",
        "FileName": "when_delete_work_record_with_templates.cs",
        "Description": "when delete work record successfully",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return no content",
          "work record should be deleted",
          "task templates should be deleted",
          "tasks should be deleted",
          "checklist templates should be deleted",
          "checklist should be deleted",
          "checklist to do item should be deleted"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5805",
    "FileName": "when_delete_work_record_with_teq.cs",
    "Description": "when delete work record with teq",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5806",
        "FileName": "when_delete_work_record_with_teq.cs",
        "Description": "when delete work record with new settlement teq",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return conflict"
        ],
        "Children": []
      },
      {
        "$id": "5807",
        "FileName": "when_delete_work_record_with_teq.cs",
        "Description": "when delete work record with started settlement teq",
        "WhenList": [
          "delete work record"
        ],
        "ThenList": [
          "should return conflict"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5808",
    "FileName": "when_delete_work_record_with_teq_and_submitted_questionnaire.cs",
    "Description": "when delete work record with teq and submitted questionnaire",
    "WhenList": [
      "delete work record"
    ],
    "ThenList": [
      "should return conflict",
      "should return exception message for teq"
    ],
    "Children": []
  },
  {
    "$id": "5809",
    "FileName": "when_send_employer_return_notification.cs",
    "Description": "when send employer return notification",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5810",
        "FileName": "when_send_employer_return_notification.cs",
        "Description": "when send notofication for employer return",
        "WhenList": [
          "send notification email"
        ],
        "ThenList": [
          "should return ok",
          "should send first reminder email",
          "should record to work record history",
          "should not send notification again"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5811",
    "FileName": "when_send_employer_return_notification_with_invalid_request.cs",
    "Description": "when send employer return notification with invalid request",
    "WhenList": [
      "send notification email"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "5812",
    "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
    "Description": "when get singapore tax return employer return file info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5813",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when workrecord has issues",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should get employer return file info in tiger"
        ],
        "Children": []
      },
      {
        "$id": "5814",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when current staff is related to workrecord",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should get employer return file info in tiger"
        ],
        "Children": []
      },
      {
        "$id": "5815",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when current staff is not related to workrecord",
        "WhenList": [
          "get employer return info for staff not responsible for singapore office"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5816",
    "FileName": "when_send_employer_return_notification.cs",
    "Description": "when send employer return notification",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5817",
        "FileName": "when_send_employer_return_notification.cs",
        "Description": "when send notofication for employer return",
        "WhenList": [
          "send notification email with a staff not in engagement work office"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5818",
    "FileName": "when_update_employer_return_file_info.cs",
    "Description": "when update employer return file info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5819",
        "FileName": "when_update_employer_return_file_info.cs",
        "Description": "when staff is not in work office",
        "WhenList": [
          "update employer return file info"
        ],
        "ThenList": [
          "should return forbidon"
        ],
        "Children": []
      },
      {
        "$id": "5820",
        "FileName": "when_update_employer_return_file_info.cs",
        "Description": "when staff is in subscribe office",
        "WhenList": [
          "update employer return file info"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5821",
    "FileName": "when_delete_employer_return.cs",
    "Description": "when delete employer return",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5822",
        "FileName": "when_delete_employer_return.cs",
        "Description": "when employer return exists",
        "WhenList": [
          "delete employer return file info"
        ],
        "ThenList": [
          "should return ok",
          "should get activity history when getting work record"
        ],
        "Children": []
      },
      {
        "$id": "5823",
        "FileName": "when_delete_employer_return.cs",
        "Description": "when employer return does not exist",
        "WhenList": [
          "delete employer return file info"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5824",
        "FileName": "when_delete_employer_return.cs",
        "Description": "when employer return status is not new",
        "WhenList": [
          "delete employer return info"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5825",
    "FileName": "when_edit_employer_return_info.cs",
    "Description": "when edit employer return info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5826",
        "FileName": "when_edit_employer_return_info.cs",
        "Description": "for tax",
        "WhenList": [
          "upload employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should record employer return file infor in tiger",
          "should record active history for uploading employer return file"
        ],
        "Children": []
      },
      {
        "$id": "5827",
        "FileName": "when_edit_employer_return_info.cs",
        "Description": "for immi",
        "WhenList": [
          "upload employer return file for sg immi work record"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5828",
        "FileName": "when_edit_employer_return_info.cs",
        "Description": "for US",
        "WhenList": [
          "upload employer return file for US tax return work record"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "5829",
        "FileName": "when_edit_employer_return_info.cs",
        "Description": "for whose engagement not subscribed to file sharing",
        "WhenList": [
          "upload employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5830",
    "FileName": "when_get_employer_return_file_info_for_non_tax_workrecord.cs",
    "Description": "when get employer return file info for non tax workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5831",
        "FileName": "when_get_employer_return_file_info_for_non_tax_workrecord.cs",
        "Description": "when work record is briefing type",
        "WhenList": [
          "get employer return file for us tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should return empty employer return info",
          "should not contains upload employer return file link"
        ],
        "Children": []
      },
      {
        "$id": "5832",
        "FileName": "when_get_employer_return_file_info_for_non_tax_workrecord.cs",
        "Description": "when work record is immigration",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should contains upload employer return file link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5833",
    "FileName": "when_get_employer_return_file_info_with_not_matched_conditions.cs",
    "Description": "when get employer return file info for workrecord not match conditions",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5834",
        "FileName": "when_get_employer_return_file_info_with_not_matched_conditions.cs",
        "Description": "when SG employer return info while client file sharing is not subscribed by nancy",
        "WhenList": [
          "get employer return file for us tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should return empty employer return info",
          "should not contains upload employer return file link"
        ],
        "Children": []
      },
      {
        "$id": "5835",
        "FileName": "when_get_employer_return_file_info_with_not_matched_conditions.cs",
        "Description": "when singapore work record is created before 2015",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should return empty employer return file link"
        ],
        "Children": []
      },
      {
        "$id": "5836",
        "FileName": "when_get_employer_return_file_info_with_not_matched_conditions.cs",
        "Description": "when engagement not subscribe employer return tile",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "5837",
            "FileName": "when_get_employer_return_file_info_with_not_matched_conditions.cs",
            "Description": "when never upload employer return file",
            "WhenList": [
              "get employer return file for us tax work record"
            ],
            "ThenList": [
              "should not contains upload employer return file link"
            ],
            "Children": []
          },
          {
            "$id": "5838",
            "FileName": "when_get_employer_return_file_info_with_not_matched_conditions.cs",
            "Description": "when ever has uploaded employer return file",
            "WhenList": [
              "get employer return file for us tax work record"
            ],
            "ThenList": [
              "should contains employer return file links"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "5839",
    "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
    "Description": "when get singapore tax return employer return file info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5840",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when has uploaded employer return file for sg work record",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should get employer return file info in tiger",
          "should not contains upload employer return file link"
        ],
        "Children": []
      },
      {
        "$id": "5841",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when has uploaded employer return file for sg work record but not subscribed to file sharing",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should return employer return all links expect upload"
        ],
        "Children": []
      },
      {
        "$id": "5842",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when has uploaded employer return file for sg work record with issued status",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should only contains show link"
        ],
        "Children": []
      },
      {
        "$id": "5843",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when has uploaded employer return file for sg work record with different status",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should not return delete link"
        ],
        "Children": []
      },
      {
        "$id": "5844",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when has not upload employer return file for sg work record",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should return empty employer return info",
          "should only get upload link"
        ],
        "Children": []
      },
      {
        "$id": "5845",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when has upload employer return file for inactive engagement sg work record",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should only get show link"
        ],
        "Children": []
      },
      {
        "$id": "5846",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when has upload employer return file for inactive assignee sg work record",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should only get show link"
        ],
        "Children": []
      },
      {
        "$id": "5847",
        "FileName": "when_get_Singapore_tax_return_employer_return_file_info.cs",
        "Description": "when notification has been sent",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should not contain send notification link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5848",
    "FileName": "when_get_US_tax_return_employer_return_file_info.cs",
    "Description": "when get US tax return employer return file info",
    "WhenList": [
      "get employer return file for US tax work record"
    ],
    "ThenList": [
      "should return ok",
      "should return empty employer return info",
      "should not contains upload employer return file link"
    ],
    "Children": []
  },
  {
    "$id": "5849",
    "FileName": "when_update_employer_return_file_info.cs",
    "Description": "when update employer return file info",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5850",
        "FileName": "when_update_employer_return_file_info.cs",
        "Description": "update employer return file info with valid request",
        "WhenList": [
          "update employer return info"
        ],
        "ThenList": [
          "should change employer return info",
          "should record property change history"
        ],
        "Children": []
      },
      {
        "$id": "5851",
        "FileName": "when_update_employer_return_file_info.cs",
        "Description": "should update employer return is updated by tiger when sofia update status related columns",
        "WhenList": [
          "update employer return info"
        ],
        "ThenList": [
          "should change is updated by tiger"
        ],
        "Children": []
      },
      {
        "$id": "5852",
        "FileName": "when_update_employer_return_file_info.cs",
        "Description": "should not update employer return is updated by tiger when sofia does not update status related columns",
        "WhenList": [
          "update employer return info"
        ],
        "ThenList": [
          "should not change is updated by tiger"
        ],
        "Children": []
      },
      {
        "$id": "5853",
        "FileName": "when_update_employer_return_file_info.cs",
        "Description": "update employer return file info for not exist workrecord",
        "WhenList": [
          "update employer return info"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5854",
    "FileName": "when_update_employer_return_status_from_myMobility.cs",
    "Description": "when update employer return status from my mobility",
    "WhenList": [
      "update employer return status from my mobility"
    ],
    "ThenList": [
      "should return workrecord dto with correct activity history"
    ],
    "Children": []
  },
  {
    "$id": "5855",
    "FileName": "when_upload_employer_return_file.cs",
    "Description": "when upload employer return file",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5856",
        "FileName": "when_upload_employer_return_file.cs",
        "Description": "when send valid upload request",
        "WhenList": [
          "send valid request"
        ],
        "ThenList": [
          "should return ok",
          "should show valid employer return info"
        ],
        "Children": []
      },
      {
        "$id": "5857",
        "FileName": "when_upload_employer_return_file.cs",
        "Description": "when send request that does not contain file part",
        "WhenList": [
          "send invalid request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5858",
        "FileName": "when_upload_employer_return_file.cs",
        "Description": "when send request that does not contain metadata part",
        "WhenList": [
          "send invalid request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5859",
        "FileName": "when_upload_employer_return_file.cs",
        "Description": "when send duplicate upload requests",
        "WhenList": [
          "send duplicate requests"
        ],
        "ThenList": [
          "should return ok the first time",
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "5860",
        "FileName": "when_upload_employer_return_file.cs",
        "Description": "when send request that contains two files part",
        "WhenList": [
          "send invalid request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5861",
    "FileName": "when_batch_update_questionnaire.cs",
    "Description": "when batch update questionnaire",
    "WhenList": [
      "when batch update questionnaire due date and tax contact"
    ],
    "ThenList": [
      "should return 200 ok as response code",
      "should raise questionnaire updated event"
    ],
    "Children": []
  },
  {
    "$id": "5862",
    "FileName": "when_briefing_workrecord_add_service.cs",
    "Description": "when briefing workrecord add service",
    "WhenList": [
      "add service"
    ],
    "ThenList": [
      "should raise work record service changed event"
    ],
    "Children": []
  },
  {
    "$id": "5863",
    "FileName": "when_change_briefing_coordinator.cs",
    "Description": "when change briefing coordinator",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5864",
        "FileName": "when_change_briefing_coordinator.cs",
        "Description": "when update from work record detail page",
        "WhenList": [
          "change briefing coordinator"
        ],
        "ThenList": [
          "should raise briefing coordinator changed event"
        ],
        "Children": []
      },
      {
        "$id": "5865",
        "FileName": "when_change_briefing_coordinator.cs",
        "Description": "when reassign staff responsibility",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to lenonard"
        ],
        "Children": []
      },
      {
        "$id": "5866",
        "FileName": "when_change_briefing_coordinator.cs",
        "Description": "when batch handover briefing coordinator",
        "WhenList": [
          "change office"
        ],
        "ThenList": [
          "should be accepted",
          "should assign to lenonard"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5867",
    "FileName": "when_change_briefing_coordinator.cs",
    "Description": "should raise change briefing coordinator event when reassign briefing coordinator",
    "WhenList": [
      "reassign briefing coordinator"
    ],
    "ThenList": [
      "should return ok",
      "should assign to haff"
    ],
    "Children": []
  },
  {
    "$id": "5868",
    "FileName": "when_change_employer_return_status.cs",
    "Description": "when change employer return status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5869",
        "FileName": "when_change_employer_return_status.cs",
        "Description": "when status changed",
        "WhenList": [
          "change employer return status"
        ],
        "ThenList": [
          "should raise employer return status change event into eventstore",
          "should not send email to employer return email group"
        ],
        "Children": []
      },
      {
        "$id": "5870",
        "FileName": "when_change_employer_return_status.cs",
        "Description": "when status not changed",
        "WhenList": [
          "change employer return status"
        ],
        "ThenList": [
          "should not raise employer return status change event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5871",
    "FileName": "when_change_immigration_work_record_task.cs",
    "Description": "when change immigration work record task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5872",
        "FileName": "when_change_immigration_work_record_task.cs",
        "Description": "when finish work record template task",
        "WhenList": [
          "finish work record task"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task completed event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "5873",
        "FileName": "when_change_immigration_work_record_task.cs",
        "Description": "when create immigration revision task",
        "WhenList": [
          "create revision task"
        ],
        "ThenList": [
          "should create revision task sucessfully",
          "should raise workrecord revision task created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5874",
    "FileName": "when_change_work_record_no_filing_requirement.cs",
    "Description": "when change work record no filing requirement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5875",
        "FileName": "when_change_work_record_no_filing_requirement.cs",
        "Description": "when no filing requirement changes",
        "WhenList": [
          "update work record"
        ],
        "ThenList": [
          "should raise event"
        ],
        "Children": []
      },
      {
        "$id": "5876",
        "FileName": "when_change_work_record_no_filing_requirement.cs",
        "Description": "when no filing requirement does not change",
        "WhenList": [
          "update work record"
        ],
        "ThenList": [
          "should not raise event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5877",
    "FileName": "when_change_work_record_status.cs",
    "Description": "when change work record status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5878",
        "FileName": "when_change_work_record_status.cs",
        "Description": "when status change",
        "WhenList": [
          "change work record status"
        ],
        "ThenList": [
          "should raise work record status changed evnet into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "5879",
        "FileName": "when_change_work_record_status.cs",
        "Description": "when status not change",
        "WhenList": [
          "change work record without status"
        ],
        "ThenList": [
          "should not raise work record status changed evnet into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5880",
    "FileName": "when_complete_immigration_work_record_check_list_item.cs",
    "Description": "when complete immigration work record check list item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5881",
        "FileName": "when_complete_immigration_work_record_check_list_item.cs",
        "Description": "when complete check list item on to do list",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "5882",
        "FileName": "when_complete_immigration_work_record_check_list_item.cs",
        "Description": "when complete check list items on batch update",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5883",
    "FileName": "when_complete_social_security_work_record_check_list_item.cs",
    "Description": "when complete social security work record check list item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5884",
        "FileName": "when_complete_social_security_work_record_check_list_item.cs",
        "Description": "when complete check list item on to do list",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "5885",
        "FileName": "when_complete_social_security_work_record_check_list_item.cs",
        "Description": "when complete check list items on batch update",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5886",
    "FileName": "when_complete_tax_briefing_checklist_item.cs",
    "Description": "when complete tax briefing checklist item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5887",
        "FileName": "when_complete_tax_briefing_checklist_item.cs",
        "Description": "when complete check list item on to do list",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5888",
    "FileName": "when_complete_tax_briefing_work_record_task.cs",
    "Description": "when complete tax briefing work record task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5889",
        "FileName": "when_complete_tax_briefing_work_record_task.cs",
        "Description": "when finish work record template task",
        "WhenList": [
          "finish work record task"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task completed event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5890",
    "FileName": "when_complete_tax_work_record_check_list_item.cs",
    "Description": "when complete tax work record check list item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5891",
        "FileName": "when_complete_tax_work_record_check_list_item.cs",
        "Description": "when complete check list item on to do list",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "5892",
        "FileName": "when_complete_tax_work_record_check_list_item.cs",
        "Description": "when duplicate complete check list items on to do list",
        "WhenList": [
          "duplcate complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should not raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "5893",
        "FileName": "when_complete_tax_work_record_check_list_item.cs",
        "Description": "when complete check list items on batch update",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "5894",
        "FileName": "when_complete_tax_work_record_check_list_item.cs",
        "Description": "when batch check list items status but not complete on batch update",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should not raise work record check list status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5895",
    "FileName": "when_complete_tax_work_record_task.cs",
    "Description": "when complete tax work record task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5896",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when finish work record template task",
        "WhenList": [
          "finish work record task"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task completed event"
        ],
        "Children": []
      },
      {
        "$id": "5897",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when finish work record revision task",
        "WhenList": [
          "finish work record task"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task completed event"
        ],
        "Children": []
      },
      {
        "$id": "5898",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when complete tasks on to do list",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task status changed event"
        ],
        "Children": []
      },
      {
        "$id": "5899",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when batch update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should raise work record task status changed event"
        ],
        "Children": []
      },
      {
        "$id": "5900",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when US update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record task status changed event"
        ],
        "Children": []
      },
      {
        "$id": "5901",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when move milestone backward successfully",
        "WhenList": [
          "batch move milestone backward"
        ],
        "ThenList": [
          "should update successfully"
        ],
        "Children": []
      },
      {
        "$id": "5902",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when move milestone backward",
        "WhenList": [
          "batch move milestone backward"
        ],
        "ThenList": [
          "should raise milestone move backward event"
        ],
        "Children": []
      },
      {
        "$id": "5903",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when move milestone backward then move forward",
        "WhenList": [
          "batch move milestone forward"
        ],
        "ThenList": [
          "should raise work record task status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5904",
    "FileName": "when_create_briefing_work_record.cs",
    "Description": "when create briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5905",
        "FileName": "when_create_briefing_work_record.cs",
        "Description": "when create manual briefing work record if toggle on",
        "WhenList": [
          "create manual briefing workrecord"
        ],
        "ThenList": [
          "should raise briefing work record"
        ],
        "Children": []
      },
      {
        "$id": "5906",
        "FileName": "when_create_briefing_work_record.cs",
        "Description": "when create online briefing work record if toggle on",
        "WhenList": [
          "create manual briefing workrecord"
        ],
        "ThenList": [
          "should raise briefing work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5907",
    "FileName": "when_create_briefing_work_record_revision_task.cs",
    "Description": "when create briefing work record revision task",
    "WhenList": [
      "create revision task"
    ],
    "ThenList": [
      "should raise workrecord task assignments created event",
      "should raise revision task created event"
    ],
    "Children": []
  },
  {
    "$id": "5908",
    "FileName": "when_create_briefing_work_record_task_assignments.cs",
    "Description": "when create briefing work record task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5909",
        "FileName": "when_create_briefing_work_record_task_assignments.cs",
        "Description": "when create briefing work record with default task assignments",
        "WhenList": [
          "create manual briefing workrecord with default task assignments"
        ],
        "ThenList": [
          "should raise workrecord task assignments created event"
        ],
        "Children": []
      },
      {
        "$id": "5910",
        "FileName": "when_create_briefing_work_record_task_assignments.cs",
        "Description": "when create briefing work record with task responsiblity",
        "WhenList": [
          "create manual briefing workrecord with default task assignments"
        ],
        "ThenList": [
          "should raise work record task assiments created event with responsiblity"
        ],
        "Children": []
      },
      {
        "$id": "5911",
        "FileName": "when_create_briefing_work_record_task_assignments.cs",
        "Description": "when create briefing work record with task templates",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should raise work record task assignments created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5912",
    "FileName": "when_create_employer_return.cs",
    "Description": "when create employer return",
    "WhenList": [
      "create employer return"
    ],
    "ThenList": [
      "should raise employer return created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "5913",
    "FileName": "when_create_immigration_work_record.cs",
    "Description": "when create immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5914",
        "FileName": "when_create_immigration_work_record.cs",
        "Description": "when create single immi workrecord",
        "WhenList": [
          "create immigration work record"
        ],
        "ThenList": [
          "should create successfully",
          "should raise immigration workrecord created",
          "should raise work record milestone moved event",
          "should raise checklist assignment created event"
        ],
        "Children": []
      },
      {
        "$id": "5915",
        "FileName": "when_create_immigration_work_record.cs",
        "Description": "when create single immi workrecord with questionnaire",
        "WhenList": [
          "create immigration work record"
        ],
        "ThenList": [
          "should create successfully",
          "should raise immigration workrecord created",
          "should raise organizer created event",
          "should raise work record milestone moved event",
          "should raise checklist assignment created event"
        ],
        "Children": []
      },
      {
        "$id": "5916",
        "FileName": "when_create_immigration_work_record.cs",
        "Description": "when batch create immi workrecord with feature toggle on",
        "WhenList": [
          "create immigration work record"
        ],
        "ThenList": [
          "should accept the request",
          "should get workrecord id sucessfully",
          "should raise immigration workrecord created",
          "should raise work record milestone moved event",
          "should raise checklist assignment created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5917",
    "FileName": "when_create_immigration_work_record_task_assignments.cs",
    "Description": "when create immigration work record task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5918",
        "FileName": "when_create_immigration_work_record_task_assignments.cs",
        "Description": "when create immigration work record with default task assignments",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should raise work record task assignments created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5919",
    "FileName": "when_create_missing_item.cs",
    "Description": "when create missing item for tax work record",
    "WhenList": [
      "create missing information item"
    ],
    "ThenList": [
      "should raise missing item created event"
    ],
    "Children": []
  },
  {
    "$id": "5920",
    "FileName": "when_create_missing_item.cs",
    "Description": "when batch create missing item for tax work records",
    "WhenList": [
      "create missing information item"
    ],
    "ThenList": [
      "should raise missing item created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "5921",
    "FileName": "when_create_missing_item.cs",
    "Description": "when create missing item for social security work records",
    "WhenList": [
      "create missing information item"
    ],
    "ThenList": [
      "should raise missing item created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "5922",
    "FileName": "when_create_missing_item.cs",
    "Description": "when batch add missing item for social security work records",
    "WhenList": [
      "batch add missing information item"
    ],
    "ThenList": [
      "should raise missing item created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "5923",
    "FileName": "when_create_prepare_report.cs",
    "Description": "when create tax workrecord prepare report and previous event author is staff",
    "WhenList": [
      "create prepare report"
    ],
    "ThenList": [
      "should raise prepare report created event",
      "should save modifier info to event store"
    ],
    "Children": []
  },
  {
    "$id": "5924",
    "FileName": "when_create_prepare_report.cs",
    "Description": "when create tax workrecord prepare report and previous event author is assignee",
    "WhenList": [
      "create prepare report"
    ],
    "ThenList": [
      "should raise prepare report created event",
      "should save modifier info to event store"
    ],
    "Children": []
  },
  {
    "$id": "5925",
    "FileName": "when_create_prepare_report.cs",
    "Description": "when create immigration workrecord prepare report",
    "WhenList": [
      "create prepare report"
    ],
    "ThenList": [
      "should raise prepare report created event",
      "should save modifier info to event store"
    ],
    "Children": []
  },
  {
    "$id": "5926",
    "FileName": "when_create_prepare_report.cs",
    "Description": "when create prepare report without questionnaire milestone moved event",
    "WhenList": [
      "create prepare report"
    ],
    "ThenList": [
      "should raise prepare report created event",
      "should save modifier info to event store"
    ],
    "Children": []
  },
  {
    "$id": "5927",
    "FileName": "when_create_revision_task.cs",
    "Description": "when create revision task with tax workrecord",
    "WhenList": [
      "create revision task"
    ],
    "ThenList": [
      "should create revision task sucessfully",
      "should raise workrecord task responsibility changed event"
    ],
    "Children": []
  },
  {
    "$id": "5928",
    "FileName": "when_create_social_security_work_record.cs",
    "Description": "when create social security work record",
    "WhenList": [
      "create social security work record"
    ],
    "ThenList": [
      "should be created",
      "should raise social security created event",
      "should raise checklist item created event",
      "should raise work record milestone moved event"
    ],
    "Children": []
  },
  {
    "$id": "5929",
    "FileName": "when_create_social_security_work_record_task_assignments.cs",
    "Description": "when create social security work record task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5930",
        "FileName": "when_create_social_security_work_record_task_assignments.cs",
        "Description": "when create social security work record with default task assignments",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should raise work record task responsibility changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5931",
    "FileName": "when_create_tax_equalization.cs",
    "Description": "when create tax equalization",
    "WhenList": [
      "create tax equalization"
    ],
    "ThenList": [
      "should raise tax equalization created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "5932",
    "FileName": "when_create_tax_work_record.cs",
    "Description": "when create tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5933",
        "FileName": "when_create_tax_work_record.cs",
        "Description": "when create tax workrecord with feature toggle on",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should return created",
          "should raise tax work record created event into eventstore",
          "should raise work record checklist assignment created event",
          "should move mile stone in event store"
        ],
        "Children": []
      },
      {
        "$id": "5934",
        "FileName": "when_create_tax_work_record.cs",
        "Description": "when create tax work record without checklist template",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should return created",
          "should not raise checklist template created event"
        ],
        "Children": []
      },
      {
        "$id": "5935",
        "FileName": "when_create_tax_work_record.cs",
        "Description": "when batch create tax workrecord with feature toggle on",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should accept the request",
          "should raise workrecord created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5936",
    "FileName": "when_create_tax_work_record_task_assignments.cs",
    "Description": "when create tax work record task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5937",
        "FileName": "when_create_tax_work_record_task_assignments.cs",
        "Description": "when create tax work record with default task assignments",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should raise work record task assiments created event"
        ],
        "Children": []
      },
      {
        "$id": "5938",
        "FileName": "when_create_tax_work_record_task_assignments.cs",
        "Description": "when create tax work record with task responsiblity",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should raise work record task assiments created event with responsiblity"
        ],
        "Children": []
      },
      {
        "$id": "5939",
        "FileName": "when_create_tax_work_record_task_assignments.cs",
        "Description": "when create tax work record with task templates",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should raise work record task assiments created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5940",
    "FileName": "when_delete_briefing_workrecord.cs",
    "Description": "when delete briefing workrecord",
    "WhenList": [
      "delete workrecord"
    ],
    "ThenList": [
      "should get deleted event type"
    ],
    "Children": []
  },
  {
    "$id": "5941",
    "FileName": "when_delete_employer_return.cs",
    "Description": "when delete employer return",
    "WhenList": [
      "delete employer return"
    ],
    "ThenList": [
      "should raise employer return deleted event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "5942",
    "FileName": "when_delete_missing_item.cs",
    "Description": "when delete missing item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5943",
        "FileName": "when_delete_missing_item.cs",
        "Description": "when delete missing item for tax work record",
        "WhenList": [
          "delete missing information item"
        ],
        "ThenList": [
          "should raise missing item deleted event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "5944",
        "FileName": "when_delete_missing_item.cs",
        "Description": "when delete missing item for social security",
        "WhenList": [
          "delete missing information item"
        ],
        "ThenList": [
          "should raise missing item deleted event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5945",
    "FileName": "when_delete_tax_equalization.cs",
    "Description": "when delete tax equalization",
    "WhenList": [
      "delete tax equalization"
    ],
    "ThenList": [
      "should raise tax equalization deleted event"
    ],
    "Children": []
  },
  {
    "$id": "5946",
    "FileName": "when_delete_workrecord.cs",
    "Description": "when delete workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5947",
        "FileName": "when_delete_workrecord.cs",
        "Description": "when delete tax workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "5948",
        "FileName": "when_delete_workrecord.cs",
        "Description": "when delete immi workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "5949",
        "FileName": "when_delete_workrecord.cs",
        "Description": "when delete social security workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5950",
    "FileName": "when_delete_workrecords_with_external_links.cs",
    "Description": "when delete workrecords with external links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5951",
        "FileName": "when_delete_workrecords_with_external_links.cs",
        "Description": "when delete tax workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should return no content",
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "5952",
        "FileName": "when_delete_workrecords_with_external_links.cs",
        "Description": "when delete immi workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "5953",
        "FileName": "when_delete_workrecords_with_external_links.cs",
        "Description": "when delete social security workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "5954",
        "FileName": "when_delete_workrecords_with_external_links.cs",
        "Description": "when delete briefing workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get deleted event type"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5955",
    "FileName": "when_immigration_questionnaire_status_changed.cs",
    "Description": "when immigration questionnaire status changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5956",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when immigration questionnaire notified",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise questionnair milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "5957",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when immigration questionnaire inprogress",
        "WhenList": [
          "start questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "5958",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when vincent submit questionnaire",
        "WhenList": [
          "vincent submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "5959",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when sofia submit immigration questionnaire on created",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "5960",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when sofia submit immigration questionnaire on notified",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "5961",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when sofia submit immigration questionnaire on inprocess",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "5962",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when sofia restart immigration questionnaire after submit",
        "WhenList": [
          "sofia restart questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule not raise milestone moved back event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5963",
    "FileName": "when_immigration_workrecord_add_service.cs",
    "Description": "when immigration workrecord add service",
    "WhenList": [
      "add service"
    ],
    "ThenList": [
      "should raise work record service changed event"
    ],
    "Children": []
  },
  {
    "$id": "5964",
    "FileName": "when_inactive_staff.cs",
    "Description": "when inactive staff",
    "WhenList": [
      "inactive sofia from leeds"
    ],
    "ThenList": [
      "should not raise work record task assignments updated event"
    ],
    "Children": []
  },
  {
    "$id": "5965",
    "FileName": "when_move_milestone_for_immigration_work_record.cs",
    "Description": "when move milestone for immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5966",
        "FileName": "when_move_milestone_for_immigration_work_record.cs",
        "Description": "when update milestone from initiated to in preparation with created questionnaire",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5967",
        "FileName": "when_move_milestone_for_immigration_work_record.cs",
        "Description": "when update milestone from in preparation to in review with notified questionnaire",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5968",
        "FileName": "when_move_milestone_for_immigration_work_record.cs",
        "Description": "when update milestone from in review to complete with submitted questionnaire",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5969",
        "FileName": "when_move_milestone_for_immigration_work_record.cs",
        "Description": "should return forbidden when update milestone from post work to done with in process questionnaire",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return forbidden",
          "should not raise work record milestone moved event to done"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5970",
    "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
    "Description": "when move mile stone of briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5971",
        "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
        "Description": "when complete tasks",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5972",
        "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
        "Description": "when finish tasks from todo items",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5973",
        "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
        "Description": "when move milestone as country based system",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event",
          "should raise correct modifier id"
        ],
        "Children": []
      },
      {
        "$id": "5974",
        "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
        "Description": "when kayla schedule appointment from my taxes",
        "WhenList": [
          "kayla schedule appointment from my taxes"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event",
          "should send confirmation email to kayla"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5975",
    "FileName": "when_move_mile_stone_of_tax_work_record.cs",
    "Description": "when move mile stone of tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5976",
        "FileName": "when_move_mile_stone_of_tax_work_record.cs",
        "Description": "when finish tasks",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5977",
        "FileName": "when_move_mile_stone_of_tax_work_record.cs",
        "Description": "when batch update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5978",
        "FileName": "when_move_mile_stone_of_tax_work_record.cs",
        "Description": "when complete tasks on to do list",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5979",
        "FileName": "when_move_mile_stone_of_tax_work_record.cs",
        "Description": "when US update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5980",
    "FileName": "when_move_mile_stone_of_tax_work_record_for_responsile_office_access.cs",
    "Description": "when move mile stone of tax work record by responsile office for country based resource",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5981",
        "FileName": "when_move_mile_stone_of_tax_work_record_for_responsile_office_access.cs",
        "Description": "when CN update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5982",
    "FileName": "when_self_nominate_work_record.cs",
    "Description": "when self nominate work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5983",
        "FileName": "when_self_nominate_work_record.cs",
        "Description": "when eventstore work record toggle is enable",
        "WhenList": [
          "slef nominate workrecord"
        ],
        "ThenList": [
          "should generate workrecord self nominate event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5984",
    "FileName": "when_social_security_workrecord_add_service.cs",
    "Description": "when social security workrecord add service",
    "WhenList": [
      "add service"
    ],
    "ThenList": [
      "should raise work record service changed event"
    ],
    "Children": []
  },
  {
    "$id": "5985",
    "FileName": "when_tax_questionnaire_batch_update_due_date.cs",
    "Description": "when tax questionnaire batch update due date",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5986",
        "FileName": "when_tax_questionnaire_batch_update_due_date.cs",
        "Description": "when bath update work record due date with valid services",
        "WhenList": [
          "batch update questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise update questionnaire event"
        ],
        "Children": []
      },
      {
        "$id": "5987",
        "FileName": "when_tax_questionnaire_batch_update_due_date.cs",
        "Description": "when bath update work record due date with invalid services",
        "WhenList": [
          "batch update questionnaire"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5988",
    "FileName": "when_tax_questionnaire_status_changed.cs",
    "Description": "when tax questionnaire status changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "5989",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when tax questionnaire notified",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should return accepted",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5990",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when tax questionnaire batch notified",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should return accepted",
          "should raise questionnaire mile stone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5991",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when kayla start to answer questionnaire",
        "WhenList": [
          "start questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5992",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when kayla submit tax questionnaire",
        "WhenList": [
          "kayla submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5993",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when sofia submit tax questionnaire on created",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5994",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when sofia submit tax questionnaire on notified",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5995",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when sofia submit tax questionnaire on inprocess",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5996",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when batch send tax questionnaire notified",
        "WhenList": [
          "batch active questionnaire"
        ],
        "ThenList": [
          "should accept the request",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "5997",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when sofia restart tax questionnaire after submit",
        "WhenList": [
          "sofia restart questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "5998",
    "FileName": "when_tax_questionnaire_update.cs",
    "Description": "when tax questionnaire update",
    "WhenList": [
      "sofia update questionnaire"
    ],
    "ThenList": [
      "should return ok",
      "should raise update questionnaire event"
    ],
    "Children": []
  },
  {
    "$id": "5999",
    "FileName": "when_tax_workrecord_change_services.cs",
    "Description": "when tax workrecord change services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6000",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when add an additional service",
        "WhenList": [
          "add service"
        ],
        "ThenList": [
          "should raise work record service changed event"
        ],
        "Children": []
      },
      {
        "$id": "6001",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when remove additional service",
        "WhenList": [
          "remove service"
        ],
        "ThenList": [
          "should raise work record service changed event"
        ],
        "Children": []
      },
      {
        "$id": "6002",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when add and remove additional services",
        "WhenList": [
          "add and remove service"
        ],
        "ThenList": [
          "should raise work record service changed event"
        ],
        "Children": []
      },
      {
        "$id": "6003",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when additional services not change",
        "WhenList": [
          "add and remove service"
        ],
        "ThenList": [
          "should not raise work record service changed event"
        ],
        "Children": []
      },
      {
        "$id": "6004",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when change primay service",
        "WhenList": [
          "change primary service"
        ],
        "ThenList": [
          "should raise work record name changed event"
        ],
        "Children": []
      },
      {
        "$id": "6005",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when primay service not changed",
        "WhenList": [
          "update workrecord type of service without changing primary service"
        ],
        "ThenList": [
          "should not raise work record name changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6006",
    "FileName": "when_update_briefing_work_record_check_list_template_responsibility.cs",
    "Description": "when update briefing work record check list template responsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6007",
        "FileName": "when_update_briefing_work_record_check_list_template_responsibility.cs",
        "Description": "when update checklist responsibility",
        "WhenList": [
          "update checklist assignment"
        ],
        "ThenList": [
          "shold be success",
          "should raise work record check list assignment changed event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6008",
        "FileName": "when_update_briefing_work_record_check_list_template_responsibility.cs",
        "Description": "when reassign checklist responsibility",
        "WhenList": [
          "reassign to another one"
        ],
        "ThenList": [
          "should raise work record check list assignment changed event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6009",
    "FileName": "when_update_briefing_work_record_name.cs",
    "Description": "when update briefing work record name",
    "WhenList": [
      "change work record name"
    ],
    "ThenList": [
      "should raise work record detail changed event"
    ],
    "Children": []
  },
  {
    "$id": "6010",
    "FileName": "when_update_briefing_work_record_responsible_office.cs",
    "Description": "when update briefing work record responsible office",
    "WhenList": [
      "change work record responsible office"
    ],
    "ThenList": [
      "should raise only work record detail reponsible office changed event"
    ],
    "Children": []
  },
  {
    "$id": "6011",
    "FileName": "when_update_briefing_work_record_status.cs",
    "Description": "when update briefing work record status",
    "WhenList": [
      "change work record name"
    ],
    "ThenList": [
      "should raise work record status changed event"
    ],
    "Children": []
  },
  {
    "$id": "6012",
    "FileName": "when_update_briefing_work_record_task_assignments_responsibilities.cs",
    "Description": "when update briefing work record task assignments responsibilities",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6013",
        "FileName": "when_update_briefing_work_record_task_assignments_responsibilities.cs",
        "Description": "when update resposibility",
        "WhenList": [
          "update assignments resposibilities"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6014",
        "FileName": "when_update_briefing_work_record_task_assignments_responsibilities.cs",
        "Description": "when assign resposiblity in work pool",
        "WhenList": [
          "assign resposiblity"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6015",
        "FileName": "when_update_briefing_work_record_task_assignments_responsibilities.cs",
        "Description": "when update resposiblity in work balance",
        "WhenList": [
          "assign resposiblity"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6016",
    "FileName": "when_update_immigration_work_record_assignments_resposiblities.cs",
    "Description": "when update immigration work record assignments resposiblities",
    "WhenList": [
      "update assignments resposibilities"
    ],
    "ThenList": [
      "should raise work record task assignments updated event"
    ],
    "Children": []
  },
  {
    "$id": "6017",
    "FileName": "when_update_immigration_work_record_name.cs",
    "Description": "when update immigration work record name",
    "WhenList": [
      "change work record name"
    ],
    "ThenList": [
      "should raise work record detail changed event"
    ],
    "Children": []
  },
  {
    "$id": "6018",
    "FileName": "when_update_immigration_work_record_responsible_office.cs",
    "Description": "when update immigration work record responsible office",
    "WhenList": [
      "change work record responsible office"
    ],
    "ThenList": [
      "should only raise work record reponsible office changed event"
    ],
    "Children": []
  },
  {
    "$id": "6019",
    "FileName": "when_update_immigration_work_record_service_specifics.cs",
    "Description": "when update immigration work record service specifics",
    "WhenList": [
      "change dependant"
    ],
    "ThenList": [
      "should raise work record detail changed event"
    ],
    "Children": []
  },
  {
    "$id": "6020",
    "FileName": "when_update_immigration_work_record_status.cs",
    "Description": "when update immigration work record status",
    "WhenList": [
      "change work record name"
    ],
    "ThenList": [
      "should raise work record status changed event"
    ],
    "Children": []
  },
  {
    "$id": "6021",
    "FileName": "when_update_missing_item.cs",
    "Description": "when update missing item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6022",
        "FileName": "when_update_missing_item.cs",
        "Description": "with tax work record",
        "WhenList": [
          "mark missing information item as received"
        ],
        "ThenList": [
          "should raise missing item mark as received event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6023",
        "FileName": "when_update_missing_item.cs",
        "Description": "with social security work record",
        "WhenList": [
          "mark missing information item as received"
        ],
        "ThenList": [
          "should raise missing item mark as received event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6024",
    "FileName": "when_update_missing_item.cs",
    "Description": "when batch update missing item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6025",
        "FileName": "when_update_missing_item.cs",
        "Description": "for tax work record",
        "WhenList": [
          "mark missing information item as received"
        ],
        "ThenList": [
          "should raise missing item mark as received event"
        ],
        "Children": []
      },
      {
        "$id": "6026",
        "FileName": "when_update_missing_item.cs",
        "Description": "for social security work record",
        "WhenList": [
          "mark missing information item as received"
        ],
        "ThenList": [
          "should raise missing item mark as received event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6027",
    "FileName": "when_update_social_security_work_record_assignments_resposibilities.cs",
    "Description": "when update social security work record assignments resposibilities",
    "WhenList": [
      "update assignments resposibilities"
    ],
    "ThenList": [
      "should raise work record task assignments updated event"
    ],
    "Children": []
  },
  {
    "$id": "6028",
    "FileName": "when_update_social_security_work_record_name.cs",
    "Description": "when update social security work record name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6029",
        "FileName": "when_update_social_security_work_record_name.cs",
        "Description": "update work record name",
        "WhenList": [
          "change work record name"
        ],
        "ThenList": [
          "should return ok",
          "should raise work record detail changed event"
        ],
        "Children": []
      },
      {
        "$id": "6030",
        "FileName": "when_update_social_security_work_record_name.cs",
        "Description": "not update work record name",
        "WhenList": [
          "not change anything"
        ],
        "ThenList": [
          "should return ok",
          "should not raise work record detail changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6031",
    "FileName": "when_update_social_security_work_record_responsible_office.cs",
    "Description": "when update social security work record responsible office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6032",
        "FileName": "when_update_social_security_work_record_responsible_office.cs",
        "Description": "update work record responsible office",
        "WhenList": [
          "change work record responsible office"
        ],
        "ThenList": [
          "should return ok",
          "should raise only work record responsible office changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6033",
    "FileName": "when_update_tax_equalization.cs",
    "Description": "when update tax equalization",
    "WhenList": [
      "update tax equalization"
    ],
    "ThenList": [
      "should raise tax equalization changed event"
    ],
    "Children": []
  },
  {
    "$id": "6034",
    "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
    "Description": "when update tax work record assignments resposibilities",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6035",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when update resposibility",
        "WhenList": [
          "update assignments resposibilities"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6036",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when update responsiblity after changing task template",
        "WhenList": [
          "change template and update task responsiblity"
        ],
        "ThenList": [
          "should return ok",
          "should raise work record task assignments changed event"
        ],
        "Children": []
      },
      {
        "$id": "6037",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when update office and responsiblity",
        "WhenList": [
          "update assignments office and resposibility"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6038",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when assign resposiblity in work pool",
        "WhenList": [
          "assign resposiblity"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6039",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when reassign resposiblity",
        "WhenList": [
          "reassign resposiblity to grace"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6040",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when reassign responsiblity to self",
        "WhenList": [
          "reassign resposiblity to grace"
        ],
        "ThenList": [
          "should not raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6041",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when update resposiblity in work balance",
        "WhenList": [
          "assign resposiblity"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6042",
    "FileName": "when_update_tax_work_record_name.cs",
    "Description": "when update tax work record name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6043",
        "FileName": "when_update_tax_work_record_name.cs",
        "Description": "single update name",
        "WhenList": [
          "change work record name"
        ],
        "ThenList": [
          "should raise work record detail changed event"
        ],
        "Children": []
      },
      {
        "$id": "6044",
        "FileName": "when_update_tax_work_record_name.cs",
        "Description": "batch update name",
        "WhenList": [
          "change work record name"
        ],
        "ThenList": [
          "should return ok",
          "should raise work record detail changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6045",
    "FileName": "when_update_tax_work_record_responsible_office.cs",
    "Description": "when update tax work record responsible office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6046",
        "FileName": "when_update_tax_work_record_responsible_office.cs",
        "Description": "single update responsible office",
        "WhenList": [
          "change work record responsible office"
        ],
        "ThenList": [
          "should raise work record detail changed event with only office changed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6047",
    "FileName": "when_update_work_record_check_list_template_responsibility.cs",
    "Description": "when update work record check list template responsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6048",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when update checklist item responsibility on work record detail page",
        "WhenList": [
          "update checklist assignment"
        ],
        "ThenList": [
          "should raise work record check list assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "6049",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when update checklist item responsible office on work record detail page",
        "WhenList": [
          "update checklist assignment"
        ],
        "ThenList": [
          "should raise work record check list assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "6050",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when reassign checklist responsiblity",
        "WhenList": [
          "reassign check list"
        ],
        "ThenList": [
          "should raise work record check list assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "6051",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when reassign checklist item to himself",
        "WhenList": [
          "reassign check list"
        ],
        "ThenList": [
          "should not raise checklist assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "6052",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when inactive staff with completed tasks",
        "WhenList": [
          "inactivate staff"
        ],
        "ThenList": [
          "should not raise work record check list assignment changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6053",
    "FileName": "should_raise_change_briefing_coordinator_event_when_reassign_briefing_coordinator_during_inactivating_staff.cs",
    "Description": "should raise change briefing coordinator event when reassign briefing coordinator during inactivating staff",
    "WhenList": [
      "reassign briefing coordinator"
    ],
    "ThenList": [
      "should return ok",
      "should assign to haff"
    ],
    "Children": []
  },
  {
    "$id": "6054",
    "FileName": "when_batch_update_questionnaire.cs",
    "Description": "when batch update questionnaire",
    "WhenList": [
      "when batch update questionnaire due date and tax contact"
    ],
    "ThenList": [
      "should return 200 ok as response code",
      "should raise questionnaire updated event"
    ],
    "Children": []
  },
  {
    "$id": "6055",
    "FileName": "when_briefing_workrecord_add_service.cs",
    "Description": "when briefing workrecord add service",
    "WhenList": [
      "add service"
    ],
    "ThenList": [
      "should raise work record service changed event"
    ],
    "Children": []
  },
  {
    "$id": "6056",
    "FileName": "when_change_briefing_coordinator.cs",
    "Description": "when change briefing coordinator",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6057",
        "FileName": "when_change_briefing_coordinator.cs",
        "Description": "when update from work record detail page",
        "WhenList": [
          "change briefing coordinator"
        ],
        "ThenList": [
          "should raise briefing coordinator changed event"
        ],
        "Children": []
      },
      {
        "$id": "6058",
        "FileName": "when_change_briefing_coordinator.cs",
        "Description": "when reassign staff responsibility",
        "WhenList": [
          "reassign work"
        ],
        "ThenList": [
          "should be created",
          "should assign to lenonard"
        ],
        "Children": []
      },
      {
        "$id": "6059",
        "FileName": "when_change_briefing_coordinator.cs",
        "Description": "when batch handover briefing coordinator",
        "WhenList": [
          "change office"
        ],
        "ThenList": [
          "should be accepted",
          "should assign to lenonard"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6060",
    "FileName": "when_change_employer_return_status.cs",
    "Description": "when change employer return status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6061",
        "FileName": "when_change_employer_return_status.cs",
        "Description": "when status changed",
        "WhenList": [
          "change employer return status"
        ],
        "ThenList": [
          "should raise employer return status change event into eventstore",
          "should not send email to employer return email group"
        ],
        "Children": []
      },
      {
        "$id": "6062",
        "FileName": "when_change_employer_return_status.cs",
        "Description": "when status not changed",
        "WhenList": [
          "change employer return status"
        ],
        "ThenList": [
          "should not raise employer return status change event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6063",
    "FileName": "when_change_immigration_work_record_task.cs",
    "Description": "when change immigration work record task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6064",
        "FileName": "when_change_immigration_work_record_task.cs",
        "Description": "when finish work record template task",
        "WhenList": [
          "finish work record task"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task completed event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6065",
        "FileName": "when_change_immigration_work_record_task.cs",
        "Description": "when create immigration revision task",
        "WhenList": [
          "create revision task"
        ],
        "ThenList": [
          "should create revision task sucessfully",
          "should raise workrecord revision task created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6066",
    "FileName": "when_change_work_record_no_filing_requirement.cs",
    "Description": "when change work record no filing requirement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6067",
        "FileName": "when_change_work_record_no_filing_requirement.cs",
        "Description": "when no filing requirement changes",
        "WhenList": [
          "update work record"
        ],
        "ThenList": [
          "should raise event"
        ],
        "Children": []
      },
      {
        "$id": "6068",
        "FileName": "when_change_work_record_no_filing_requirement.cs",
        "Description": "when no filing requirement does not change",
        "WhenList": [
          "update work record"
        ],
        "ThenList": [
          "should not raise event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6069",
    "FileName": "when_change_work_record_status.cs",
    "Description": "when change work record status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6070",
        "FileName": "when_change_work_record_status.cs",
        "Description": "when status change",
        "WhenList": [
          "change work record status"
        ],
        "ThenList": [
          "should raise work record status changed evnet into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6071",
        "FileName": "when_change_work_record_status.cs",
        "Description": "when status not change",
        "WhenList": [
          "change work record without status"
        ],
        "ThenList": [
          "should not raise work record status changed evnet into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6072",
    "FileName": "when_complete_immigration_work_record_check_list_item.cs",
    "Description": "when complete immigration work record check list item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6073",
        "FileName": "when_complete_immigration_work_record_check_list_item.cs",
        "Description": "when complete check list item on to do list",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "6074",
        "FileName": "when_complete_immigration_work_record_check_list_item.cs",
        "Description": "when complete check list items on batch update",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6075",
    "FileName": "when_complete_social_security_work_record_check_list_item.cs",
    "Description": "when complete social security work record check list item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6076",
        "FileName": "when_complete_social_security_work_record_check_list_item.cs",
        "Description": "when complete check list item on to do list",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "6077",
        "FileName": "when_complete_social_security_work_record_check_list_item.cs",
        "Description": "when complete check list items on batch update",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6078",
    "FileName": "when_complete_tax_briefing_checklist_item.cs",
    "Description": "when complete tax briefing checklist item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6079",
        "FileName": "when_complete_tax_briefing_checklist_item.cs",
        "Description": "when complete check list item on to do list",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6080",
    "FileName": "when_complete_tax_briefing_work_record_task.cs",
    "Description": "when complete tax briefing work record task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6081",
        "FileName": "when_complete_tax_briefing_work_record_task.cs",
        "Description": "when finish work record template task",
        "WhenList": [
          "finish work record task"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task completed event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6082",
    "FileName": "when_complete_tax_work_record_check_list_item.cs",
    "Description": "when complete tax work record check list item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6083",
        "FileName": "when_complete_tax_work_record_check_list_item.cs",
        "Description": "when complete check list item on to do list",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "6084",
        "FileName": "when_complete_tax_work_record_check_list_item.cs",
        "Description": "when duplicate complete check list items on to do list",
        "WhenList": [
          "duplcate complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should not raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "6085",
        "FileName": "when_complete_tax_work_record_check_list_item.cs",
        "Description": "when complete check list items on batch update",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record check list status changed event"
        ],
        "Children": []
      },
      {
        "$id": "6086",
        "FileName": "when_complete_tax_work_record_check_list_item.cs",
        "Description": "when batch check list items status but not complete on batch update",
        "WhenList": [
          "complete check list item"
        ],
        "ThenList": [
          "should be ok",
          "should not raise work record check list status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6087",
    "FileName": "when_complete_tax_work_record_task.cs",
    "Description": "when complete tax work record task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6088",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when finish work record template task",
        "WhenList": [
          "finish work record task"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task completed event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6089",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when finish work record revision task",
        "WhenList": [
          "finish work record task"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task completed event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6090",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when complete tasks on to do list",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record task status changed event"
        ],
        "Children": []
      },
      {
        "$id": "6091",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when batch update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should raise work record task status changed event"
        ],
        "Children": []
      },
      {
        "$id": "6092",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when US update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record task status changed event"
        ],
        "Children": []
      },
      {
        "$id": "6093",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when move milestone backward successfully",
        "WhenList": [
          "batch move milestone backward"
        ],
        "ThenList": [
          "should update successfully"
        ],
        "Children": []
      },
      {
        "$id": "6094",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when move milestone backward",
        "WhenList": [
          "batch move milestone backward"
        ],
        "ThenList": [
          "should raise milestone move backward event"
        ],
        "Children": []
      },
      {
        "$id": "6095",
        "FileName": "when_complete_tax_work_record_task.cs",
        "Description": "when move milestone backward then move forward",
        "WhenList": [
          "batch move milestone forward"
        ],
        "ThenList": [
          "should raise work record task status changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6096",
    "FileName": "when_create_briefing_work_record.cs",
    "Description": "when create briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6097",
        "FileName": "when_create_briefing_work_record.cs",
        "Description": "when create manual briefing work record if toggle on",
        "WhenList": [
          "create manual briefing workrecord"
        ],
        "ThenList": [
          "should raise briefing work record"
        ],
        "Children": []
      },
      {
        "$id": "6098",
        "FileName": "when_create_briefing_work_record.cs",
        "Description": "when create online briefing work record if toggle on",
        "WhenList": [
          "create manual briefing workrecord"
        ],
        "ThenList": [
          "should raise briefing work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6099",
    "FileName": "when_create_briefing_work_record_revision_task.cs",
    "Description": "when create briefing work record revision task",
    "WhenList": [
      "create revision task"
    ],
    "ThenList": [
      "should raise workrecord task assignments created event",
      "should raise revision task created event"
    ],
    "Children": []
  },
  {
    "$id": "6100",
    "FileName": "when_create_briefing_work_record_task_assignments.cs",
    "Description": "when create briefing work record task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6101",
        "FileName": "when_create_briefing_work_record_task_assignments.cs",
        "Description": "when create briefing work record with default task assignments",
        "WhenList": [
          "create manual briefing workrecord with default task assignments"
        ],
        "ThenList": [
          "should raise workrecord task assignments created event"
        ],
        "Children": []
      },
      {
        "$id": "6102",
        "FileName": "when_create_briefing_work_record_task_assignments.cs",
        "Description": "when create briefing work record with task responsiblity",
        "WhenList": [
          "create manual briefing workrecord with default task assignments"
        ],
        "ThenList": [
          "should raise work record task assiments created event with responsiblity"
        ],
        "Children": []
      },
      {
        "$id": "6103",
        "FileName": "when_create_briefing_work_record_task_assignments.cs",
        "Description": "when create briefing work record with task templates",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should raise work record task assignments created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6104",
    "FileName": "when_create_employer_return.cs",
    "Description": "when create employer return",
    "WhenList": [
      "create employer return"
    ],
    "ThenList": [
      "should raise employer return created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "6105",
    "FileName": "when_create_immigration_work_record.cs",
    "Description": "when create immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6106",
        "FileName": "when_create_immigration_work_record.cs",
        "Description": "when create single immi workrecord",
        "WhenList": [
          "create immigration work record"
        ],
        "ThenList": [
          "should create successfully",
          "should raise immigration workrecord created",
          "should raise work record milestone moved event",
          "should raise checklist assignment created event"
        ],
        "Children": []
      },
      {
        "$id": "6107",
        "FileName": "when_create_immigration_work_record.cs",
        "Description": "when create single immi workrecord with questionnaire",
        "WhenList": [
          "create immigration work record"
        ],
        "ThenList": [
          "should create successfully",
          "should raise immigration workrecord created",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6108",
        "FileName": "when_create_immigration_work_record.cs",
        "Description": "when batch create immi workrecord with feature toggle on",
        "WhenList": [
          "create immigration work record"
        ],
        "ThenList": [
          "should accept the request",
          "should get workrecord id sucessfully",
          "should create workrecord in event store",
          "should move mile stone in event store"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6109",
    "FileName": "when_create_immigration_work_record_task_assignments.cs",
    "Description": "when create immigration work record task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6110",
        "FileName": "when_create_immigration_work_record_task_assignments.cs",
        "Description": "when create immigration work record with default task assignments",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should raise work record task responsibility changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6111",
    "FileName": "when_create_missing_item.cs",
    "Description": "when create missing item for tax work record",
    "WhenList": [
      "create missing information item"
    ],
    "ThenList": [
      "should raise missing item created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "6112",
    "FileName": "when_create_missing_item.cs",
    "Description": "when batch create missing item for tax work records",
    "WhenList": [
      "create missing information item"
    ],
    "ThenList": [
      "should raise missing item created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "6113",
    "FileName": "when_create_missing_item.cs",
    "Description": "when create missing item for social security work records",
    "WhenList": [
      "create missing information item"
    ],
    "ThenList": [
      "should raise missing item created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "6114",
    "FileName": "when_create_missing_item.cs",
    "Description": "when batch add missing item for social security work records",
    "WhenList": [
      "batch add missing information item"
    ],
    "ThenList": [
      "should raise missing item created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "6115",
    "FileName": "when_create_prepare_report.cs",
    "Description": "when create tax workrecord prepare report and previous event author is staff",
    "WhenList": [
      "create prepare report"
    ],
    "ThenList": [
      "should raise prepare report created event",
      "should save modifier info to event store"
    ],
    "Children": []
  },
  {
    "$id": "6116",
    "FileName": "when_create_prepare_report.cs",
    "Description": "when create tax workrecord prepare report and previous event author is assignee",
    "WhenList": [
      "create prepare report"
    ],
    "ThenList": [
      "should raise prepare report created event",
      "should save modifier info to event store"
    ],
    "Children": []
  },
  {
    "$id": "6117",
    "FileName": "when_create_prepare_report.cs",
    "Description": "when create immigration workrecord prepare report",
    "WhenList": [
      "create prepare report"
    ],
    "ThenList": [
      "should raise prepare report created event",
      "should save modifier info to event store"
    ],
    "Children": []
  },
  {
    "$id": "6118",
    "FileName": "when_create_prepare_report.cs",
    "Description": "when create prepare report without questionnaire milestone moved event",
    "WhenList": [
      "create prepare report"
    ],
    "ThenList": [
      "should raise prepare report created event",
      "should save modifier info to event store"
    ],
    "Children": []
  },
  {
    "$id": "6119",
    "FileName": "when_create_revision_task.cs",
    "Description": "when create revision task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6120",
        "FileName": "when_create_revision_task.cs",
        "Description": "when create revision task with tax workrecord",
        "WhenList": [
          "create revision task"
        ],
        "ThenList": [
          "should create revision task sucessfully",
          "should raise workrecord task responsibility changed event"
        ],
        "Children": []
      },
      {
        "$id": "6121",
        "FileName": "when_create_revision_task.cs",
        "Description": "when create tax revision task",
        "WhenList": [
          "create revision task"
        ],
        "ThenList": [
          "should create revision task sucessfully",
          "should raise workrecord revision task created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6122",
    "FileName": "when_create_social_security_work_record.cs",
    "Description": "when create social security work record",
    "WhenList": [
      "create social security work record"
    ],
    "ThenList": [
      "should be created",
      "should raise social security created event",
      "should raise checklist item created event",
      "should raise work record milestone moved event"
    ],
    "Children": []
  },
  {
    "$id": "6123",
    "FileName": "when_create_social_security_work_record_task_assignments.cs",
    "Description": "when create social security work record task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6124",
        "FileName": "when_create_social_security_work_record_task_assignments.cs",
        "Description": "when create social security work record with default task assignments",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should raise work record task responsibility changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6125",
    "FileName": "when_create_tax_equalization.cs",
    "Description": "when create tax equalization",
    "WhenList": [
      "create tax equalization"
    ],
    "ThenList": [
      "should raise tax equalization created event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "6126",
    "FileName": "when_create_tax_work_record.cs",
    "Description": "when create tax work record",
    "WhenList": [
      "create tax work record"
    ],
    "ThenList": [
      "should return created",
      "should not raise checklist template created event"
    ],
    "Children": [
      {
        "$id": "6127",
        "FileName": "when_create_tax_work_record.cs",
        "Description": "when create tax workrecord with feature toggle on",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should return created",
          "should raise tax work record created event into eventstore",
          "should raise work record checklist assignment created event",
          "should move mile stone in event store"
        ],
        "Children": []
      },
      {
        "$id": "6128",
        "FileName": "when_create_tax_work_record.cs",
        "Description": "when create tax work record without checklist template",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should accept the request",
          "should create workrecord in event store"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6129",
    "FileName": "when_create_tax_work_record_task_assignments.cs",
    "Description": "when create tax work record task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6130",
        "FileName": "when_create_tax_work_record_task_assignments.cs",
        "Description": "when create tax work record with default task assignments",
        "WhenList": [
          "create tax work record"
        ],
        "ThenList": [
          "should raise work record task assiments created event"
        ],
        "Children": []
      },
      {
        "$id": "6131",
        "FileName": "when_create_tax_work_record_task_assignments.cs",
        "Description": "when create tax work record with task responsiblity",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should raise work record task assiments created event with responsiblity"
        ],
        "Children": []
      },
      {
        "$id": "6132",
        "FileName": "when_create_tax_work_record_task_assignments.cs",
        "Description": "when create tax work record with task templates",
        "WhenList": [
          "create work record"
        ],
        "ThenList": [
          "should raise work record task assiments created event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6133",
    "FileName": "when_delete_briefing_workrecord.cs",
    "Description": "when delete briefing workrecord",
    "WhenList": [
      "delete workrecord"
    ],
    "ThenList": [
      "should get deleted event type"
    ],
    "Children": []
  },
  {
    "$id": "6134",
    "FileName": "when_delete_employer_return.cs",
    "Description": "when delete employer return",
    "WhenList": [
      "delete employer return"
    ],
    "ThenList": [
      "should raise employer return deleted event into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "6135",
    "FileName": "when_delete_missing_item.cs",
    "Description": "when delete missing item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6136",
        "FileName": "when_delete_missing_item.cs",
        "Description": "when delete missing item for tax work record",
        "WhenList": [
          "delete missing information item"
        ],
        "ThenList": [
          "should raise missing item deleted event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6137",
        "FileName": "when_delete_missing_item.cs",
        "Description": "when delete missing item for social security",
        "WhenList": [
          "delete missing information item"
        ],
        "ThenList": [
          "should raise missing item deleted event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6138",
    "FileName": "when_delete_tax_equalization.cs",
    "Description": "when delete tax equalization",
    "WhenList": [
      "delete tax equalization"
    ],
    "ThenList": [
      "should raise tax equalization deleted event"
    ],
    "Children": []
  },
  {
    "$id": "6139",
    "FileName": "when_delete_workrecord.cs",
    "Description": "when delete workrecord",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6140",
        "FileName": "when_delete_workrecord.cs",
        "Description": "when delete tax workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "6141",
        "FileName": "when_delete_workrecord.cs",
        "Description": "when delete immi workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "6142",
        "FileName": "when_delete_workrecord.cs",
        "Description": "when delete social security workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6143",
    "FileName": "when_delete_workrecords_with_external_links.cs",
    "Description": "when delete workrecords with external links",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6144",
        "FileName": "when_delete_workrecords_with_external_links.cs",
        "Description": "when delete tax workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should return no content",
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "6145",
        "FileName": "when_delete_workrecords_with_external_links.cs",
        "Description": "when delete immi workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "6146",
        "FileName": "when_delete_workrecords_with_external_links.cs",
        "Description": "when delete social security workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get workrecord deleted event when deleted workrecord"
        ],
        "Children": []
      },
      {
        "$id": "6147",
        "FileName": "when_delete_workrecords_with_external_links.cs",
        "Description": "when delete briefing workrecord",
        "WhenList": [
          "delete workrecord"
        ],
        "ThenList": [
          "should get deleted event type"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6148",
    "FileName": "when_immigration_questionnaire_status_changed.cs",
    "Description": "when immigration questionnaire status changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6149",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when immigration questionnaire notified",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise questionnair milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "6150",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when immigration questionnaire inprogress",
        "WhenList": [
          "start questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "6151",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when vincent submit questionnaire",
        "WhenList": [
          "vincent submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "6152",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when sofia submit immigration questionnaire on created",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "6153",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when sofia submit immigration questionnaire on notified",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "6154",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when sofia submit immigration questionnaire on inprocess",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule raise milestone moved forward event"
        ],
        "Children": []
      },
      {
        "$id": "6155",
        "FileName": "when_immigration_questionnaire_status_changed.cs",
        "Description": "when sofia restart immigration questionnaire after submit",
        "WhenList": [
          "sofia restart questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "shoule not raise milestone moved back event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6156",
    "FileName": "when_immigration_workrecord_add_service.cs",
    "Description": "when immigration workrecord add service",
    "WhenList": [
      "add service"
    ],
    "ThenList": [
      "should raise work record service changed event"
    ],
    "Children": []
  },
  {
    "$id": "6157",
    "FileName": "when_inactive_staff.cs",
    "Description": "when inactive staff",
    "WhenList": [
      "inactive sofia from leeds"
    ],
    "ThenList": [
      "should raise work record task assignments updated event"
    ],
    "Children": []
  },
  {
    "$id": "6158",
    "FileName": "when_move_milestone_for_immigration_work_record.cs",
    "Description": "when move milestone for immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6159",
        "FileName": "when_move_milestone_for_immigration_work_record.cs",
        "Description": "when update milestone from initiated to in preparation with created questionnaire",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6160",
        "FileName": "when_move_milestone_for_immigration_work_record.cs",
        "Description": "when update milestone from in preparation to in review with notified questionnaire",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6161",
        "FileName": "when_move_milestone_for_immigration_work_record.cs",
        "Description": "when update milestone from in review to complete with submitted questionnaire",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6162",
        "FileName": "when_move_milestone_for_immigration_work_record.cs",
        "Description": "should return forbidden when update milestone from post work to done with in process questionnaire",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return forbidden",
          "should not raise work record milestone moved event to done"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6163",
    "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
    "Description": "when move mile stone of briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6164",
        "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
        "Description": "when complete tasks",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6165",
        "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
        "Description": "when finish tasks from todo items",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6166",
        "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
        "Description": "when move milestone as country based system",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event",
          "should raise correct modifier id"
        ],
        "Children": []
      },
      {
        "$id": "6167",
        "FileName": "when_move_mile_stone_of_briefing_work_record.cs",
        "Description": "when kayla schedule appointment from my taxes",
        "WhenList": [
          "kayla schedule appointment from my taxes"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event",
          "should send confirmation email to kayla"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6168",
    "FileName": "when_move_mile_stone_of_tax_work_record.cs",
    "Description": "when move mile stone of tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6169",
        "FileName": "when_move_mile_stone_of_tax_work_record.cs",
        "Description": "when finish tasks",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6170",
        "FileName": "when_move_mile_stone_of_tax_work_record.cs",
        "Description": "when batch update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6171",
        "FileName": "when_move_mile_stone_of_tax_work_record.cs",
        "Description": "when complete tasks on to do list",
        "WhenList": [
          "finish all tasks of current milestone"
        ],
        "ThenList": [
          "should be ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6172",
        "FileName": "when_move_mile_stone_of_tax_work_record.cs",
        "Description": "when US update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok",
          "should raise work record milestone moved event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6173",
    "FileName": "when_move_mile_stone_of_tax_work_record_for_responsile_office_access.cs",
    "Description": "when move mile stone of tax work record by responsile office for country based resource",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6174",
        "FileName": "when_move_mile_stone_of_tax_work_record_for_responsile_office_access.cs",
        "Description": "when CN update milestone",
        "WhenList": [
          "batch move milestone"
        ],
        "ThenList": [
          "should be return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6175",
    "FileName": "when_self_nominate_work_record.cs",
    "Description": "when self nominate work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6176",
        "FileName": "when_self_nominate_work_record.cs",
        "Description": "when eventstore work record toggle is enable",
        "WhenList": [
          "slef nominate workrecord"
        ],
        "ThenList": [
          "should generate workrecord self nominate event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6177",
    "FileName": "when_social_security_workrecord_add_service.cs",
    "Description": "when social security workrecord add service",
    "WhenList": [
      "add service"
    ],
    "ThenList": [
      "should raise work record service changed event"
    ],
    "Children": []
  },
  {
    "$id": "6178",
    "FileName": "when_tax_questionnaire_batch_update_due_date.cs",
    "Description": "when tax questionnaire batch update due date",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6179",
        "FileName": "when_tax_questionnaire_batch_update_due_date.cs",
        "Description": "when bath update work record due date with valid services",
        "WhenList": [
          "batch update questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise update questionnaire event"
        ],
        "Children": []
      },
      {
        "$id": "6180",
        "FileName": "when_tax_questionnaire_batch_update_due_date.cs",
        "Description": "when bath update work record due date with invalid services",
        "WhenList": [
          "batch update questionnaire"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6181",
    "FileName": "when_tax_questionnaire_status_changed.cs",
    "Description": "when tax questionnaire status changed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6182",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when tax questionnaire notified",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should return accepted",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6183",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when tax questionnaire batch notified",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should return accepted",
          "should raise questionnaire mile stone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6184",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when kayla start to answer questionnaire",
        "WhenList": [
          "start questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6185",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when kayla submit tax questionnaire",
        "WhenList": [
          "kayla submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6186",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when sofia submit tax questionnaire on created",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6187",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when sofia submit tax questionnaire on notified",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6188",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when sofia submit tax questionnaire on inprocess",
        "WhenList": [
          "sofia submit questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should raise milestone moved forward event",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      },
      {
        "$id": "6189",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when batch send tax questionnaire notified",
        "WhenList": [
          "batch active questionnaire"
        ],
        "ThenList": [
          "should accept the request",
          "should create workrecord in event store"
        ],
        "Children": []
      },
      {
        "$id": "6190",
        "FileName": "when_tax_questionnaire_status_changed.cs",
        "Description": "when sofia restart tax questionnaire after submit",
        "WhenList": [
          "sofia restart questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should update questionnaire milestone",
          "should raise questionnaire milestone moved event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6191",
    "FileName": "when_tax_questionnaire_update.cs",
    "Description": "when tax questionnaire update",
    "WhenList": [
      "sofia update questionnaire"
    ],
    "ThenList": [
      "should return ok",
      "should raise update questionnaire event"
    ],
    "Children": []
  },
  {
    "$id": "6192",
    "FileName": "when_tax_workrecord_change_services.cs",
    "Description": "when tax workrecord change services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6193",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when add an additional service",
        "WhenList": [
          "add service"
        ],
        "ThenList": [
          "should raise work record service changed event"
        ],
        "Children": []
      },
      {
        "$id": "6194",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when remove additional service",
        "WhenList": [
          "remove service"
        ],
        "ThenList": [
          "should raise work record service changed event"
        ],
        "Children": []
      },
      {
        "$id": "6195",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when add and remove additional services",
        "WhenList": [
          "add and remove service"
        ],
        "ThenList": [
          "should raise work record service changed event"
        ],
        "Children": []
      },
      {
        "$id": "6196",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when additional services not change",
        "WhenList": [
          "add and remove service"
        ],
        "ThenList": [
          "should not raise work record service changed event"
        ],
        "Children": []
      },
      {
        "$id": "6197",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when change primay service",
        "WhenList": [
          "change primary service"
        ],
        "ThenList": [
          "should raise work record name changed event"
        ],
        "Children": []
      },
      {
        "$id": "6198",
        "FileName": "when_tax_workrecord_change_services.cs",
        "Description": "when primay service not changed",
        "WhenList": [
          "update workrecord type of service without changing primary service"
        ],
        "ThenList": [
          "should raise work record name changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6199",
    "FileName": "when_update_briefing_work_record_check_list_template_responsibility.cs",
    "Description": "when update briefing work record check list template responsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6200",
        "FileName": "when_update_briefing_work_record_check_list_template_responsibility.cs",
        "Description": "when update checklist responsibility",
        "WhenList": [
          "update checklist assignment"
        ],
        "ThenList": [
          "shold be success",
          "should raise work record check list assignment changed event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6201",
        "FileName": "when_update_briefing_work_record_check_list_template_responsibility.cs",
        "Description": "when reassign checklist responsibility",
        "WhenList": [
          "reassign to another one"
        ],
        "ThenList": [
          "should raise work record check list assignment changed event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6202",
    "FileName": "when_update_briefing_work_record_name.cs",
    "Description": "when update briefing work record name",
    "WhenList": [
      "change work record name"
    ],
    "ThenList": [
      "should raise work record detail changed event"
    ],
    "Children": []
  },
  {
    "$id": "6203",
    "FileName": "when_update_briefing_work_record_responsible_office.cs",
    "Description": "when update briefing work record responsible office",
    "WhenList": [
      "change work record responsible office"
    ],
    "ThenList": [
      "should raise only work record detail reponsible office changed event"
    ],
    "Children": []
  },
  {
    "$id": "6204",
    "FileName": "when_update_briefing_work_record_status.cs",
    "Description": "when update briefing work record status",
    "WhenList": [
      "change work record name"
    ],
    "ThenList": [
      "should raise work record status changed event"
    ],
    "Children": []
  },
  {
    "$id": "6205",
    "FileName": "when_update_briefing_work_record_task_assignments_responsibilities.cs",
    "Description": "when update briefing work record task assignments responsibilities",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6206",
        "FileName": "when_update_briefing_work_record_task_assignments_responsibilities.cs",
        "Description": "when update resposibility",
        "WhenList": [
          "update assignments resposibilities"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6207",
        "FileName": "when_update_briefing_work_record_task_assignments_responsibilities.cs",
        "Description": "when assign resposiblity in work pool",
        "WhenList": [
          "assign resposiblity"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6208",
        "FileName": "when_update_briefing_work_record_task_assignments_responsibilities.cs",
        "Description": "when update resposiblity in work balance",
        "WhenList": [
          "assign resposiblity"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6209",
    "FileName": "when_update_immigration_application.cs",
    "Description": "when update immigration application",
    "WhenList": [
      "update immigration document"
    ],
    "ThenList": [
      "should raise event"
    ],
    "Children": []
  },
  {
    "$id": "6210",
    "FileName": "when_update_immigration_work_record_assignments_resposiblities.cs",
    "Description": "when update immigration work record assignments resposiblities",
    "WhenList": [
      "update assignments resposibilities"
    ],
    "ThenList": [
      "should raise work record task assignments updated event"
    ],
    "Children": []
  },
  {
    "$id": "6211",
    "FileName": "when_update_immigration_work_record_name.cs",
    "Description": "when update immigration work record name",
    "WhenList": [
      "change work record name"
    ],
    "ThenList": [
      "should raise work record detail changed event"
    ],
    "Children": []
  },
  {
    "$id": "6212",
    "FileName": "when_update_immigration_work_record_responsible_office.cs",
    "Description": "when update immigration work record responsible office",
    "WhenList": [
      "change work record responsible office"
    ],
    "ThenList": [
      "should only raise work record reponsible office changed event"
    ],
    "Children": []
  },
  {
    "$id": "6213",
    "FileName": "when_update_immigration_work_record_service_specifics.cs",
    "Description": "when update immigration work record service specifics",
    "WhenList": [
      "change dependant"
    ],
    "ThenList": [
      "should raise work record detail changed event"
    ],
    "Children": []
  },
  {
    "$id": "6214",
    "FileName": "when_update_immigration_work_record_status.cs",
    "Description": "when update immigration work record status",
    "WhenList": [
      "change work record name"
    ],
    "ThenList": [
      "should raise work record status changed event"
    ],
    "Children": []
  },
  {
    "$id": "6215",
    "FileName": "when_update_missing_item.cs",
    "Description": "when update missing item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6216",
        "FileName": "when_update_missing_item.cs",
        "Description": "with tax work record",
        "WhenList": [
          "mark missing information item as received"
        ],
        "ThenList": [
          "should raise missing item mark as received event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6217",
        "FileName": "when_update_missing_item.cs",
        "Description": "with social security work record",
        "WhenList": [
          "mark missing information item as received"
        ],
        "ThenList": [
          "should raise missing item mark as received event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6218",
    "FileName": "when_update_missing_item.cs",
    "Description": "when batch update missing item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6219",
        "FileName": "when_update_missing_item.cs",
        "Description": "for tax work record",
        "WhenList": [
          "mark missing information item as received"
        ],
        "ThenList": [
          "should raise missing item mark as received event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6220",
        "FileName": "when_update_missing_item.cs",
        "Description": "for social security work record",
        "WhenList": [
          "mark missing information item as received"
        ],
        "ThenList": [
          "should raise missing item mark as received event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6221",
    "FileName": "when_update_social_security_work_record_assignments_resposibilities.cs",
    "Description": "when update social security work record assignments resposibilities",
    "WhenList": [
      "update assignments resposibilities"
    ],
    "ThenList": [
      "should raise work record task assignments updated event"
    ],
    "Children": []
  },
  {
    "$id": "6222",
    "FileName": "when_update_social_security_work_record_name.cs",
    "Description": "when update social security work record name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6223",
        "FileName": "when_update_social_security_work_record_name.cs",
        "Description": "update work record name",
        "WhenList": [
          "change work record name"
        ],
        "ThenList": [
          "should return ok",
          "should raise work record detail changed event"
        ],
        "Children": []
      },
      {
        "$id": "6224",
        "FileName": "when_update_social_security_work_record_name.cs",
        "Description": "not update work record name",
        "WhenList": [
          "not change anything"
        ],
        "ThenList": [
          "should return ok",
          "should not raise work record detail changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6225",
    "FileName": "when_update_social_security_work_record_responsible_office.cs",
    "Description": "when update social security work record responsible office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6226",
        "FileName": "when_update_social_security_work_record_responsible_office.cs",
        "Description": "update work record responsible office",
        "WhenList": [
          "change work record responsible office"
        ],
        "ThenList": [
          "should return ok",
          "should raise only work record responsible office changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6227",
    "FileName": "when_update_tax_equalization.cs",
    "Description": "when update tax equalization",
    "WhenList": [
      "update tax equalization"
    ],
    "ThenList": [
      "should raise tax equalization changed event"
    ],
    "Children": []
  },
  {
    "$id": "6228",
    "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
    "Description": "when update tax work record assignments resposibilities",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6229",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when update resposibility",
        "WhenList": [
          "update assignments resposibilities"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6230",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when update responsiblity after changing task template",
        "WhenList": [
          "change template and update task responsiblity"
        ],
        "ThenList": [
          "should return ok",
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6231",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when update office and responsiblity",
        "WhenList": [
          "update assignments office and resposibility"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6232",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when assign resposiblity in work pool",
        "WhenList": [
          "assign resposiblity"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6233",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when reassign resposiblity",
        "WhenList": [
          "reassign resposiblity to grace"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6234",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when reassign responsiblity to self",
        "WhenList": [
          "reassign resposiblity to grace"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6235",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when update resposiblity in work balance",
        "WhenList": [
          "assign resposiblity"
        ],
        "ThenList": [
          "should raise work record task assignments updated event"
        ],
        "Children": []
      },
      {
        "$id": "6236",
        "FileName": "when_update_tax_work_record_assignments_resposibilities.cs",
        "Description": "when update resposibility that have migrate event",
        "WhenList": [
          "update resposibility"
        ],
        "ThenList": [
          "should return correct task assignment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6237",
    "FileName": "when_update_tax_work_record_name.cs",
    "Description": "when update tax work record name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6238",
        "FileName": "when_update_tax_work_record_name.cs",
        "Description": "single update name",
        "WhenList": [
          "change work record name"
        ],
        "ThenList": [
          "should raise work record detail changed event"
        ],
        "Children": []
      },
      {
        "$id": "6239",
        "FileName": "when_update_tax_work_record_name.cs",
        "Description": "batch update name",
        "WhenList": [
          "change work record name"
        ],
        "ThenList": [
          "should return ok",
          "should raise work record detail changed event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6240",
    "FileName": "when_update_tax_work_record_responsible_office.cs",
    "Description": "when update tax work record responsible office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6241",
        "FileName": "when_update_tax_work_record_responsible_office.cs",
        "Description": "single update responsible office",
        "WhenList": [
          "change work record responsible office"
        ],
        "ThenList": [
          "should raise work record detail changed event with only office changed"
        ],
        "Children": []
      },
      {
        "$id": "6242",
        "FileName": "when_update_tax_work_record_responsible_office.cs",
        "Description": "when old detail changed has no responsible office",
        "WhenList": [
          "change work record name using old event"
        ],
        "ThenList": [
          "should raise work record detail changed event with old event"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6243",
    "FileName": "when_update_work_record_checklist_item.cs",
    "Description": "when update work record checklist item",
    "WhenList": [
      "when update checklist item"
    ],
    "ThenList": [
      "should raise work record task assiments created event"
    ],
    "Children": []
  },
  {
    "$id": "6244",
    "FileName": "when_update_work_record_check_list_template_responsibility.cs",
    "Description": "when update work record check list template responsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6245",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when update checklist item responsibility on work record detail page",
        "WhenList": [
          "update checklist assignment"
        ],
        "ThenList": [
          "should raise work record check list assignment changed event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6246",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when update checklist item responsible office on work record detail page",
        "WhenList": [
          "update checklist assignment"
        ],
        "ThenList": [
          "should raise work record check list assignment changed event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6247",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when reassign checklist responsiblity",
        "WhenList": [
          "reassign check list"
        ],
        "ThenList": [
          "should raise work record check list assignment changed event into eventstore"
        ],
        "Children": []
      },
      {
        "$id": "6248",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when reassign checklist item to himself",
        "WhenList": [
          "reassign check list"
        ],
        "ThenList": [
          "should not raise checklist assignment changed event"
        ],
        "Children": []
      },
      {
        "$id": "6249",
        "FileName": "when_update_work_record_check_list_template_responsibility.cs",
        "Description": "when inactive staff with completed tasks",
        "WhenList": [
          "inactivate staff"
        ],
        "ThenList": [
          "should not raise work record check list assignment changed event into eventstore"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6250",
    "FileName": "when_complete_last_task_on_assessment_milestone_for_immigration_application_work_record.cs",
    "Description": "when complete last task on assessment milestone for immigration application work record",
    "WhenList": [
      "when complete assessment last task"
    ],
    "ThenList": [
      "should return ok",
      "should work record mile stone in progress",
      "should only have one default task for primary and additional application service milestone about preparation",
      "should primary application current milestone is preparation",
      "should return empty tasks for in process"
    ],
    "Children": []
  },
  {
    "$id": "6251",
    "FileName": "when_complete_last_task_on_assessment_milestone_for_immigration_application_work_record.cs",
    "Description": "when complete last task on assessment milestone for undefined immigration application work record",
    "WhenList": [
      "when complete assessment last task"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6252",
    "FileName": "when_complete_last_task_on_assessment_milestone_for_immigration_application_work_record_with_missing_item.cs",
    "Description": "when complete last task on assessment milestone for immigration application work record with missing item",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6253",
        "FileName": "when_complete_last_task_on_assessment_milestone_for_immigration_application_work_record_with_missing_item.cs",
        "Description": "should block complete assessment milestone when there are open missing items on primary service",
        "WhenList": [
          "when complete assessment last task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6254",
        "FileName": "when_complete_last_task_on_assessment_milestone_for_immigration_application_work_record_with_missing_item.cs",
        "Description": "should block complete assessment milestone when there are open missing items on additional service",
        "WhenList": [
          "when complete assessment last task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6255",
        "FileName": "when_complete_last_task_on_assessment_milestone_for_immigration_application_work_record_with_missing_item.cs",
        "Description": "should not block complete assessment milestone when all missing items on additional service are closed",
        "WhenList": [
          "when complete assessment last task"
        ],
        "ThenList": [
          "should return OK"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6256",
    "FileName": "when_complete_last_task_on_immigration_application_issuance_service_milestone.cs",
    "Description": "when complete last task on immigration application issuance service milestone",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6257",
        "FileName": "when_complete_last_task_on_immigration_application_issuance_service_milestone.cs",
        "Description": "when work record with primary service only",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6258",
            "FileName": "when_complete_last_task_on_immigration_application_issuance_service_milestone.cs",
            "Description": "should not move service milestone forward and move record milestone to post work with uncompelete missing items",
            "WhenList": [
              "when complete issuance last task"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "6259",
            "FileName": "when_complete_last_task_on_immigration_application_issuance_service_milestone.cs",
            "Description": "should move service milestone forward and move work record milestone to post work",
            "WhenList": [
              "when complete issuance last task"
            ],
            "ThenList": [
              "should return ok",
              "should work record mile stone in post work",
              "should primary application current milestone is done",
              "should return tasks for work record post work milestone",
              "should set in preparation to be the latest date of all service milestones"
            ],
            "Children": []
          },
          {
            "$id": "6260",
            "FileName": "when_complete_last_task_on_immigration_application_issuance_service_milestone.cs",
            "Description": "when get application milestone with task",
            "WhenList": [
              "get application milestone with taks"
            ],
            "ThenList": [
              "should return ok",
              "should return preparation and submisting task with uri"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6261",
        "FileName": "when_complete_last_task_on_immigration_application_issuance_service_milestone.cs",
        "Description": "when work record with primary service and one additional service",
        "WhenList": [
          "when complete issuance last task"
        ],
        "ThenList": [
          "should return ok",
          "should set in preparation to be the latest date of all service milestones"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6262",
    "FileName": "when_complete_last_task_on_immigration_application_post_work_service_milestone.cs",
    "Description": "when complete last task on immigration application post work service milestone",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6263",
        "FileName": "when_complete_last_task_on_immigration_application_post_work_service_milestone.cs",
        "Description": "should not complete post work when organizer is not submitted yet",
        "WhenList": [
          "complete task in post work"
        ],
        "ThenList": [
          "should return forbidden",
          "should not move milestone"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6264",
    "FileName": "when_complete_last_task_on_immigration_application_submition_service_milestone.cs",
    "Description": "when complete last task on immigration application submition service milestone",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6265",
        "FileName": "when_complete_last_task_on_immigration_application_submition_service_milestone.cs",
        "Description": "when complete last task on immigration application submition service milestone without unreceived missing items",
        "WhenList": [
          "when complete submition last task"
        ],
        "ThenList": [
          "should return ok",
          "should work record mile stone in process",
          "should primary application current milestone is issuance",
          "should return empty tasks for in process"
        ],
        "Children": []
      },
      {
        "$id": "6266",
        "FileName": "when_complete_last_task_on_immigration_application_submition_service_milestone.cs",
        "Description": "when complete last task on immigration application submition service milestone with unreceived missing items",
        "WhenList": [
          "when complete submition last task"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6267",
    "FileName": "when_complete_last_task_on_preparation_for_primary_immigration_application_service_milestone.cs",
    "Description": "when complete last task on immigration application preparation service milestone",
    "WhenList": [
      "when complete preparation last task"
    ],
    "ThenList": [
      "should return ok",
      "should work record mile stone in process",
      "should primary application current milestone is submission",
      "should return empty tasks for in process"
    ],
    "Children": []
  },
  {
    "$id": "6268",
    "FileName": "when_complete_tasks_on_preparation_for_additional_application.cs",
    "Description": "when complete tasks on preparation for additional application",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6269",
        "FileName": "when_complete_tasks_on_preparation_for_additional_application.cs",
        "Description": "move servcie milestone from preparation to submission",
        "WhenList": [
          "when move additional application service milestone forwards"
        ],
        "ThenList": [
          "should addition application service milestone in submition",
          "should not show move milestone back link on preparation",
          "should record service milestone moved history"
        ],
        "Children": []
      },
      {
        "$id": "6270",
        "FileName": "when_complete_tasks_on_preparation_for_additional_application.cs",
        "Description": "move servcie milestone from submission to issuance",
        "WhenList": [
          "when move additional application service milestone forwards"
        ],
        "ThenList": [
          "should move additional application service milestone in issuance",
          "should not show move milestone back link on submission"
        ],
        "Children": []
      },
      {
        "$id": "6271",
        "FileName": "when_complete_tasks_on_preparation_for_additional_application.cs",
        "Description": "move servcie milestone from issuance",
        "WhenList": [
          "when move additional application service milestone forwards"
        ],
        "ThenList": [
          "should addition application service milestone in done",
          "should show move milestone back link on issuance",
          "should work record status in progress"
        ],
        "Children": []
      },
      {
        "$id": "6272",
        "FileName": "when_complete_tasks_on_preparation_for_additional_application.cs",
        "Description": "when move all applications to done",
        "WhenList": [
          "when complete all application service milestone"
        ],
        "ThenList": [
          "should work record milestone status in postwork",
          "should not show move milestone back link on issuance"
        ],
        "Children": []
      },
      {
        "$id": "6273",
        "FileName": "when_complete_tasks_on_preparation_for_additional_application.cs",
        "Description": "when remove additional application and primary application is done",
        "WhenList": [
          "remove additional application"
        ],
        "ThenList": [
          "should not show move milestone back link on issuance",
          "should make work record status to be postwork"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6274",
    "FileName": "when_start_immigration_questionnaire.cs",
    "Description": "when start immigration questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6275",
        "FileName": "when_start_immigration_questionnaire.cs",
        "Description": "when activate questionnaire",
        "WhenList": [
          "activate questionnaire"
        ],
        "ThenList": [
          "should not has first reminder link",
          "should not has final reminder link"
        ],
        "Children": []
      },
      {
        "$id": "6276",
        "FileName": "when_start_immigration_questionnaire.cs",
        "Description": "when activate by staff in subscribed office",
        "WhenList": [
          "activate questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should create new subscription"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6277",
    "FileName": "when_active_immigration_questionnaire_by_checklist_responsiblity_uac.cs",
    "Description": "when active immigration questionnaire by checklist responsiblity uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6278",
        "FileName": "when_active_immigration_questionnaire_by_checklist_responsiblity_uac.cs",
        "Description": "when active by id",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should be ok"
        ],
        "Children": []
      },
      {
        "$id": "6279",
        "FileName": "when_active_immigration_questionnaire_by_checklist_responsiblity_uac.cs",
        "Description": "when active by id after lily assign to check list",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should be ok",
          "should can only see questionnaire info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6280",
    "FileName": "when_get_immigration_questionnaire_by_work_record_by_check_list_responsiblity.cs",
    "Description": "when get immigration questionnaire by work record by check list responsiblity",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6281",
        "FileName": "when_get_immigration_questionnaire_by_work_record_by_check_list_responsiblity.cs",
        "Description": "when get by id",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should can only see questionnaire info"
        ],
        "Children": []
      },
      {
        "$id": "6282",
        "FileName": "when_get_immigration_questionnaire_by_work_record_by_check_list_responsiblity.cs",
        "Description": "when get by id after lily assign to check list",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should can only see questionnaire info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6283",
    "FileName": "when_submit_immigration_questionnaire_by_check_list_responsiblity.cs",
    "Description": "when submit immigration questionnaire by check list responsiblity",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6284",
        "FileName": "when_submit_immigration_questionnaire_by_check_list_responsiblity.cs",
        "Description": "when submit by id",
        "WhenList": [
          "submit questionnaire"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6285",
        "FileName": "when_submit_immigration_questionnaire_by_check_list_responsiblity.cs",
        "Description": "when submit by id after lily assign to check list",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should be ok",
          "should can only see questionnaire info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6286",
    "FileName": "when_submit_restart_questionnaire_by_check_list_responsiblity_uac.cs",
    "Description": "when submit restart questionnaire by check list responsiblity uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6287",
        "FileName": "when_submit_restart_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when restart questionnaire by sofia who is not check list responsibility",
        "WhenList": [
          "submit questionnaire"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6288",
        "FileName": "when_submit_restart_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when not contain restart and submit link",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should be ok",
          "should can only see questionnaire info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6289",
    "FileName": "when_update_organizer_with_valid_request__by_check_list_responsiblity_uac.cs",
    "Description": "when update organizer with valid request by check list responsiblity uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6290",
        "FileName": "when_update_organizer_with_valid_request__by_check_list_responsiblity_uac.cs",
        "Description": "when update by id after lily assign to check list",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return OK",
          "should update organizer"
        ],
        "Children": []
      },
      {
        "$id": "6291",
        "FileName": "when_update_organizer_with_valid_request__by_check_list_responsiblity_uac.cs",
        "Description": "when no assign to check list item",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return OK"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6292",
    "FileName": "when_activate_immigration_questionnaire.cs",
    "Description": "when activate immigration questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6293",
        "FileName": "when_activate_immigration_questionnaire.cs",
        "Description": "when activate immigration questionnaire given account created in my visas",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should start activate questionnaire process of given work record",
          "should set sender as questionnaire contact mail box"
        ],
        "Children": []
      },
      {
        "$id": "6294",
        "FileName": "when_activate_immigration_questionnaire.cs",
        "Description": "when activate immigration questionnaire given account inactive in my visas",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should set sender as questionnaire contact mail box"
        ],
        "Children": []
      },
      {
        "$id": "6295",
        "FileName": "when_activate_immigration_questionnaire.cs",
        "Description": "when activate immigration questionnaire given account active in my visas",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should start activate questionnaire process of given work record",
          "should set sender as questionnaire contact mail box"
        ],
        "Children": []
      },
      {
        "$id": "6296",
        "FileName": "when_activate_immigration_questionnaire.cs",
        "Description": "when activate immigration questionnaire whose questionnaire contact office has team mailbox but has no display name",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should send email from paris team mailbox address in the name of immigration sofia"
        ],
        "Children": []
      },
      {
        "$id": "6297",
        "FileName": "when_activate_immigration_questionnaire.cs",
        "Description": "when activate immigration questionnaire whose questionnaire contact office has both team mailbox and display name",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send email from paris team mailbox address in the name of paris team display name"
        ],
        "Children": []
      },
      {
        "$id": "6298",
        "FileName": "when_activate_immigration_questionnaire.cs",
        "Description": "when activate immigration questionnaire whose questionnaire contact office has no team mailbox nor display name",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send email from immi sofia email address in the name of immi sofia"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6299",
    "FileName": "when_batch_activate_immigration_return_questionnaire.cs",
    "Description": "when batch activate immigration return questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6300",
        "FileName": "when_batch_activate_immigration_return_questionnaire.cs",
        "Description": "when immigration work record is newly created",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return accepted",
          "should activate work records"
        ],
        "Children": []
      },
      {
        "$id": "6301",
        "FileName": "when_batch_activate_immigration_return_questionnaire.cs",
        "Description": "when assignee has three immigration workrecords with different team mailbox settings",
        "WhenList": [
          "batch activate questionnaire"
        ],
        "ThenList": [
          "should return accepted",
          "should send three emails with correct sender info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6302",
    "FileName": "when_batch_activate_immigration_with_invalid_service_status_return_questionnaire.cs",
    "Description": "when batch activate immigration with invalid service status return questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6303",
        "FileName": "when_batch_activate_immigration_with_invalid_service_status_return_questionnaire.cs",
        "Description": "when immigration work record is newly created",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return accept",
          "should not change service status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6304",
    "FileName": "when_get_immigration_organizer_by_workrecord_id.cs",
    "Description": "when get immigration organizer by workrecord id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6305",
        "FileName": "when_get_immigration_organizer_by_workrecord_id.cs",
        "Description": "when organizer created",
        "WhenList": [
          "when get organizer by work record id"
        ],
        "ThenList": [
          "should return OK",
          "should return correct organizer"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6306",
    "FileName": "when_get_immigration_organizer_by_workrecord_id_after_resend_questionnaire.cs",
    "Description": "when get immigration organizer by workrecord id after resend questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6307",
        "FileName": "when_get_immigration_organizer_by_workrecord_id_after_resend_questionnaire.cs",
        "Description": "when organizer activated",
        "WhenList": [
          "when get organizer by work record id"
        ],
        "ThenList": [
          "should return ok",
          "should not return resend links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6308",
    "FileName": "when_restart_immigration_questionnaire.cs",
    "Description": "when restart immigration questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6309",
        "FileName": "when_restart_immigration_questionnaire.cs",
        "Description": "when restart submitted questionnaire",
        "WhenList": [
          "when restart"
        ],
        "ThenList": [
          "should return ok",
          "should update questionnaire status to in process",
          "should not update work milestone"
        ],
        "Children": []
      },
      {
        "$id": "6310",
        "FileName": "when_restart_immigration_questionnaire.cs",
        "Description": "when restart unsubmitted questionnaire",
        "WhenList": [
          "when restart"
        ],
        "ThenList": [
          "should return forbidden",
          "should not contain restart organizer link when get work record"
        ],
        "Children": []
      },
      {
        "$id": "6311",
        "FileName": "when_restart_immigration_questionnaire.cs",
        "Description": "when work record is done",
        "WhenList": [
          "when restart"
        ],
        "ThenList": [
          "should return forbidden",
          "should not contain restart organizer link when get work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6312",
    "FileName": "when_start_immigration_questionnaire_by_staff.cs",
    "Description": "when start immigration questionnaire by staff",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6313",
    "FileName": "when_start_immigration_questionnaire_in_my_visas.cs",
    "Description": "when start immigration questionnaire in my visas",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should update succeed"
    ],
    "Children": []
  },
  {
    "$id": "6314",
    "FileName": "when_submit_immigration_questionnaire_in_myVisas.cs",
    "Description": "when submit immigration questionnaire in my visas",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should update succeed",
      "should not chanage work milestone status"
    ],
    "Children": []
  },
  {
    "$id": "6315",
    "FileName": "when_submit_unstart_immigration_questionnaire_by_staff.cs",
    "Description": "when submit unstart immigration questionnaire by staff",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should update succeed"
    ],
    "Children": []
  },
  {
    "$id": "6316",
    "FileName": "when_update_immigration_organzier.cs",
    "Description": "when update immigration organzier",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6317",
        "FileName": "when_update_immigration_organzier.cs",
        "Description": "when update organizer with valid request",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return OK",
          "should update organizer"
        ],
        "Children": []
      },
      {
        "$id": "6318",
        "FileName": "when_update_immigration_organzier.cs",
        "Description": "when update organizer with contact office has display name",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return OK",
          "should update organizer"
        ],
        "Children": []
      },
      {
        "$id": "6319",
        "FileName": "when_update_immigration_organzier.cs",
        "Description": "when update organizer with invalid id",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "6320",
        "FileName": "when_update_immigration_organzier.cs",
        "Description": "when update organizer with invalid due date",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6321",
        "FileName": "when_update_immigration_organzier.cs",
        "Description": "when update organizer with not exist staff",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6322",
        "FileName": "when_update_immigration_organzier.cs",
        "Description": "when update submited organizer with valid request",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should update contact and not update due date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6323",
    "FileName": "when_get_immigration_service_specifics.cs",
    "Description": "when get immigration service specifics",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6324",
        "FileName": "when_get_immigration_service_specifics.cs",
        "Description": "when get immigration work record by staff in subscrib office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain service specifics link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6325",
    "FileName": "when_get_immigration_workrecord_with_organizer_by_id.cs",
    "Description": "when get immigration workrecord with organizer by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6326",
        "FileName": "when_get_immigration_workrecord_with_organizer_by_id.cs",
        "Description": "when get notified immigration return work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6327",
            "FileName": "when_get_immigration_workrecord_with_organizer_by_id.cs",
            "Description": "when get immigration workrecord by no exist id",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 404 as status code"
            ],
            "Children": []
          },
          {
            "$id": "6328",
            "FileName": "when_get_immigration_workrecord_with_organizer_by_id.cs",
            "Description": "when get immigration workrecord by exist id",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200 okay as status code",
              "should succeed",
              "should return work record milestone type as work record milestone",
              "should return questionnaire",
              "should no have questionnaire activation link",
              "should have additional services link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6329",
        "FileName": "when_get_immigration_workrecord_with_organizer_by_id.cs",
        "Description": "when get immigration return work record whose questioinnaire contact office with team mail box",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 okay as status code",
          "should get questionnaire contact info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6330",
    "FileName": "when_get_immigration_workrecord_with_restricted_info_by_id.cs",
    "Description": "when get immigration workrecord with restricted info by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6331",
        "FileName": "when_get_immigration_workrecord_with_restricted_info_by_id.cs",
        "Description": "when get notified immigration return work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6332",
            "FileName": "when_get_immigration_workrecord_with_restricted_info_by_id.cs",
            "Description": "only in work office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should not contains restricted info"
            ],
            "Children": []
          },
          {
            "$id": "6333",
            "FileName": "when_get_immigration_workrecord_with_restricted_info_by_id.cs",
            "Description": "assign staff to check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should contains restricted info"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6334",
    "FileName": "when_get_immigration_workrecord_with_staff_assigned_to_checklist.cs",
    "Description": "when get immigration workrecord with staff assigned to checklist",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6335",
        "FileName": "when_get_immigration_workrecord_with_staff_assigned_to_checklist.cs",
        "Description": "when assigned to checklist",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not contains public link"
        ],
        "Children": []
      },
      {
        "$id": "6336",
        "FileName": "when_get_immigration_workrecord_with_staff_assigned_to_checklist.cs",
        "Description": "when not assigned to check list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should contains public link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6337",
    "FileName": "when_get_immigration_work_record.cs",
    "Description": "when get immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6338",
        "FileName": "when_get_immigration_work_record.cs",
        "Description": "when get by id as staff from responsible office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should get move milestone back link",
          "should get missing item link"
        ],
        "Children": []
      },
      {
        "$id": "6339",
        "FileName": "when_get_immigration_work_record.cs",
        "Description": "when get by id as nobody",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6340",
        "FileName": "when_get_immigration_work_record.cs",
        "Description": "when get by id as pwc contact",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should not get move milestone back link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6341",
    "FileName": "when_get_tasks_for_immigration_application_work_records.cs",
    "Description": "when get tasks for immigration application work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6342",
        "FileName": "when_get_tasks_for_immigration_application_work_records.cs",
        "Description": "when coordination office staff get milestone with tasks",
        "WhenList": [
          "when get applicaiton with milestone and tasks"
        ],
        "ThenList": [
          "should enable to update task"
        ],
        "Children": []
      },
      {
        "$id": "6343",
        "FileName": "when_get_tasks_for_immigration_application_work_records.cs",
        "Description": "when responsible office staff get milestone with tasks",
        "WhenList": [
          "when get applicaiton with milestone and tasks"
        ],
        "ThenList": [
          "should enable to update task"
        ],
        "Children": []
      },
      {
        "$id": "6344",
        "FileName": "when_get_tasks_for_immigration_application_work_records.cs",
        "Description": "when delegate office staff get milestone with tasks",
        "WhenList": [
          "when get applicaiton with milestone and tasks"
        ],
        "ThenList": [
          "should unable to update task"
        ],
        "Children": []
      },
      {
        "$id": "6345",
        "FileName": "when_get_tasks_for_immigration_application_work_records.cs",
        "Description": "when questionnaire contact staff get milestone with tasks",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6346",
            "FileName": "when_get_tasks_for_immigration_application_work_records.cs",
            "Description": "should not have access to move milestone",
            "WhenList": [
              "when get applicaiton with milestone and tasks"
            ],
            "ThenList": [
              "should unable to update task"
            ],
            "Children": []
          },
          {
            "$id": "6347",
            "FileName": "when_get_tasks_for_immigration_application_work_records.cs",
            "Description": "when questionnaire contact assign to task responsiblity",
            "WhenList": [
              "when get applicaiton with milestone and tasks"
            ],
            "ThenList": [
              "should enable to update task"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6348",
    "FileName": "when_get_immigration_application_work_record_by_id.cs",
    "Description": "when get immigration application work record by id",
    "WhenList": [],
    "ThenList": [
      "should return tasks for other milestone except inprocess",
      "should not return referencenumber effectivedate expirydate"
    ],
    "Children": [
      {
        "$id": "6349",
        "FileName": "when_get_immigration_application_work_record_by_id.cs",
        "Description": "when get immigration application work record by exist id without engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return engagement uri with null engagement",
          "should return work record basic information with four milestones",
          "should not return tasks for in process milestone"
        ],
        "Children": []
      },
      {
        "$id": "6350",
        "FileName": "when_get_immigration_application_work_record_by_id.cs",
        "Description": "when get immigration application work record by exist id with engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record information with engagement kayla first engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6351",
    "FileName": "when_get_immigration_application_work_record_milestone_with_default_tasks_by_work_record_id.cs",
    "Description": "when get immigration application work record milestone with default tasks by work record id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6352",
        "FileName": "when_get_immigration_application_work_record_milestone_with_default_tasks_by_work_record_id.cs",
        "Description": "when get work record with primary application",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return four work record milestones with default tasks",
          "should return three work record primary application milestones with default tasks",
          "should return primary service info"
        ],
        "Children": []
      },
      {
        "$id": "6353",
        "FileName": "when_get_immigration_application_work_record_milestone_with_default_tasks_by_work_record_id.cs",
        "Description": "when get immigration application work record with additional applications",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return additional applications"
        ],
        "Children": []
      },
      {
        "$id": "6354",
        "FileName": "when_get_immigration_application_work_record_milestone_with_default_tasks_by_work_record_id.cs",
        "Description": "when get work record primary application with task responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record milestones with task assignments",
          "should return work record primary application milestones with task assignments"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6355",
    "FileName": "when_get_immigration_application_work_record_milestone_with_tasks_build_from_task_template.cs",
    "Description": "when get immigration application work record milestone with tasks build from task template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6356",
        "FileName": "when_get_immigration_application_work_record_milestone_with_tasks_build_from_task_template.cs",
        "Description": "when get work record with primary application",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return four work record milestones with non default tasks",
          "should return three work record primary application milestones with non default tasks",
          "should return three work record additional application milestones with default tasks"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6357",
    "FileName": "when_get_immigration_work_record_by_id.cs",
    "Description": "when get immigration work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6358",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "when get immigration work record by exist id without engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record information with engagement null",
          "should return work record information with engagement uri kayla first engagement",
          "should return work record basic information"
        ],
        "Children": []
      },
      {
        "$id": "6359",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "when get immigration work record by exist id with engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record information with engagement kayla first engagement"
        ],
        "Children": []
      },
      {
        "$id": "6360",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "when work record type is immigration application",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get update immigration application work record service link",
          "should return additional service uri"
        ],
        "Children": []
      },
      {
        "$id": "6361",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "when work record type is not immigration application",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should get update immigration application work record service link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6362",
    "FileName": "when_get_immigration_work_record_by_id_with_restricted_assignee.cs",
    "Description": "when get immigration work record by id with restricted assignee",
    "WhenList": [
      "get immigration work record"
    ],
    "ThenList": [
      "should 400"
    ],
    "Children": []
  },
  {
    "$id": "6363",
    "FileName": "when_get_immigration_work_record_by_id_with_restricted_assignee.cs",
    "Description": "when get immigration work record by id with restricted engagement",
    "WhenList": [
      "get immigration work record"
    ],
    "ThenList": [
      "should 400"
    ],
    "Children": []
  },
  {
    "$id": "6364",
    "FileName": "when_get_immigration_work_record_by_SelfBasic_request.cs",
    "Description": "when get immigration work record by self basic request",
    "WhenList": [
      "get basic data of work record"
    ],
    "ThenList": [
      "should return ok",
      "should return basic work record data"
    ],
    "Children": []
  },
  {
    "$id": "6365",
    "FileName": "when_get_immigration_work_record_of_inactive_assignee.cs",
    "Description": "when get immigration work record of inactive assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6366",
        "FileName": "when_get_immigration_work_record_of_inactive_assignee.cs",
        "Description": "when get immigration work record by general staff",
        "WhenList": [
          "get immigration work record"
        ],
        "ThenList": [
          "should return 200",
          "should get no action links"
        ],
        "Children": []
      },
      {
        "$id": "6367",
        "FileName": "when_get_immigration_work_record_of_inactive_assignee.cs",
        "Description": "when get immigration work record by global admin",
        "WhenList": [
          "get immigration work record"
        ],
        "ThenList": [
          "should return 200",
          "should get no action links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6368",
    "FileName": "when_get_immigration_work_record_with_issue.cs",
    "Description": "when get immigration work record with issue",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6369",
        "FileName": "when_get_immigration_work_record_with_issue.cs",
        "Description": "when get cancelled immi work record",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should succeed",
          "should not show service specific link",
          "should not contain engagement custom fields link"
        ],
        "Children": []
      },
      {
        "$id": "6370",
        "FileName": "when_get_immigration_work_record_with_issue.cs",
        "Description": "when get on hold immi work record",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should succeed",
          "should not show service specific link",
          "should not contain engagement custom fields link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6371",
    "FileName": "when_get_immigration_work_record_with_missing_items_notification_link.cs",
    "Description": "when get immigration work record notification link",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6372",
        "FileName": "when_get_immigration_work_record_with_missing_items_notification_link.cs",
        "Description": "when have missing item need send reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [],
        "Children": []
      },
      {
        "$id": "6373",
        "FileName": "when_get_immigration_work_record_with_missing_items_notification_link.cs",
        "Description": "when no missing item need send reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not return missing item notify links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6374",
    "FileName": "when_get_immigration_work_record_with_missing_item_by_id.cs",
    "Description": "when get immigration work record with missing item by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6375",
        "FileName": "when_get_immigration_work_record_with_missing_item_by_id.cs",
        "Description": "when get immigration work record by existing id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record information with a missing item received status changed history item",
          "should return work record information with a missing item created history item",
          "should return missing items infomation"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6376",
    "FileName": "when_get_immigration_work_record_with_organizer.cs",
    "Description": "when get immigration work record with organizer",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6377",
        "FileName": "when_get_immigration_work_record_with_organizer.cs",
        "Description": "when get immigration work record of efile country and question set name",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should return 200",
          "should get false for do not has efile id",
          "should return question set name"
        ],
        "Children": []
      },
      {
        "$id": "6378",
        "FileName": "when_get_immigration_work_record_with_organizer.cs",
        "Description": "when get immigration work record according to current user access",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6379",
            "FileName": "when_get_immigration_work_record_with_organizer.cs",
            "Description": "when get by staff in subscribed office",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should return ok",
              "should return with send questionnaire links and without submit questionnaire link"
            ],
            "Children": []
          },
          {
            "$id": "6380",
            "FileName": "when_get_immigration_work_record_with_organizer.cs",
            "Description": "when get immigration for global admin",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should not return submit questionnaire link even for global amdin"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6381",
    "FileName": "when_get_immigration_work_record_with_organizer_by_vicent.cs",
    "Description": "when get immigration work record with organizer by vicent",
    "WhenList": [
      "get immi work record"
    ],
    "ThenList": [
      "should return 200",
      "should return with send questionnaire links and without submit questionnaire link"
    ],
    "Children": []
  },
  {
    "$id": "6382",
    "FileName": "when_assign_responsibility_to_service_task_assignment.cs",
    "Description": "when assign responsibility to service task assignment",
    "WhenList": [
      "when assign work assignment"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "6383",
    "FileName": "when_update_responsibility_for_immigration_application_work_record.cs",
    "Description": "when update responsibility for immigration application work record",
    "WhenList": [
      "when assign work assignment"
    ],
    "ThenList": [
      "should return ok",
      "should change responsibility for work record"
    ],
    "Children": []
  },
  {
    "$id": "6384",
    "FileName": "when_batch_add_missing_information.cs",
    "Description": "when batch add missing information from pw c to tax return work record",
    "WhenList": [
      "send batch add request"
    ],
    "ThenList": [
      "should return OK",
      "should add missing information"
    ],
    "Children": []
  },
  {
    "$id": "6385",
    "FileName": "when_batch_add_missing_information.cs",
    "Description": "when batch add missing information from client to tax return and other compliance work records",
    "WhenList": [
      "send batch add request"
    ],
    "ThenList": [
      "should return OK",
      "should add missing information"
    ],
    "Children": []
  },
  {
    "$id": "6386",
    "FileName": "when_batch_add_missing_information.cs",
    "Description": "when batch add missing infomation form client to social security work record",
    "WhenList": [
      "send batch add request"
    ],
    "ThenList": [
      "should return OK",
      "should add missing information"
    ],
    "Children": []
  },
  {
    "$id": "6387",
    "FileName": "when_batch_add_missing_information_as_staff_not_in_subscribed_office.cs",
    "Description": "when batch add missing information as staff not in subscribed office",
    "WhenList": [
      "send batch add request"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6388",
    "FileName": "when_batch_add_missing_information_with_invalid_request.cs",
    "Description": "when batch add missing information with invalid description",
    "WhenList": [
      "send batch add request"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "6389",
    "FileName": "when_batch_add_missing_information_with_invalid_request.cs",
    "Description": "when batch add missing information from assignee",
    "WhenList": [
      "send batch add request"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "6390",
    "FileName": "when_batch_add_missing_information_with_invalid_request.cs",
    "Description": "when batch add missing information with invalid date",
    "WhenList": [
      "send batch add request"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "6391",
    "FileName": "when_search_exclude_some_work_records.cs",
    "Description": "when search exclude some work records with inactive assignee",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should exclude work records of inactive or deleted assignees"
    ],
    "Children": []
  },
  {
    "$id": "6392",
    "FileName": "when_search_exclude_some_work_records.cs",
    "Description": "when exclude tax work records passed delivered milestone",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should exclude tax return work records that passed delivered milestone"
    ],
    "Children": []
  },
  {
    "$id": "6393",
    "FileName": "when_search_exclude_some_work_records.cs",
    "Description": "when exclude social security records passed submitted to authorities milestone",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should exclude social security work records that has passed submitted to authorities milestone"
    ],
    "Children": []
  },
  {
    "$id": "6394",
    "FileName": "when_search_tax_work_record_with_invalid_request.cs",
    "Description": "when search tax work record with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6395",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid practice type",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6396",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid engagement",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6397",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid work record type",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6398",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid responsible office",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6399",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid country",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6400",
    "FileName": "when_search_tax_work_record_with_invalid_request.cs",
    "Description": "when search social security work record with invalid request",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "6401",
    "FileName": "when_search_without_access.cs",
    "Description": "when search without access",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6402",
        "FileName": "when_search_without_access.cs",
        "Description": "when practice type is NOT matched",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6403",
        "FileName": "when_search_without_access.cs",
        "Description": "when engagement offiecs are NOT matched",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6404",
    "FileName": "when_search_work_record.cs",
    "Description": "when search tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6405",
        "FileName": "when_search_work_record.cs",
        "Description": "when work record type is tax return",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specified engagement"
        ],
        "Children": []
      },
      {
        "$id": "6406",
        "FileName": "when_search_work_record.cs",
        "Description": "when work record type is other compliance",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specified engagement"
        ],
        "Children": []
      },
      {
        "$id": "6407",
        "FileName": "when_search_work_record.cs",
        "Description": "when work record type is any",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specified engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6408",
    "FileName": "when_search_work_record.cs",
    "Description": "when search social security work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6409",
        "FileName": "when_search_work_record.cs",
        "Description": "when search coc",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specific engagement"
        ],
        "Children": []
      },
      {
        "$id": "6410",
        "FileName": "when_search_work_record.cs",
        "Description": "when search other compliance",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specific engagement"
        ],
        "Children": []
      },
      {
        "$id": "6411",
        "FileName": "when_search_work_record.cs",
        "Description": "when work record type is any",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return work record of assignees under specific engagement"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6412",
    "FileName": "when_search_work_record.cs",
    "Description": "when search work record with responsible office and country",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should return work record of assignees under specified engagement"
    ],
    "Children": []
  },
  {
    "$id": "6413",
    "FileName": "when_search_work_record.cs",
    "Description": "when search work record with tax year",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should return work record of assignees under specified engagement"
    ],
    "Children": []
  },
  {
    "$id": "6414",
    "FileName": "when_search_work_record.cs",
    "Description": "when search multiple work record from multiple assignees",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should sort work records by assignees name alphabetically"
    ],
    "Children": []
  },
  {
    "$id": "6415",
    "FileName": "when_search_work_record.cs",
    "Description": "when search work records with issue",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should include work record with issues"
    ],
    "Children": []
  },
  {
    "$id": "6416",
    "FileName": "when_search_work_record.cs",
    "Description": "when engagement is inactive",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should return work record of assignees under specified engagement"
    ],
    "Children": []
  },
  {
    "$id": "6417",
    "FileName": "when_search_work_record.cs",
    "Description": "when search tax return work records that has no filing requirement",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should include tax return work records that has no filing requirement"
    ],
    "Children": []
  },
  {
    "$id": "6418",
    "FileName": "when_search_work_record_from_restricted_assignee.cs",
    "Description": "when search work record from restricted assignee",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should return work record of assignees under specified engagement"
    ],
    "Children": []
  },
  {
    "$id": "6419",
    "FileName": "when_batch_update_missing_items.cs",
    "Description": "when batch update missing items",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6420",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when date received is today",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return ok",
          "should mark missing items as received",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "6421",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when date received is tody and batch update 2 missing items",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return ok",
          "should mark missing items as received",
          "should save history"
        ],
        "Children": []
      },
      {
        "$id": "6422",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when date received is before today",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return ok",
          "should mark missing items as received"
        ],
        "Children": []
      },
      {
        "$id": "6423",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when date received is after today",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6424",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when date received is before since",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6425",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when date received is null",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6426",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when from assignee",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6427",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when from client or pwc",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return ok",
          "should mark missing items as received"
        ],
        "Children": []
      },
      {
        "$id": "6428",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when current user not belong to workrecord engagement working offices",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6429",
        "FileName": "when_batch_update_missing_items.cs",
        "Description": "when work record has issues",
        "WhenList": [
          "batch update missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6430",
    "FileName": "when_quick_search_descrption.cs",
    "Description": "when quick search descrption",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6431",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6432",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description without engagement",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6433",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default but not from assignee",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6434",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and any work record type",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6435",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and other work record type",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6436",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and tax return work record type",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6437",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by social security practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6438",
            "FileName": "when_quick_search_descrption.cs",
            "Description": "when search by work record type of social security coc",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return missing item description"
            ],
            "Children": []
          },
          {
            "$id": "6439",
            "FileName": "when_quick_search_descrption.cs",
            "Description": "when search by work record type of other compliance",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return missing item description"
            ],
            "Children": []
          },
          {
            "$id": "6440",
            "FileName": "when_quick_search_descrption.cs",
            "Description": "when search by work record type of any",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return OK",
              "should return missing item description"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6441",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by not access practice type",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6442",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and responsible office",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6443",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and country",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6444",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and ending year",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6445",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and description",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6446",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and description with top",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6447",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and description with sort",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6448",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "when find description by default and distinct description",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6449",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "should not find description when assignee is deleted or inactive",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6450",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "should not find description when work record is no filing requirement",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6451",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "should not find description when work record has issues",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6452",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "should not search description when tax work records passed delivered milestone",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      },
      {
        "$id": "6453",
        "FileName": "when_quick_search_descrption.cs",
        "Description": "should not search description when social security work records passed submitted to authorities milestone",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should return missing item description"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6454",
    "FileName": "when_search_exclude_some_work_records.cs",
    "Description": "when search missing item exclude some work records with inactive assignee",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should exclude work records of inactive or deleted assignees"
    ],
    "Children": []
  },
  {
    "$id": "6455",
    "FileName": "when_search_exclude_some_work_records.cs",
    "Description": "when search missing item exclude tax work records passed delivered milestone",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should exclude tax return work records that passed delivered milestone"
    ],
    "Children": []
  },
  {
    "$id": "6456",
    "FileName": "when_search_exclude_some_work_records.cs",
    "Description": "when search missing item exclude social security records passed submitted to authorities milestone",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should exclude social security work records that has passed submitted to authorities milestone"
    ],
    "Children": []
  },
  {
    "$id": "6457",
    "FileName": "when_search_exclude_some_work_records.cs",
    "Description": "when search missing item exclude have been marked as received",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should exclude have marked work record"
    ],
    "Children": []
  },
  {
    "$id": "6458",
    "FileName": "when_search_exclude_some_work_records.cs",
    "Description": "when search missing item exclude from assignee",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should exclude have marked work record"
    ],
    "Children": []
  },
  {
    "$id": "6459",
    "FileName": "when_search_exclude_some_work_records.cs",
    "Description": "when search missing item include from pwc or client",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should exclude have marked work record"
    ],
    "Children": []
  },
  {
    "$id": "6460",
    "FileName": "when_search_missing_item.cs",
    "Description": "when search work record for batch mark missing items",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6461",
        "FileName": "when_search_missing_item.cs",
        "Description": "when work record type is tax return",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6462",
            "FileName": "when_search_missing_item.cs",
            "Description": "when both assignee and engagement are active",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "6463",
            "FileName": "when_search_missing_item.cs",
            "Description": "when engagement is inactive",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should NOT return work record of assignees under inactive engagement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6464",
        "FileName": "when_search_missing_item.cs",
        "Description": "when practice type is social security",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6465",
            "FileName": "when_search_missing_item.cs",
            "Description": "when both assignee and engagement are active and work record type coc",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "6466",
            "FileName": "when_search_missing_item.cs",
            "Description": "when search missing items for other compliance work record",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "6467",
            "FileName": "when_search_missing_item.cs",
            "Description": "when search missing items for any work record",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          },
          {
            "$id": "6468",
            "FileName": "when_search_missing_item.cs",
            "Description": "when engagement is inactive",
            "WhenList": [
              "send search request"
            ],
            "ThenList": [
              "should return work record of assignees under specified engagement"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6469",
        "FileName": "when_search_missing_item.cs",
        "Description": "when search multiple missing item from multiple assignees",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should sort work records by assignees name alphabetically"
        ],
        "Children": []
      },
      {
        "$id": "6470",
        "FileName": "when_search_missing_item.cs",
        "Description": "should search description when staff in subscribe offices but not in responsible office",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return OK",
          "should search out work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6471",
    "FileName": "when_search_missing_item.cs",
    "Description": "when search missing item with issued work records",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should include work record with issues"
    ],
    "Children": []
  },
  {
    "$id": "6472",
    "FileName": "when_search_missing_item.cs",
    "Description": "when search missing item with tax return work records that has no filing requirement",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should include tax return work records that has no filing requirement"
    ],
    "Children": []
  },
  {
    "$id": "6473",
    "FileName": "when_search_tax_work_record_with_invalid_request.cs",
    "Description": "when search missing item tax work record with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6474",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid practice type",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6475",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid engagement",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6476",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid work record type",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6477",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid responsible office",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6478",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with invalid country",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6479",
        "FileName": "when_search_tax_work_record_with_invalid_request.cs",
        "Description": "when search with null item id",
        "WhenList": [
          "send search request"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6480",
    "FileName": "when_search_tax_work_record_with_invalid_request.cs",
    "Description": "when search missing item social security work record with invalid request",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "6481",
    "FileName": "when_search_without_access.cs",
    "Description": "when search missing item without practice type access",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6482",
    "FileName": "when_search_without_access.cs",
    "Description": "when search missing item without subscription offices access",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6483",
    "FileName": "when_search_work_record_from_restricted_assignee.cs",
    "Description": "when search missing item but work record from restricted assignee",
    "WhenList": [
      "send search request"
    ],
    "ThenList": [
      "should return OK",
      "should return work record of assignees under specified engagement"
    ],
    "Children": []
  },
  {
    "$id": "6484",
    "FileName": "when_add_missing_items_for_immigration_work_record.cs",
    "Description": "when add missing items for immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6485",
        "FileName": "when_add_missing_items_for_immigration_work_record.cs",
        "Description": "when add missing items for immigration work record in progress",
        "WhenList": [
          "add missing item"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should create the missing item"
        ],
        "Children": []
      },
      {
        "$id": "6486",
        "FileName": "when_add_missing_items_for_immigration_work_record.cs",
        "Description": "when add missing items for immigration work record in progress without immigration application",
        "WhenList": [
          "add missing item without immigration application"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should create the missing item"
        ],
        "Children": []
      },
      {
        "$id": "6487",
        "FileName": "when_add_missing_items_for_immigration_work_record.cs",
        "Description": "when add missing items for immgration work record in post work",
        "WhenList": [
          "add missing item"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6488",
        "FileName": "when_add_missing_items_for_immigration_work_record.cs",
        "Description": "when add missing item with date identifier later than today",
        "WhenList": [
          "add missing item"
        ],
        "ThenList": [
          "should be bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6489",
    "FileName": "when_add_missing_items_for_social_security_work_record.cs",
    "Description": "when add missing items for social security work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6490",
        "FileName": "when_add_missing_items_for_social_security_work_record.cs",
        "Description": "when add missing items not from pwc",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should create the missing item",
          "should add an history entry for each newly created missing item",
          "should not save mail"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6491",
    "FileName": "when_add_missing_items_is_not_allowed.cs",
    "Description": "when add missing items is not allowed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6492",
        "FileName": "when_add_missing_items_is_not_allowed.cs",
        "Description": "when add missing items with no issues work record",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6493",
        "FileName": "when_add_missing_items_is_not_allowed.cs",
        "Description": "when add missing items for work record related to restricted engagement",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6494",
    "FileName": "when_add_missing_items_with_not_no_issues_work_record.cs",
    "Description": "when add missing items with not no issues work record",
    "WhenList": [
      "when add"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6495",
    "FileName": "when_add_missing_items_with_not_no_issues_work_record.cs",
    "Description": "when add missing items for work record related to restricted engagement",
    "WhenList": [
      "when add"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "6496",
    "FileName": "when_add_missing_items_with_valid_request.cs",
    "Description": "when add missing items with valid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6497",
        "FileName": "when_add_missing_items_with_valid_request.cs",
        "Description": "when add missing items not from pwc",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should create the missing item",
          "should add an history entry for each newly created missing item",
          "should not save mail"
        ],
        "Children": []
      },
      {
        "$id": "6498",
        "FileName": "when_add_missing_items_with_valid_request.cs",
        "Description": "when add missing items from pwc",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should created the missing item"
        ],
        "Children": []
      },
      {
        "$id": "6499",
        "FileName": "when_add_missing_items_with_valid_request.cs",
        "Description": "when add missing items from pwc without responsibility",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should created the missing item"
        ],
        "Children": []
      },
      {
        "$id": "6500",
        "FileName": "when_add_missing_items_with_valid_request.cs",
        "Description": "when create empty missing items from go migration",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should add an history entry for each newly created missing item"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6501",
    "FileName": "when_add_missing_items_with_work_record_is_delivered.cs",
    "Description": "when add missing items with work record is delivered",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6502",
        "FileName": "when_add_missing_items_with_work_record_is_delivered.cs",
        "Description": "current milestone name is delivered",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return OK"
        ],
        "Children": []
      },
      {
        "$id": "6503",
        "FileName": "when_add_missing_items_with_work_record_is_delivered.cs",
        "Description": "current milestone name is complete",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6504",
    "FileName": "when_apply_missing_items_with_restricted_assignee.cs",
    "Description": "when apply missing items with restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6505",
        "FileName": "when_apply_missing_items_with_restricted_assignee.cs",
        "Description": "when get missing items",
        "WhenList": [
          "when get"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "6506",
        "FileName": "when_apply_missing_items_with_restricted_assignee.cs",
        "Description": "when add missing items",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "6507",
        "FileName": "when_apply_missing_items_with_restricted_assignee.cs",
        "Description": "when send missing items",
        "WhenList": [
          "when send"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "6508",
        "FileName": "when_apply_missing_items_with_restricted_assignee.cs",
        "Description": "when delete missing items",
        "WhenList": [
          "when delete"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "6509",
        "FileName": "when_apply_missing_items_with_restricted_assignee.cs",
        "Description": "when update missing items",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6510",
        "FileName": "when_apply_missing_items_with_restricted_assignee.cs",
        "Description": "when receive missing items",
        "WhenList": [
          "when receive"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6511",
    "FileName": "when_delete_missing_items_for_work_record_related_to_restricted_engagement.cs",
    "Description": "when delete missing items for work record related to restricted engagement",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "6512",
    "FileName": "when_missing_items_deleted.cs",
    "Description": "when missing items deleted",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6513",
        "FileName": "when_missing_items_deleted.cs",
        "Description": "when missing items deleted and practice type is tax",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6514",
            "FileName": "when_missing_items_deleted.cs",
            "Description": "when delete received missing item",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 403 forbidden as status code",
              "should delete the missing item from work record"
            ],
            "Children": []
          },
          {
            "$id": "6515",
            "FileName": "when_missing_items_deleted.cs",
            "Description": "when a valid missing item deleted to check the history",
            "WhenList": [
              "the missing item has been deleted"
            ],
            "ThenList": [
              "should return 200 no content as status code",
              "should delete the missing item from work record"
            ],
            "Children": []
          },
          {
            "$id": "6516",
            "FileName": "when_missing_items_deleted.cs",
            "Description": "when an invalid missing item deleted",
            "WhenList": [
              "the missing item has been deleted"
            ],
            "ThenList": [
              "should return 404 entity fot found",
              "should not affect work record"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6517",
        "FileName": "when_missing_items_deleted.cs",
        "Description": "when missing items deleted and practice type is immigration",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6518",
    "FileName": "when_missing_items_deleted_with_not_no_issues_work_record.cs",
    "Description": "when missing items deleted with not no issues work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6519",
        "FileName": "when_missing_items_deleted_with_not_no_issues_work_record.cs",
        "Description": "when delete missing item",
        "WhenList": [
          "the missing item has been deleted"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6520",
    "FileName": "when_missing_items_received_for_work_record_related_to_restricted_engagement.cs",
    "Description": "when missing items received for work record related to restricted engagement",
    "WhenList": [
      "the missing item has been received"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "6521",
    "FileName": "when_missing_items_received_with_invalid_request.cs",
    "Description": "when missing items received with invalid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6522",
        "FileName": "when_missing_items_received_with_invalid_request.cs",
        "Description": "when missing item uri invalid",
        "WhenList": [
          "the missing item has been received"
        ],
        "ThenList": [
          "should return 400 as status code"
        ],
        "Children": []
      },
      {
        "$id": "6523",
        "FileName": "when_missing_items_received_with_invalid_request.cs",
        "Description": "when missing item request without received date",
        "WhenList": [
          "the missing item has been received"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6524",
        "FileName": "when_missing_items_received_with_invalid_request.cs",
        "Description": "when missing item uri not existed",
        "WhenList": [
          "the missing item has been received"
        ],
        "ThenList": [
          "should return 404 as status code",
          "should ignore invalid uri"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6525",
    "FileName": "when_missing_items_received_with_not_no_issues_work_record.cs",
    "Description": "when missing items received with not no issues work record",
    "WhenList": [
      "the missing item has been received"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6526",
    "FileName": "when_missing_items_received_with_valid_request.cs",
    "Description": "when missing items received with valid request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6527",
        "FileName": "when_missing_items_received_with_valid_request.cs",
        "Description": "when missing items received date is earlier than identify date",
        "WhenList": [
          "the missing item has been received"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "6528",
        "FileName": "when_missing_items_received_with_valid_request.cs",
        "Description": "when missing items received",
        "WhenList": [
          "the missing item has been received"
        ],
        "ThenList": [
          "should return 204 no content as status code",
          "should update the missing items to be received",
          "should add history for each received missing item"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6529",
    "FileName": "when_send_missing_item_emails.cs",
    "Description": "when send missing item emails",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6530",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "when work record not exist",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return not found",
          "should not notify kayla"
        ],
        "Children": []
      },
      {
        "$id": "6531",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "when submitted work record has missing items whose questionnaire contact office without team mailbox",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return ok",
          "should notify kayla",
          "should save sender name in missing item mails"
        ],
        "Children": []
      },
      {
        "$id": "6532",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "when submitted work record has missing items whose questionnaire contact office with team mailbox",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return ok",
          "should notify kayla"
        ],
        "Children": []
      },
      {
        "$id": "6533",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "when work record has no organizer",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should not found",
          "should not notify kayla"
        ],
        "Children": []
      },
      {
        "$id": "6534",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "when submitted work record have no missing item from assignee",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return ok",
          "should not notify kayla"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6535",
    "FileName": "when_send_missing_item_reminder_for_work_record_related_to_restricted_engagement.cs",
    "Description": "when send missing item reminder for work record related to restricted engagement",
    "WhenList": [
      "the missing item has been received"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "6536",
    "FileName": "when_update_comments_for_missing_items.cs",
    "Description": "when update comments for missing items",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6537",
        "FileName": "when_update_comments_for_missing_items.cs",
        "Description": "when update comments",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return ok",
          "should update comments"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6538",
    "FileName": "when_update_description_for_missing_items.cs",
    "Description": "when update description for missing items",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6539",
        "FileName": "when_update_description_for_missing_items.cs",
        "Description": "when update description",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return ok",
          "should update the missing item",
          "should create activity history for missing item"
        ],
        "Children": []
      },
      {
        "$id": "6540",
        "FileName": "when_update_description_for_missing_items.cs",
        "Description": "when update description to empty string",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6541",
        "FileName": "when_update_description_for_missing_items.cs",
        "Description": "when update description of non existing missing item",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "6542",
        "FileName": "when_update_description_for_missing_items.cs",
        "Description": "when update description of missing item with random staff",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6543",
    "FileName": "when_update_missing_items_for_work_record_related_to_restricted_engagement.cs",
    "Description": "when update missing items for work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6544",
        "FileName": "when_update_missing_items_for_work_record_related_to_restricted_engagement.cs",
        "Description": "when update missing items for work record related to restricted engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6545",
        "FileName": "when_update_missing_items_for_work_record_related_to_restricted_engagement.cs",
        "Description": "when update missing itmes for status is not no issues work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not change missing items"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6546",
    "FileName": "when_get_coc_detail.cs",
    "Description": "when get coc detail",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6547",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should get detail by country and expiry type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6548",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should not get uncompleted work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should only get completed one detail"
        ],
        "Children": []
      },
      {
        "$id": "6549",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should not get work record of panding assignee",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should only get completed one detail"
        ],
        "Children": []
      },
      {
        "$id": "6550",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should get detail by all countries",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get count"
        ],
        "Children": []
      },
      {
        "$id": "6551",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should get detail when expire in 31 to 60 days",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6552",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should get detail when expire in 61 to 90 days",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6553",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should get detail when expire gt 90 days",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6554",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should get detail when already expired",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6555",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should get detail by all valid expiry type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get all valid coc details"
        ],
        "Children": []
      },
      {
        "$id": "6556",
        "FileName": "when_get_coc_detail.cs",
        "Description": "should get bad request when given invalid expiry type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should response ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6557",
    "FileName": "when_get_coc_details_with_udf_setup.cs",
    "Description": "when get coc details with udf setup",
    "WhenList": [
      "get coc details"
    ],
    "ThenList": [
      "should only show details which rebecca could see"
    ],
    "Children": []
  },
  {
    "$id": "6558",
    "FileName": "when_get_coc_detail_with_different_assignments.cs",
    "Description": "when get coc detail with different assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6559",
        "FileName": "when_get_coc_detail_with_different_assignments.cs",
        "Description": "should not get assignment start date when no assignments",
        "WhenList": [
          "get co c detail"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6560",
        "FileName": "when_get_coc_detail_with_different_assignments.cs",
        "Description": "should get assignment start date when 1 assignment starts before expiry date",
        "WhenList": [
          "get co c detail"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6561",
        "FileName": "when_get_coc_detail_with_different_assignments.cs",
        "Description": "should not get assignment start date when assignment has no start date",
        "WhenList": [
          "get co c detail"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6562",
        "FileName": "when_get_coc_detail_with_different_assignments.cs",
        "Description": "should not get assignment start date when assignment country not match",
        "WhenList": [
          "get co c detail"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6563",
        "FileName": "when_get_coc_detail_with_different_assignments.cs",
        "Description": "should get assignment start date when 1 assignment starts after expiry date",
        "WhenList": [
          "get co c detail"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6564",
        "FileName": "when_get_coc_detail_with_different_assignments.cs",
        "Description": "should get assignment start date when 1 assignment starts equal expiry date",
        "WhenList": [
          "get co c detail"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6565",
        "FileName": "when_get_coc_detail_with_different_assignments.cs",
        "Description": "should return last assignment start date when there are 2 or more assignments start before expiry date",
        "WhenList": [
          "get co c detail"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6566",
        "FileName": "when_get_coc_detail_with_different_assignments.cs",
        "Description": "should have no assignemtn start date when there are 2 or more assignments start after expiry date",
        "WhenList": [
          "get co c detail"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      },
      {
        "$id": "6567",
        "FileName": "when_get_coc_detail_with_different_assignments.cs",
        "Description": "should return last assignment start date when there are many assignments start surround expiry date",
        "WhenList": [
          "get co c detail"
        ],
        "ThenList": [
          "should response ok",
          "should get details"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6568",
    "FileName": "when_get_coc_summaries_only_which_engagements_nancy_has_access_can_be_shown.cs",
    "Description": "when get coc summaries only which engagements nancy has access can be shown",
    "WhenList": [
      "get coc summaries"
    ],
    "ThenList": [
      "should return coc summaries"
    ],
    "Children": []
  },
  {
    "$id": "6569",
    "FileName": "when_get_coc_summaries_with_different_assignee_status.cs",
    "Description": "when get coc summaries with different assignee status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6570",
        "FileName": "when_get_coc_summaries_with_different_assignee_status.cs",
        "Description": "should return 1 record when assignee is active",
        "WhenList": [
          "get coc summaries"
        ],
        "ThenList": [
          "should return 200",
          "should return coc summaries"
        ],
        "Children": []
      },
      {
        "$id": "6571",
        "FileName": "when_get_coc_summaries_with_different_assignee_status.cs",
        "Description": "should return 1 record when assignee is inactive",
        "WhenList": [
          "get coc summaries"
        ],
        "ThenList": [
          "should return 200",
          "should return coc summaries"
        ],
        "Children": []
      },
      {
        "$id": "6572",
        "FileName": "when_get_coc_summaries_with_different_assignee_status.cs",
        "Description": "should return 0 record when assignee is not active or inactive",
        "WhenList": [
          "get coc summaries"
        ],
        "ThenList": [
          "should return 200",
          "should return coc summaries"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6573",
    "FileName": "when_get_coc_summaries_with_different_workrecord_milestones.cs",
    "Description": "when get coc summaries with different workrecord milestones",
    "WhenList": [
      "get coc summaries"
    ],
    "ThenList": [
      "should return coc summaries"
    ],
    "Children": []
  },
  {
    "$id": "6574",
    "FileName": "when_get_coc_summaries_with_udf_setup.cs",
    "Description": "when get coc summaries with udf setup",
    "WhenList": [
      "get coc summaries"
    ],
    "ThenList": [
      "should only show summaries which rebecca could see"
    ],
    "Children": []
  },
  {
    "$id": "6575",
    "FileName": "when_get_coc_summary_with_different_expiry_days.cs",
    "Description": "when get coc summary with different expiry days",
    "WhenList": [
      "get coc summaries"
    ],
    "ThenList": [
      "should return coc summaries"
    ],
    "Children": []
  },
  {
    "$id": "6576",
    "FileName": "when_get_briefing_status_countries_by_engagements.cs",
    "Description": "when get briefing status countries by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6577",
        "FileName": "when_get_briefing_status_countries_by_engagements.cs",
        "Description": "when get briefing status countries by engagements for current year",
        "WhenList": [
          "when get briefing status countries by engagements"
        ],
        "ThenList": [
          "should return 200",
          "should return briefing status countries"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6578",
    "FileName": "when_get_briefing_status_count_by_engagements.cs",
    "Description": "when get briefing status count by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6579",
        "FileName": "when_get_briefing_status_count_by_engagements.cs",
        "Description": "when get briefing status count by engagements for current year",
        "WhenList": [
          "when get briefing status count by engagements"
        ],
        "ThenList": [
          "should return 200",
          "should return briefing status count"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6580",
    "FileName": "when_get_briefing_status_summary_by_engagements.cs",
    "Description": "when get briefing status summary by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6581",
        "FileName": "when_get_briefing_status_summary_by_engagements.cs",
        "Description": "when get briefing status summary by engagements for current year",
        "WhenList": [
          "when get tax briefing status by engagements"
        ],
        "ThenList": [
          "should return 200",
          "should return tax return status"
        ],
        "Children": []
      },
      {
        "$id": "6582",
        "FileName": "when_get_briefing_status_summary_by_engagements.cs",
        "Description": "when get briefing status summary by engagements for last year",
        "WhenList": [
          "when get tax briefing status by engagements"
        ],
        "ThenList": [
          "should return 200",
          "should return tax return status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6583",
    "FileName": "when_get_briefing_work_records_details_by_engagements.cs",
    "Description": "when get briefing work records details by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6584",
        "FileName": "when_get_briefing_work_records_details_by_engagements.cs",
        "Description": "without filters",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6585",
            "FileName": "when_get_briefing_work_records_details_by_engagements.cs",
            "Description": "should return all briefing work records in current year",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return briefing work records"
            ],
            "Children": []
          },
          {
            "$id": "6586",
            "FileName": "when_get_briefing_work_records_details_by_engagements.cs",
            "Description": "should return all briefing work records with udf",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should not return briefing work records"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6587",
        "FileName": "when_get_briefing_work_records_details_by_engagements.cs",
        "Description": "with filters",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6588",
            "FileName": "when_get_briefing_work_records_details_by_engagements.cs",
            "Description": "should return all briefing work records in complete status",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return briefing work records"
            ],
            "Children": []
          },
          {
            "$id": "6589",
            "FileName": "when_get_briefing_work_records_details_by_engagements.cs",
            "Description": "should return all briefing work records in require year",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return briefing work records"
            ],
            "Children": []
          },
          {
            "$id": "6590",
            "FileName": "when_get_briefing_work_records_details_by_engagements.cs",
            "Description": "should return all briefing work records in required country",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return briefing work records"
            ],
            "Children": []
          },
          {
            "$id": "6591",
            "FileName": "when_get_briefing_work_records_details_by_engagements.cs",
            "Description": "should return all briefing work records with all filters",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return briefing work records"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6592",
    "FileName": "when_get_employer_return_list.cs",
    "Description": "when get employer return list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6593",
        "FileName": "when_get_employer_return_list.cs",
        "Description": "when get corrent employer return list",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should get correct content"
        ],
        "Children": []
      },
      {
        "$id": "6594",
        "FileName": "when_get_employer_return_list.cs",
        "Description": "when get corrent employer return list by rebecca",
        "WhenList": [
          "get employer return file for sg tax work record"
        ],
        "ThenList": [
          "should return ok",
          "should not get result"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6595",
    "FileName": "when_get_immigration_work_records_by_engagements.cs",
    "Description": "when get immigration work records by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6596",
        "FileName": "when_get_immigration_work_records_by_engagements.cs",
        "Description": "without filters",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6597",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should return all immigration work records",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return immigration work records"
            ],
            "Children": []
          },
          {
            "$id": "6598",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should not return immigration application work records",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return immigration work records"
            ],
            "Children": []
          },
          {
            "$id": "6599",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should not return immigration work records completed 180 days ago",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return immigration work records"
            ],
            "Children": []
          },
          {
            "$id": "6600",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should not return immigration work records in initiated milestone",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return immigration work records"
            ],
            "Children": []
          },
          {
            "$id": "6601",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should not return immigration work records with udf filter",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return immigration work records"
            ],
            "Children": []
          },
          {
            "$id": "6602",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should not return immigration work records is dependent",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return immigration work records"
            ],
            "Children": []
          },
          {
            "$id": "6603",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should return multiple engagement immigration work records",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return immigration work records"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6604",
        "FileName": "when_get_immigration_work_records_by_engagements.cs",
        "Description": "with date and status filters",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6605",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should return immigration work records filtered by end date",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 200",
              "should return immigration work records between end date and 180 days ago"
            ],
            "Children": []
          },
          {
            "$id": "6606",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should return bad request when filtering with start date greater than end date",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "6607",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should return bad request when filtering with invalid status",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "6608",
            "FileName": "when_get_immigration_work_records_by_engagements.cs",
            "Description": "should return immigration work records filtered by date and status",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return immigration work records filtered by start end date and status inprogress"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6609",
    "FileName": "when_get_immigration_work_records_by_engagements_with_filter.cs",
    "Description": "when get immigration work records by engagements with filter",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6610",
        "FileName": "when_get_immigration_work_records_by_engagements_with_filter.cs",
        "Description": "when get no issue and on hold ones when select all",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get expected records"
        ],
        "Children": []
      },
      {
        "$id": "6611",
        "FileName": "when_get_immigration_work_records_by_engagements_with_filter.cs",
        "Description": "when get no issue and in progress ones when select in progress",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get expected records"
        ],
        "Children": []
      },
      {
        "$id": "6612",
        "FileName": "when_get_immigration_work_records_by_engagements_with_filter.cs",
        "Description": "when get no issue and completed ones when select completed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get expected records"
        ],
        "Children": []
      },
      {
        "$id": "6613",
        "FileName": "when_get_immigration_work_records_by_engagements_with_filter.cs",
        "Description": "when get no issue and on hold ones when select on hold",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get expected records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6614",
    "FileName": "when_get_immigration_work_record_by_id.cs",
    "Description": "when get immigration work records by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6615",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should return immigration work record by id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should return immigration work record info"
        ],
        "Children": []
      },
      {
        "$id": "6616",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should return include dependents work record when has two dependents",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should return immigration work record info"
        ],
        "Children": []
      },
      {
        "$id": "6617",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should not return dependent work record if dependent work record outdate",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should return immigration work record info"
        ],
        "Children": []
      },
      {
        "$id": "6618",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should return not include dependents work record when dependent work record initiation date before parent work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should return immigration work record info"
        ],
        "Children": []
      },
      {
        "$id": "6619",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should return not include dependents work record when dependent work record belongs to another parent work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should return immigration work record info"
        ],
        "Children": []
      },
      {
        "$id": "6620",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should return include dependents work record when primary service are different",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should return immigration work record info"
        ],
        "Children": []
      },
      {
        "$id": "6621",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should not return dependents work record when countries are different",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should return immigration work record info"
        ],
        "Children": []
      },
      {
        "$id": "6622",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should not return dependents work record which depent to the another parent work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200",
          "should return immigration work record info"
        ],
        "Children": []
      },
      {
        "$id": "6623",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should return not found when id not exist",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 404"
        ],
        "Children": []
      },
      {
        "$id": "6624",
        "FileName": "when_get_immigration_work_record_by_id.cs",
        "Description": "should not return immigration work records with udf filter",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 403"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6625",
    "FileName": "when_get_social_security_status_by_engagements.cs",
    "Description": "when get social security status by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6626",
        "FileName": "when_get_social_security_status_by_engagements.cs",
        "Description": "when get social security countries by engagements",
        "WhenList": [
          "get countries"
        ],
        "ThenList": [
          "should return 200",
          "should return social security countries"
        ],
        "Children": []
      },
      {
        "$id": "6627",
        "FileName": "when_get_social_security_status_by_engagements.cs",
        "Description": "when get all social security status by engagements",
        "WhenList": [
          "get all social security status"
        ],
        "ThenList": [
          "should return 200",
          "should return social security status"
        ],
        "Children": []
      },
      {
        "$id": "6628",
        "FileName": "when_get_social_security_status_by_engagements.cs",
        "Description": "when get social security status by engagements filtered by country and certificate received status",
        "WhenList": [
          "get social security status filtered by country"
        ],
        "ThenList": [
          "should return 200",
          "should return social security status for united states"
        ],
        "Children": []
      },
      {
        "$id": "6629",
        "FileName": "when_get_social_security_status_by_engagements.cs",
        "Description": "when get social security status by engagements filtered and in preparation status",
        "WhenList": [
          "get social security status filtered by country"
        ],
        "ThenList": [
          "should return 200",
          "should return social security status"
        ],
        "Children": []
      },
      {
        "$id": "6630",
        "FileName": "when_get_social_security_status_by_engagements.cs",
        "Description": "when get social security status by engagements filtered and missing information status",
        "WhenList": [
          "get social security status filtered by country"
        ],
        "ThenList": [
          "should return 200",
          "should return social security status"
        ],
        "Children": []
      },
      {
        "$id": "6631",
        "FileName": "when_get_social_security_status_by_engagements.cs",
        "Description": "should not get social security status from tax practice type engagement",
        "WhenList": [
          "get social security status filtered by country"
        ],
        "ThenList": [
          "should return 200",
          "should return social security status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6632",
    "FileName": "when_get_social_security_status_summary_by_engagements.cs",
    "Description": "when get social security status summary by engagements",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6633",
        "FileName": "when_get_social_security_status_summary_by_engagements.cs",
        "Description": "when no udf filter apply",
        "WhenList": [
          "when get social security status by engagements"
        ],
        "ThenList": [
          "should return 200",
          "should return social security status"
        ],
        "Children": []
      },
      {
        "$id": "6634",
        "FileName": "when_get_social_security_status_summary_by_engagements.cs",
        "Description": "when assignee does not match udf filter",
        "WhenList": [
          "when get social security status by engagements"
        ],
        "ThenList": [
          "should return 200",
          "should return social security status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6635",
    "FileName": "when_operate_work_record_notes.cs",
    "Description": "when operate work record notes",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6636",
        "FileName": "when_operate_work_record_notes.cs",
        "Description": "when create note",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created",
          "should create successfully"
        ],
        "Children": []
      },
      {
        "$id": "6637",
        "FileName": "when_operate_work_record_notes.cs",
        "Description": "when update note",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no content",
          "should update successfully"
        ],
        "Children": []
      },
      {
        "$id": "6638",
        "FileName": "when_operate_work_record_notes.cs",
        "Description": "when delete note",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should delete successfully"
        ],
        "Children": []
      },
      {
        "$id": "6639",
        "FileName": "when_operate_work_record_notes.cs",
        "Description": "when current user is in work record team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6640",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "when create note",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return created",
              "should create successfully"
            ],
            "Children": []
          },
          {
            "$id": "6641",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "when update note",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return no content",
              "should update successfully"
            ],
            "Children": []
          },
          {
            "$id": "6642",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "when delete note",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should delete successfully"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6643",
    "FileName": "when_operate_work_record_notes_with_restrict_assignee.cs",
    "Description": "when operate work record notes with restrict assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6644",
        "FileName": "when_operate_work_record_notes_with_restrict_assignee.cs",
        "Description": "when create note without permission",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6645",
        "FileName": "when_operate_work_record_notes_with_restrict_assignee.cs",
        "Description": "when operate exist note without permission",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6646",
            "FileName": "when_operate_work_record_notes_with_restrict_assignee.cs",
            "Description": "when update note",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "6647",
            "FileName": "when_operate_work_record_notes_with_restrict_assignee.cs",
            "Description": "when delete note",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6648",
    "FileName": "when_add_out_of_scope_work_for_immigration.cs",
    "Description": "when add out of scope work for immigration",
    "WhenList": [
      "when add"
    ],
    "ThenList": [
      "should return 201 as status code",
      "should create the out of scope work"
    ],
    "Children": []
  },
  {
    "$id": "6649",
    "FileName": "when_add_out_of_scope_work_for_tax.cs",
    "Description": "when add out of scope work for tax",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6650",
        "FileName": "when_add_out_of_scope_work_for_tax.cs",
        "Description": "when staff in assignee engagements work office or general contact",
        "WhenList": [
          "of add"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6651",
        "FileName": "when_add_out_of_scope_work_for_tax.cs",
        "Description": "when staff in delegated office",
        "WhenList": [
          "add out of scope works"
        ],
        "ThenList": [
          "should succeed",
          "should create the out of scope work"
        ],
        "Children": []
      },
      {
        "$id": "6652",
        "FileName": "when_add_out_of_scope_work_for_tax.cs",
        "Description": "when staff in work record team",
        "WhenList": [
          "add out of scope works"
        ],
        "ThenList": [
          "should succeed",
          "should create the out of scope work"
        ],
        "Children": []
      },
      {
        "$id": "6653",
        "FileName": "when_add_out_of_scope_work_for_tax.cs",
        "Description": "when staff assign to check list",
        "WhenList": [
          "of add"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6654",
    "FileName": "when_add_out_of_scope_work_for_tax.cs",
    "Description": "when add out of scope work for tax work record which related to restricted engagement",
    "WhenList": [
      "add"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "6655",
    "FileName": "when_add_out_of_scope_work_for_tax_with_restricted_assignee.cs",
    "Description": "when add out of scope work with restricted assignee",
    "WhenList": [
      "add"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "6656",
    "FileName": "when_add_out_of_scope_work_for_tax_with_service_status.cs",
    "Description": "when add out of scope work for tax with service status",
    "WhenList": [
      "when add"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6657",
    "FileName": "when_add_out_of_scope_work_with_invalid_request.cs",
    "Description": "when add out of scope work with invalid request",
    "WhenList": [
      "when add invalid date"
    ],
    "ThenList": [
      "should return 400 as status code when add invalid date"
    ],
    "Children": []
  },
  {
    "$id": "6658",
    "FileName": "when_batch_update_briefing_work_record_responsible_office.cs",
    "Description": "when batch update briefing work record responsible office",
    "WhenList": [
      "change work record status"
    ],
    "ThenList": [
      "should return ok",
      "should raise work record status changed evnet into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "6659",
    "FileName": "when_batch_update_responsible_office.cs",
    "Description": "when batch update responsible office",
    "WhenList": [
      "change work record status"
    ],
    "ThenList": [
      "should return ok",
      "should raise work record status changed evnet into eventstore"
    ],
    "Children": []
  },
  {
    "$id": "6660",
    "FileName": "when_batch_update_responsible_office_for_immigration_work_record_with_invalid_service_status.cs",
    "Description": "when batch update responsible office for immigration work record with invalid service status",
    "WhenList": [
      "update tax work record responsible office"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "6661",
    "FileName": "when_batch_update_work_records_responsible_office.cs",
    "Description": "when batch update responsible office",
    "WhenList": [
      "update tax work record responsible office"
    ],
    "ThenList": [
      "should return ok",
      "should update responsible office from shanghai to leeds",
      "should record responsible office changed history",
      "should not change questionnaire contact"
    ],
    "Children": []
  },
  {
    "$id": "6662",
    "FileName": "when_advanced_search_work_record_for_deleted_assignee.cs",
    "Description": "when advanced search work record for deleted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6663",
        "FileName": "when_advanced_search_work_record_for_deleted_assignee.cs",
        "Description": "when search questionnaire for tax work record",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not return work records deleted assignees"
        ],
        "Children": []
      },
      {
        "$id": "6664",
        "FileName": "when_advanced_search_work_record_for_deleted_assignee.cs",
        "Description": "when search questionnaire for immigration work record",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not return work records deleted assignees"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6665",
    "FileName": "when_simple_search_work_record_for_deleted_assignee.cs",
    "Description": "when simple search work record for deleted assignee",
    "WhenList": [
      "search work records"
    ],
    "ThenList": [
      "should return ok",
      "should not return work records deleted assignees"
    ],
    "Children": []
  },
  {
    "$id": "6666",
    "FileName": "when_advanced_search_work_record_for_inactive_assignee.cs",
    "Description": "when advanced search work record for inactive assignee",
    "WhenList": [
      "search work records"
    ],
    "ThenList": [
      "should return ok",
      "should not return work records of deleted assignees"
    ],
    "Children": []
  },
  {
    "$id": "6667",
    "FileName": "when_search_work_record_with_service_evaluation_of_inactive_assignee.cs",
    "Description": "when search work record with service evaluation of inactive assignee",
    "WhenList": [
      "search work record"
    ],
    "ThenList": [
      "should return ok",
      "should return all work record"
    ],
    "Children": []
  },
  {
    "$id": "6668",
    "FileName": "when_simple_search_work_record_for_inactive_assignee.cs",
    "Description": "when simple search work record for inactive assignee",
    "WhenList": [
      "search work records"
    ],
    "ThenList": [
      "should return ok",
      "should not return work records inactive assignees"
    ],
    "Children": []
  },
  {
    "$id": "6669",
    "FileName": "when_search_work_record_with_service_evaluation_of_assignee_in_inactive_engagement.cs",
    "Description": "when search work record with service evaluation of assignee in inactive engagement",
    "WhenList": [
      "search work record"
    ],
    "ThenList": [
      "should return ok",
      "should return all work record NOT in inactive engagement"
    ],
    "Children": []
  },
  {
    "$id": "6670",
    "FileName": "when_search_online_briefing_work_records_to_change_responsible_office.cs",
    "Description": "when search online briefing work records to change responsible office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6671",
        "FileName": "when_search_online_briefing_work_records_to_change_responsible_office.cs",
        "Description": "when search work record by engagement",
        "WhenList": [
          "search by engagement"
        ],
        "ThenList": [
          "should return two results with completed online briefing flag"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6672",
    "FileName": "when_search_work_records.cs",
    "Description": "when search work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6673",
        "FileName": "when_search_work_records.cs",
        "Description": "when current user is global admin but not in the working office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return zero workrecord"
        ],
        "Children": []
      },
      {
        "$id": "6674",
        "FileName": "when_search_work_records.cs",
        "Description": "when assignee and engagemnet are not restricted",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return zero workrecord"
        ],
        "Children": []
      },
      {
        "$id": "6675",
        "FileName": "when_search_work_records.cs",
        "Description": "when assignee is restricted",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return zero workrecord"
        ],
        "Children": []
      },
      {
        "$id": "6676",
        "FileName": "when_search_work_records.cs",
        "Description": "when engagement is restricted",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return zero workrecord"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6677",
    "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
    "Description": "when search work records according to assignee and engagement status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6678",
        "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
        "Description": "when current user has general access",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6679",
            "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
            "Description": "when assignee is inactive",
            "WhenList": [
              "search workrecords"
            ],
            "ThenList": [
              "should return zero workrecords"
            ],
            "Children": []
          },
          {
            "$id": "6680",
            "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
            "Description": "when engagement is inactive",
            "WhenList": [
              "search workrecords"
            ],
            "ThenList": [
              "should return zero workrecords"
            ],
            "Children": []
          },
          {
            "$id": "6681",
            "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
            "Description": "when assignee is deleted",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return zero work records"
            ],
            "Children": []
          },
          {
            "$id": "6682",
            "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
            "Description": "when assignee is inactive go migration",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return zero work records"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6683",
        "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
        "Description": "when current user has admin access",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6684",
            "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
            "Description": "when assignee is inactive",
            "WhenList": [
              "search workrecords without any critial"
            ],
            "ThenList": [
              "should return zero workrecords"
            ],
            "Children": []
          },
          {
            "$id": "6685",
            "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
            "Description": "when engagement is inactive",
            "WhenList": [
              "search workrecords without any critial"
            ],
            "ThenList": [
              "should return three workrecords"
            ],
            "Children": []
          },
          {
            "$id": "6686",
            "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
            "Description": "when assignee is deleted",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return zero work records"
            ],
            "Children": []
          },
          {
            "$id": "6687",
            "FileName": "when_search_work_records_according_to_assignee_and_engagement_status.cs",
            "Description": "when assignee is inactive go migration",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return zero work records"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6688",
    "FileName": "when_search_work_records_by_assigneeUri.cs",
    "Description": "when search work records by assignee uri",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6689",
        "FileName": "when_search_work_records_by_assigneeUri.cs",
        "Description": "when workrecord assignment is not null",
        "WhenList": [
          "search by assignee uri"
        ],
        "ThenList": [
          "should return only one work record for batch update assignment"
        ],
        "Children": []
      },
      {
        "$id": "6690",
        "FileName": "when_search_work_records_by_assigneeUri.cs",
        "Description": "when workrecord assignment is null",
        "WhenList": [
          "search by assignee uri"
        ],
        "ThenList": [
          "should return only one workrecord with assignment be null"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6691",
    "FileName": "when_search_work_records_by_criteria.cs",
    "Description": "when search work records by criteria",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6692",
        "FileName": "when_search_work_records_by_criteria.cs",
        "Description": "when search work record by engagement",
        "WhenList": [
          "search by engagement"
        ],
        "ThenList": [
          "should return only one work record"
        ],
        "Children": []
      },
      {
        "$id": "6693",
        "FileName": "when_search_work_records_by_criteria.cs",
        "Description": "when search work record by practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6694",
            "FileName": "when_search_work_records_by_criteria.cs",
            "Description": "when search tax work record",
            "WhenList": [
              "when search by tax"
            ],
            "ThenList": [
              "should return ok",
              "should return only one tax work record"
            ],
            "Children": []
          },
          {
            "$id": "6695",
            "FileName": "when_search_work_records_by_criteria.cs",
            "Description": "when search immi work record",
            "WhenList": [
              "when search by immigration"
            ],
            "ThenList": [
              "should return only one immi work record"
            ],
            "Children": []
          },
          {
            "$id": "6696",
            "FileName": "when_search_work_records_by_criteria.cs",
            "Description": "when search social security work record",
            "WhenList": [
              "when search by social security"
            ],
            "ThenList": [
              "should return ok",
              "should return only one social security work record"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6697",
        "FileName": "when_search_work_records_by_criteria.cs",
        "Description": "when search work record by reponsible office",
        "WhenList": [
          "search by responsible office"
        ],
        "ThenList": [
          "should return only one tax work record"
        ],
        "Children": []
      },
      {
        "$id": "6698",
        "FileName": "when_search_work_records_by_criteria.cs",
        "Description": "when search work record by tax return workrecord type",
        "WhenList": [
          "search by workrecord type"
        ],
        "ThenList": [
          "should return only one tax return work record"
        ],
        "Children": []
      },
      {
        "$id": "6699",
        "FileName": "when_search_work_records_by_criteria.cs",
        "Description": "when search work record by immigration pratice type and any work record type",
        "WhenList": [
          "search by any workrecord type"
        ],
        "ThenList": [
          "should return all immigration work record"
        ],
        "Children": []
      },
      {
        "$id": "6700",
        "FileName": "when_search_work_records_by_criteria.cs",
        "Description": "when search work record by team",
        "WhenList": [
          "search by team"
        ],
        "ThenList": [
          "should return only one workrecord with team"
        ],
        "Children": []
      },
      {
        "$id": "6701",
        "FileName": "when_search_work_records_by_criteria.cs",
        "Description": "when search work record by country",
        "WhenList": [
          "search by country"
        ],
        "ThenList": [
          "should return only china workrecord"
        ],
        "Children": []
      },
      {
        "$id": "6702",
        "FileName": "when_search_work_records_by_criteria.cs",
        "Description": "when search work record by year",
        "WhenList": [
          "search by country"
        ],
        "ThenList": [
          "should return only 2014 workrecord"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6703",
    "FileName": "when_simple_search_tax_work_record_with_checklist_template.cs",
    "Description": "when simple search tax work record with checklist template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6704",
        "FileName": "when_simple_search_tax_work_record_with_checklist_template.cs",
        "Description": "when search tax return work record with questionnaire",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should only return work records"
        ],
        "Children": []
      },
      {
        "$id": "6705",
        "FileName": "when_simple_search_tax_work_record_with_checklist_template.cs",
        "Description": "when search tax other compliance work record with checklist template",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should only return work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6706",
    "FileName": "when_simple_search_tax_work_record_with_questionnaire.cs",
    "Description": "when simple search tax work record with questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6707",
        "FileName": "when_simple_search_tax_work_record_with_questionnaire.cs",
        "Description": "when search tax work record with questionnaire",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should only return work records with questionnaire"
        ],
        "Children": []
      },
      {
        "$id": "6708",
        "FileName": "when_simple_search_tax_work_record_with_questionnaire.cs",
        "Description": "when search tax work record without questionnaire",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should only return work records without questionnaire"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6709",
    "FileName": "when_simple_search_work_record.cs",
    "Description": "when simple search work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6710",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when select future milestone task",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should"
        ],
        "Children": []
      },
      {
        "$id": "6711",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when select current milestone task",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should"
        ],
        "Children": []
      },
      {
        "$id": "6712",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when select current milestone task and current task is done",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should"
        ],
        "Children": []
      },
      {
        "$id": "6713",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when search tax return work record that have inactive engagement",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not include inactived"
        ],
        "Children": []
      },
      {
        "$id": "6714",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when search tax return work record that have inactive assignee",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not include inactived"
        ],
        "Children": []
      },
      {
        "$id": "6715",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when search tax other work record that have inactive engagement",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not include inactived"
        ],
        "Children": []
      },
      {
        "$id": "6716",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when search immigration work record that have inactive engagement",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not include inactived"
        ],
        "Children": []
      },
      {
        "$id": "6717",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when search social security work record that have inactive engagement",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not include inactived"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6718",
    "FileName": "when_simple_search_work_record.cs",
    "Description": "when sofia selects both a country task template and an engagement task template",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should shown work records which applied both of those templates"
    ],
    "Children": []
  },
  {
    "$id": "6719",
    "FileName": "when_simple_search_work_record.cs",
    "Description": "when simple search work record with revision task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6720",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when simple search tax return work records",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should"
        ],
        "Children": []
      },
      {
        "$id": "6721",
        "FileName": "when_simple_search_work_record.cs",
        "Description": "when simple search other compliance work records",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6722",
    "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
    "Description": "when search assignee assignments of work record uris",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6723",
        "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
        "Description": "when assignee has one client",
        "WhenList": [
          "search assignee assignments"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with assignee assignments only"
        ],
        "Children": []
      },
      {
        "$id": "6724",
        "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
        "Description": "when assignee has two clients",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6725",
            "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
            "Description": "when two assignments is belong to different clients with different start date",
            "WhenList": [
              "search assignee assignments"
            ],
            "ThenList": [
              "should return ok",
              "should return assignee assignments with same client of workrecord"
            ],
            "Children": []
          },
          {
            "$id": "6726",
            "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
            "Description": "when assignments without assignment type but contain different start date",
            "WhenList": [],
            "ThenList": [
              "should return ok",
              "should return assignee assignments"
            ],
            "Children": []
          },
          {
            "$id": "6727",
            "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
            "Description": "when assignee has assignments belonged to different client",
            "WhenList": [
              "search assignee assignments"
            ],
            "ThenList": [
              "should return ok",
              "should return work record with assignee assignments only"
            ],
            "Children": []
          },
          {
            "$id": "6728",
            "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
            "Description": "when assignee has assignments with no assignment types and start dates",
            "WhenList": [
              "search assignee assignments"
            ],
            "ThenList": [
              "should return ok",
              "should return all assignments"
            ],
            "Children": []
          },
          {
            "$id": "6729",
            "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
            "Description": "when assignee has assignments with one with assignment types and another without start date",
            "WhenList": [
              "search assignee assignments"
            ],
            "ThenList": [
              "should return ok",
              "should return work record with assignee assignments only"
            ],
            "Children": []
          },
          {
            "$id": "6730",
            "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
            "Description": "when assignee has assignments with two engagements of one client",
            "WhenList": [
              "search assignee assignments"
            ],
            "ThenList": [
              "should return ok",
              "should return work record with assignee assignments only"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6731",
        "FileName": "when_search_assignee_assignments_of_work_record_uris.cs",
        "Description": "when assignee has only one assignment matched with workrecord",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return assignee assignments"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6732",
    "FileName": "when_batch_search_work_record_by_team.cs",
    "Description": "when batch search work record for batch updating work record teams",
    "WhenList": [],
    "ThenList": [
      "should search with no applied team"
    ],
    "Children": []
  },
  {
    "$id": "6733",
    "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
    "Description": "when search immigration work record with questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6734",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "when questionnaire status is not created",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should only return work records with questionnaire organizer status created"
        ],
        "Children": []
      },
      {
        "$id": "6735",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "when service status is not no issues",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should also return work record"
        ],
        "Children": []
      },
      {
        "$id": "6736",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "when workrecord type is application and current status is initiation",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return immigration application work record"
        ],
        "Children": []
      },
      {
        "$id": "6737",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "when workrecord type is application and current status is assessment",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return immigration application work record"
        ],
        "Children": []
      },
      {
        "$id": "6738",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "when workrecord type is application and current status is in progress",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return immigration application work record"
        ],
        "Children": []
      },
      {
        "$id": "6739",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "when workrecord type is application and current status is post work",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return immigration application work record"
        ],
        "Children": []
      },
      {
        "$id": "6740",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "when workrecord type is application and current status is complete",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return immigration application work record"
        ],
        "Children": []
      },
      {
        "$id": "6741",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "should return empty when search for update questionnaire contact and work record has no questionnaire",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return empty"
        ],
        "Children": []
      },
      {
        "$id": "6742",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "should return empty when search for update questionnaire due date and work record has no questionnaire",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return empty"
        ],
        "Children": []
      },
      {
        "$id": "6743",
        "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
        "Description": "should only return application immigration when workrecord type is application",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6744",
            "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
            "Description": "when search type is update questionnaire contact",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should return immigration application work record"
            ],
            "Children": []
          },
          {
            "$id": "6745",
            "FileName": "when_search_immigration_work_record_with_questionnaire.cs",
            "Description": "when search type is update questionnaire due date",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should return immigration application work record"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6746",
    "FileName": "when_search_online_briefing_work_record.cs",
    "Description": "when search online briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6747",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search with practice type",
        "WhenList": [
          "search with mandatory"
        ],
        "ThenList": [
          "should return ok",
          "should search work record on notify milestone"
        ],
        "Children": []
      },
      {
        "$id": "6748",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search request without practice type",
        "WhenList": [
          "search without practice type"
        ],
        "ThenList": [
          "should return badrequest"
        ],
        "Children": []
      },
      {
        "$id": "6749",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search with engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6750",
            "FileName": "when_search_online_briefing_work_record.cs",
            "Description": "when engagement is active",
            "WhenList": [
              "search with engagement"
            ],
            "ThenList": [
              "should return ok",
              "should search out result"
            ],
            "Children": []
          },
          {
            "$id": "6751",
            "FileName": "when_search_online_briefing_work_record.cs",
            "Description": "when engagement is inactive",
            "WhenList": [
              "search with engagement"
            ],
            "ThenList": [
              "should return ok",
              "should search out result"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6752",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search with responsible office",
        "WhenList": [
          "search with responsible office"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6753",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search with team",
        "WhenList": [
          "search with team"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6754",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search with briefing coordinator",
        "WhenList": [
          "search with briefing coordinator"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6755",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search with country",
        "WhenList": [
          "search with country"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6756",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search tax briefing work record with year",
        "WhenList": [
          "search with year"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6757",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search social security briefing work record with year",
        "WhenList": [
          "search with year"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6758",
        "FileName": "when_search_online_briefing_work_record.cs",
        "Description": "when search briefing work records with issues",
        "WhenList": [
          "search with cancelled work records"
        ],
        "ThenList": [
          "should search out cancelled work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6759",
    "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
    "Description": "when search online briefing work record for batch sending reminders",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6760",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending first reminder with practice type",
        "WhenList": [
          "search with mandatory"
        ],
        "ThenList": [
          "should return ok",
          "should search work record on notify milestone"
        ],
        "Children": []
      },
      {
        "$id": "6761",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending first reminder with engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6762",
            "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
            "Description": "when engagement is active",
            "WhenList": [
              "search with engagement"
            ],
            "ThenList": [
              "should return ok",
              "should search out result"
            ],
            "Children": []
          },
          {
            "$id": "6763",
            "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
            "Description": "when engagement is inactive",
            "WhenList": [
              "search with engagement"
            ],
            "ThenList": [
              "should return ok",
              "should search out result"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6764",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending first reminder with responsible office",
        "WhenList": [
          "search with responsible office"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6765",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending first reminder with team",
        "WhenList": [
          "search with team"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6766",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending first reminder with briefing coordinator",
        "WhenList": [
          "search with briefing coordinator"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6767",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending first reminder with country",
        "WhenList": [
          "search with country"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6768",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending first reminder tax briefing work record with year",
        "WhenList": [
          "search with year"
        ],
        "ThenList": [
          "should return ok",
          "should search out result"
        ],
        "Children": []
      },
      {
        "$id": "6769",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending first reminder social security briefing work record with year",
        "WhenList": [
          "search with year"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "6770",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending first reminder briefing work records with issues",
        "WhenList": [
          "search with cancelled work records"
        ],
        "ThenList": [
          "should search out cancelled work record"
        ],
        "Children": []
      },
      {
        "$id": "6771",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders.cs",
        "Description": "when search for sending final reminder",
        "WhenList": [
          "search with mandatory"
        ],
        "ThenList": [
          "should return ok",
          "should search work record has sent first reminder"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6772",
    "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders_with_UAC.cs",
    "Description": "when search online briefing work record for batch sending reminders with UAC",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6773",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders_with_UAC.cs",
        "Description": "when search by briefing coordinator in subscribed office",
        "WhenList": [
          "search for online briefing"
        ],
        "ThenList": [
          "should return ok",
          "should search out work record as briefing coordinator"
        ],
        "Children": []
      },
      {
        "$id": "6774",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders_with_UAC.cs",
        "Description": "when search by staff in office with task assigned",
        "WhenList": [
          "search for online briefing"
        ],
        "ThenList": [
          "should return ok",
          "should search out work record as briefing coordinator"
        ],
        "Children": []
      },
      {
        "$id": "6775",
        "FileName": "when_search_online_briefing_work_record_for_batch_sending_reminders_with_UAC.cs",
        "Description": "when search by staff in office without task assigned",
        "WhenList": [
          "search for online briefing"
        ],
        "ThenList": [
          "should return ok",
          "should search out work record as briefing coordinator"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6776",
    "FileName": "when_search_online_briefing_work_record_with_UAC.cs",
    "Description": "when search online briefing work record with UAC",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6777",
        "FileName": "when_search_online_briefing_work_record_with_UAC.cs",
        "Description": "when search by briefing coordinator in subscribed office",
        "WhenList": [
          "search for online briefing"
        ],
        "ThenList": [
          "should return ok",
          "should search out work record as briefing coordinator"
        ],
        "Children": []
      },
      {
        "$id": "6778",
        "FileName": "when_search_online_briefing_work_record_with_UAC.cs",
        "Description": "when search by staff in office with task assigned",
        "WhenList": [
          "search for online briefing"
        ],
        "ThenList": [
          "should return ok",
          "should search out work record as briefing coordinator"
        ],
        "Children": []
      },
      {
        "$id": "6779",
        "FileName": "when_search_online_briefing_work_record_with_UAC.cs",
        "Description": "when search by staff in office without task assigned",
        "WhenList": [
          "search for online briefing"
        ],
        "ThenList": [
          "should return ok",
          "should search out work record as briefing coordinator"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6780",
    "FileName": "when_search_social_security_work_record.cs",
    "Description": "when search social security work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6781",
        "FileName": "when_search_social_security_work_record.cs",
        "Description": "when search coc",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return work records"
        ],
        "Children": []
      },
      {
        "$id": "6782",
        "FileName": "when_search_social_security_work_record.cs",
        "Description": "when search other compliance",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6783",
    "FileName": "when_search_work_record.cs",
    "Description": "when search work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6784",
        "FileName": "when_search_work_record.cs",
        "Description": "when simple search",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return created work record"
        ],
        "Children": []
      },
      {
        "$id": "6785",
        "FileName": "when_search_work_record.cs",
        "Description": "when current user as restricted engagement delegated coordinating office",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return work record"
        ],
        "Children": []
      },
      {
        "$id": "6786",
        "FileName": "when_search_work_record.cs",
        "Description": "when simple search by tax return only",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return created work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6787",
    "FileName": "when_search_work_record_by_check_list_template.cs",
    "Description": "when search work record by check list template",
    "WhenList": [],
    "ThenList": [
      "should return check list work record"
    ],
    "Children": []
  },
  {
    "$id": "6788",
    "FileName": "when_search_work_record_by_completed.cs",
    "Description": "when search work record by completed",
    "WhenList": [],
    "ThenList": [
      "should return uncomplete work record"
    ],
    "Children": []
  },
  {
    "$id": "6789",
    "FileName": "when_search_work_record_by_current_status.cs",
    "Description": "when search work record by current status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6790",
        "FileName": "when_search_work_record_by_current_status.cs",
        "Description": "when search other compliance work record",
        "WhenList": [],
        "ThenList": [
          "should return created work record"
        ],
        "Children": []
      },
      {
        "$id": "6791",
        "FileName": "when_search_work_record_by_current_status.cs",
        "Description": "when search tax return work record",
        "WhenList": [],
        "ThenList": [
          "should return created work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6792",
    "FileName": "when_search_work_record_by_engagement.cs",
    "Description": "when search work record by engagement",
    "WhenList": [],
    "ThenList": [
      "should return work record of assignees under specified engagement",
      "should return work record of assignees under specified engagements",
      "should return empty list",
      "should return all work records"
    ],
    "Children": []
  },
  {
    "$id": "6793",
    "FileName": "when_search_work_record_by_engagement.cs",
    "Description": "when throw exception when engagement uri is invalid",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 400 bad request"
    ],
    "Children": []
  },
  {
    "$id": "6794",
    "FileName": "when_search_work_record_by_final_reminder_type.cs",
    "Description": "when search work record by final reminder type",
    "WhenList": [
      "search work records"
    ],
    "ThenList": [
      "should return ok",
      "should return work records in notified and in process and first reminder has been sent"
    ],
    "Children": []
  },
  {
    "$id": "6795",
    "FileName": "when_search_work_record_by_final_reminder_type_with_questionnaires_due_date_filter.cs",
    "Description": "when search work record by final reminder type with questionnaires due date filter",
    "WhenList": [
      "search final reminder work record with due date filter"
    ],
    "ThenList": [
      "should return ok",
      "should return work records which due date within 2 days"
    ],
    "Children": []
  },
  {
    "$id": "6796",
    "FileName": "when_search_work_record_by_first_reminder_type.cs",
    "Description": "when search work record by first reminder type",
    "WhenList": [
      "search work records"
    ],
    "ThenList": [
      "should return ok",
      "should return work records in notified and in process and no reminder has been sent"
    ],
    "Children": []
  },
  {
    "$id": "6797",
    "FileName": "when_search_work_record_by_first_reminder_type_with_questionnaires_due_date_filter.cs",
    "Description": "when search work record by first reminder type with questionnaires due date filter",
    "WhenList": [
      "search first reminder work record with due date filter"
    ],
    "ThenList": [
      "should return ok",
      "should return work records which due date within 2 days"
    ],
    "Children": []
  },
  {
    "$id": "6798",
    "FileName": "when_search_work_record_by_has_milestone_initiated.cs",
    "Description": "when search work record by has milestone initiated",
    "WhenList": [],
    "ThenList": [
      "should only return initiated milestone work record"
    ],
    "Children": []
  },
  {
    "$id": "6799",
    "FileName": "when_search_work_record_by_milestone_reponsible_office.cs",
    "Description": "when search work record by milestone reponsible office",
    "WhenList": [],
    "ThenList": [
      "should return work record with milestone in preparation reponsible office shanghai",
      "should return bad request when milestone in preparation but no milestone responsible office",
      "should return word records when milestone responsible office shanghai",
      "should return all work records"
    ],
    "Children": []
  },
  {
    "$id": "6800",
    "FileName": "when_search_work_record_by_milestone_reponsible_office.cs",
    "Description": "when throw exception when milestone responsible office uri is invalid",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 400 bad request"
    ],
    "Children": []
  },
  {
    "$id": "6801",
    "FileName": "when_search_work_record_by_non_default_task_template.cs",
    "Description": "when search work record by no default task template",
    "WhenList": [],
    "ThenList": [
      "should return default task templates work record"
    ],
    "Children": []
  },
  {
    "$id": "6802",
    "FileName": "when_search_work_record_by_organizer_status.cs",
    "Description": "when search work record by organizer status",
    "WhenList": [],
    "ThenList": [
      "should return created work record"
    ],
    "Children": []
  },
  {
    "$id": "6803",
    "FileName": "when_search_work_record_by_questionnaire-contact.cs",
    "Description": "when search work record by questionnaire contact",
    "WhenList": [],
    "ThenList": [
      "should return tax work record with contact",
      "should return immigration work record with contact"
    ],
    "Children": []
  },
  {
    "$id": "6804",
    "FileName": "when_search_work_record_by_reponsible_office.cs",
    "Description": "when search work record by reponsible office",
    "WhenList": [],
    "ThenList": [
      "should return work record with reponsible office shanghai",
      "should return all work records"
    ],
    "Children": []
  },
  {
    "$id": "6805",
    "FileName": "when_search_work_record_by_reponsible_office.cs",
    "Description": "when throw exception when responsible office uri is invalid",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 400 bad request"
    ],
    "Children": []
  },
  {
    "$id": "6806",
    "FileName": "when_search_work_record_by_send_questionnaire_type.cs",
    "Description": "when search work record by send questionnaire type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6807",
        "FileName": "when_search_work_record_by_send_questionnaire_type.cs",
        "Description": "should search all the work record with work record created status",
        "WhenList": [
          "search for send questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should return work records in created status"
        ],
        "Children": []
      },
      {
        "$id": "6808",
        "FileName": "when_search_work_record_by_send_questionnaire_type.cs",
        "Description": "should only search work record with not tracking questionnaire",
        "WhenList": [
          "search for send questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should return work records with not tracking questionnaire"
        ],
        "Children": []
      },
      {
        "$id": "6809",
        "FileName": "when_search_work_record_by_send_questionnaire_type.cs",
        "Description": "should search restricted work record with engagement delegated office secondary contact is current user",
        "WhenList": [
          "search for send questionnaire"
        ],
        "ThenList": [
          "should return ok",
          "should return work records in created status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6810",
    "FileName": "when_search_work_record_by_tax_regime.cs",
    "Description": "when search work record by tax jurisdiction",
    "WhenList": [],
    "ThenList": [
      "should return china service work record",
      "should not found any work record",
      "should return all work records"
    ],
    "Children": []
  },
  {
    "$id": "6811",
    "FileName": "when_search_work_record_by_tax_regime.cs",
    "Description": "when throw exception when country uri is invalid",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should return 400 bad request"
    ],
    "Children": []
  },
  {
    "$id": "6812",
    "FileName": "when_search_work_record_by_tax_year.cs",
    "Description": "when search work record by tax year",
    "WhenList": [],
    "ThenList": [
      "should return work record with year ending 2010",
      "should return all work records"
    ],
    "Children": []
  },
  {
    "$id": "6813",
    "FileName": "when_search_work_record_by_team.cs",
    "Description": "when search work record by team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6814",
        "FileName": "when_search_work_record_by_team.cs",
        "Description": "when specifiy a team uri",
        "WhenList": [
          "search work record by team"
        ],
        "ThenList": [
          "should return work record with blink team"
        ],
        "Children": []
      },
      {
        "$id": "6815",
        "FileName": "when_search_work_record_by_team.cs",
        "Description": "when do not specify a team uri",
        "WhenList": [
          "search with out team uri"
        ],
        "ThenList": [
          "should return ok",
          "should search work record successfully without team"
        ],
        "Children": []
      },
      {
        "$id": "6816",
        "FileName": "when_search_work_record_by_team.cs",
        "Description": "when search with no team applied",
        "WhenList": [
          "search with no team applied"
        ],
        "ThenList": [
          "should return ok",
          "should search work record successfully without team"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6817",
    "FileName": "when_search_work_record_by_team.cs",
    "Description": "when throw exception when team uri is invalid",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should search 0 work record"
    ],
    "Children": []
  },
  {
    "$id": "6818",
    "FileName": "when_search_work_record_check_result.cs",
    "Description": "when search work record check result",
    "WhenList": [],
    "ThenList": [
      "should return work record"
    ],
    "Children": []
  },
  {
    "$id": "6819",
    "FileName": "when_search_work_record_without_revision_task.cs",
    "Description": "when search work record without revision task",
    "WhenList": [],
    "ThenList": [
      "should return non default task templates work record"
    ],
    "Children": []
  },
  {
    "$id": "6820",
    "FileName": "when_search_work_record_with_go_migration_inactive_assignee.cs",
    "Description": "when search work record with go migration inactive assignee",
    "WhenList": [
      "search work record"
    ],
    "ThenList": [
      "should return one work record"
    ],
    "Children": []
  },
  {
    "$id": "6821",
    "FileName": "when_search_work_record_with_inactive_engagement.cs",
    "Description": "when search work record with inactive engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6822",
        "FileName": "when_search_work_record_with_inactive_engagement.cs",
        "Description": "when search tax return work record that have inactive engagement",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not include inactived"
        ],
        "Children": []
      },
      {
        "$id": "6823",
        "FileName": "when_search_work_record_with_inactive_engagement.cs",
        "Description": "when search tax other work record that have inactive engagement",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not include inactived"
        ],
        "Children": []
      },
      {
        "$id": "6824",
        "FileName": "when_search_work_record_with_inactive_engagement.cs",
        "Description": "when search immigration work record that have inactive engagement",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not include inactived"
        ],
        "Children": []
      },
      {
        "$id": "6825",
        "FileName": "when_search_work_record_with_inactive_engagement.cs",
        "Description": "when search social security work record that have inactive engagement",
        "WhenList": [
          "simple search work records"
        ],
        "ThenList": [
          "should return ok",
          "should not include inactived"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6826",
    "FileName": "when_search_work_record_with_questionnaire.cs",
    "Description": "when search work record with questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6827",
        "FileName": "when_search_work_record_with_questionnaire.cs",
        "Description": "when search tax return work record",
        "WhenList": [
          "search work record",
          "search work records for batch updating questionnaire contact",
          "search work records for batch updating questionnaire contact"
        ],
        "ThenList": [
          "should return ok",
          "should only return work records with questionnaire",
          "should return non work record results",
          "should return non work record results"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6828",
    "FileName": "when_search_work_record_with_top_param.cs",
    "Description": "when search work record with top param",
    "WhenList": [],
    "ThenList": [
      "should return top 1 work record"
    ],
    "Children": []
  },
  {
    "$id": "6829",
    "FileName": "when_search_work_record_by_tax_contact.cs",
    "Description": "when search work record by tax contact",
    "WhenList": [],
    "ThenList": [
      "should return created work record"
    ],
    "Children": []
  },
  {
    "$id": "6830",
    "FileName": "when_search_work_record_by_tax_contact_id.cs",
    "Description": "when search work record by tax contact id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6831",
        "FileName": "when_search_work_record_by_tax_contact_id.cs",
        "Description": "when search work record by valid tax contact id",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200",
          "should return all tax return work records with given tax contact"
        ],
        "Children": []
      },
      {
        "$id": "6832",
        "FileName": "when_search_work_record_by_tax_contact_id.cs",
        "Description": "when search work record by invalid tax contact id less than zero",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request"
        ],
        "Children": []
      },
      {
        "$id": "6833",
        "FileName": "when_search_work_record_by_tax_contact_id.cs",
        "Description": "when get tax return work records by invalid tax contact id not a number",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6834",
    "FileName": "when_search_work_record_by_tax_contact_of_inactive_assignee.cs",
    "Description": "when search work record by tax contact of inactive assignee",
    "WhenList": [
      "search by tax contact"
    ],
    "ThenList": [
      "should return ok",
      "should return only from active assignee"
    ],
    "Children": []
  },
  {
    "$id": "6835",
    "FileName": "when_search_work_record_uri_with_inactive_assignee.cs",
    "Description": "when search work record uri with inactive assignee",
    "WhenList": [
      "send a search request"
    ],
    "ThenList": [
      "should succeed",
      "should return two work record uris ordered by assignee name"
    ],
    "Children": []
  },
  {
    "$id": "6836",
    "FileName": "when_search_problematic_work_record_by_uris.cs",
    "Description": "when search problematic work record by uris",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6837",
        "FileName": "when_search_problematic_work_record_by_uris.cs",
        "Description": "when search tax work record",
        "WhenList": [
          "send request with uris"
        ],
        "ThenList": [
          "should succeed",
          "should return work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6838",
    "FileName": "when_search_work_records.cs",
    "Description": "when search work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6839",
        "FileName": "when_search_work_records.cs",
        "Description": "should return work record info given tax workrecord uris",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return tax work record info"
        ],
        "Children": []
      },
      {
        "$id": "6840",
        "FileName": "when_search_work_records.cs",
        "Description": "should return work record info given immi workrecord uris",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return tax work record info"
        ],
        "Children": []
      },
      {
        "$id": "6841",
        "FileName": "when_search_work_records.cs",
        "Description": "should return result in given order from request",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return work records in another given order"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6842",
    "FileName": "when_search_work_records_by_uri_with_restrict_assignee.cs",
    "Description": "when search work records with restrict assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6843",
        "FileName": "when_search_work_records_by_uri_with_restrict_assignee.cs",
        "Description": "when search by uri",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created work record"
        ],
        "Children": []
      },
      {
        "$id": "6844",
        "FileName": "when_search_work_records_by_uri_with_restrict_assignee.cs",
        "Description": "when advance search",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created work record"
        ],
        "Children": []
      },
      {
        "$id": "6845",
        "FileName": "when_search_work_records_by_uri_with_restrict_assignee.cs",
        "Description": "when simple search",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6846",
    "FileName": "when_search_work_record_by_different_roles.cs",
    "Description": "when search work record by different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6847",
        "FileName": "when_search_work_record_by_different_roles.cs",
        "Description": "when search by staff in work record responsible office",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with reponsible office shanghai"
        ],
        "Children": []
      },
      {
        "$id": "6848",
        "FileName": "when_search_work_record_by_different_roles.cs",
        "Description": "when search by staff in work record team",
        "WhenList": [
          "search work record by team"
        ],
        "ThenList": [
          "should return ok",
          "should return work record with blink team"
        ],
        "Children": []
      },
      {
        "$id": "6849",
        "FileName": "when_search_work_record_by_different_roles.cs",
        "Description": "when search by staff without responsiblity",
        "WhenList": [
          "search work records"
        ],
        "ThenList": [
          "should return ok",
          "should return work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6850",
    "FileName": "when_search_work_record_by_uris.cs",
    "Description": "when search work record by uris",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6851",
        "FileName": "when_search_work_record_by_uris.cs",
        "Description": "when search work record on batch send questionnaire page",
        "WhenList": [
          "send request with uris"
        ],
        "ThenList": [
          "should return work records with can be updated status"
        ],
        "Children": []
      },
      {
        "$id": "6852",
        "FileName": "when_search_work_record_by_uris.cs",
        "Description": "when search immigration work record",
        "WhenList": [
          "send request with uris"
        ],
        "ThenList": [
          "should succeed",
          "should return work records"
        ],
        "Children": []
      },
      {
        "$id": "6853",
        "FileName": "when_search_work_record_by_uris.cs",
        "Description": "when search tax work record",
        "WhenList": [
          "send request with uris"
        ],
        "ThenList": [
          "should succeed",
          "should return work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6854",
    "FileName": "when_search_work_record_with_checklist_template.cs",
    "Description": "when search work record with checklist template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6855",
        "FileName": "when_search_work_record_with_checklist_template.cs",
        "Description": "when search work record by uris with unfinished checklist task",
        "WhenList": [
          "serach work record by search by uri"
        ],
        "ThenList": [
          "should show work record has unfinished checklist task"
        ],
        "Children": []
      },
      {
        "$id": "6856",
        "FileName": "when_search_work_record_with_checklist_template.cs",
        "Description": "when search work record by uris with finished checklist task",
        "WhenList": [
          "serach work record by search by uri"
        ],
        "ThenList": [
          "should show work record does not have unfinished checklist task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6857",
    "FileName": "when_search_work_record_with_questionnaire_contact_office_has_team_mailbox_with_dispaly_name.cs",
    "Description": "when search work record with questionnaire contact office has team mailbox with dispaly name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6858",
        "FileName": "when_search_work_record_with_questionnaire_contact_office_has_team_mailbox_with_dispaly_name.cs",
        "Description": "when search work record by uris while its organizer has both team mail displayname and contact",
        "WhenList": [
          "when batch search work record for batch update quesionnaire contact"
        ],
        "ThenList": [
          "should get team mailbox display name as the contact name"
        ],
        "Children": []
      },
      {
        "$id": "6859",
        "FileName": "when_search_work_record_with_questionnaire_contact_office_has_team_mailbox_with_dispaly_name.cs",
        "Description": "when search work record by uris while its organizer only has team mail displayname",
        "WhenList": [
          "when batch search work record for batch update quesionnaire contact"
        ],
        "ThenList": [
          "should get team mailbox display name as the contact name"
        ],
        "Children": []
      },
      {
        "$id": "6860",
        "FileName": "when_search_work_record_with_questionnaire_contact_office_has_team_mailbox_with_dispaly_name.cs",
        "Description": "when search work record by uris with two records",
        "WhenList": [
          "serach work record by search by uri"
        ],
        "ThenList": [
          "should search result ordered by assignee lastname and then firstname"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6861",
    "FileName": "when_search_immigration_work_record_with_service_evaluation.cs",
    "Description": "when search immigration work record with service evaluation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6862",
        "FileName": "when_search_immigration_work_record_with_service_evaluation.cs",
        "Description": "should return return two immigration work records when both to evaluation enabled",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return two work record with immigration practice type and evaluation not sent"
        ],
        "Children": []
      },
      {
        "$id": "6863",
        "FileName": "when_search_immigration_work_record_with_service_evaluation.cs",
        "Description": "should return return application immigration work records when work record type is application",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return 1 application immigration"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6864",
    "FileName": "when_search_social_security_work_record_with_service_evaluation.cs",
    "Description": "when search social security work record with service evaluation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6865",
        "FileName": "when_search_social_security_work_record_with_service_evaluation.cs",
        "Description": "should return return two social security work records when both to evaluation enabled",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return two work record with social security practice type"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6866",
    "FileName": "when_search_tax_work_record_with_service_evaluation.cs",
    "Description": "when search tax work record with service evaluation",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6867",
        "FileName": "when_search_tax_work_record_with_service_evaluation.cs",
        "Description": "should return all tax work record with organizer with selected engagement",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return all work record"
        ],
        "Children": []
      },
      {
        "$id": "6868",
        "FileName": "when_search_tax_work_record_with_service_evaluation.cs",
        "Description": "should return all tax work record with organizer with selected engagement whose evaluation enabled",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return all work record"
        ],
        "Children": []
      },
      {
        "$id": "6869",
        "FileName": "when_search_tax_work_record_with_service_evaluation.cs",
        "Description": "should only return tax return work record of vip assignee",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should only return two work record with tax practice type"
        ],
        "Children": []
      },
      {
        "$id": "6870",
        "FileName": "when_search_tax_work_record_with_service_evaluation.cs",
        "Description": "should return tax work record with evaluation if yes to evaluation enabled",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should only return work record with evaluation"
        ],
        "Children": []
      },
      {
        "$id": "6871",
        "FileName": "when_search_tax_work_record_with_service_evaluation.cs",
        "Description": "should return tax work record without evaluation if no to evaluation enabled",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should only return work record without evaluation"
        ],
        "Children": []
      },
      {
        "$id": "6872",
        "FileName": "when_search_tax_work_record_with_service_evaluation.cs",
        "Description": "should return all tax work record with organizer with selected tax year",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return all work record"
        ],
        "Children": []
      },
      {
        "$id": "6873",
        "FileName": "when_search_tax_work_record_with_service_evaluation.cs",
        "Description": "should return all tax work record with organizer with selected country",
        "WhenList": [
          "search work record"
        ],
        "ThenList": [
          "should return ok",
          "should return all work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6874",
    "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
    "Description": "when search work records for service evaluation with team",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6875",
        "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
        "Description": "when tax practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6876",
            "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
            "Description": "should return all work records with evaluation if no team specified",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should return all work record"
            ],
            "Children": []
          },
          {
            "$id": "6877",
            "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
            "Description": "should return only work records with team if specify a team criteria",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should only return work record with team"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6878",
        "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
        "Description": "when immigration practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6879",
            "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
            "Description": "should return all work records with evaluation if no team specified",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should return all work record"
            ],
            "Children": []
          },
          {
            "$id": "6880",
            "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
            "Description": "should return all work records with evaluation if specify a team",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should return only work record with team"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6881",
        "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
        "Description": "when social security practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6882",
            "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
            "Description": "should return all work records with evaluation if no team specified",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should return all work record"
            ],
            "Children": []
          },
          {
            "$id": "6883",
            "FileName": "when_search_work_records_for_service_evaluation_with_team.cs",
            "Description": "should return all work records with evaluation if specify a team",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should return only work record with team"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6884",
    "FileName": "when_search_work_records_for_service_evaluation_with_team_by_uac.cs",
    "Description": "when search work records for service evaluation with team by uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6885",
        "FileName": "when_search_work_records_for_service_evaluation_with_team_by_uac.cs",
        "Description": "when tax practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6886",
            "FileName": "when_search_work_records_for_service_evaluation_with_team_by_uac.cs",
            "Description": "should return work records with team",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should return work record with team"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6887",
        "FileName": "when_search_work_records_for_service_evaluation_with_team_by_uac.cs",
        "Description": "when immigration practice type",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6888",
            "FileName": "when_search_work_records_for_service_evaluation_with_team_by_uac.cs",
            "Description": "should return work records with team",
            "WhenList": [
              "search work record"
            ],
            "ThenList": [
              "should return ok",
              "should return work record with team"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6889",
        "FileName": "when_search_work_records_for_service_evaluation_with_team_by_uac.cs",
        "Description": "when social security practice type",
        "WhenList": [
          "search work records for evaluation"
        ],
        "ThenList": [
          "should return ok",
          "should only return work record with team that current user in"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6890",
    "FileName": "when_get_social_security_work_record_by_id.cs",
    "Description": "when get social security work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6891",
        "FileName": "when_get_social_security_work_record_by_id.cs",
        "Description": "when get social security work record by id without engagement",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should return success",
          "should return work record information",
          "should not contain tax return download reminder"
        ],
        "Children": []
      },
      {
        "$id": "6892",
        "FileName": "when_get_social_security_work_record_by_id.cs",
        "Description": "when get social security work record by id with engagement",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should return success",
          "should return work record engagement"
        ],
        "Children": []
      },
      {
        "$id": "6893",
        "FileName": "when_get_social_security_work_record_by_id.cs",
        "Description": "before submitted to authoritied",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should return missing item addition link"
        ],
        "Children": []
      },
      {
        "$id": "6894",
        "FileName": "when_get_social_security_work_record_by_id.cs",
        "Description": "after submitted to authoritied",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should not return missing item addition link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6895",
    "FileName": "when_get_social_security_work_record_by_id_with_restricted_assignee.cs",
    "Description": "when get social security work record by id with restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6896",
        "FileName": "when_get_social_security_work_record_by_id_with_restricted_assignee.cs",
        "Description": "before submitted to authoritied with restricted assignee",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should return 400"
        ],
        "Children": []
      },
      {
        "$id": "6897",
        "FileName": "when_get_social_security_work_record_by_id_with_restricted_assignee.cs",
        "Description": "after submitted to authoritied with restricted assignee",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should return 400"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6898",
    "FileName": "when_get_social_security_work_record_by_id_with_restricted_assignee.cs",
    "Description": "when get social security work record by id with restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6899",
        "FileName": "when_get_social_security_work_record_by_id_with_restricted_assignee.cs",
        "Description": "before submitted to authoritied with restricted engagement",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should return 400"
        ],
        "Children": []
      },
      {
        "$id": "6900",
        "FileName": "when_get_social_security_work_record_by_id_with_restricted_assignee.cs",
        "Description": "after submitted to authoritied with restricted engagement",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should return 400"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6901",
    "FileName": "when_get_social_security_work_record_of_inactive_assignee.cs",
    "Description": "when get social security work record of inactive assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6902",
        "FileName": "when_get_social_security_work_record_of_inactive_assignee.cs",
        "Description": "when get social security work record by general staff",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should return 200",
          "should get no action links"
        ],
        "Children": []
      },
      {
        "$id": "6903",
        "FileName": "when_get_social_security_work_record_of_inactive_assignee.cs",
        "Description": "when get social security work record by global admin",
        "WhenList": [
          "get social security work record"
        ],
        "ThenList": [
          "should return 200",
          "should get no action links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6904",
    "FileName": "when_reassign_work_record_checklist.cs",
    "Description": "when reassign work record checklist",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should assign responsibility",
      "should get check list as to do"
    ],
    "Children": []
  },
  {
    "$id": "6905",
    "FileName": "when_reassign_work_record_checklist_to_staff_not_in_restricted_assignee_acl.cs",
    "Description": "when reassign work record checklist to staff not in restricted assignee acl",
    "WhenList": [
      "send reassign request"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "6906",
    "FileName": "when_reassign_work_record_checklist_to_staff_not_in_work_offices.cs",
    "Description": "when reassign work record checklist to staff not in work offices",
    "WhenList": [
      "send reassign request"
    ],
    "ThenList": [
      "should return bad request",
      "should not reassign"
    ],
    "Children": []
  },
  {
    "$id": "6907",
    "FileName": "when_reassign_work_record_checklist_to_staff_not_on_engagement_acl.cs",
    "Description": "when reassign work record checklist to staff not on engagement acl",
    "WhenList": [
      "send reassign request"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "6908",
    "FileName": "when_reassign_work_record_checklist_with_access_check.cs",
    "Description": "when reassign work record checklist with access check",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6909",
    "FileName": "when_reassign_work_record_task_status_with_access_check.cs",
    "Description": "when reassign work record task status with access check",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6910",
        "FileName": "when_reassign_work_record_task_status_with_access_check.cs",
        "Description": "when grace not in responsible offices reassign sofia task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "6911",
        "FileName": "when_reassign_work_record_task_status_with_access_check.cs",
        "Description": "when grace in coordinating office reassign sofia task to another staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6912",
    "FileName": "when_reassign_work_record_task_to_staff_not_in_restricted_assignee_acl.cs",
    "Description": "when reassign work record task to staff not in restricted assignee acl",
    "WhenList": [
      "when send reassign request"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "6913",
    "FileName": "when_reassign_work_record_task_to_staff_not_in_restricted_engagement_acl.cs",
    "Description": "when reassign work record task to staff not in restricted engagement acl",
    "WhenList": [
      "send reassign request"
    ],
    "ThenList": [
      "should return forbidden",
      "should not reassign"
    ],
    "Children": []
  },
  {
    "$id": "6914",
    "FileName": "when_reassign_work_record_task_to_staff_not_in_work_offices.cs",
    "Description": "when reassign work record task to staff not in work offices",
    "WhenList": [
      "send reassign request"
    ],
    "ThenList": [
      "should return bad request",
      "should not reassign"
    ],
    "Children": []
  },
  {
    "$id": "6915",
    "FileName": "when_grace_in_restricted_assignee_acl_reassign_work_record_task_to_staff.cs",
    "Description": "when grace in restricted assignee acl reassign work record task to staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6916",
        "FileName": "when_grace_in_restricted_assignee_acl_reassign_work_record_task_to_staff.cs",
        "Description": "when grace in acl",
        "WhenList": [
          "when send reassign request"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "6917",
        "FileName": "when_grace_in_restricted_assignee_acl_reassign_work_record_task_to_staff.cs",
        "Description": "when grace not in acl",
        "WhenList": [
          "when send reassign request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6918",
    "FileName": "when_grace_in_restricted_engagement_acl_reassign_work_record_task_to_staff.cs",
    "Description": "when grace in restricted engagement acl reassign work record task to staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6919",
        "FileName": "when_grace_in_restricted_engagement_acl_reassign_work_record_task_to_staff.cs",
        "Description": "when grace in acl",
        "WhenList": [
          "send reassign request"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "6920",
        "FileName": "when_grace_in_restricted_engagement_acl_reassign_work_record_task_to_staff.cs",
        "Description": "when grace not in acl",
        "WhenList": [
          "send reassign request"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6921",
    "FileName": "when_grace_reassign_work_record_task_to_another_staff.cs",
    "Description": "when grace reassign work record task to another staff",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return ok",
      "should assign responsibility",
      "should get task as to do",
      "should record hisotry when reassign"
    ],
    "Children": []
  },
  {
    "$id": "6922",
    "FileName": "when_grace_reassign_work_record_task_to_staff_in_engagement_responsible_offices.cs",
    "Description": "when grace reassign work record task to staff in engagement responsible offices",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6923",
        "FileName": "when_grace_reassign_work_record_task_to_staff_in_engagement_responsible_offices.cs",
        "Description": "should reassign work record task to staff in engagement coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should assign responsibility"
        ],
        "Children": []
      },
      {
        "$id": "6924",
        "FileName": "when_grace_reassign_work_record_task_to_staff_in_engagement_responsible_offices.cs",
        "Description": "should reassign work record task to staff in engagement working office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should assign responsibility"
        ],
        "Children": []
      },
      {
        "$id": "6925",
        "FileName": "when_grace_reassign_work_record_task_to_staff_in_engagement_responsible_offices.cs",
        "Description": "should reassign work record task to staff not in engagement responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6926",
    "FileName": "WorkRecordRevisionTasksCrossOutSpec.cs",
    "Description": "work record revision tasks cross out spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6927",
        "FileName": "WorkRecordRevisionTasksCrossOutSpec.cs",
        "Description": "when cancel task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 409 conflict"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6928",
    "FileName": "WorkRecordsRevisionTaskCreateForFirstMilestoneSpec.cs",
    "Description": "work records revision task create for first milestone spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6929",
        "FileName": "WorkRecordsRevisionTaskCreateForFirstMilestoneSpec.cs",
        "Description": "when add revision task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 409 conflict"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6930",
    "FileName": "WorkRecordsRevisionTaskCreateLinkSpec.cs",
    "Description": "work records revision task create link spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6931",
        "FileName": "WorkRecordsRevisionTaskCreateLinkSpec.cs",
        "Description": "when get work record with current milestone in review",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should contain revision create link on current milestone"
        ],
        "Children": []
      },
      {
        "$id": "6932",
        "FileName": "WorkRecordsRevisionTaskCreateLinkSpec.cs",
        "Description": "when get work record with current milestone inited",
        "WhenList": [],
        "ThenList": [
          "should not contain revision create link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6933",
    "FileName": "WorkRecordsRevisionTaskCreateSpec.cs",
    "Description": "work records revision task create spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6934",
        "FileName": "WorkRecordsRevisionTaskCreateSpec.cs",
        "Description": "when add revision task with responsibity",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should load newly created revision task with work record",
          "should create to do item for staff"
        ],
        "Children": []
      },
      {
        "$id": "6935",
        "FileName": "WorkRecordsRevisionTaskCreateSpec.cs",
        "Description": "when add revision task without responsibity",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should load newly created revision task with work record"
        ],
        "Children": []
      },
      {
        "$id": "6936",
        "FileName": "WorkRecordsRevisionTaskCreateSpec.cs",
        "Description": "when add revision task by staff work record team without responsibity",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 201 created",
          "should load newly created revision task with work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6937",
    "FileName": "WorkRecordsRevisionTaskCreateWithInValidResponsibleOfficeSpec.cs",
    "Description": "work records revision task create with in valid responsible office spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6938",
        "FileName": "WorkRecordsRevisionTaskCreateWithInValidResponsibleOfficeSpec.cs",
        "Description": "when add revision task with assigned office not in engagements responsibile office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 400 bad request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6939",
    "FileName": "WorkRecordsRevisionTaskCreateWithUACSpec.cs",
    "Description": "work records revision task create with UAC spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6940",
        "FileName": "WorkRecordsRevisionTaskCreateWithUACSpec.cs",
        "Description": "should get revision task create link for staff from work record responsible office",
        "WhenList": [
          "of",
          "should return created when adding revision task"
        ],
        "ThenList": [
          "should contain revision task add link"
        ],
        "Children": []
      },
      {
        "$id": "6941",
        "FileName": "WorkRecordsRevisionTaskCreateWithUACSpec.cs",
        "Description": "should get revision task create link for staff from work record team",
        "WhenList": [
          "of",
          "should return created when adding revision task"
        ],
        "ThenList": [
          "should contain revision task add link"
        ],
        "Children": []
      },
      {
        "$id": "6942",
        "FileName": "WorkRecordsRevisionTaskCreateWithUACSpec.cs",
        "Description": "should get revision task create link for staff assigned to task",
        "WhenList": [
          "of",
          "should return forbidden when adding revision task"
        ],
        "ThenList": [
          "should contain revision task add link"
        ],
        "Children": []
      },
      {
        "$id": "6943",
        "FileName": "WorkRecordsRevisionTaskCreateWithUACSpec.cs",
        "Description": "should not get revision task create link when staff is not in work record responsible office and not assigned to task",
        "WhenList": [],
        "ThenList": [
          "should return forbidden when adding revision task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6944",
    "FileName": "when_get_work_record_check_list_infomation.cs",
    "Description": "when get work record check list infomation",
    "WhenList": [
      "get check list item detail"
    ],
    "ThenList": [
      "should return ok",
      "should get work record practice type",
      "should get engaged offices id"
    ],
    "Children": []
  },
  {
    "$id": "6945",
    "FileName": "SocialSecurityWorkRecordCertificateReceivedTaskSpec.cs",
    "Description": "social security work record certificate received task spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6946",
        "FileName": "SocialSecurityWorkRecordCertificateReceivedTaskSpec.cs",
        "Description": "when using default milestones",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6947",
            "FileName": "SocialSecurityWorkRecordCertificateReceivedTaskSpec.cs",
            "Description": "when valid period is entered",
            "WhenList": [
              "updating task status"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6948",
        "FileName": "SocialSecurityWorkRecordCertificateReceivedTaskSpec.cs",
        "Description": "when using task template with 2 complete tasks",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6949",
            "FileName": "SocialSecurityWorkRecordCertificateReceivedTaskSpec.cs",
            "Description": "when valid period is entered",
            "WhenList": [
              "updating task status"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          },
          {
            "$id": "6950",
            "FileName": "SocialSecurityWorkRecordCertificateReceivedTaskSpec.cs",
            "Description": "when valid period is not entered and update only one complete task",
            "WhenList": [
              "updating task status"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "6951",
    "FileName": "when_batch_update_employer_work_record_task_status.cs",
    "Description": "when batch update employer work record task status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6952",
        "FileName": "when_batch_update_employer_work_record_task_status.cs",
        "Description": "when sofia start task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should start task"
        ],
        "Children": []
      },
      {
        "$id": "6953",
        "FileName": "when_batch_update_employer_work_record_task_status.cs",
        "Description": "when sofia undo task",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6954",
            "FileName": "when_batch_update_employer_work_record_task_status.cs",
            "Description": "should invalid when task is not at current milestone",
            "WhenList": [
              "undo"
            ],
            "ThenList": [
              "should return conflict"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6955",
        "FileName": "when_batch_update_employer_work_record_task_status.cs",
        "Description": "when sofia cross out task",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "6956",
            "FileName": "when_batch_update_employer_work_record_task_status.cs",
            "Description": "should not cross out when milestone only has one task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return conflict"
            ],
            "Children": []
          },
          {
            "$id": "6957",
            "FileName": "when_batch_update_employer_work_record_task_status.cs",
            "Description": "should not cross out when task not at current milestone",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "6958",
        "FileName": "when_batch_update_employer_work_record_task_status.cs",
        "Description": "when sofia finish task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should finish task",
          "should move to next milestone"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6959",
    "FileName": "when_complete_work_record_milestone_tasks.cs",
    "Description": "when complete work record milestone tasks",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6960",
        "FileName": "when_complete_work_record_milestone_tasks.cs",
        "Description": "when finish task of first miletone with completion date earlier than work record creation date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should finish tasks",
          "should not update work record status"
        ],
        "Children": []
      },
      {
        "$id": "6961",
        "FileName": "when_complete_work_record_milestone_tasks.cs",
        "Description": "when finish multiple task of first miletone with completion date earlier than work record creation date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should finish tasks",
          "should not update work record status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6962",
    "FileName": "when_get_check_list_items_by_work_record_id.cs",
    "Description": "when get check list items by work record id",
    "WhenList": [
      "get checklist items by work record id"
    ],
    "ThenList": [
      "should return ok",
      "should get checklist items"
    ],
    "Children": []
  },
  {
    "$id": "6963",
    "FileName": "when_update_work_record_tasks.cs",
    "Description": "when update work record tasks",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6964",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when finish first and second unfinished task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should finish tasks",
          "should not update work record status"
        ],
        "Children": []
      },
      {
        "$id": "6965",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when finish an already finished task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should conflict",
          "should finish tasks"
        ],
        "Children": []
      },
      {
        "$id": "6966",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when finish all tasks under the milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should finish tasks",
          "should update work record status"
        ],
        "Children": []
      },
      {
        "$id": "6967",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when finish a task that has already been crossed out",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 409 conflict"
        ],
        "Children": []
      },
      {
        "$id": "6968",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when cross out first and second created task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should cross out tasks",
          "should not update work record status"
        ],
        "Children": []
      },
      {
        "$id": "6969",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when cross out tasks in cross out status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should conflict",
          "should cross out tasks",
          "should not update work record status"
        ],
        "Children": []
      },
      {
        "$id": "6970",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when finish and cross out all tasks under a milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should finish and cross out tasks",
          "should update work record status"
        ],
        "Children": []
      },
      {
        "$id": "6971",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when cross out all tasks under a milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should fail",
          "should not update tasks",
          "should not update work record status"
        ],
        "Children": []
      },
      {
        "$id": "6972",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when update not exist tasks under a milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should fail",
          "should not update tasks",
          "should not update work record status"
        ],
        "Children": []
      },
      {
        "$id": "6973",
        "FileName": "when_update_work_record_tasks.cs",
        "Description": "when update tasks under different milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should fail",
          "should not update tasks",
          "should not update work record status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6974",
    "FileName": "when_update_work_record_tasks_with_checklist.cs",
    "Description": "when update work record tasks with checklist",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6975",
        "FileName": "when_update_work_record_tasks_with_checklist.cs",
        "Description": "when forbid to complete last milestone if checklist is not finished",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden",
          "should not finish tasks"
        ],
        "Children": []
      },
      {
        "$id": "6976",
        "FileName": "when_update_work_record_tasks_with_checklist.cs",
        "Description": "when allow to complete last milestone if checklist is finished",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not finish tasks"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6977",
    "FileName": "WorkRecordChecklistItemsBatchUpdateSpec.cs",
    "Description": "work record checklist items batch update spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6978",
        "FileName": "WorkRecordChecklistItemsBatchUpdateSpec.cs",
        "Description": "when finish an already finished task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be able to update again",
          "should finish tasks"
        ],
        "Children": []
      },
      {
        "$id": "6979",
        "FileName": "WorkRecordChecklistItemsBatchUpdateSpec.cs",
        "Description": "when finish a checklist item that has already been crossed out",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 409 conflict"
        ],
        "Children": []
      },
      {
        "$id": "6980",
        "FileName": "WorkRecordChecklistItemsBatchUpdateSpec.cs",
        "Description": "when finish all tasks under checklist",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should finish tasks"
        ],
        "Children": []
      },
      {
        "$id": "6981",
        "FileName": "WorkRecordChecklistItemsBatchUpdateSpec.cs",
        "Description": "when cross out first created task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should cross out tasks"
        ],
        "Children": []
      },
      {
        "$id": "6982",
        "FileName": "WorkRecordChecklistItemsBatchUpdateSpec.cs",
        "Description": "when cross out tasks in cross out status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should conflict",
          "should cross out tasks"
        ],
        "Children": []
      },
      {
        "$id": "6983",
        "FileName": "WorkRecordChecklistItemsBatchUpdateSpec.cs",
        "Description": "when finish and cross out all tasks under pre work",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should finish and cross out tasks"
        ],
        "Children": []
      },
      {
        "$id": "6984",
        "FileName": "WorkRecordChecklistItemsBatchUpdateSpec.cs",
        "Description": "when cross out all tasks under a milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should fail",
          "should not update tasks"
        ],
        "Children": []
      },
      {
        "$id": "6985",
        "FileName": "WorkRecordChecklistItemsBatchUpdateSpec.cs",
        "Description": "when update not exist tasks under a milestone",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should fail",
          "should not update tasks"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6986",
    "FileName": "WorkRecordsChecklistResourceCompleteSpec.cs",
    "Description": "work records checklist resource complete spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6987",
        "FileName": "WorkRecordsChecklistResourceCompleteSpec.cs",
        "Description": "when upate first unfinished checklist item",
        "WhenList": [
          "update first checklist item to complete"
        ],
        "ThenList": [
          "should success",
          "should finish checklist item"
        ],
        "Children": []
      },
      {
        "$id": "6988",
        "FileName": "WorkRecordsChecklistResourceCompleteSpec.cs",
        "Description": "when upate task with invalid complete date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 400 status code",
          "should not update checklist item"
        ],
        "Children": []
      },
      {
        "$id": "6989",
        "FileName": "WorkRecordsChecklistResourceCompleteSpec.cs",
        "Description": "when finish a checklist item that has already been finished",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be able to update again"
        ],
        "Children": []
      },
      {
        "$id": "6990",
        "FileName": "WorkRecordsChecklistResourceCompleteSpec.cs",
        "Description": "when finish a checklist item without complete date passed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should save complete date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6991",
    "FileName": "WorkRecordsTaskResourceUpdateSpec.cs",
    "Description": "work records task resource update spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6992",
        "FileName": "WorkRecordsTaskResourceUpdateSpec.cs",
        "Description": "when update last unfinished task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should finish task",
          "should update work record status",
          "should update milestone date and create task for current milestone"
        ],
        "Children": []
      },
      {
        "$id": "6993",
        "FileName": "WorkRecordsTaskResourceUpdateSpec.cs",
        "Description": "when update last unfinished task and task template be changed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should create task for current milestone from task template be changed"
        ],
        "Children": []
      },
      {
        "$id": "6994",
        "FileName": "WorkRecordsTaskResourceUpdateSpec.cs",
        "Description": "when upate first unfinished task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should finish task",
          "should not update work record status"
        ],
        "Children": []
      },
      {
        "$id": "6995",
        "FileName": "WorkRecordsTaskResourceUpdateSpec.cs",
        "Description": "when upate task with invalid complete date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "6996",
        "FileName": "WorkRecordsTaskResourceUpdateSpec.cs",
        "Description": "when finish a task that has already been finished",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 409 conflict"
        ],
        "Children": []
      },
      {
        "$id": "6997",
        "FileName": "WorkRecordsTaskResourceUpdateSpec.cs",
        "Description": "when finish a task without complete date passed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 OK",
          "should save complete date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "6998",
    "FileName": "WorkRecordsTasksUpdateAfterTaskTemplateChangedSpec.cs",
    "Description": "work records tasks update after task template changed spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "6999",
        "FileName": "WorkRecordsTasksUpdateAfterTaskTemplateChangedSpec.cs",
        "Description": "when update task template remove task for started milstone",
        "WhenList": [
          "update task template remove task for started milstone"
        ],
        "ThenList": [
          "should return ok",
          "should change work record tasks"
        ],
        "Children": []
      },
      {
        "$id": "7000",
        "FileName": "WorkRecordsTasksUpdateAfterTaskTemplateChangedSpec.cs",
        "Description": "when update task template add new task for started milestone",
        "WhenList": [
          "update task template remove task for started milstone"
        ],
        "ThenList": [
          "should return ok",
          "should change work record tasks"
        ],
        "Children": []
      },
      {
        "$id": "7001",
        "FileName": "WorkRecordsTasksUpdateAfterTaskTemplateChangedSpec.cs",
        "Description": "when update task template remove task for unstarted milestone",
        "WhenList": [
          "update task template remove task for started milstone"
        ],
        "ThenList": [
          "should return ok",
          "should change work record tasks"
        ],
        "Children": []
      },
      {
        "$id": "7002",
        "FileName": "WorkRecordsTasksUpdateAfterTaskTemplateChangedSpec.cs",
        "Description": "when update task template add task for unstarted milestone",
        "WhenList": [
          "update task template remove task for started milstone"
        ],
        "ThenList": [
          "should return ok",
          "should change work record tasks"
        ],
        "Children": []
      },
      {
        "$id": "7003",
        "FileName": "WorkRecordsTasksUpdateAfterTaskTemplateChangedSpec.cs",
        "Description": "when update task template add task for unstarted milestone with default task",
        "WhenList": [
          "update task template remove task for started milstone"
        ],
        "ThenList": [
          "should return ok",
          "should change tasks under unstarted milestone"
        ],
        "Children": []
      },
      {
        "$id": "7004",
        "FileName": "WorkRecordsTasksUpdateAfterTaskTemplateChangedSpec.cs",
        "Description": "when update task template remove task for unstarted milestone with only one task",
        "WhenList": [
          "update task template changed"
        ],
        "ThenList": [
          "should return ok",
          "should change work record tasks"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7005",
    "FileName": "WorkRecordTasksBatchUpdateWithServiceStatusSpec.cs",
    "Description": "work record tasks batch update with service status spec",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7006",
        "FileName": "WorkRecordTasksBatchUpdateWithServiceStatusSpec.cs",
        "Description": "when finish first and second unfinished task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7007",
    "FileName": "when_download_tax_equalizations_file_by_work_record_id.cs",
    "Description": "when download tax equalizations file by work record id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7008",
        "FileName": "when_download_tax_equalizations_file_by_work_record_id.cs",
        "Description": "when get tax equalizations",
        "WhenList": [
          "when get tax equalizations by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return tax equalizations"
        ],
        "Children": []
      },
      {
        "$id": "7009",
        "FileName": "when_download_tax_equalizations_file_by_work_record_id.cs",
        "Description": "when get tax equalizations with assignee profile custom fields",
        "WhenList": [
          "when get tax equalizations by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return teq records with the appropriate assignee profile custom fields"
        ],
        "Children": []
      },
      {
        "$id": "7010",
        "FileName": "when_download_tax_equalizations_file_by_work_record_id.cs",
        "Description": "should not duplicate custom field when a given assignee has engagements subscribing same custom field",
        "WhenList": [
          "when get tax return status by engagements and year"
        ],
        "ThenList": [
          "should return 200",
          "should return tax return status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7011",
    "FileName": "when_retrieve_tax_equalizations_by_engagements_id.cs",
    "Description": "when retrieve tax equalizations by engagements id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7012",
        "FileName": "when_retrieve_tax_equalizations_by_engagements_id.cs",
        "Description": "when get tax equalizations",
        "WhenList": [
          "when get tax equalizations by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return tax equalizations"
        ],
        "Children": []
      },
      {
        "$id": "7013",
        "FileName": "when_retrieve_tax_equalizations_by_engagements_id.cs",
        "Description": "when get tax equalizations with work record id",
        "WhenList": [
          "when get tax equalizations by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return tax equalizations"
        ],
        "Children": []
      },
      {
        "$id": "7014",
        "FileName": "when_retrieve_tax_equalizations_by_engagements_id.cs",
        "Description": "when get tax equalizations with assignee profile custom fields",
        "WhenList": [
          "when get tax equalizations by engagements"
        ],
        "ThenList": [
          "should return OK",
          "should return teq records with the appropriate assignee profile custom fields"
        ],
        "Children": []
      },
      {
        "$id": "7015",
        "FileName": "when_retrieve_tax_equalizations_by_engagements_id.cs",
        "Description": "should not duplicate custom field when a given assignee has engagements subscribing same custom field",
        "WhenList": [
          "when get tax return status by engagements and year"
        ],
        "ThenList": [
          "should return 200",
          "should return tax return status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7016",
    "FileName": "when_batch_send_final_questionnaire_reminder.cs",
    "Description": "when batch send final questionnaire reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7017",
        "FileName": "when_batch_send_final_questionnaire_reminder.cs",
        "Description": "when send first reminder",
        "WhenList": [
          "send questionnaire final reminder"
        ],
        "ThenList": [
          "should return ok",
          "should send two final reminder emails"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7018",
    "FileName": "when_batch_send_first_questionnaire_reminder.cs",
    "Description": "when batch send first questionnaire reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7019",
        "FileName": "when_batch_send_first_questionnaire_reminder.cs",
        "Description": "when send first reminder",
        "WhenList": [
          "send questionnaire first reminder"
        ],
        "ThenList": [
          "should return accepted",
          "should be able to track progress of batch first reminder"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7020",
    "FileName": "when_batch_send_first_questionnaire_reminder_with_different_team_mailbox_settings.cs",
    "Description": "when batch send first and final questionnaire reminder with different team mailbox settings",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7021",
        "FileName": "when_batch_send_first_questionnaire_reminder_with_different_team_mailbox_settings.cs",
        "Description": "when batch send first reminder",
        "WhenList": [
          "send questionnaire first reminder"
        ],
        "ThenList": [
          "should return accepted",
          "should be able to track progress of batch first reminder"
        ],
        "Children": []
      },
      {
        "$id": "7022",
        "FileName": "when_batch_send_first_questionnaire_reminder_with_different_team_mailbox_settings.cs",
        "Description": "when batch send final reminder",
        "WhenList": [
          "send questionnaire first reminder"
        ],
        "ThenList": [
          "should return accepted",
          "should be able to track progress of batch first reminder"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7023",
    "FileName": "when_restart_tax_return_questionnaire.cs",
    "Description": "when restart questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7024",
        "FileName": "when_restart_tax_return_questionnaire.cs",
        "Description": "when restart questionnaire workrecord",
        "WhenList": [
          "restart questionnaire"
        ],
        "ThenList": [
          "should have first reminder link",
          "should not has final reminder link",
          "should remove date of first and final reminder"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7025",
    "FileName": "when_send_final_questionnaire_reminder.cs",
    "Description": "when send final questionnaire reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7026",
        "FileName": "when_send_final_questionnaire_reminder.cs",
        "Description": "when send final reminder",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7027",
            "FileName": "when_send_final_questionnaire_reminder.cs",
            "Description": "when work record responsible office without team mailbox",
            "WhenList": [
              "send final reminder"
            ],
            "ThenList": [
              "should return ok",
              "should send final reminder email",
              "should log to work record history",
              "should update organizer reminder status and first reminder datetime"
            ],
            "Children": []
          },
          {
            "$id": "7028",
            "FileName": "when_send_final_questionnaire_reminder.cs",
            "Description": "when work record responsible office with team mailbox",
            "WhenList": [
              "send final reminder"
            ],
            "ThenList": [
              "should return ok",
              "should send final reminder email with send user is team mail"
            ],
            "Children": []
          },
          {
            "$id": "7029",
            "FileName": "when_send_final_questionnaire_reminder.cs",
            "Description": "when work record responsible office with team mailbox but without team display name",
            "WhenList": [
              "send final reminder"
            ],
            "ThenList": [
              "should return ok",
              "should send final reminder email with send user is team mail"
            ],
            "Children": []
          },
          {
            "$id": "7030",
            "FileName": "when_send_final_questionnaire_reminder.cs",
            "Description": "with a staff in work record team",
            "WhenList": [
              "send final reminder"
            ],
            "ThenList": [
              "should return ok",
              "should send final reminder email with send user is team mail"
            ],
            "Children": []
          },
          {
            "$id": "7031",
            "FileName": "when_send_final_questionnaire_reminder.cs",
            "Description": "with a staff in work office",
            "WhenList": [
              "send final reminder"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7032",
            "FileName": "when_send_final_questionnaire_reminder.cs",
            "Description": "with a staff assign to checklist",
            "WhenList": [
              "send final reminder"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7033",
        "FileName": "when_send_final_questionnaire_reminder.cs",
        "Description": "when send final reminder for not no issues work record",
        "WhenList": [
          "send final reminder"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7034",
        "FileName": "when_send_final_questionnaire_reminder.cs",
        "Description": "when send final reminder for work record related to restricted engagement",
        "WhenList": [
          "send final reminder"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7035",
    "FileName": "when_send_first_questionnaire_reminder.cs",
    "Description": "when send first questionnaire reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7036",
        "FileName": "when_send_first_questionnaire_reminder.cs",
        "Description": "when send first reminder",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7037",
            "FileName": "when_send_first_questionnaire_reminder.cs",
            "Description": "when work record contact office without team mailbox",
            "WhenList": [
              "send questionnaire first reminder"
            ],
            "ThenList": [
              "should return ok",
              "should send first reminder email",
              "should log to work record history",
              "should update organizer reminder status and first reminder datetime",
              "should record email sent history"
            ],
            "Children": []
          },
          {
            "$id": "7038",
            "FileName": "when_send_first_questionnaire_reminder.cs",
            "Description": "when work record questionnaire contact office with team mailbox",
            "WhenList": [
              "send questionnaire first reminder"
            ],
            "ThenList": [
              "should return ok",
              "should send first reminder email set sender as team mail"
            ],
            "Children": []
          },
          {
            "$id": "7039",
            "FileName": "when_send_first_questionnaire_reminder.cs",
            "Description": "when work record questionnaire contact office with team mailbox but without team display name",
            "WhenList": [
              "send questionnaire first reminder"
            ],
            "ThenList": [
              "should return ok",
              "should send first reminder email set sender as team mail"
            ],
            "Children": []
          },
          {
            "$id": "7040",
            "FileName": "when_send_first_questionnaire_reminder.cs",
            "Description": "when send first reminder with a staff in work record team",
            "WhenList": [
              "send questionnaire first reminder"
            ],
            "ThenList": [
              "should return ok",
              "should send first reminder email set sender as team mail"
            ],
            "Children": []
          },
          {
            "$id": "7041",
            "FileName": "when_send_first_questionnaire_reminder.cs",
            "Description": "when send first reminder with a staff in work office",
            "WhenList": [
              "send first reminder"
            ],
            "ThenList": [
              "should return OK"
            ],
            "Children": []
          },
          {
            "$id": "7042",
            "FileName": "when_send_first_questionnaire_reminder.cs",
            "Description": "when send first reminder with a staff assigned to checklist",
            "WhenList": [
              "send first reminder"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7043",
        "FileName": "when_send_first_questionnaire_reminder.cs",
        "Description": "when send first reminder for not no issues work record",
        "WhenList": [
          "send questionnaire first reminder"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7044",
        "FileName": "when_send_first_questionnaire_reminder.cs",
        "Description": "when send first reminder for work record related to restricted engagement",
        "WhenList": [
          "send questionnaire first reminder"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7045",
    "FileName": "when_send_questionnaire_reminder_with_restricted_assignee.cs",
    "Description": "when send questionnaire reminder with restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7046",
        "FileName": "when_send_questionnaire_reminder_with_restricted_assignee.cs",
        "Description": "when send first reminder for work record related to restricted assignee",
        "WhenList": [
          "send questionnaire first reminder"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "7047",
        "FileName": "when_send_questionnaire_reminder_with_restricted_assignee.cs",
        "Description": "when send final reminder for work record related to restricted engagement",
        "WhenList": [
          "send final reminder"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7048",
    "FileName": "when_should_not_have_reminders.cs",
    "Description": "when should not have reminders",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7049",
        "FileName": "when_should_not_have_reminders.cs",
        "Description": "when get work record for created tax workrecord",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should not has first and final reminder link",
          "should return conflict request"
        ],
        "Children": []
      },
      {
        "$id": "7050",
        "FileName": "when_should_not_have_reminders.cs",
        "Description": "when has sent first remindered",
        "WhenList": [
          "activate questionnaire and send first reminded"
        ],
        "ThenList": [
          "should not has first reminder link",
          "should return conflict request for first reminder",
          "should return conflict request"
        ],
        "Children": []
      },
      {
        "$id": "7051",
        "FileName": "when_should_not_have_reminders.cs",
        "Description": "when has sent final remindered",
        "WhenList": [
          "activate questionnaire and send first reminded and final reminder"
        ],
        "ThenList": [
          "should not has reminder link",
          "should return conflict request"
        ],
        "Children": []
      },
      {
        "$id": "7052",
        "FileName": "when_should_not_have_reminders.cs",
        "Description": "when get work record for submitted tax workrecord",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should not has first and final reminder link",
          "should return conflict request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7053",
    "FileName": "when_active_tax_questionnaire_by_check_list_responsiblity_uac.cs",
    "Description": "when active tax questionnaire by check list responsiblity uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7054",
        "FileName": "when_active_tax_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when active by id",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should return accepted"
        ],
        "Children": []
      },
      {
        "$id": "7055",
        "FileName": "when_active_tax_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when active by id after lily assign to check list",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should return accepted",
          "should can only see questionnaire info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7056",
    "FileName": "when_get_tax_questionnaire_by_work_record_by_check_list_responsiblity.cs",
    "Description": "when get tax questionnaire by work record by check list responsiblity",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7057",
        "FileName": "when_get_tax_questionnaire_by_work_record_by_check_list_responsiblity.cs",
        "Description": "when get by id",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should can only see questionnaire info"
        ],
        "Children": []
      },
      {
        "$id": "7058",
        "FileName": "when_get_tax_questionnaire_by_work_record_by_check_list_responsiblity.cs",
        "Description": "when get by id after lily assign to check list",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should can only see questionnaire info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7059",
    "FileName": "when_restart_tax_questionnaire_by_check_list_responsiblity_uac.cs",
    "Description": "when restart tax questionnaire by check list responsiblity uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7060",
        "FileName": "when_restart_tax_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when active by id",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7061",
        "FileName": "when_restart_tax_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when active by id after lily assign to check list",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should be ok",
          "should can only see questionnaire info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7062",
    "FileName": "when_submit_tax_questionnaire_by_check_list_responsiblity_uac.cs",
    "Description": "when submit tax questionnaire by check list responsiblity uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7063",
        "FileName": "when_submit_tax_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when active by id",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7064",
        "FileName": "when_submit_tax_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when active by id after lily assign to check list",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should be ok",
          "should can only see questionnaire info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7065",
    "FileName": "when_update_tax_questionnaire_by_check_list_responsiblity_uac.cs",
    "Description": "when update tax questionnaire by check list responsiblity uac",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7066",
        "FileName": "when_update_tax_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when update by id",
        "WhenList": [
          "update questionnaire"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7067",
        "FileName": "when_update_tax_questionnaire_by_check_list_responsiblity_uac.cs",
        "Description": "when active by id after lily assign to check list",
        "WhenList": [
          "active questionnaire"
        ],
        "ThenList": [
          "should be ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7068",
    "FileName": "when_activate_tax_return_questionnaire.cs",
    "Description": "when activate tax return questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7069",
        "FileName": "when_activate_tax_return_questionnaire.cs",
        "Description": "when activate questionnaire that already activated",
        "WhenList": [
          "activated again by staff in coordinating office"
        ],
        "ThenList": [
          "should return 409 conflict response",
          "should not send email"
        ],
        "Children": []
      },
      {
        "$id": "7070",
        "FileName": "when_activate_tax_return_questionnaire.cs",
        "Description": "when activate no issues tax return questionnaire",
        "WhenList": [
          "activated by staff in coordinating office"
        ],
        "ThenList": [
          "should return 201 accepted response",
          "should set sender as questionnaire contact mail box",
          "should start activate questionnaire process of given tax return work record"
        ],
        "Children": []
      },
      {
        "$id": "7071",
        "FileName": "when_activate_tax_return_questionnaire.cs",
        "Description": "when activate no issues tax return questionnaire whose questionnaire contact office use team mailbox",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should set sender as team mailbox"
        ],
        "Children": []
      },
      {
        "$id": "7072",
        "FileName": "when_activate_tax_return_questionnaire.cs",
        "Description": "when activate no issues tax return questionnaire whose questionnaire contact office has team mailbox but has no display name",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send email from paris team mailbox address in the name of tax sofia"
        ],
        "Children": []
      },
      {
        "$id": "7073",
        "FileName": "when_activate_tax_return_questionnaire.cs",
        "Description": "when activate no issues tax return questionnaire whose questionnaire contact office has both team mailbox and display name",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send email from paris team mailbox address in the name of paris team display name"
        ],
        "Children": []
      },
      {
        "$id": "7074",
        "FileName": "when_activate_tax_return_questionnaire.cs",
        "Description": "when activate no issues tax return questionnaire whose questionnaire contact office has no team mailbox nor display name",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should send email from tax sofia email address in the name of tax sofia"
        ],
        "Children": []
      },
      {
        "$id": "7075",
        "FileName": "when_activate_tax_return_questionnaire.cs",
        "Description": "when activate tax return questionnaire with not no issues work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return fobidden"
        ],
        "Children": []
      },
      {
        "$id": "7076",
        "FileName": "when_activate_tax_return_questionnaire.cs",
        "Description": "when activate by staff not in subscribed offices or responsible team",
        "WhenList": [
          "activate questionnaire"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7077",
        "FileName": "when_activate_tax_return_questionnaire.cs",
        "Description": "when activate by staff in subscribed offices",
        "WhenList": [
          "activate questionnaire by staff in subscirbed office"
        ],
        "ThenList": [
          "should return accepted"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7078",
    "FileName": "when_batch_activate_tax_return_questionnaire.cs",
    "Description": "when batch activate tax return questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7079",
        "FileName": "when_batch_activate_tax_return_questionnaire.cs",
        "Description": "when assignee has two tax return workrecord with same year but different country",
        "WhenList": [
          "batch activate questionnaire"
        ],
        "ThenList": [
          "should return 202 accepted response",
          "should send two email",
          "should activate work records",
          "should record history of activation"
        ],
        "Children": []
      },
      {
        "$id": "7080",
        "FileName": "when_batch_activate_tax_return_questionnaire.cs",
        "Description": "when some tax return work records are already activated",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden",
          "should thow exception with message"
        ],
        "Children": []
      },
      {
        "$id": "7081",
        "FileName": "when_batch_activate_tax_return_questionnaire.cs",
        "Description": "when two tax return work record in same tax year but different country for one assignee",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7082",
            "FileName": "when_batch_activate_tax_return_questionnaire.cs",
            "Description": "when give valid global email address",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return accepted",
              "should only send one global questionnaire"
            ],
            "Children": []
          },
          {
            "$id": "7083",
            "FileName": "when_batch_activate_tax_return_questionnaire.cs",
            "Description": "when give invalid global email address",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7084",
        "FileName": "when_batch_activate_tax_return_questionnaire.cs",
        "Description": "when two tax return work records cross year for one assignee",
        "WhenList": [
          "send batch activate questionnaire request"
        ],
        "ThenList": [
          "should return accepted",
          "should send two emails and from questionnaire contact"
        ],
        "Children": []
      },
      {
        "$id": "7085",
        "FileName": "when_batch_activate_tax_return_questionnaire.cs",
        "Description": "when kayla has two tax return work record with same year and same country",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return accepted",
          "should only send one global questionnaire"
        ],
        "Children": []
      },
      {
        "$id": "7086",
        "FileName": "when_batch_activate_tax_return_questionnaire.cs",
        "Description": "when assignee has three tax return workrecords with different team mailbox settings",
        "WhenList": [
          "batch activate questionnaire"
        ],
        "ThenList": [
          "should return accepted",
          "should send three emails with correct sender info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7087",
    "FileName": "when_get_organizer_by_workrecord_id.cs",
    "Description": "when get organizer by workrecord id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7088",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "when get organizer by existing work record id",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7089",
            "FileName": "when_get_organizer_by_workrecord_id.cs",
            "Description": "when organizer is notified",
            "WhenList": [
              "when get organizer by work record id"
            ],
            "ThenList": [
              "should return OK",
              "should return correct organizer"
            ],
            "Children": []
          },
          {
            "$id": "7090",
            "FileName": "when_get_organizer_by_workrecord_id.cs",
            "Description": "when organizer created",
            "WhenList": [
              "when get organizer by work record id"
            ],
            "ThenList": [
              "should return OK",
              "should return correct organizer"
            ],
            "Children": []
          },
          {
            "$id": "7091",
            "FileName": "when_get_organizer_by_workrecord_id.cs",
            "Description": "when organizer activated",
            "WhenList": [
              "when get organizer by work record id"
            ],
            "ThenList": [
              "should return OK",
              "should return correct organizer"
            ],
            "Children": []
          },
          {
            "$id": "7092",
            "FileName": "when_get_organizer_by_workrecord_id.cs",
            "Description": "when first reminder is sent",
            "WhenList": [
              "when get organizer by work record id"
            ],
            "ThenList": [
              "should return OK",
              "should return correct organizer"
            ],
            "Children": []
          },
          {
            "$id": "7093",
            "FileName": "when_get_organizer_by_workrecord_id.cs",
            "Description": "when organizer is in process",
            "WhenList": [
              "when get organizer by work record id"
            ],
            "ThenList": [
              "should return OK",
              "should return correct organizer"
            ],
            "Children": []
          },
          {
            "$id": "7094",
            "FileName": "when_get_organizer_by_workrecord_id.cs",
            "Description": "when organizer is submitted",
            "WhenList": [
              "when get organizer by work record id"
            ],
            "ThenList": [
              "should return OK",
              "should return correct organizer"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7095",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "when get organizer by not exist work record id",
        "WhenList": [],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "7096",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get correct link when get created organizer",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct links"
        ],
        "Children": []
      },
      {
        "$id": "7097",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get correct link when get notified organizer without any reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct links"
        ],
        "Children": []
      },
      {
        "$id": "7098",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get correct link when get notified organizer with first reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct links"
        ],
        "Children": []
      },
      {
        "$id": "7099",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get correct link when get notified organizer with final reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct links"
        ],
        "Children": []
      },
      {
        "$id": "7100",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get correct link when get in process organizer without any reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct links"
        ],
        "Children": []
      },
      {
        "$id": "7101",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get correct link when get in process organizer with first reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct links"
        ],
        "Children": []
      },
      {
        "$id": "7102",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get correct link when get in process organizer with final reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct links"
        ],
        "Children": []
      },
      {
        "$id": "7103",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get correct link when get submitted organizer with initiated work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get correct links"
        ],
        "Children": []
      },
      {
        "$id": "7104",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should not get move back link when get submitted organizer with work record not in initiated",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not get move back link"
        ],
        "Children": []
      },
      {
        "$id": "7105",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get organizer with submit link and consent status link when all consents signed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get submit link"
        ],
        "Children": []
      },
      {
        "$id": "7106",
        "FileName": "when_get_organizer_by_workrecord_id.cs",
        "Description": "should get organizer with consent link when consents not signed",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should get consent link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7107",
    "FileName": "when_get_organizer_by_workrecord_id_with_inactive_staff_working_history.cs",
    "Description": "when get organizer by workrecord id with inactive staff working history",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7108",
        "FileName": "when_get_organizer_by_workrecord_id_with_inactive_staff_working_history.cs",
        "Description": "when get organizer whose milestones been modified by staff inactivated",
        "WhenList": [
          "get organizer by work record id"
        ],
        "ThenList": [
          "should return OK",
          "should return correct organizer"
        ],
        "Children": []
      },
      {
        "$id": "7109",
        "FileName": "when_get_organizer_by_workrecord_id_with_inactive_staff_working_history.cs",
        "Description": "when get organizer whose reminder been sent by staff inactivated",
        "WhenList": [
          "get organizer by work record id"
        ],
        "ThenList": [
          "should return OK",
          "should return correct organizer"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7110",
    "FileName": "when_organizer_has_no_filing_requirement.cs",
    "Description": "when organizer has no filing requirement",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success",
      "should return forbidden when receive missing item",
      "should return empty result of todo item",
      "should return forbidden when add revision task",
      "should return forbidden when change ir mark"
    ],
    "Children": []
  },
  {
    "$id": "7111",
    "FileName": "when_resend_tax_return_questionnaire.cs",
    "Description": "when resend tax return questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7112",
        "FileName": "when_resend_tax_return_questionnaire.cs",
        "Description": "should can follow up with the first remainder again when first remainder sent yet",
        "WhenList": [
          "resend questionnaire"
        ],
        "ThenList": [
          "should return accepted",
          "should resend questionnaire mail",
          "should reset reminders",
          "should record resend history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7113",
    "FileName": "when_restart_tax_return_questionnaire.cs",
    "Description": "when restart tax return questionnaire",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7114",
        "FileName": "when_restart_tax_return_questionnaire.cs",
        "Description": "when restart tax return questionnaire no issues work record",
        "WhenList": [
          "when restart"
        ],
        "ThenList": [
          "should return ok",
          "should update existing work record milestone to in process"
        ],
        "Children": []
      },
      {
        "$id": "7115",
        "FileName": "when_restart_tax_return_questionnaire.cs",
        "Description": "when restart tax return questionnaire not no issues work record",
        "WhenList": [
          "when restart"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7116",
    "FileName": "when_restart_tax_return_questionnaire_with_task_template.cs",
    "Description": "when restart tax return questionnaire with task template",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7117",
        "FileName": "when_restart_tax_return_questionnaire_with_task_template.cs",
        "Description": "when restart tax return questionnaire with finished task",
        "WhenList": [
          "when restart"
        ],
        "ThenList": [
          "should change task to created"
        ],
        "Children": []
      },
      {
        "$id": "7118",
        "FileName": "when_restart_tax_return_questionnaire_with_task_template.cs",
        "Description": "when restart tax return questionnaire with cross out task",
        "WhenList": [
          "when restart"
        ],
        "ThenList": [
          "should change task to created"
        ],
        "Children": []
      },
      {
        "$id": "7119",
        "FileName": "when_restart_tax_return_questionnaire_with_task_template.cs",
        "Description": "when change task template after restart tax return questionnaire",
        "WhenList": [
          "when restart"
        ],
        "ThenList": [
          "should change task to created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7120",
    "FileName": "when_send_tax_questionnair_notification.cs",
    "Description": "when send tax questionnair notification",
    "WhenList": [
      "send questionnaire"
    ],
    "ThenList": [
      "should return created status",
      "should send one email",
      "should create account subscription"
    ],
    "Children": []
  },
  {
    "$id": "7121",
    "FileName": "when_send_tax_questionnair_with_tracking_as_question_set.cs",
    "Description": "when send tax questionnair with tracking as question set",
    "WhenList": [
      "send questionnaire"
    ],
    "ThenList": [
      "should return created status",
      "should not send email",
      "should create account subscription"
    ],
    "Children": []
  },
  {
    "$id": "7122",
    "FileName": "when_start_tax_return_questionnaire_by_assignee_in_mytaxes.cs",
    "Description": "when start tax return questionnaire by assignee in mytaxes",
    "WhenList": [
      "when move milestone to in process by staff"
    ],
    "ThenList": [
      "should return ok",
      "should update organizer"
    ],
    "Children": []
  },
  {
    "$id": "7123",
    "FileName": "when_start_tax_return_questionnaire_by_staff.cs",
    "Description": "when start tax return questionnaire by staff",
    "WhenList": [
      "when move milestone to in process by staff"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "7124",
    "FileName": "when_submit_tax_return_questionnaire_by_assignee_in_mytaxes.cs",
    "Description": "when submit tax return questionnaire by assignee in mytaxes",
    "WhenList": [
      "when update work record milestone to submitted"
    ],
    "ThenList": [
      "should return ok",
      "should update existed work record milestone to submitted"
    ],
    "Children": []
  },
  {
    "$id": "7125",
    "FileName": "when_submit_tax_return_questionnaire_by_assignee_in_mytaxes_and_start_work_record_with_task_template.cs",
    "Description": "when submit tax return questionnaire by assignee in mytaxes and start work record with task template",
    "WhenList": [
      "when update work record milestone to submitted"
    ],
    "ThenList": [
      "should create task instance for initiated milestone"
    ],
    "Children": []
  },
  {
    "$id": "7126",
    "FileName": "when_submit_unstart_tax_return_questionnaire_by_staff.cs",
    "Description": "when submit unstart tax return questionnaire by staff",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7127",
        "FileName": "when_submit_unstart_tax_return_questionnaire_by_staff.cs",
        "Description": "when submit unstart no issues tax return questionnaire by staff",
        "WhenList": [
          "when update work record milestone to submitted"
        ],
        "ThenList": [
          "should return ok",
          "should update existed work record milestone to submitted"
        ],
        "Children": []
      },
      {
        "$id": "7128",
        "FileName": "when_submit_unstart_tax_return_questionnaire_by_staff.cs",
        "Description": "when submit unstart not no issues tax return questionnaire by staff",
        "WhenList": [
          "when update work record milestone to submitted"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7129",
    "FileName": "when_update_tax_organizer.cs",
    "Description": "when update tax organizer",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7130",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when update organizer with valid request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7131",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when current user is in work office or general contact",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7132",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when current user is work record responsible staff",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return OK",
              "should update organizer"
            ],
            "Children": []
          },
          {
            "$id": "7133",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when current user is in work record team",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return OK",
              "should update organizer"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7134",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when update organizer with invalid id",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return not found"
        ],
        "Children": []
      },
      {
        "$id": "7135",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when update organizer with not exist staff and contact offic does not have display name",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "7136",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when update organizer contact office from office with display name to office without display name",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return ok",
          "should update organizer"
        ],
        "Children": []
      },
      {
        "$id": "7137",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when update organizer contact office from office without display name to office with display name",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return ok",
          "should update contact office"
        ],
        "Children": []
      },
      {
        "$id": "7138",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when update organizer with invalid request",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return bad request"
        ],
        "Children": []
      },
      {
        "$id": "7139",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when update submitted organizer with valid request",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return ok",
          "should update contact and not update due date"
        ],
        "Children": []
      },
      {
        "$id": "7140",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when update organizer of workrecord service status not no issues",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7141",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when staff in engagements work office or general contact",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7142",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when activate organizer",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return accepted"
            ],
            "Children": []
          },
          {
            "$id": "7143",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when submit organizer",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7144",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when change organizer to in progress",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7145",
    "FileName": "when_update_tax_organizer_which_related_to_restricted_assignee.cs",
    "Description": "when update tax organizer which related to restricted assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7146",
        "FileName": "when_update_tax_organizer_which_related_to_restricted_assignee.cs",
        "Description": "when update organizer",
        "WhenList": [
          "update organizer"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "7147",
        "FileName": "when_update_tax_organizer_which_related_to_restricted_assignee.cs",
        "Description": "when active organizer",
        "WhenList": [
          "active organizer"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7148",
        "FileName": "when_update_tax_organizer_which_related_to_restricted_assignee.cs",
        "Description": "when submit organizer",
        "WhenList": [
          "submit organizer"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7149",
        "FileName": "when_update_tax_organizer_which_related_to_restricted_assignee.cs",
        "Description": "when restart organizer",
        "WhenList": [
          "restart organizer"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7150",
    "FileName": "when_update_tax_organizer_which_related_to_restricted_engagement.cs",
    "Description": "when update tax organizer which related to restricted engagement",
    "WhenList": [
      "update organizer"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "7151",
    "FileName": "when_get_a_notified_tax_return_workrecord_by_id.cs",
    "Description": "when get a notified tax return workrecord by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7152",
        "FileName": "when_get_a_notified_tax_return_workrecord_by_id.cs",
        "Description": "when get a notified tax return workrecord by no exist id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 404 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7153",
        "FileName": "when_get_a_notified_tax_return_workrecord_by_id.cs",
        "Description": "when get a notified tax return workrecord by exist id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7154",
    "FileName": "when_get_tax_return_workrecord_with_tracking_organizer.cs",
    "Description": "when get tax return workrecord with tracking organizer",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7155",
        "FileName": "when_get_tax_return_workrecord_with_tracking_organizer.cs",
        "Description": "when get tax return work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should questionaire resource links",
          "should get bill status default value as false"
        ],
        "Children": []
      },
      {
        "$id": "7156",
        "FileName": "when_get_tax_return_workrecord_with_tracking_organizer.cs",
        "Description": "when get consents",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7157",
            "FileName": "when_get_tax_return_workrecord_with_tracking_organizer.cs",
            "Description": "should get consent 7216 and fror for non tracking questionnaire for us",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 7216 and FROR consents"
            ],
            "Children": []
          },
          {
            "$id": "7158",
            "FileName": "when_get_tax_return_workrecord_with_tracking_organizer.cs",
            "Description": "should get consent 7216 and fror for tracking questionnaire for us",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return 7216 and FROR consents"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7159",
    "FileName": "when_get_tax_return_work_record_with_download_reminder.cs",
    "Description": "when get tax return work record with download reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7160",
        "FileName": "when_get_tax_return_work_record_with_download_reminder.cs",
        "Description": "when work record reminder is open and engagement reminder is closed",
        "WhenList": [
          "get work record"
        ],
        "ThenList": [
          "should return ok",
          "should not contain tax return reminder link"
        ],
        "Children": []
      },
      {
        "$id": "7161",
        "FileName": "when_get_tax_return_work_record_with_download_reminder.cs",
        "Description": "when work record reminder is open and engagement reminder is open",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7162",
            "FileName": "when_get_tax_return_work_record_with_download_reminder.cs",
            "Description": "when tax return work record is cancelled",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should succeed",
              "should not show service specific link"
            ],
            "Children": []
          },
          {
            "$id": "7163",
            "FileName": "when_get_tax_return_work_record_with_download_reminder.cs",
            "Description": "when tax return work record is no issue with engagement email reminder is open",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should succeed",
              "should not show service specific link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7164",
    "FileName": "when_get_tax_return_work_record_with_team_mail_box.cs",
    "Description": "when get tax return work record with team mail box",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7165",
        "FileName": "when_get_tax_return_work_record_with_team_mail_box.cs",
        "Description": "before work record delivered",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7166",
    "FileName": "when_get_tax_work_record_basic_info_by_id.cs",
    "Description": "when get tax work record basic info by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7167",
        "FileName": "when_get_tax_work_record_basic_info_by_id.cs",
        "Description": "before work record delivered",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7168",
            "FileName": "when_get_tax_work_record_basic_info_by_id.cs",
            "Description": "when get tax work record by exist id without engagement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should return work record information with engagement null",
              "should return work record information with engagement uri oracle cn"
            ],
            "Children": []
          },
          {
            "$id": "7169",
            "FileName": "when_get_tax_work_record_basic_info_by_id.cs",
            "Description": "when get tax work record by exist id",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should return work record information with engagement oracle cn",
              "should return work record information with six history items in reversed order of occurence",
              "should return work record information with a work record created history item",
              "should return missing item addition link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7170",
        "FileName": "when_get_tax_work_record_basic_info_by_id.cs",
        "Description": "after work record delivered",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7171",
            "FileName": "when_get_tax_work_record_basic_info_by_id.cs",
            "Description": "when get tax work reocrd by exist id",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not return missing item addition link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7172",
        "FileName": "when_get_tax_work_record_basic_info_by_id.cs",
        "Description": "work record with tax equalization settlement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7173",
            "FileName": "when_get_tax_work_record_basic_info_by_id.cs",
            "Description": "when get tax work record with tax equalization settlement",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should settlement status"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7174",
    "FileName": "when_get_tax_work_record_by_id.cs",
    "Description": "when get tax work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7175",
        "FileName": "when_get_tax_work_record_by_id.cs",
        "Description": "when get tax work record by not existing id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 404 not found"
        ],
        "Children": []
      },
      {
        "$id": "7176",
        "FileName": "when_get_tax_work_record_by_id.cs",
        "Description": "when get tax work record by existing id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record information with engagement oracle cn",
          "should return work record information with six history items in reversed order of occurence",
          "should return work record information with a work record created history item",
          "should return work record information with a missing item created history item",
          "should return work record information with a work record task completed history item",
          "should return work record information with a checklist item completed history item",
          "should return work record information with a missing item received status changed history item"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7177",
    "FileName": "when_get_tax_work_record_by_id_with_external_links.cs",
    "Description": "when get tax work record by id with external links",
    "WhenList": [
      "get tax work record"
    ],
    "ThenList": [
      "should return 200",
      "should return external links"
    ],
    "Children": []
  },
  {
    "$id": "7178",
    "FileName": "when_get_tax_work_record_by_id_with_go_migration_inactive_assignee.cs",
    "Description": "when get tax work record by id with go migration inactive assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should not found"
    ],
    "Children": []
  },
  {
    "$id": "7179",
    "FileName": "when_get_tax_work_record_by_id_with_teq.cs",
    "Description": "when get tax work record by id with teq",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7180",
        "FileName": "when_get_tax_work_record_by_id_with_teq.cs",
        "Description": "should return tax equalization related information",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should return tax equalization data"
        ],
        "Children": []
      },
      {
        "$id": "7181",
        "FileName": "when_get_tax_work_record_by_id_with_teq.cs",
        "Description": "should return tax equalization file download link when feature toggle on",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should return download link"
        ],
        "Children": []
      },
      {
        "$id": "7182",
        "FileName": "when_get_tax_work_record_by_id_with_teq.cs",
        "Description": "should return tax equalization file download link when feature toggle off",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should not return download link when toggle off"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7183",
    "FileName": "when_get_tax_work_record_by_SelfBasic_request.cs",
    "Description": "when get tax work record by self basic request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7184",
        "FileName": "when_get_tax_work_record_by_SelfBasic_request.cs",
        "Description": "get work record basic data",
        "WhenList": [
          "get basic data of work record"
        ],
        "ThenList": [
          "should return ok",
          "should return self tax link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7185",
    "FileName": "when_get_tax_work_record_of_inactive_assignee.cs",
    "Description": "when get tax work record of inactive assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7186",
        "FileName": "when_get_tax_work_record_of_inactive_assignee.cs",
        "Description": "when get tax work record by general staff",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should return 200",
          "should get no action links"
        ],
        "Children": []
      },
      {
        "$id": "7187",
        "FileName": "when_get_tax_work_record_of_inactive_assignee.cs",
        "Description": "when get tax work record by global admin",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should return 200",
          "should get no action links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7188",
    "FileName": "when_get_tax_work_record_of_inactive_engagement.cs",
    "Description": "when get tax work record of inactive engagement",
    "WhenList": [
      "get tax work record"
    ],
    "ThenList": [
      "should return 200",
      "should get no action links"
    ],
    "Children": []
  },
  {
    "$id": "7189",
    "FileName": "when_get_tax_work_record_related_to_restricted_engagement.cs",
    "Description": "when get work record related to restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7190",
        "FileName": "when_get_tax_work_record_related_to_restricted_engagement.cs",
        "Description": "when get tax work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "7191",
        "FileName": "when_get_tax_work_record_related_to_restricted_engagement.cs",
        "Description": "when get immigration work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "7192",
        "FileName": "when_get_tax_work_record_related_to_restricted_engagement.cs",
        "Description": "when get social security work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7193",
    "FileName": "when_get_tax_work_record_without_efile_id.cs",
    "Description": "when get tax work record without efile id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7194",
        "FileName": "when_get_tax_work_record_without_efile_id.cs",
        "Description": "when is eifle consent on is on",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should return 200",
          "should get false for do not has efile id",
          "shoule get true for is efiling",
          "shoule get true for is efile consent on"
        ],
        "Children": []
      },
      {
        "$id": "7195",
        "FileName": "when_get_tax_work_record_without_efile_id.cs",
        "Description": "when is eifle consent on is off",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should return 200",
          "should get false for do not has efile id",
          "shoule get true for is efiling",
          "shoule get true for is efile consent on"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7196",
    "FileName": "when_get_tax_work_record_with_country_not_in_efile_group.cs",
    "Description": "when get tax work record with country not in efile group",
    "WhenList": [
      "get tax work record"
    ],
    "ThenList": [
      "should return 200",
      "should get false for has efile id",
      "shoule get false for is efiling",
      "shoule get true for default is efile consent on"
    ],
    "Children": []
  },
  {
    "$id": "7197",
    "FileName": "when_get_tax_work_record_with_efile_id.cs",
    "Description": "when get tax work record with efile id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7198",
        "FileName": "when_get_tax_work_record_with_efile_id.cs",
        "Description": "when is efile consent on is on",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should return 200",
          "should get true for has efile id",
          "should get true for is efiling",
          "should get true for is efile consent on"
        ],
        "Children": []
      },
      {
        "$id": "7199",
        "FileName": "when_get_tax_work_record_with_efile_id.cs",
        "Description": "when is efile consent on is off",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should return 200",
          "should get true for is efile consent off"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7200",
    "FileName": "when_get_tax_work_record_with_missing_items_notification_link.cs",
    "Description": "when get tax work record with missing items notification link",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7201",
        "FileName": "when_get_tax_work_record_with_missing_items_notification_link.cs",
        "Description": "when notify missing items",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return missing item notify links"
        ],
        "Children": []
      },
      {
        "$id": "7202",
        "FileName": "when_get_tax_work_record_with_missing_items_notification_link.cs",
        "Description": "when do not have missing items to notify",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not return missing item notify links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7203",
    "FileName": "when_get_tax_work_record_with_missing_item_by_id.cs",
    "Description": "when get tax work record with missing item by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7204",
        "FileName": "when_get_tax_work_record_with_missing_item_by_id.cs",
        "Description": "when get tax work record by existing id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record information with a missing item received status changed history item",
          "should return work record information with a missing item created history item",
          "should return work record information with six history items in reversed order of occurence",
          "should return missing items infomation"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7205",
    "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
    "Description": "when get tax work record with organizer by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7206",
        "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
        "Description": "when get tax return workrecord by exist id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 okay as status code",
          "should succeed",
          "should return organizer information",
          "should return questionnaire",
          "should return consent dto",
          "should return resource links",
          "should return is CPQ"
        ],
        "Children": []
      },
      {
        "$id": "7207",
        "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
        "Description": "when get problomatic tax return workrecord of initiated status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not return resource links"
        ],
        "Children": []
      },
      {
        "$id": "7208",
        "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
        "Description": "when get problomatic tax return workrecord of organizer created status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not return resource links"
        ],
        "Children": []
      },
      {
        "$id": "7209",
        "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
        "Description": "when get problomatic tax return workrecord of organizer notified status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not return resource links"
        ],
        "Children": []
      },
      {
        "$id": "7210",
        "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
        "Description": "when get problomatic tax return workrecord of organizer inprocess status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not return resource links"
        ],
        "Children": []
      },
      {
        "$id": "7211",
        "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
        "Description": "when staff in engagement work offices",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7212",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer created",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return resource links"
            ],
            "Children": []
          },
          {
            "$id": "7213",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer activated",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not return resource links"
            ],
            "Children": []
          },
          {
            "$id": "7214",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer first reminder is sent out",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not return resource links"
            ],
            "Children": []
          },
          {
            "$id": "7215",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer in process",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not return resource links"
            ],
            "Children": []
          },
          {
            "$id": "7216",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer submitted",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not return resource links"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7217",
        "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
        "Description": "when staff in work record team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7218",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer created",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return resource links"
            ],
            "Children": []
          },
          {
            "$id": "7219",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer activated",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return resource links"
            ],
            "Children": []
          },
          {
            "$id": "7220",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer first reminder is sent out",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return resource links"
            ],
            "Children": []
          },
          {
            "$id": "7221",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer in process",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return resource links"
            ],
            "Children": []
          },
          {
            "$id": "7222",
            "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
            "Description": "when organizer submitted",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return resource links"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7223",
        "FileName": "when_get_tax_work_record_with_organizer_by_id.cs",
        "Description": "when get tax return workrecord with tracking organizer",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not return resource links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7224",
    "FileName": "when_get_tax_work_record_with_sent_missing_items_email.cs",
    "Description": "when get tax work record with sent missing items email",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should return work record information with a history item which is missing items notified by pw c"
    ],
    "Children": []
  },
  {
    "$id": "7225",
    "FileName": "when_get_tax_work_record_with_task_template_by_id.cs",
    "Description": "when get tax work record with task template by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7226",
        "FileName": "when_get_tax_work_record_with_task_template_by_id.cs",
        "Description": "when get tax work record by exist id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record information with six history items in reversed order of occurence",
          "should return work record information with a work record created history item",
          "should return work record information with a work record task completed history item",
          "should return work record information with a checklist item completed history item",
          "should return task assignments"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7227",
    "FileName": "when_get_tax_work_record_with_task_template_by_id.cs",
    "Description": "when get tax work record with new task template by id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return task assignments"
    ],
    "Children": []
  },
  {
    "$id": "7228",
    "FileName": "patch_update_billing_status_for_work_record.cs",
    "Description": "patch update billing status for work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7229",
        "FileName": "patch_update_billing_status_for_work_record.cs",
        "Description": "should permit to update billing when sofia is from coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7230",
        "FileName": "patch_update_billing_status_for_work_record.cs",
        "Description": "should NOT permit to update billing when sofia does NOT have matched practice type to update bill status",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7231",
        "FileName": "patch_update_billing_status_for_work_record.cs",
        "Description": "should permit to update billing when sofia is global admin",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7232",
        "FileName": "patch_update_billing_status_for_work_record.cs",
        "Description": "should NOT permit to update billing when sofia is from delegated office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7233",
    "FileName": "when_get_briefing_work_record_billing.cs",
    "Description": "when get briefing work record billing",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7234",
        "FileName": "when_get_briefing_work_record_billing.cs",
        "Description": "should NOT show edit billing link when staff is NOT in coordinating office or in responsible office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      },
      {
        "$id": "7235",
        "FileName": "when_get_briefing_work_record_billing.cs",
        "Description": "should show edit billing link when staff is NOT in coordinating office but is global admin",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return OK",
          "should contain billing edit link"
        ],
        "Children": []
      },
      {
        "$id": "7236",
        "FileName": "when_get_briefing_work_record_billing.cs",
        "Description": "should show edit billing link when staff is in coordinating office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return OK",
          "should contain billing edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7237",
    "FileName": "when_get_briefing_work_record_billing.cs",
    "Description": "should NOT show billing edit link when get briefing work record whose assignee is inactive",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7238",
        "FileName": "when_get_briefing_work_record_billing.cs",
        "Description": "as general staff",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      },
      {
        "$id": "7239",
        "FileName": "when_get_briefing_work_record_billing.cs",
        "Description": "as global admin staff",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7240",
    "FileName": "when_get_immigration_work_record_billing.cs",
    "Description": "when get immigration work record billing",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7241",
        "FileName": "when_get_immigration_work_record_billing.cs",
        "Description": "should NOT show billing edit link when staff is NOT in coordinating office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      },
      {
        "$id": "7242",
        "FileName": "when_get_immigration_work_record_billing.cs",
        "Description": "should NOT show billing edit link when assignee is inactive",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7243",
            "FileName": "when_get_immigration_work_record_billing.cs",
            "Description": "as general staff",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return OK",
              "should NOT contain billing edit link"
            ],
            "Children": []
          },
          {
            "$id": "7244",
            "FileName": "when_get_immigration_work_record_billing.cs",
            "Description": "as global admin staff",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return OK",
              "should NOT contain billing edit link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7245",
    "FileName": "when_get_social_security_work_record_billing.cs",
    "Description": "when get social security work record billing",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7246",
        "FileName": "when_get_social_security_work_record_billing.cs",
        "Description": "should NOT show billing edit link when staff is NOT in coordinating office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      },
      {
        "$id": "7247",
        "FileName": "when_get_social_security_work_record_billing.cs",
        "Description": "should NOT show billing edit link when assignee is inactive",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7248",
            "FileName": "when_get_social_security_work_record_billing.cs",
            "Description": "as general staff",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return OK",
              "should NOT contain billing edit link"
            ],
            "Children": []
          },
          {
            "$id": "7249",
            "FileName": "when_get_social_security_work_record_billing.cs",
            "Description": "as global admin staff",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return OK",
              "should NOT contain billing edit link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7250",
    "FileName": "when_get_tax_work_record_billing.cs",
    "Description": "when get tax work record billing",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7251",
        "FileName": "when_get_tax_work_record_billing.cs",
        "Description": "should show billing edit link when staff is in work records engagement coordinating office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain billing edit link"
        ],
        "Children": []
      },
      {
        "$id": "7252",
        "FileName": "when_get_tax_work_record_billing.cs",
        "Description": "should NOT show billing edit link when staff is NOT in coordinating office or responsible office for tax work record",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      },
      {
        "$id": "7253",
        "FileName": "when_get_tax_work_record_billing.cs",
        "Description": "should NOT show billing edit link when staff is in work record delegated coordination office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      },
      {
        "$id": "7254",
        "FileName": "when_get_tax_work_record_billing.cs",
        "Description": "should NOT show billing edit link when assignee is inactive",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7255",
            "FileName": "when_get_tax_work_record_billing.cs",
            "Description": "as general staff",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return OK",
              "should NOT contain billing edit link"
            ],
            "Children": []
          },
          {
            "$id": "7256",
            "FileName": "when_get_tax_work_record_billing.cs",
            "Description": "as global admin staff",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return OK",
              "should NOT contain billing edit link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7257",
        "FileName": "when_get_tax_work_record_billing.cs",
        "Description": "should NOT show billing edit link when engagement is inactive",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7258",
            "FileName": "when_get_tax_work_record_billing.cs",
            "Description": "as general staff",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return OK",
              "should NOT contain billing edit link"
            ],
            "Children": []
          },
          {
            "$id": "7259",
            "FileName": "when_get_tax_work_record_billing.cs",
            "Description": "as global admin staff",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return OK",
              "should NOT contain billing edit link"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7260",
    "FileName": "when_download_employer_return_file.cs",
    "Description": "when download employer return file",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7261",
        "FileName": "when_download_employer_return_file.cs",
        "Description": "when staff is not in work office",
        "WhenList": [
          "download employer return file"
        ],
        "ThenList": [
          "should return forbidon"
        ],
        "Children": []
      },
      {
        "$id": "7262",
        "FileName": "when_download_employer_return_file.cs",
        "Description": "when staff is in subscribe office",
        "WhenList": [
          "download employer return file"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7263",
    "FileName": "when_add_missing_items.cs",
    "Description": "when add missing items",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7264",
        "FileName": "when_add_missing_items.cs",
        "Description": "should add when staff is one of the work record task assignments",
        "WhenList": [
          "add missing items"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should create the missing item"
        ],
        "Children": []
      },
      {
        "$id": "7265",
        "FileName": "when_add_missing_items.cs",
        "Description": "should add when staff is one of the work record checklist item assignments",
        "WhenList": [
          "add missing items"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should create the missing item"
        ],
        "Children": []
      },
      {
        "$id": "7266",
        "FileName": "when_add_missing_items.cs",
        "Description": "should add when staff is in work record responsible office",
        "WhenList": [
          "add missing items"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should create the missing item"
        ],
        "Children": []
      },
      {
        "$id": "7267",
        "FileName": "when_add_missing_items.cs",
        "Description": "should add when staff is in work record team",
        "WhenList": [
          "add missing items"
        ],
        "ThenList": [
          "should return 201 as status code",
          "should create the missing item"
        ],
        "Children": []
      },
      {
        "$id": "7268",
        "FileName": "when_add_missing_items.cs",
        "Description": "should forbidden when staff office is one of the work record assigneement offices",
        "WhenList": [
          "add missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7269",
        "FileName": "when_add_missing_items.cs",
        "Description": "should forbidden when staff office is one of the work record assigneement offices and self nominated",
        "WhenList": [
          "add missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7270",
        "FileName": "when_add_missing_items.cs",
        "Description": "should forbidden when staff office is one of the work record checklist item assignment offices",
        "WhenList": [
          "add missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7271",
        "FileName": "when_add_missing_items.cs",
        "Description": "should forbidden when staff is not in task assignments and staff office not in workrecord related office",
        "WhenList": [
          "add missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7272",
    "FileName": "when_add_missing_items_and_sofia_is_assinged_to_check_list.cs",
    "Description": "when add missing items and sofia is assinged to check list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7273",
        "FileName": "when_add_missing_items_and_sofia_is_assinged_to_check_list.cs",
        "Description": "when not assign to check list item",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7274",
        "FileName": "when_add_missing_items_and_sofia_is_assinged_to_check_list.cs",
        "Description": "when assign to check list item",
        "WhenList": [
          "when add"
        ],
        "ThenList": [
          "should return create"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7275",
    "FileName": "when_delete_missing_items.cs",
    "Description": "when delete missing items",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7276",
        "FileName": "when_delete_missing_items.cs",
        "Description": "should delete when staff is one of the work record task assigneements",
        "WhenList": [
          "when delete"
        ],
        "ThenList": [
          "should return no content",
          "should delete the missing item from work record"
        ],
        "Children": []
      },
      {
        "$id": "7277",
        "FileName": "when_delete_missing_items.cs",
        "Description": "should delete when staff is one of the work record checklist item assigneements",
        "WhenList": [
          "when delete"
        ],
        "ThenList": [
          "should return no content",
          "should delete the missing item from work record"
        ],
        "Children": []
      },
      {
        "$id": "7278",
        "FileName": "when_delete_missing_items.cs",
        "Description": "should delete when staff is in work record responsible office",
        "WhenList": [
          "when delete"
        ],
        "ThenList": [
          "should return no content",
          "should delete the missing item from work record"
        ],
        "Children": []
      },
      {
        "$id": "7279",
        "FileName": "when_delete_missing_items.cs",
        "Description": "should delete when staff is in work record team",
        "WhenList": [
          "when delete"
        ],
        "ThenList": [
          "should return no content",
          "should delete the missing item from work record"
        ],
        "Children": []
      },
      {
        "$id": "7280",
        "FileName": "when_delete_missing_items.cs",
        "Description": "should forbidden when staff office is one of the work record task assigneement offices",
        "WhenList": [
          "when delete"
        ],
        "ThenList": [
          "should return forbidden",
          "should not delete the missing item from work record"
        ],
        "Children": []
      },
      {
        "$id": "7281",
        "FileName": "when_delete_missing_items.cs",
        "Description": "should forbidden when staff office is one of the work record task assigneement offices and self nominated",
        "WhenList": [
          "when delete"
        ],
        "ThenList": [
          "should return forbidden",
          "should not delete the missing item from work record"
        ],
        "Children": []
      },
      {
        "$id": "7282",
        "FileName": "when_delete_missing_items.cs",
        "Description": "should forbidden when staff office is one of the work record checklist item assigneement offices",
        "WhenList": [
          "when delete"
        ],
        "ThenList": [
          "should return forbidden",
          "should not delete the missing item from work record"
        ],
        "Children": []
      },
      {
        "$id": "7283",
        "FileName": "when_delete_missing_items.cs",
        "Description": "should forbidden when staff is not in task assignments and staff office not in workrecord related office",
        "WhenList": [
          "when delete"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7284",
    "FileName": "when_delete_missing_items_staff_assign_to_check_list.cs",
    "Description": "when delete missing items staff assign to check list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7285",
        "FileName": "when_delete_missing_items_staff_assign_to_check_list.cs",
        "Description": "should return forbidden when staff is generall staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7286",
        "FileName": "when_delete_missing_items_staff_assign_to_check_list.cs",
        "Description": "should return no conent when staff is assign to check list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no cotent"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7287",
    "FileName": "when_get_items_missed.cs",
    "Description": "when get items missed",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7288",
        "FileName": "when_get_items_missed.cs",
        "Description": "should get when staff is one of the work record assigneements",
        "WhenList": [
          "load missing items"
        ],
        "ThenList": [
          "should load succeeful",
          "should load missing items"
        ],
        "Children": []
      },
      {
        "$id": "7289",
        "FileName": "when_get_items_missed.cs",
        "Description": "should not get when staff office is one of the work record assigneement offices",
        "WhenList": [
          "load missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7290",
        "FileName": "when_get_items_missed.cs",
        "Description": "should get when staff assign check list",
        "WhenList": [
          "load missing items"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7291",
        "FileName": "when_get_items_missed.cs",
        "Description": "should not get when staff is not in task assignments and staff office not in workrecord related office",
        "WhenList": [
          "load missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7292",
    "FileName": "when_received_missing_items.cs",
    "Description": "when received missing items",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7293",
        "FileName": "when_received_missing_items.cs",
        "Description": "should be notified when staff is one of the work record task assigneements",
        "WhenList": [
          "when receive missing items"
        ],
        "ThenList": [
          "should return 204 no content as status code",
          "should receive missing items"
        ],
        "Children": []
      },
      {
        "$id": "7294",
        "FileName": "when_received_missing_items.cs",
        "Description": "should be notified when staff is one of the work record checklist item assigneements",
        "WhenList": [
          "when receive missing items"
        ],
        "ThenList": [
          "should return 204 no content as status code",
          "should receive missing items"
        ],
        "Children": []
      },
      {
        "$id": "7295",
        "FileName": "when_received_missing_items.cs",
        "Description": "should be notified when staff is in work record responsible office",
        "WhenList": [
          "when receive missing items"
        ],
        "ThenList": [
          "should return 204 no content as status code",
          "should receive missing items"
        ],
        "Children": []
      },
      {
        "$id": "7296",
        "FileName": "when_received_missing_items.cs",
        "Description": "should be notified when staff is in work record team",
        "WhenList": [
          "when receive missing items"
        ],
        "ThenList": [
          "should return 204 no content as status code",
          "should receive missing items"
        ],
        "Children": []
      },
      {
        "$id": "7297",
        "FileName": "when_received_missing_items.cs",
        "Description": "should forbidden when staff office is one of the work record task assigneement offices",
        "WhenList": [
          "when receive missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7298",
        "FileName": "when_received_missing_items.cs",
        "Description": "should forbidden when staff office is one of the work record task assigneement offices and self nominate",
        "WhenList": [
          "when receive missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7299",
        "FileName": "when_received_missing_items.cs",
        "Description": "should forbidden when staff office is one of the work record checklist item assigneement offices",
        "WhenList": [
          "when receive missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7300",
        "FileName": "when_received_missing_items.cs",
        "Description": "should forbidden when staff is not in task assignments and staff office not in workrecord related office",
        "WhenList": [
          "when receive missing items"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7301",
    "FileName": "when_receive_missing_items_by_staff_assign_to_check_list.cs",
    "Description": "when receive missing items by staff assign to check list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7302",
        "FileName": "when_receive_missing_items_by_staff_assign_to_check_list.cs",
        "Description": "should forbidden when staff is genernal access on work reocrd",
        "WhenList": [
          "the missing item has been received"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7303",
        "FileName": "when_receive_missing_items_by_staff_assign_to_check_list.cs",
        "Description": "should no content when staff is assign to check list",
        "WhenList": [
          "the missing item has been received"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7304",
    "FileName": "when_send_missing_item_emails.cs",
    "Description": "when send missing item emails",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7305",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "should be notified when staff is one of the work record task assigneements",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return ok",
          "should notify kayla"
        ],
        "Children": []
      },
      {
        "$id": "7306",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "should be notified when staff is one of the work record checklist item assigneements",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return ok",
          "should notify kayla"
        ],
        "Children": []
      },
      {
        "$id": "7307",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "should be notified when staff is in work record responsible office",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return ok",
          "should notify kayla"
        ],
        "Children": []
      },
      {
        "$id": "7308",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "should be notified when staff is in work record team",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return ok",
          "should notify kayla"
        ],
        "Children": []
      },
      {
        "$id": "7309",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "should forbidden when staff office is one of the work record task assigneement offices",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7310",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "should forbidden when staff office is one of the work record task assigneement offices and self nominated",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7311",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "should forbidden when staff office is one of the work record checklist item assigneement offices",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7312",
        "FileName": "when_send_missing_item_emails.cs",
        "Description": "should forbidden when staff is not in task assignments and staff office not in workrecord related office",
        "WhenList": [
          "when send email"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7313",
    "FileName": "when_send_missing_item_reminder_for_work_record_related_to_check_list_assignment.cs",
    "Description": "when send missing item reminder for work record related to check list assignment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7314",
        "FileName": "when_send_missing_item_reminder_for_work_record_related_to_check_list_assignment.cs",
        "Description": "when not assign to check list item",
        "WhenList": [
          "the missing item has been received"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7315",
        "FileName": "when_send_missing_item_reminder_for_work_record_related_to_check_list_assignment.cs",
        "Description": "when assign to check list item",
        "WhenList": [
          "the missing item has been received"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7316",
    "FileName": "when_add_note.cs",
    "Description": "when add note",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7317",
        "FileName": "when_add_note.cs",
        "Description": "should add when staff is one of the work record task assigneements",
        "WhenList": [
          "add note"
        ],
        "ThenList": [
          "should return 201 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7318",
        "FileName": "when_add_note.cs",
        "Description": "should add when staff is one of the work record checklist item assignments",
        "WhenList": [
          "add note"
        ],
        "ThenList": [
          "should return 201 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7319",
        "FileName": "when_add_note.cs",
        "Description": "should add when staff is in work record responsible office",
        "WhenList": [
          "add note"
        ],
        "ThenList": [
          "should return 201 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7320",
        "FileName": "when_add_note.cs",
        "Description": "should add when staff is in work record team",
        "WhenList": [
          "add note"
        ],
        "ThenList": [
          "should return 201 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7321",
        "FileName": "when_add_note.cs",
        "Description": "should forbidden when staff office is one of the work record assigneement offices",
        "WhenList": [
          "add note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7322",
        "FileName": "when_add_note.cs",
        "Description": "should forbidden when staff office is one of the work record assigneement offices and self nominated",
        "WhenList": [
          "add note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7323",
        "FileName": "when_add_note.cs",
        "Description": "should forbidden when staff office is one of the work record checklist item assignment offices",
        "WhenList": [
          "add note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7324",
        "FileName": "when_add_note.cs",
        "Description": "should forbidden when staff is not in task assignments and staff office not in workrecord related office",
        "WhenList": [
          "add note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7325",
        "FileName": "when_add_note.cs",
        "Description": "should return forbidden when staff is not on the acl of work records engagement",
        "WhenList": [
          "add note"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7326",
    "FileName": "when_delete_note.cs",
    "Description": "when delete note",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7327",
        "FileName": "when_delete_note.cs",
        "Description": "should delete when staff is one of the work record task assigneements",
        "WhenList": [
          "delete note"
        ],
        "ThenList": [
          "should return 200 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7328",
        "FileName": "when_delete_note.cs",
        "Description": "should delete when staff is one of the work record checklist item assignments",
        "WhenList": [
          "delete note"
        ],
        "ThenList": [
          "should return 200 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7329",
        "FileName": "when_delete_note.cs",
        "Description": "should delete when staff is in work record responsible office",
        "WhenList": [
          "delete note"
        ],
        "ThenList": [
          "should return 200 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7330",
        "FileName": "when_delete_note.cs",
        "Description": "should delete when staff is in work record team",
        "WhenList": [
          "delete note"
        ],
        "ThenList": [
          "should return 200 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7331",
        "FileName": "when_delete_note.cs",
        "Description": "should forbidden when staff office is one of the work record assigneement offices",
        "WhenList": [
          "delete note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7332",
        "FileName": "when_delete_note.cs",
        "Description": "should forbidden when staff office is one of the work record assigneement offices and self nominated",
        "WhenList": [
          "delete note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7333",
        "FileName": "when_delete_note.cs",
        "Description": "should forbidden when staff office is one of the work record checklist item assignment offices",
        "WhenList": [
          "delete note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7334",
        "FileName": "when_delete_note.cs",
        "Description": "should forbidden when staff is not in task assignments and staff office not in workrecord related office",
        "WhenList": [
          "delete note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7335",
        "FileName": "when_delete_note.cs",
        "Description": "should return forbidden when staff is not on the acl of work records engagement",
        "WhenList": [
          "delete note"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7336",
    "FileName": "when_update_note.cs",
    "Description": "when update note",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7337",
        "FileName": "when_update_note.cs",
        "Description": "should update when staff is one of the work record task assigneements",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return 204 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7338",
        "FileName": "when_update_note.cs",
        "Description": "should update when staff is one of the work record checklist item assignments",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return 204 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7339",
        "FileName": "when_update_note.cs",
        "Description": "should update when staff is in work record responsible office",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return 204 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7340",
        "FileName": "when_update_note.cs",
        "Description": "should update when staff is in work record team",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return 204 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7341",
        "FileName": "when_update_note.cs",
        "Description": "should forbidden when staff office is one of the work record assigneement offices",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7342",
        "FileName": "when_update_note.cs",
        "Description": "should forbidden when staff office is one of the work record assigneement offices and self nominated",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7343",
        "FileName": "when_update_note.cs",
        "Description": "should forbidden when staff office is one of the work record checklist item assignment offices",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7344",
        "FileName": "when_update_note.cs",
        "Description": "should forbidden when staff is not in task assignments and staff office not in workrecord related office",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7345",
        "FileName": "when_update_note.cs",
        "Description": "should return forbidden when staff is not on the acl of work records engagement",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      },
      {
        "$id": "7346",
        "FileName": "when_update_note.cs",
        "Description": "should return no content when staff is not on the acl of work records engagement but he is a global admin",
        "WhenList": [
          "update note"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7347",
    "FileName": "when_search_work_record.cs",
    "Description": "when search work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7348",
        "FileName": "when_search_work_record.cs",
        "Description": "when using advance search action",
        "WhenList": [
          "searching for work record"
        ],
        "ThenList": [
          "should succeed",
          "should not return kayla work records"
        ],
        "Children": []
      },
      {
        "$id": "7349",
        "FileName": "when_search_work_record.cs",
        "Description": "when using search simple action",
        "WhenList": [
          "searching for work record"
        ],
        "ThenList": [
          "should succeed",
          "should not return kayla work records"
        ],
        "Children": []
      },
      {
        "$id": "7350",
        "FileName": "when_search_work_record.cs",
        "Description": "when using search simple action with more criteria",
        "WhenList": [
          "searching for work record"
        ],
        "ThenList": [
          "should succeed",
          "should not return kayla work records"
        ],
        "Children": []
      },
      {
        "$id": "7351",
        "FileName": "when_search_work_record.cs",
        "Description": "when using search by uris",
        "WhenList": [
          "searching for work record"
        ],
        "ThenList": [
          "should succeed",
          "should not return kayla work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7352",
    "FileName": "when_search_work_record_by_sofia_with_different_practice_type.cs",
    "Description": "when search work record by sofia with different practice type",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return created work record"
    ],
    "Children": []
  },
  {
    "$id": "7353",
    "FileName": "when_batch_update_work_milestones.cs",
    "Description": "when batch update work milestones",
    "WhenList": [
      "update work milestone of work record"
    ],
    "ThenList": [
      "should return ok"
    ],
    "Children": []
  },
  {
    "$id": "7354",
    "FileName": "when_move_milestone_back.cs",
    "Description": "when move milestone back",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7355",
        "FileName": "when_move_milestone_back.cs",
        "Description": "when sofia as global admin",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7356",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when get work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7357",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when batch update work milestones",
            "WhenList": [
              "move milestone back"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7358",
        "FileName": "when_move_milestone_back.cs",
        "Description": "when sofia from responsible office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7359",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when get work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7360",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when batch update work milestones",
            "WhenList": [
              "update work milestone of work record"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7361",
        "FileName": "when_move_milestone_back.cs",
        "Description": "when sofia from coordinating office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7362",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when get work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7363",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when move milestone back",
            "WhenList": [
              "move milestone back"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7364",
        "FileName": "when_move_milestone_back.cs",
        "Description": "when sofia from delegated coordinating office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7365",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when get work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7366",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when move milestone back",
            "WhenList": [
              "move milestone back"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7367",
        "FileName": "when_move_milestone_back.cs",
        "Description": "when sofia with task responsibility",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7368",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when get work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7369",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when move milestone back",
            "WhenList": [
              "move milestone back"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7370",
        "FileName": "when_move_milestone_back.cs",
        "Description": "when sofia from office with task responsibility",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7371",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when get work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7372",
            "FileName": "when_move_milestone_back.cs",
            "Description": "when move milestone back",
            "WhenList": [
              "move milestone back"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7373",
    "FileName": "when_move_milestone_back_in_work_record_from_inactive_assignee.cs",
    "Description": "when move milestone back in work record from inactive assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7374",
        "FileName": "when_move_milestone_back_in_work_record_from_inactive_assignee.cs",
        "Description": "when sofia from responsible office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7375",
            "FileName": "when_move_milestone_back_in_work_record_from_inactive_assignee.cs",
            "Description": "when get work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should not contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7376",
            "FileName": "when_move_milestone_back_in_work_record_from_inactive_assignee.cs",
            "Description": "when batch update work milestones",
            "WhenList": [
              "update work milestone of work record"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7377",
    "FileName": "when_move_milestone_back_without_permission.cs",
    "Description": "when move milestone back without permission",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7378",
        "FileName": "when_move_milestone_back_without_permission.cs",
        "Description": "when sofia tries to move milestone back as nobody",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7379",
        "FileName": "when_move_milestone_back_without_permission.cs",
        "Description": "when sofia is questionnaire contact",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7380",
            "FileName": "when_move_milestone_back_without_permission.cs",
            "Description": "when get work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should not contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7381",
            "FileName": "when_move_milestone_back_without_permission.cs",
            "Description": "when tries to move milestone back",
            "WhenList": [
              "move milestone back"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7382",
        "FileName": "when_move_milestone_back_without_permission.cs",
        "Description": "when sofia is pwc contact",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7383",
            "FileName": "when_move_milestone_back_without_permission.cs",
            "Description": "when get work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should not contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7384",
            "FileName": "when_move_milestone_back_without_permission.cs",
            "Description": "when tries to move milestone back",
            "WhenList": [
              "move milestone back"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7385",
        "FileName": "when_move_milestone_back_without_permission.cs",
        "Description": "when sofia from subscribed office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7386",
            "FileName": "when_move_milestone_back_without_permission.cs",
            "Description": "get the work record",
            "WhenList": [
              "get work record"
            ],
            "ThenList": [
              "should not contain move milestone back link"
            ],
            "Children": []
          },
          {
            "$id": "7387",
            "FileName": "when_move_milestone_back_without_permission.cs",
            "Description": "tries to move milestone back",
            "WhenList": [
              "move milestone back"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7388",
    "FileName": "when_batch_active_work_records_questionnaire_by_staff_with_different_practice_type.cs",
    "Description": "when batch active work records questionnaire by staff with different practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7389",
        "FileName": "when_batch_active_work_records_questionnaire_by_staff_with_different_practice_type.cs",
        "Description": "when active questionnaire",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7390",
    "FileName": "when_batch_send_questionnaire_reminder_by_staff_with_different_practice_type.cs",
    "Description": "when batch send questionnaire reminder by staff with different practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7391",
        "FileName": "when_batch_send_questionnaire_reminder_by_staff_with_different_practice_type.cs",
        "Description": "when send questionnaire first reminder",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7392",
    "FileName": "when_batch_update_work_records_by_staff_with_different_practice_type.cs",
    "Description": "when batch update work records by staff with different practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7393",
        "FileName": "when_batch_update_work_records_by_staff_with_different_practice_type.cs",
        "Description": "when update basic information",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7394",
        "FileName": "when_batch_update_work_records_by_staff_with_different_practice_type.cs",
        "Description": "when update responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7395",
        "FileName": "when_batch_update_work_records_by_staff_with_different_practice_type.cs",
        "Description": "when update estimated completion date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7396",
    "FileName": "when_batch_update_work_records_organizer_by_staff_with_different_practice_type.cs",
    "Description": "when batch update work records organizer by staff with different practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7397",
        "FileName": "when_batch_update_work_records_organizer_by_staff_with_different_practice_type.cs",
        "Description": "when update questionnaire contact",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7398",
        "FileName": "when_batch_update_work_records_organizer_by_staff_with_different_practice_type.cs",
        "Description": "when update qeustionnaire due date",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7399",
    "FileName": "when_batch_update_work_record_checklist_item_status.cs",
    "Description": "when batch update work record checklist item status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7400",
        "FileName": "when_batch_update_work_record_checklist_item_status.cs",
        "Description": "when sofia in responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7401",
        "FileName": "when_batch_update_work_record_checklist_item_status.cs",
        "Description": "when sofia in delegated office update task assigned to her",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7402",
        "FileName": "when_batch_update_work_record_checklist_item_status.cs",
        "Description": "when batch update checklist of which work record is problematic",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7403",
        "FileName": "when_batch_update_work_record_checklist_item_status.cs",
        "Description": "when sofia in delegated office update task only assigned to her office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7404",
        "FileName": "when_batch_update_work_record_checklist_item_status.cs",
        "Description": "when sofia in delegated office update task not assigned to her",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7405",
        "FileName": "when_batch_update_work_record_checklist_item_status.cs",
        "Description": "when sofia in other office update task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7406",
    "FileName": "when_batch_update_work_record_task_status.cs",
    "Description": "when batch update work record task status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7407",
        "FileName": "when_batch_update_work_record_task_status.cs",
        "Description": "when sofia start task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should start task"
        ],
        "Children": []
      },
      {
        "$id": "7408",
        "FileName": "when_batch_update_work_record_task_status.cs",
        "Description": "when sofia undo task",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7409",
            "FileName": "when_batch_update_work_record_task_status.cs",
            "Description": "should valid when prev completed",
            "WhenList": [
              "undo"
            ],
            "ThenList": [
              "should return ok",
              "should undo task"
            ],
            "Children": []
          },
          {
            "$id": "7410",
            "FileName": "when_batch_update_work_record_task_status.cs",
            "Description": "should not valid when prev not completed",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not update"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7411",
        "FileName": "when_batch_update_work_record_task_status.cs",
        "Description": "when sofia cross out task",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7412",
            "FileName": "when_batch_update_work_record_task_status.cs",
            "Description": "should able to cross out when created",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should finish task"
            ],
            "Children": []
          },
          {
            "$id": "7413",
            "FileName": "when_batch_update_work_record_task_status.cs",
            "Description": "should able to cross out when started",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok",
              "should finish task"
            ],
            "Children": []
          },
          {
            "$id": "7414",
            "FileName": "when_batch_update_work_record_task_status.cs",
            "Description": "should not cross out when already cross out",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not return ok"
            ],
            "Children": []
          },
          {
            "$id": "7415",
            "FileName": "when_batch_update_work_record_task_status.cs",
            "Description": "should not cross out when finish",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should not return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7416",
        "FileName": "when_batch_update_work_record_task_status.cs",
        "Description": "when sofia finish task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should finish task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7417",
    "FileName": "when_batch_update_work_record_task_status_with_access_check.cs",
    "Description": "when batch update work record task status with access check",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7418",
        "FileName": "when_batch_update_work_record_task_status_with_access_check.cs",
        "Description": "when sofia in responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7419",
        "FileName": "when_batch_update_work_record_task_status_with_access_check.cs",
        "Description": "when sofia in work record team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7420",
        "FileName": "when_batch_update_work_record_task_status_with_access_check.cs",
        "Description": "when sofia in delegated office update task assigned to her",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7421",
        "FileName": "when_batch_update_work_record_task_status_with_access_check.cs",
        "Description": "when sofia in delegated office update task only assigned to her office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7422",
        "FileName": "when_batch_update_work_record_task_status_with_access_check.cs",
        "Description": "when sofia in delegated office update task not assigned to her",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7423",
        "FileName": "when_batch_update_work_record_task_status_with_access_check.cs",
        "Description": "when sofia in other office update task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7424",
    "FileName": "when_finish_all_tasks_in_current_milestone.cs",
    "Description": "when finish last task in last milestone",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7425",
        "FileName": "when_finish_all_tasks_in_current_milestone.cs",
        "Description": "should complete tax work record when no missing item existing",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7426",
        "FileName": "when_finish_all_tasks_in_current_milestone.cs",
        "Description": "should not complete tax work record when has missing items",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7427",
        "FileName": "when_finish_all_tasks_in_current_milestone.cs",
        "Description": "should not deliver tax work record when has missing items",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7428",
        "FileName": "when_finish_all_tasks_in_current_milestone.cs",
        "Description": "should complete immigration work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7429",
        "FileName": "when_finish_all_tasks_in_current_milestone.cs",
        "Description": "should not deliver social security work record when has missing items",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7430",
    "FileName": "when_patch_immigration_wor_reocrd_by_staff_who_assign_to_check_list.cs",
    "Description": "when patch immigration wor reocrd by staff who assign to check list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7431",
        "FileName": "when_patch_immigration_wor_reocrd_by_staff_who_assign_to_check_list.cs",
        "Description": "should forbidden when not assign to check list who is in work office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7432",
        "FileName": "when_patch_immigration_wor_reocrd_by_staff_who_assign_to_check_list.cs",
        "Description": "should ok when assign to check list who is in work office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should contain public link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7433",
    "FileName": "when_patch_update_work_record_by_staff_with_different_practice_type.cs",
    "Description": "when patch social security work record uac by responsbility to check list",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7434",
        "FileName": "when_patch_update_work_record_by_staff_with_different_practice_type.cs",
        "Description": "should forbidden not assign to check list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7435",
        "FileName": "when_patch_update_work_record_by_staff_with_different_practice_type.cs",
        "Description": "should ok assign to check list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should contain public link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7436",
    "FileName": "when_patch_update_work_record_by_staff_with_different_practice_type.cs",
    "Description": "when patch update work record by staff with different practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7437",
        "FileName": "when_patch_update_work_record_by_staff_with_different_practice_type.cs",
        "Description": "when update tax work record by immigration staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7438",
        "FileName": "when_patch_update_work_record_by_staff_with_different_practice_type.cs",
        "Description": "when update social security work record by immigration staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7439",
        "FileName": "when_patch_update_work_record_by_staff_with_different_practice_type.cs",
        "Description": "when update immigration work record by tax staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7440",
    "FileName": "when_patch_work_record_with_restricted_assignee.cs",
    "Description": "when patch work record with restricted assignee",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "7441",
    "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
    "Description": "when reschedule appointment for online briefing work record by different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7442",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is briefing coordinator",
        "WhenList": [
          "of schedule appointment"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7443",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work record responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7444",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work record team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7445",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from engagement coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7446",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from engagement delegated office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7447",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is country level but not from any of engagement subscribed office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7448",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work office assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7449",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work office and office assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7450",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work office but not assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7451",
        "FileName": "when_reschedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work office but assign to check list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7452",
    "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
    "Description": "when schedule appointment for online briefing work record by different role",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7453",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is briefing coordinator",
        "WhenList": [
          "of schedule appointment"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "7454",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work record responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "7455",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work record team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "7456",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from engagement coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "7457",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from engagement delegated office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "7458",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is country level but not from any of engagement subscribed office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7459",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work office assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "7460",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work office and office assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      },
      {
        "$id": "7461",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work office but not assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7462",
        "FileName": "when_schedule_appointment_for_online_briefing_work_record_by_different_role.cs",
        "Description": "when current user is from work office but assigned to check list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return created"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7463",
    "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
    "Description": "when update immigration work record country custom field value",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7464",
        "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
        "Description": "when staff is work record delegated staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7465",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7466",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7467",
        "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
        "Description": "when staff in work record responsible office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7468",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7469",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7470",
        "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
        "Description": "when staff in work record team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7471",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7472",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7473",
        "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
        "Description": "when staff in unsuscribed office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7474",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7475",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7476",
        "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
        "Description": "when staff assinged to check list",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7477",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7478",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7479",
        "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
        "Description": "when staff office assinged to check list",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7480",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7481",
            "FileName": "when_update_immigration_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return fobidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7482",
    "FileName": "when_update_online_briefing_work_record.cs",
    "Description": "when update online briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7483",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "when update by staff of immigration",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7484",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "when update by staff not in engagement responsible offices",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7485",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "when update by staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7486",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "should not contain send notification link for non coordinator staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return changed work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7487",
    "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
    "Description": "when update social security work record country custom field value",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7488",
        "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
        "Description": "when staff is work record delegated staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7489",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7490",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7491",
        "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
        "Description": "when staff in work record responsible office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7492",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7493",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7494",
        "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
        "Description": "when staff in work record team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7495",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7496",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7497",
        "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
        "Description": "when staff in unsuscribed office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7498",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7499",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7500",
        "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
        "Description": "when staff assigned to check list",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7501",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7502",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7503",
        "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
        "Description": "when staff office assigned to check list",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7504",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7505",
            "FileName": "when_update_social_security_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7506",
    "FileName": "when_update_tax_organizer.cs",
    "Description": "when update tax organizer",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7507",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when staff is in work office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7508",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when update organizer with valid request",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7509",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when activate organizer",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return accepted"
            ],
            "Children": []
          },
          {
            "$id": "7510",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when submit organizer",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7511",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when change organizer to in progress",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7512",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when staff is in coordinating office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7513",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when update organizer with valid request",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7514",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when activate organizer",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return accepted"
            ],
            "Children": []
          },
          {
            "$id": "7515",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when submit organizer",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7516",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when change organizer to in progress",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7517",
        "FileName": "when_update_tax_organizer.cs",
        "Description": "when staff is in work record team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7518",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when update organizer with valid request",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7519",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when activate organizer",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return accepted"
            ],
            "Children": []
          },
          {
            "$id": "7520",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when submit organizer",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7521",
            "FileName": "when_update_tax_organizer.cs",
            "Description": "when change organizer to in progress",
            "WhenList": [
              "update organizer"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7522",
    "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
    "Description": "when update tax work record country custom field value",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7523",
        "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
        "Description": "when staff in coordinating office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7524",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when before self nomination",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "7525",
                "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
                "Description": "when updating public country custom field",
                "WhenList": [
                  "updating"
                ],
                "ThenList": [
                  "should patch succeeful"
                ],
                "Children": []
              },
              {
                "$id": "7526",
                "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
                "Description": "when updating private country custom field",
                "WhenList": [
                  "of"
                ],
                "ThenList": [
                  "should patch forbidden"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "7527",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when after self nomination",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "7528",
                "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
                "Description": "when updating public country custom field",
                "WhenList": [
                  "updating"
                ],
                "ThenList": [
                  "should patch succeeful"
                ],
                "Children": []
              },
              {
                "$id": "7529",
                "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
                "Description": "when updating private country custom field",
                "WhenList": [
                  "of"
                ],
                "ThenList": [
                  "should patch forbidden"
                ],
                "Children": []
              }
            ]
          }
        ]
      },
      {
        "$id": "7530",
        "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
        "Description": "when staff in work record responsible office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7531",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should patch succeeful"
            ],
            "Children": []
          },
          {
            "$id": "7532",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7533",
        "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
        "Description": "when staff in work record team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7534",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should patch succeeful"
            ],
            "Children": []
          },
          {
            "$id": "7535",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7536",
        "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
        "Description": "when staff is work record delegated staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7537",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should patch succeeful"
            ],
            "Children": []
          },
          {
            "$id": "7538",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7539",
        "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
        "Description": "when staff in work record delegated office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7540",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should patch succeeful"
            ],
            "Children": []
          },
          {
            "$id": "7541",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7542",
        "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
        "Description": "when staff in work office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7543",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7544",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7545",
        "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
        "Description": "when staff in unsuscribed office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7546",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7547",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7548",
        "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
        "Description": "when staff office in assign to check list",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7549",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7550",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7551",
        "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
        "Description": "when staff in assign to check list",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7552",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating public country custom field",
            "WhenList": [
              "updating"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7553",
            "FileName": "when_update_tax_work_record_country_custom_field_value.cs",
            "Description": "when updating private country custom field",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7554",
    "FileName": "when_update_tax_work_record_detail.cs",
    "Description": "when update tax work record detail",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7555",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when staff in work office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7556",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when staff in delegated office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7557",
            "FileName": "when_update_tax_work_record_detail.cs",
            "Description": "when staff office assigned to a task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return OK",
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7558",
            "FileName": "when_update_tax_work_record_detail.cs",
            "Description": "when staff office assigned to a checklist item",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return OK",
              "should success"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7559",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when staff in coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7560",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when staff in work record team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7561",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when staff in unsuscribed office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7562",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when staff in work office and assign to check list",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should contain public link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7563",
    "FileName": "when_update_tax_work_record_tax_equalization.cs",
    "Description": "when update tax work record tax equalization",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7564",
        "FileName": "when_update_tax_work_record_tax_equalization.cs",
        "Description": "when creating tax equalization",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7565",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is responsible office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7566",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in work record team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7567",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is delegated staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7568",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in delegated office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7569",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in coordinating office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7570",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in work office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7571",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in unsuscribed office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7572",
        "FileName": "when_update_tax_work_record_tax_equalization.cs",
        "Description": "when editing tax equalization",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7573",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in responsible office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7574",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in work record team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7575",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is delegated staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7576",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in delegated office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7577",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in coordinating office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7578",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in work office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7579",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in unsuscribed office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7580",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in assign to check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7581",
        "FileName": "when_update_tax_work_record_tax_equalization.cs",
        "Description": "when deleting tax equalization",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7582",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in responsible office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7583",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in work record team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7584",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is delegated staff",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7585",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in delegated office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7586",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in coordinating office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7587",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in work office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          },
          {
            "$id": "7588",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in unsuscribed office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7589",
            "FileName": "when_update_tax_work_record_tax_equalization.cs",
            "Description": "when staff is in assign to check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7590",
    "FileName": "when_get_immigration_work_record_checklist_item_with_permission_flag.cs",
    "Description": "when get immigration work record checklist item with permission flag",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7591",
        "FileName": "when_get_immigration_work_record_checklist_item_with_permission_flag.cs",
        "Description": "when immigration work record checklist item is assigned to work record responsible office",
        "WhenList": [
          "load immigration workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and responsibilities and update task of all tasks"
        ],
        "Children": []
      },
      {
        "$id": "7592",
        "FileName": "when_get_immigration_work_record_checklist_item_with_permission_flag.cs",
        "Description": "when immigration work record checklist item is assigned to delegated office",
        "WhenList": [
          "load immigration workrecord"
        ],
        "ThenList": [
          "should able to assign responsible offices and assign responsibilities but can not update task"
        ],
        "Children": []
      },
      {
        "$id": "7593",
        "FileName": "when_get_immigration_work_record_checklist_item_with_permission_flag.cs",
        "Description": "when immigration work record checklist item is assigned to staff in delegated office",
        "WhenList": [
          "load immigration workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and responsibilities for sofia"
        ],
        "Children": []
      },
      {
        "$id": "7594",
        "FileName": "when_get_immigration_work_record_checklist_item_with_permission_flag.cs",
        "Description": "when immigration work record checklist item is assigned to other office or responsibilities",
        "WhenList": [
          "load immigration workrecord"
        ],
        "ThenList": [
          "should disable to assign responsible offices and responsibilities and update task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7595",
    "FileName": "when_get_immigration_work_record_task_with_permission_flag.cs",
    "Description": "when get immigration work record task with permission flag",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7596",
        "FileName": "when_get_immigration_work_record_task_with_permission_flag.cs",
        "Description": "when immigration work record task is assigned to work record responsible office",
        "WhenList": [
          "load immigration workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and responsibilities of all tasks and update task"
        ],
        "Children": []
      },
      {
        "$id": "7597",
        "FileName": "when_get_immigration_work_record_task_with_permission_flag.cs",
        "Description": "when immigration work record task is assigned to delegated office",
        "WhenList": [
          "load immigration workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and enable to assign responsibilities and disable to update task"
        ],
        "Children": []
      },
      {
        "$id": "7598",
        "FileName": "when_get_immigration_work_record_task_with_permission_flag.cs",
        "Description": "when immigration work record task is assigned to staff in delegated office",
        "WhenList": [
          "load immigration workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and responsibilities and enable to update task for lucy"
        ],
        "Children": []
      },
      {
        "$id": "7599",
        "FileName": "when_get_immigration_work_record_task_with_permission_flag.cs",
        "Description": "when immigration work record task is assigned to other office or responsibilities",
        "WhenList": [
          "load immigration workrecord"
        ],
        "ThenList": [
          "should disable to assign responsible offices and responsibilities and update task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7600",
    "FileName": "when_get_tax_work_record_checklist_item_with_permission_flag.cs",
    "Description": "when get tax work record checklist item with permission flag",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7601",
        "FileName": "when_get_tax_work_record_checklist_item_with_permission_flag.cs",
        "Description": "when work record checklist item is assigned to work record responsible office",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and responsibilities and update task of all tasks"
        ],
        "Children": []
      },
      {
        "$id": "7602",
        "FileName": "when_get_tax_work_record_checklist_item_with_permission_flag.cs",
        "Description": "when work record checklist item is assigned to delegated office",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and update task and enable to assign responsibilities"
        ],
        "Children": []
      },
      {
        "$id": "7603",
        "FileName": "when_get_tax_work_record_checklist_item_with_permission_flag.cs",
        "Description": "when work record checklist item is assigned to staff in delegated office",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and responsibilities and enable to update task for sofia"
        ],
        "Children": []
      },
      {
        "$id": "7604",
        "FileName": "when_get_tax_work_record_checklist_item_with_permission_flag.cs",
        "Description": "when work record checklist item is assigned to other office or responsibilities",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should disable to assign responsible offices and responsibilities update task"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7605",
    "FileName": "when_get_tax_work_record_task_with_permission_flag.cs",
    "Description": "when get tax work record task with permission flag",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7606",
        "FileName": "when_get_tax_work_record_task_with_permission_flag.cs",
        "Description": "when work record task is assigned to work record responsible office",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and responsibilities of all tasks"
        ],
        "Children": []
      },
      {
        "$id": "7607",
        "FileName": "when_get_tax_work_record_task_with_permission_flag.cs",
        "Description": "when work record task is assigned to delegated office",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should disable to assign responsible offices and enable to assign responsibilities"
        ],
        "Children": []
      },
      {
        "$id": "7608",
        "FileName": "when_get_tax_work_record_task_with_permission_flag.cs",
        "Description": "when work record task is assigned to staff in delegated office",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should enable to assign responsible offices and responsibilities for sofia"
        ],
        "Children": []
      },
      {
        "$id": "7609",
        "FileName": "when_get_tax_work_record_task_with_permission_flag.cs",
        "Description": "when work record task is assigned to other office or responsibilities",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should disable to assign responsible offices and responsibilities"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7610",
    "FileName": "when_update_work_record_checklist_assignments.cs",
    "Description": "when update work record checklist assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7611",
        "FileName": "when_update_work_record_checklist_assignments.cs",
        "Description": "when staff in delegated office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7612",
            "FileName": "when_update_work_record_checklist_assignments.cs",
            "Description": "when staff assign himself",
            "WhenList": [
              "assign himself to a checklist item"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7613",
            "FileName": "when_update_work_record_checklist_assignments.cs",
            "Description": "when staff assign a colleague from his office",
            "WhenList": [
              "assign a colleague to a checklist item"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7614",
            "FileName": "when_update_work_record_checklist_assignments.cs",
            "Description": "when staff assign somebody from other office",
            "WhenList": [
              "assign somebody from other office to a checklist item"
            ],
            "ThenList": [
              "should be bad request"
            ],
            "Children": []
          },
          {
            "$id": "7615",
            "FileName": "when_update_work_record_checklist_assignments.cs",
            "Description": "when staff update responsible office of item which is assigned to her office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7616",
        "FileName": "when_update_work_record_checklist_assignments.cs",
        "Description": "when delegated staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7617",
            "FileName": "when_update_work_record_checklist_assignments.cs",
            "Description": "when staff wants to assign responsibility to her colleagues",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7618",
            "FileName": "when_update_work_record_checklist_assignments.cs",
            "Description": "when staff remove responsibility of item which is assigned to him",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7619",
        "FileName": "when_update_work_record_checklist_assignments.cs",
        "Description": "when staff in engagement work offices update responsibility of item which is not assigned to her",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7620",
    "FileName": "when_update_work_record_task_assignments.cs",
    "Description": "when update work record task assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7621",
        "FileName": "when_update_work_record_task_assignments.cs",
        "Description": "when staff in engagement work offices and update responsibility of other staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7622",
        "FileName": "when_update_work_record_task_assignments.cs",
        "Description": "when staff in delegated office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7623",
            "FileName": "when_update_work_record_task_assignments.cs",
            "Description": "when staff assign himself",
            "WhenList": [
              "assign himself to a task"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7624",
            "FileName": "when_update_work_record_task_assignments.cs",
            "Description": "when staff assign a colleague from his office",
            "WhenList": [
              "assign a colleague to a task"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7625",
            "FileName": "when_update_work_record_task_assignments.cs",
            "Description": "when staff assign somebody from other office that does not belong to work records engagement offices",
            "WhenList": [
              "assign somebody from other office to a task"
            ],
            "ThenList": [
              "should be bad request"
            ],
            "Children": []
          },
          {
            "$id": "7626",
            "FileName": "when_update_work_record_task_assignments.cs",
            "Description": "when staff assign somebody from other office who belongs to work records engagement offices",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7627",
        "FileName": "when_update_work_record_task_assignments.cs",
        "Description": "when delegated staff",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7628",
            "FileName": "when_update_work_record_task_assignments.cs",
            "Description": "when staff assign responsibility to her colleague",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7629",
            "FileName": "when_update_work_record_task_assignments.cs",
            "Description": "when staff remove responsibility which is assigned to him",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7630",
            "FileName": "when_update_work_record_task_assignments.cs",
            "Description": "when updating responsibility of current staff should lose priviledge of viewing private information",
            "WhenList": [
              "update responsibility to other people"
            ],
            "ThenList": [
              "should return ok",
              "should not load restricted info"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7631",
    "FileName": "when_upload_employer_return_file.cs",
    "Description": "when upload employer return file",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7632",
        "FileName": "when_upload_employer_return_file.cs",
        "Description": "when staff is not in work office",
        "WhenList": [
          "upload employer return file info"
        ],
        "ThenList": [
          "should return forbidon"
        ],
        "Children": []
      },
      {
        "$id": "7633",
        "FileName": "when_upload_employer_return_file.cs",
        "Description": "when staff is in subscribe office",
        "WhenList": [
          "upload employer return file info"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7634",
    "FileName": "when_check_staff_on_work_record_acl.cs",
    "Description": "when check staff on work record acl",
    "WhenList": [
      "check staff on acl"
    ],
    "ThenList": [
      "return result"
    ],
    "Children": []
  },
  {
    "$id": "7635",
    "FileName": "when_delete_tax_equalization.cs",
    "Description": "when delete tax equalization",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7636",
        "FileName": "when_delete_tax_equalization.cs",
        "Description": "given work record with tax equalization",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7637",
            "FileName": "when_delete_tax_equalization.cs",
            "Description": "when is only in working office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidde"
            ],
            "Children": []
          },
          {
            "$id": "7638",
            "FileName": "when_delete_tax_equalization.cs",
            "Description": "when is assign to check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return no content"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7639",
    "FileName": "when_get_immigration_application_with_different_roles.cs",
    "Description": "when get immigration application with different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7640",
        "FileName": "when_get_immigration_application_with_different_roles.cs",
        "Description": "when coordinating office staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7641",
        "FileName": "when_get_immigration_application_with_different_roles.cs",
        "Description": "when delegated office staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7642",
        "FileName": "when_get_immigration_application_with_different_roles.cs",
        "Description": "when work record responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7643",
        "FileName": "when_get_immigration_application_with_different_roles.cs",
        "Description": "when staff assigned with task responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7644",
        "FileName": "when_get_immigration_application_with_different_roles.cs",
        "Description": "when staff in an office assigned with task responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7645",
        "FileName": "when_get_immigration_application_with_different_roles.cs",
        "Description": "when staff is not in any office of engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7646",
        "FileName": "when_get_immigration_application_with_different_roles.cs",
        "Description": "when staff is subscribed office of engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not have move back link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7647",
    "FileName": "when_get_immigration_application_work_record_with_different_roles.cs",
    "Description": "when get immigration application work record with different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7648",
        "FileName": "when_get_immigration_application_work_record_with_different_roles.cs",
        "Description": "when coordinating office staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7649",
        "FileName": "when_get_immigration_application_work_record_with_different_roles.cs",
        "Description": "when delegated office staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7650",
        "FileName": "when_get_immigration_application_work_record_with_different_roles.cs",
        "Description": "when work record responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7651",
        "FileName": "when_get_immigration_application_work_record_with_different_roles.cs",
        "Description": "when staff assigned with task responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7652",
        "FileName": "when_get_immigration_application_work_record_with_different_roles.cs",
        "Description": "when staff in an office assigned with task responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7653",
        "FileName": "when_get_immigration_application_work_record_with_different_roles.cs",
        "Description": "when staff is not in any office of engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not have move back link"
        ],
        "Children": []
      },
      {
        "$id": "7654",
        "FileName": "when_get_immigration_application_work_record_with_different_roles.cs",
        "Description": "when staff is subscribed office of engagement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not have move back link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7655",
    "FileName": "when_get_immigration_documents_by_different_roles.cs",
    "Description": "when get immigration documents by different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7656",
        "FileName": "when_get_immigration_documents_by_different_roles.cs",
        "Description": "should contain document link by global admin",
        "WhenList": [
          "when get a immigration application work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain document link"
        ],
        "Children": []
      },
      {
        "$id": "7657",
        "FileName": "when_get_immigration_documents_by_different_roles.cs",
        "Description": "should contain document link by staff in coordinating office",
        "WhenList": [
          "when get a immigration application work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain document link"
        ],
        "Children": []
      },
      {
        "$id": "7658",
        "FileName": "when_get_immigration_documents_by_different_roles.cs",
        "Description": "should contain document link by staff in delegated coordinating office",
        "WhenList": [
          "when get a immigration application work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain document link"
        ],
        "Children": []
      },
      {
        "$id": "7659",
        "FileName": "when_get_immigration_documents_by_different_roles.cs",
        "Description": "should contain document link by staff in subscribed office",
        "WhenList": [
          "when get a immigration application work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain document link"
        ],
        "Children": []
      },
      {
        "$id": "7660",
        "FileName": "when_get_immigration_documents_by_different_roles.cs",
        "Description": "should contain document link by staff in team",
        "WhenList": [
          "when get a immigration application work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain document link"
        ],
        "Children": []
      },
      {
        "$id": "7661",
        "FileName": "when_get_immigration_documents_by_different_roles.cs",
        "Description": "should NOT contain document link by staff in other offices",
        "WhenList": [
          "when get a immigration application work record"
        ],
        "ThenList": [
          "should return ok",
          "should not contain document link"
        ],
        "Children": []
      },
      {
        "$id": "7662",
        "FileName": "when_get_immigration_documents_by_different_roles.cs",
        "Description": "should contain document link by staff in acl for restricted assignee",
        "WhenList": [
          "when get a immigration application work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain document link"
        ],
        "Children": []
      },
      {
        "$id": "7663",
        "FileName": "when_get_immigration_documents_by_different_roles.cs",
        "Description": "should NOT contain document link by staff not in acl for restricted assignee",
        "WhenList": [
          "when get a immigration application work record"
        ],
        "ThenList": [
          "should return ok",
          "should not contain document link"
        ],
        "Children": []
      },
      {
        "$id": "7664",
        "FileName": "when_get_immigration_documents_by_different_roles.cs",
        "Description": "should NOT contain document link by staff for workrecord is not no issues",
        "WhenList": [
          "when get a immigration application work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain document link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7665",
    "FileName": "when_get_online_briefing_work_record_and_assignee_is_Inactive.cs",
    "Description": "when get online briefing work record and assignee is inactive",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed",
      "should return online scheduling information"
    ],
    "Children": []
  },
  {
    "$id": "7666",
    "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
    "Description": "when get online briefing work record and current milestone is complete",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7667",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
        "Description": "when current user is coordinator",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment"
        ],
        "Children": []
      },
      {
        "$id": "7668",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
        "Description": "when assignee need to be verified by sofia",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should contains mark as verified link"
        ],
        "Children": []
      },
      {
        "$id": "7669",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
        "Description": "when current user is from work record responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment"
        ],
        "Children": []
      },
      {
        "$id": "7670",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
        "Description": "when current user is from engagement coordinating office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7671",
            "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
            "Description": "should have access to reschedule before self nomination",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should not allow schedule appointment"
            ],
            "Children": []
          },
          {
            "$id": "7672",
            "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
            "Description": "should have access to reschedule after self nomination",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should allow to reschedule appointment"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7673",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
        "Description": "when current user is from engagement delegated office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7674",
            "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
            "Description": "should have access to reschedule before self nomination",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should not allow schedule appointment"
            ],
            "Children": []
          },
          {
            "$id": "7675",
            "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
            "Description": "should have access to reschedule after self nomination",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should allow reschedule appointment"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7676",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
        "Description": "when current user is country level but not from any of engagement subscribed office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not allow schedule appointment"
        ],
        "Children": []
      },
      {
        "$id": "7677",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
        "Description": "when current user is from work office assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment"
        ],
        "Children": []
      },
      {
        "$id": "7678",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
        "Description": "when current user is from work office and office assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment"
        ],
        "Children": []
      },
      {
        "$id": "7679",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_complete.cs",
        "Description": "when current user is from work office but not assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not allow schedule appointment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7680",
    "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
    "Description": "when get online briefing work record and current milestone is notify",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7681",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is coordinator",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return online scheduling information"
        ],
        "Children": []
      },
      {
        "$id": "7682",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is from work record responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow editing online scheduing details"
        ],
        "Children": []
      },
      {
        "$id": "7683",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is from work record team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow editing online scheduing details"
        ],
        "Children": []
      },
      {
        "$id": "7684",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is from engagement coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow edit briefing coordinator"
        ],
        "Children": []
      },
      {
        "$id": "7685",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is from engagement delegated office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not allow edit briefing coordinator"
        ],
        "Children": []
      },
      {
        "$id": "7686",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is country level but not from any of engagement subscribed office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not allow edit briefing coordinator"
        ],
        "Children": []
      },
      {
        "$id": "7687",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is from work office assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow editing online scheduling details"
        ],
        "Children": []
      },
      {
        "$id": "7688",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is from work office and office is assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return online scheduling information"
        ],
        "Children": []
      },
      {
        "$id": "7689",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is from work office and not assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return online scheduling information"
        ],
        "Children": []
      },
      {
        "$id": "7690",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_notify.cs",
        "Description": "when current user is not authorized",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should fobidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7691",
    "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_schedule.cs",
    "Description": "when get online briefing work record and current milestone is schedule",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7692",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_schedule.cs",
        "Description": "when current user is coordinator",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment"
        ],
        "Children": []
      },
      {
        "$id": "7693",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_schedule.cs",
        "Description": "when current user is from work record responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment",
          "should have move milestone back link"
        ],
        "Children": []
      },
      {
        "$id": "7694",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_schedule.cs",
        "Description": "when current user is from engagement coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment",
          "should have move milestone back link"
        ],
        "Children": []
      },
      {
        "$id": "7695",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_schedule.cs",
        "Description": "when current user is from engagement delegated office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment",
          "should have move milestone back link"
        ],
        "Children": []
      },
      {
        "$id": "7696",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_schedule.cs",
        "Description": "when current user is country level but not from any of engagement subscribed office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not allow schedule appointment",
          "should not have move milestone back link"
        ],
        "Children": []
      },
      {
        "$id": "7697",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_schedule.cs",
        "Description": "when current user is assigned to task and from work office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment",
          "should have move milestone back link"
        ],
        "Children": []
      },
      {
        "$id": "7698",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_schedule.cs",
        "Description": "when current user is from work office and office assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should allow schedule appointment",
          "should have move milestone back link"
        ],
        "Children": []
      },
      {
        "$id": "7699",
        "FileName": "when_get_online_briefing_work_record_and_current_milestone_is_schedule.cs",
        "Description": "when current user is from work office but not assigned to task",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should not allow schedule appointment",
          "should not have move milestone back link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7700",
    "FileName": "when_get_restricted_info_social_security_work_record.cs",
    "Description": "when get restricted info social security work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7701",
        "FileName": "when_get_restricted_info_social_security_work_record.cs",
        "Description": "should not get public edit link only in work office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should not contain public link",
          "should not contain priavte info"
        ],
        "Children": []
      },
      {
        "$id": "7702",
        "FileName": "when_get_restricted_info_social_security_work_record.cs",
        "Description": "should get public edit link only in work office after office assign to check list",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should contain public link"
        ],
        "Children": []
      },
      {
        "$id": "7703",
        "FileName": "when_get_restricted_info_social_security_work_record.cs",
        "Description": "should get private info after assign to check list",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should contain priavte info"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7704",
    "FileName": "when_get_social_security_work_record.cs",
    "Description": "when get social security work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7705",
        "FileName": "when_get_social_security_work_record.cs",
        "Description": "when get by id as staff from responsible office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should get move milestone back link"
        ],
        "Children": []
      },
      {
        "$id": "7706",
        "FileName": "when_get_social_security_work_record.cs",
        "Description": "when get by id as nobody",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7707",
        "FileName": "when_get_social_security_work_record.cs",
        "Description": "when get by id as staff from subscribed office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be ok",
          "should not get move milestone back link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7708",
    "FileName": "when_get_tax_work_record.cs",
    "Description": "when get tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7709",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff is in unsubscribed offices",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7710",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff is in work records engagement work office",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return ok",
          "should not contain private info",
          "should not contain private custom field",
          "should not contain edit organizer links",
          "should contain send questionnaire links"
        ],
        "Children": []
      },
      {
        "$id": "7711",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff is in work records engagement coordinating office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7712",
            "FileName": "when_get_tax_work_record.cs",
            "Description": "before self nominate",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return ok",
              "should not contain private info",
              "should not contain private custom field",
              "should contain edit organizer links",
              "should contain tax return report reminder link"
            ],
            "Children": []
          },
          {
            "$id": "7713",
            "FileName": "when_get_tax_work_record.cs",
            "Description": "after self nominate",
            "WhenList": [
              "getting a work record"
            ],
            "ThenList": [
              "should return ok",
              "should contain private info",
              "should not contain link about edit private info",
              "should contain private country custom field",
              "should contain edit organizer links",
              "should contain tax return report reminder link"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7714",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff is in work record delegated office",
        "WhenList": [
          "get a work record"
        ],
        "ThenList": [
          "should return ok",
          "should not contain private info",
          "should not contain private custom field",
          "should contain public links",
          "should contain edit organizer links",
          "should contain tax return report reminder link"
        ],
        "Children": []
      },
      {
        "$id": "7715",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff is delegated staff",
        "WhenList": [
          "get a work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain private info",
          "should contain private custom field",
          "should contain public links",
          "should contain edit organizer links",
          "should contain tax return report reminder link"
        ],
        "Children": []
      },
      {
        "$id": "7716",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff is in responsible office",
        "WhenList": [
          "get a work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain private info",
          "should contain public and private custom field",
          "should contain public links",
          "should contain edit organizer links"
        ],
        "Children": []
      },
      {
        "$id": "7717",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff is in work record team",
        "WhenList": [
          "get a work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain private info",
          "should contain public and private custom field",
          "should contain public links",
          "should contain edit organizer links"
        ],
        "Children": []
      },
      {
        "$id": "7718",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff is general contact",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should return ok",
          "should not contain private info",
          "should not contain private custom field"
        ],
        "Children": []
      },
      {
        "$id": "7719",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff office is assign to checklist",
        "WhenList": [
          "get a work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain public links",
          "should contain edit organizer links"
        ],
        "Children": []
      },
      {
        "$id": "7720",
        "FileName": "when_get_tax_work_record.cs",
        "Description": "when staff is assign to checklist",
        "WhenList": [
          "get a work record"
        ],
        "ThenList": [
          "should return ok",
          "should contain private info",
          "should contain public and private custom field",
          "should contain public links",
          "should contain edit organizer links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7721",
    "FileName": "when_get_tax_work_record_by_id_with_teq_by_different_roles.cs",
    "Description": "when get tax work record by id with teq by different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7722",
        "FileName": "when_get_tax_work_record_by_id_with_teq_by_different_roles.cs",
        "Description": "when staff is in work record responsible office",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should return tax equalization data",
          "should return tax equalization edit link"
        ],
        "Children": []
      },
      {
        "$id": "7723",
        "FileName": "when_get_tax_work_record_by_id_with_teq_by_different_roles.cs",
        "Description": "when staff is in work record team",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should return tax equalization data",
          "should return tax equalization edit link"
        ],
        "Children": []
      },
      {
        "$id": "7724",
        "FileName": "when_get_tax_work_record_by_id_with_teq_by_different_roles.cs",
        "Description": "when staff is delegated staff",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should return tax equalization data",
          "should return tax equalization edit link"
        ],
        "Children": []
      },
      {
        "$id": "7725",
        "FileName": "when_get_tax_work_record_by_id_with_teq_by_different_roles.cs",
        "Description": "when staff is in work office",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should not return tax equalization data",
          "should not return tax equalization edit link"
        ],
        "Children": []
      },
      {
        "$id": "7726",
        "FileName": "when_get_tax_work_record_by_id_with_teq_by_different_roles.cs",
        "Description": "when staff is in coordinating",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should not return tax equalization data",
          "should not return tax equalization edit link"
        ],
        "Children": []
      },
      {
        "$id": "7727",
        "FileName": "when_get_tax_work_record_by_id_with_teq_by_different_roles.cs",
        "Description": "when staff is in coordinating and self nominated",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should not return tax equalization data",
          "should not return tax equalization edit link"
        ],
        "Children": []
      },
      {
        "$id": "7728",
        "FileName": "when_get_tax_work_record_by_id_with_teq_by_different_roles.cs",
        "Description": "when staff is in delegated office",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should succeed",
          "should not return tax equalization data",
          "should not return tax equalization edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7729",
    "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
    "Description": "when get tax work record restricted info by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7730",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should get when staff is one of the work record assignments",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should load succeeful",
          "should load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "7731",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should get when staff is in work record responsible office",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should load succeeful",
          "should load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "7732",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should get when staff is in work record team",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should load succeeful",
          "should load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "7733",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should not get when staff office is one of the work record assigneement offices",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should return ok",
          "should not load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "7734",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should not get when staff is not in task assignments and staff office not in workrecord related office",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should return ok",
          "should not load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "7735",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should not contain edit links when staff is in task responsible office but not assign to any task",
        "WhenList": [
          "load tax workrecord and self nominated"
        ],
        "ThenList": [
          "should return ok",
          "should not contain edit links"
        ],
        "Children": []
      },
      {
        "$id": "7736",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should not contain edit links when staff is in checklist item responsible office but not assign to any checklist item",
        "WhenList": [
          "load tax workrecord and self nominated"
        ],
        "ThenList": [
          "should return ok",
          "should not contain edit links"
        ],
        "Children": []
      },
      {
        "$id": "7737",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should not contain edit links when staff is not in work record reponsible office and work offices",
        "WhenList": [
          "load tax workrecord and self nominated"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7738",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should have edit links when staff is task responsibility",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should return ok",
          "should contain edit links"
        ],
        "Children": []
      },
      {
        "$id": "7739",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should have edit links when staff is checklist item responsibility",
        "WhenList": [
          "load tax workrecord"
        ],
        "ThenList": [
          "should return ok",
          "should contain edit links"
        ],
        "Children": []
      },
      {
        "$id": "7740",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should have edit links when staff is in work record responsible office",
        "WhenList": [
          "load tax workrecord and then self nominate"
        ],
        "ThenList": [
          "should return ok",
          "should contain edit links"
        ],
        "Children": []
      },
      {
        "$id": "7741",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should have edit links when staff is in work record team",
        "WhenList": [
          "load tax workrecord and then self nominate"
        ],
        "ThenList": [
          "should return ok",
          "should contain edit links"
        ],
        "Children": []
      },
      {
        "$id": "7742",
        "FileName": "when_get_tax_work_record_restricted_info_by_id.cs",
        "Description": "should not contain delete link when staff is not in work record responsible office",
        "WhenList": [
          "load tax workrecord and then self nominate"
        ],
        "ThenList": [
          "should return ok",
          "should contain edit links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7743",
    "FileName": "when_get_tax_work_record_with_restricted_rules.cs",
    "Description": "when get tax work record with restricted rules",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7744",
        "FileName": "when_get_tax_work_record_with_restricted_rules.cs",
        "Description": "when staff is in work records engagement coordinating office but not in assignee acl",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7745",
        "FileName": "when_get_tax_work_record_with_restricted_rules.cs",
        "Description": "when staff is in work records engagement coordinating office but not in engagement acl",
        "WhenList": [
          "getting a work record"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7746",
        "FileName": "when_get_tax_work_record_with_restricted_rules.cs",
        "Description": "when staff as delegated coordinating office contact",
        "WhenList": [
          "send request"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7747",
    "FileName": "when_get_workrecord_by_staff_with_different_practice_type.cs",
    "Description": "when get workrecord by staff with different practice type",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7748",
        "FileName": "when_get_workrecord_by_staff_with_different_practice_type.cs",
        "Description": "when get immigration workrecord by tax staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7749",
        "FileName": "when_get_workrecord_by_staff_with_different_practice_type.cs",
        "Description": "when get tax workrecord by immigration staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7750",
        "FileName": "when_get_workrecord_by_staff_with_different_practice_type.cs",
        "Description": "when get social security workrecord by immigration staff",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7751",
    "FileName": "when_operate_work_record_notes.cs",
    "Description": "when operate work record notes",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7752",
        "FileName": "when_operate_work_record_notes.cs",
        "Description": "when get notes",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7753",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should get when staff is one of the work record assigneements",
            "WhenList": [
              "load note"
            ],
            "ThenList": [
              "should load succeeful",
              "should load note"
            ],
            "Children": []
          },
          {
            "$id": "7754",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should get when staff is in work record team",
            "WhenList": [
              "load note"
            ],
            "ThenList": [
              "should load succeeful"
            ],
            "Children": []
          },
          {
            "$id": "7755",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should get when staff office is one of the work record assigneement offices",
            "WhenList": [],
            "ThenList": [],
            "Children": [
              {
                "$id": "7756",
                "FileName": "when_operate_work_record_notes.cs",
                "Description": "should forbidden when not assign",
                "WhenList": [
                  "load note"
                ],
                "ThenList": [
                  "should return forbidden"
                ],
                "Children": []
              },
              {
                "$id": "7757",
                "FileName": "when_operate_work_record_notes.cs",
                "Description": "should ok after assign",
                "WhenList": [
                  "load note"
                ],
                "ThenList": [
                  "should return ok"
                ],
                "Children": []
              }
            ]
          },
          {
            "$id": "7758",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should not get when staff office is assinged to check list",
            "WhenList": [
              "load note"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7759",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should not get when staff is not in task assignments and staff office not in workrecord related office",
            "WhenList": [
              "load note"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7760",
        "FileName": "when_operate_work_record_notes.cs",
        "Description": "when create note",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7761",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should create when staff is one of the work record assigneements",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return created"
            ],
            "Children": []
          },
          {
            "$id": "7762",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should create when staff is in work record team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return created"
            ],
            "Children": []
          },
          {
            "$id": "7763",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should forbidden when staff office is one of the work record assigneement offices task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7764",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should forbidden when staff office is one of the work record assigneement offices for check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7765",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should create when staff is one of the work record assigneement for check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return created"
            ],
            "Children": []
          },
          {
            "$id": "7766",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should forbidden when staff is not in task assignments and staff office not in workrecord related office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7767",
        "FileName": "when_operate_work_record_notes.cs",
        "Description": "when update note",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7768",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should update when staff is one of the work record assigneements",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return no content"
            ],
            "Children": []
          },
          {
            "$id": "7769",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should update when staff is in work record team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return no content"
            ],
            "Children": []
          },
          {
            "$id": "7770",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should forbidden when staff office is one of the work record assigneement offices for task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7771",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should forbidden when staff office is one of the work record assigneement offices for check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7772",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should forbidden when staff is one of the work record assigneement for check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return no content"
            ],
            "Children": []
          },
          {
            "$id": "7773",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should success when staff is not in task assignments and staff office not in workrecord related office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7774",
        "FileName": "when_operate_work_record_notes.cs",
        "Description": "when delete note",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7775",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should delete when staff is one of the work record assigneements",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7776",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should delete when staff is in work record team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7777",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should forbidden when staff office is one of the work record assigneement offices for task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7778",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should forbidden when staff office is one of the work record assigneement offices for check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7779",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should success when staff is one of the work record assigneement for check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7780",
            "FileName": "when_operate_work_record_notes.cs",
            "Description": "should forbidden when staff is not in task assignments and staff office not in workrecord related office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7781",
    "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
    "Description": "when send briefing work record reminders by different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7782",
        "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
        "Description": "when send first reminder",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7783",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is coordinator",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return OK"
            ],
            "Children": []
          },
          {
            "$id": "7784",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is from work record responsible office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7785",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is from work record team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7786",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return OK"
            ],
            "Children": []
          },
          {
            "$id": "7787",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is from coordinating office not assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7788",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is from delegated coordinating office not assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7789",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user office is assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7790",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user or office is assigned to check list item",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7791",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user or office is not assigned to check list item",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7792",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user office is engagement subscribed office which not assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7793",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when send reminder with unauthornized user",
            "WhenList": [
              "send reminder"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7794",
        "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
        "Description": "when send final reminder",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7795",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is coordinator",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return OK"
            ],
            "Children": []
          },
          {
            "$id": "7796",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is from work record responsible office",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7797",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is from work record team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7798",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return OK"
            ],
            "Children": []
          },
          {
            "$id": "7799",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is from coordinating office not assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7800",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user is from delegated coordinating office not assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7801",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user office is assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7802",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user office is assigned to check list",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return ok"
            ],
            "Children": []
          },
          {
            "$id": "7803",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when current user office is engagement subscribed office which not assigned to task",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          },
          {
            "$id": "7804",
            "FileName": "when_send_briefing_work_record_reminders_by_different_roles.cs",
            "Description": "when send reminder with unauthornized user",
            "WhenList": [
              "send reminder"
            ],
            "ThenList": [
              "should return forbidden"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7805",
    "FileName": "when_send_online_briefing_work_record_final_reminder_with_acl_rule.cs",
    "Description": "when send online briefing work record final reminder with acl rule",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7806",
        "FileName": "when_send_online_briefing_work_record_final_reminder_with_acl_rule.cs",
        "Description": "when send final reminder for briefing wr using staff in restricted assignee acl",
        "WhenList": [
          "send final reminder"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7807",
        "FileName": "when_send_online_briefing_work_record_final_reminder_with_acl_rule.cs",
        "Description": "when send final reminder for briefing wr using staff not in restricted assignee acl",
        "WhenList": [
          "send final reminder"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7808",
        "FileName": "when_send_online_briefing_work_record_final_reminder_with_acl_rule.cs",
        "Description": "when send final reminder for briefing wr using staff in restricted engagement acl",
        "WhenList": [
          "send final reminder"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7809",
        "FileName": "when_send_online_briefing_work_record_final_reminder_with_acl_rule.cs",
        "Description": "when send final reminder for briefing wr using staff not in restricted engagement acl",
        "WhenList": [
          "send final reminder"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7810",
    "FileName": "when_send_online_briefing_work_record_first_reminder_with_acl_rule.cs",
    "Description": "when send online briefing work record first reminder with acl rule",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7811",
        "FileName": "when_send_online_briefing_work_record_first_reminder_with_acl_rule.cs",
        "Description": "when send first reminder for briefing wr using staff in restricted assignee acl",
        "WhenList": [
          "send first reminder"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7812",
        "FileName": "when_send_online_briefing_work_record_first_reminder_with_acl_rule.cs",
        "Description": "when send first reminder for briefing wr using staff not in restricted assignee acl",
        "WhenList": [
          "send first reminder"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7813",
        "FileName": "when_send_online_briefing_work_record_first_reminder_with_acl_rule.cs",
        "Description": "when send first reminder for briefing wr using staff in restricted engagement acl",
        "WhenList": [
          "send first reminder"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7814",
        "FileName": "when_send_online_briefing_work_record_first_reminder_with_acl_rule.cs",
        "Description": "when send first reminder for briefing wr using staff not in restricted engagement acl",
        "WhenList": [
          "send first reminder"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7815",
    "FileName": "when_update_immigration_documents_by_different_roles.cs",
    "Description": "should be able to be updated immigration documents by different roles",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7816",
        "FileName": "when_update_immigration_documents_by_different_roles.cs",
        "Description": "should be able to be updated by global admin",
        "WhenList": [
          "update and create documents"
        ],
        "ThenList": [
          "should return ok",
          "should update documents successfully"
        ],
        "Children": []
      },
      {
        "$id": "7817",
        "FileName": "when_update_immigration_documents_by_different_roles.cs",
        "Description": "should be able to be updated by staff in coordinating office",
        "WhenList": [
          "update and create documents"
        ],
        "ThenList": [
          "should return ok",
          "should update documents successfully"
        ],
        "Children": []
      },
      {
        "$id": "7818",
        "FileName": "when_update_immigration_documents_by_different_roles.cs",
        "Description": "should be able to be updated by staff in delegated coordinating office",
        "WhenList": [
          "update and create documents"
        ],
        "ThenList": [
          "should return ok",
          "should update documents successfully"
        ],
        "Children": []
      },
      {
        "$id": "7819",
        "FileName": "when_update_immigration_documents_by_different_roles.cs",
        "Description": "should be able to be updated by staff in subscribed office",
        "WhenList": [
          "update and create documents"
        ],
        "ThenList": [
          "should return ok",
          "should update documents successfully"
        ],
        "Children": []
      },
      {
        "$id": "7820",
        "FileName": "when_update_immigration_documents_by_different_roles.cs",
        "Description": "should be able to be updated by staff in team",
        "WhenList": [
          "update and create documents"
        ],
        "ThenList": [
          "should return ok",
          "should update documents successfully"
        ],
        "Children": []
      },
      {
        "$id": "7821",
        "FileName": "when_update_immigration_documents_by_different_roles.cs",
        "Description": "should not be able to be updated by staff in other offices",
        "WhenList": [
          "update and create documents"
        ],
        "ThenList": [
          "should return forbidden",
          "should not update documents"
        ],
        "Children": []
      },
      {
        "$id": "7822",
        "FileName": "when_update_immigration_documents_by_different_roles.cs",
        "Description": "should be able to be updated by staff in acl for restricted assignee",
        "WhenList": [
          "update and create documents"
        ],
        "ThenList": [
          "should return ok",
          "should update documents successfully"
        ],
        "Children": []
      },
      {
        "$id": "7823",
        "FileName": "when_update_immigration_documents_by_different_roles.cs",
        "Description": "should not be able to be updated by staff not in acl for restricted assignee",
        "WhenList": [
          "update and create documents"
        ],
        "ThenList": [
          "should return forbidden",
          "should not update documents"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7824",
    "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
    "Description": "when update restrcited manually briefing work record by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7825",
        "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
        "Description": "when get work record of restricted assignee",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7826",
            "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
            "Description": "when get work record of assignee by staff not on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbid"
            ],
            "Children": []
          },
          {
            "$id": "7827",
            "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
            "Description": "when get work record of assignee by staff on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7828",
        "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
        "Description": "when get work record of restricted engagement",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7829",
            "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
            "Description": "when get work record of assignee by staff not on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should forbid"
            ],
            "Children": []
          },
          {
            "$id": "7830",
            "FileName": "when_get_restrcited_manually_briefing_work_record_by_id.cs",
            "Description": "when get work record of assignee by staff on acl",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7831",
    "FileName": "when_update_briefing_work_milestones.cs",
    "Description": "when update briefing work milestones",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7832",
        "FileName": "when_update_briefing_work_milestones.cs",
        "Description": "when work record has no checklist",
        "WhenList": [
          "finish current milestone"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should return updated work record milestone"
        ],
        "Children": []
      },
      {
        "$id": "7833",
        "FileName": "when_update_briefing_work_milestones.cs",
        "Description": "when work record has unfinished checklist",
        "WhenList": [
          "when update work milestone is in complete"
        ],
        "ThenList": [
          "should return bad request",
          "should not update work record milestone"
        ],
        "Children": []
      },
      {
        "$id": "7834",
        "FileName": "when_update_briefing_work_milestones.cs",
        "Description": "when work record has finished checklist",
        "WhenList": [
          "when update work milestone is in complete"
        ],
        "ThenList": [
          "should success",
          "should update work record milestone"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7835",
    "FileName": "when_update_briefing_work_record_checklist_responsibility.cs",
    "Description": "when update briefing work record checklist responsibility",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7836",
        "FileName": "when_update_briefing_work_record_checklist_responsibility.cs",
        "Description": "when patch briefing work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return changed work record"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7837",
    "FileName": "when_update_briefing_work_record_service_status.cs",
    "Description": "when update briefing work record service status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7838",
        "FileName": "when_update_briefing_work_record_service_status.cs",
        "Description": "when service status valid",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return service status"
        ],
        "Children": []
      },
      {
        "$id": "7839",
        "FileName": "when_update_briefing_work_record_service_status.cs",
        "Description": "when service status invalid",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not update service status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7840",
    "FileName": "when_update_manually_briefing_work_record.cs",
    "Description": "when update manually briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7841",
        "FileName": "when_update_manually_briefing_work_record.cs",
        "Description": "when patch briefing work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return changed work record"
        ],
        "Children": []
      },
      {
        "$id": "7842",
        "FileName": "when_update_manually_briefing_work_record.cs",
        "Description": "when patch update service status to declined",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record as declined"
        ],
        "Children": []
      },
      {
        "$id": "7843",
        "FileName": "when_update_manually_briefing_work_record.cs",
        "Description": "when patch scheduled details",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7844",
            "FileName": "when_update_manually_briefing_work_record.cs",
            "Description": "when update date time and contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should return updated work record"
            ],
            "Children": []
          },
          {
            "$id": "7845",
            "FileName": "when_update_manually_briefing_work_record.cs",
            "Description": "when update date time to null",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should return updated work record"
            ],
            "Children": []
          },
          {
            "$id": "7846",
            "FileName": "when_update_manually_briefing_work_record.cs",
            "Description": "when update contact",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should return updated work record"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7847",
        "FileName": "when_update_manually_briefing_work_record.cs",
        "Description": "should NOT include billing edit link after patch update when staff is in work record delegated coordination office",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7848",
    "FileName": "when_update_online_briefing_work_record.cs",
    "Description": "when update online briefing work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7849",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "when patch briefing work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return changed work record",
          "should create activity history for coordinator"
        ],
        "Children": []
      },
      {
        "$id": "7850",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "when patch update service status to declined",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return work record as declined"
        ],
        "Children": []
      },
      {
        "$id": "7851",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "when patch update team",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7852",
            "FileName": "when_update_online_briefing_work_record.cs",
            "Description": "should update when change team",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should return updated work record"
            ],
            "Children": []
          },
          {
            "$id": "7853",
            "FileName": "when_update_online_briefing_work_record.cs",
            "Description": "should delete team when team uri is null",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should succeed",
              "should return work record as declined"
            ],
            "Children": []
          },
          {
            "$id": "7854",
            "FileName": "when_update_online_briefing_work_record.cs",
            "Description": "when team uri is invalid",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7855",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "when patch briefing work record with invalid coordinator",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return bad request",
          "should not update work record"
        ],
        "Children": []
      },
      {
        "$id": "7856",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "when update briefing method and address",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return updated work record"
        ],
        "Children": []
      },
      {
        "$id": "7857",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "when update briefing method and address with other briefing method",
        "WhenList": [
          "update briefing method"
        ],
        "ThenList": [
          "should succeed",
          "should return updated work record briefing methods"
        ],
        "Children": []
      },
      {
        "$id": "7858",
        "FileName": "when_update_online_briefing_work_record.cs",
        "Description": "should NOT include billing edit link after patch update when staff is in work record delegated coordination office",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7859",
    "FileName": "when_update_immigration_work_record_service_status.cs",
    "Description": "when update immigration work record service status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7860",
        "FileName": "when_update_immigration_work_record_service_status.cs",
        "Description": "when service status valid",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return service status"
        ],
        "Children": []
      },
      {
        "$id": "7861",
        "FileName": "when_update_immigration_work_record_service_status.cs",
        "Description": "when service status invalid",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not update service status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7862",
    "FileName": "when_update_immigration_work_record_with_invalid_workrecord_id.cs",
    "Description": "when update immigration work record to in process with invalid id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return not found as status code"
    ],
    "Children": []
  },
  {
    "$id": "7863",
    "FileName": "when_update_immigration_work_record_with_task_responsible_office_when_uac_on.cs",
    "Description": "when update immigration work recordwhen uac on",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7864",
        "FileName": "when_update_immigration_work_record_with_task_responsible_office_when_uac_on.cs",
        "Description": "when update without responsible office",
        "WhenList": [
          "when update work record basic info"
        ],
        "ThenList": [
          "should return 204 as status code",
          "should update existed work record basic info"
        ],
        "Children": []
      },
      {
        "$id": "7865",
        "FileName": "when_update_immigration_work_record_with_task_responsible_office_when_uac_on.cs",
        "Description": "when update with responsible office",
        "WhenList": [
          "when update work record basic info"
        ],
        "ThenList": [
          "should return 403"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7866",
    "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
    "Description": "when move milestone back for immigration work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7867",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move work milestone back from assessment to initiated",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should return milestone"
        ],
        "Children": []
      },
      {
        "$id": "7868",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move work milestone back from done to post work",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should return milestone"
        ],
        "Children": []
      },
      {
        "$id": "7869",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move service milestone back from submission to preparation when work record has single service",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should return service milestone related data"
        ],
        "Children": []
      },
      {
        "$id": "7870",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move serivce milestone back from submission to preparation when work record has multiple services",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should return service milestone related data"
        ],
        "Children": []
      },
      {
        "$id": "7871",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move serivce milestone back from done move to issance when work record has multiple services",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should return service milestone related data"
        ],
        "Children": []
      },
      {
        "$id": "7872",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move milestone back from post work to issuance when work record has single service",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should move back milestone to issuance"
        ],
        "Children": []
      },
      {
        "$id": "7873",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move milestone back from post work to issuance when work record has multiple services",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should move back milestone to issuance"
        ],
        "Children": []
      },
      {
        "$id": "7874",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move service milestone preparation to work milestone assessment when work record have single service",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should return service milestone related data"
        ],
        "Children": []
      },
      {
        "$id": "7875",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move service milestone preparation to work milestone assessment when work record have two service and both service in preparation milestone",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should return service milestone related data"
        ],
        "Children": []
      },
      {
        "$id": "7876",
        "FileName": "when_move_milestone_back_for_immigration_work_record.cs",
        "Description": "when move service milestone preparation to work milestone assessment when work record have two service and one service in preparation the other service in submission",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should return service milestone related data"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7877",
    "FileName": "when_single_move_milestone_back_for_tax_work_record.cs",
    "Description": "when single move milestone back for tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7878",
        "FileName": "when_single_move_milestone_back_for_tax_work_record.cs",
        "Description": "when move work milestone back from preparation to initiated",
        "WhenList": [
          "move milestone back"
        ],
        "ThenList": [
          "should return ok",
          "should return milestone"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7879",
    "FileName": "when_update_valid_period.cs",
    "Description": "when update period",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7880",
        "FileName": "when_update_valid_period.cs",
        "Description": "when update period with both start date and expiry date",
        "WhenList": [
          "updating valid period"
        ],
        "ThenList": [
          "should succeed",
          "should update valid period"
        ],
        "Children": []
      },
      {
        "$id": "7881",
        "FileName": "when_update_valid_period.cs",
        "Description": "when update period with only start date when work record is not done",
        "WhenList": [
          "updating only start date"
        ],
        "ThenList": [
          "should succeed",
          "should only update start date"
        ],
        "Children": []
      },
      {
        "$id": "7882",
        "FileName": "when_update_valid_period.cs",
        "Description": "when update period with only expiry date when work record is not done",
        "WhenList": [
          "updating only expiry date"
        ],
        "ThenList": [
          "should succeed",
          "should only update expiry date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7883",
    "FileName": "task_and_checklist_assignments.cs",
    "Description": "task and checklist assignments",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success"
    ],
    "Children": []
  },
  {
    "$id": "7884",
    "FileName": "task_and_checklist_assignments.cs",
    "Description": "task and checklist assignments for immigration",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should success"
    ],
    "Children": []
  },
  {
    "$id": "7885",
    "FileName": "when_patch_update_task_and_checklist_assignments.cs",
    "Description": "when patch update task and checklist assignments",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7886",
        "FileName": "when_patch_update_task_and_checklist_assignments.cs",
        "Description": "with a tax work record",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7887",
            "FileName": "when_patch_update_task_and_checklist_assignments.cs",
            "Description": "when assign tax staff to the tax work record",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should update assignments",
              "should update activity history"
            ],
            "Children": []
          },
          {
            "$id": "7888",
            "FileName": "when_patch_update_task_and_checklist_assignments.cs",
            "Description": "when assign social security staff to a tax work record assignment",
            "WhenList": [
              "assign social security staff"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "7889",
            "FileName": "when_patch_update_task_and_checklist_assignments.cs",
            "Description": "when assignments office is empty",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should not change the assignments responsible office"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7890",
        "FileName": "when_patch_update_task_and_checklist_assignments.cs",
        "Description": "with an immigration work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should update activity history"
        ],
        "Children": []
      },
      {
        "$id": "7891",
        "FileName": "when_patch_update_task_and_checklist_assignments.cs",
        "Description": "with an immigration application work has additional services record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should update work record task responsibility"
        ],
        "Children": []
      },
      {
        "$id": "7892",
        "FileName": "when_patch_update_task_and_checklist_assignments.cs",
        "Description": "with a social security work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should update activity history"
        ],
        "Children": []
      },
      {
        "$id": "7893",
        "FileName": "when_patch_update_task_and_checklist_assignments.cs",
        "Description": "when change checklist responsibility with existed one",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success",
          "should update activity history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7894",
    "FileName": "when_patch_update_task_and_checklist_assignments_with_tag.cs",
    "Description": "when patch update task and checklist assignments with tag",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7895",
        "FileName": "when_patch_update_task_and_checklist_assignments_with_tag.cs",
        "Description": "when update checklist item with tag",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should update tag",
          "should update activity history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7896",
    "FileName": "when_update_work_record_assignments_with_finished_task_which_assigned_staff_is_removed_from_acl.cs",
    "Description": "when update work record assignments with finished task which assigned staff is removed from acl",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7897",
        "FileName": "when_update_work_record_assignments_with_finished_task_which_assigned_staff_is_removed_from_acl.cs",
        "Description": "should update responsibility without validate finished task staff acl",
        "WhenList": [
          "update resposibility"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7898",
    "FileName": "when_update_work_record_assignments_with_revision_task.cs",
    "Description": "when update work record assignments with revision task",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7899",
        "FileName": "when_update_work_record_assignments_with_revision_task.cs",
        "Description": "should update responsibility to other people",
        "WhenList": [
          "update resposibility to other people"
        ],
        "ThenList": [
          "should return ok",
          "should not load restricted info"
        ],
        "Children": []
      },
      {
        "$id": "7900",
        "FileName": "when_update_work_record_assignments_with_revision_task.cs",
        "Description": "should show history when reassign responsiblity for revision task",
        "WhenList": [
          "reassignee"
        ],
        "ThenList": [
          "should show revision task history"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7901",
    "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
    "Description": "when batch update work milestones",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7902",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch update work milestones with valid request",
        "WhenList": [
          "when update work milestone of work record"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should move work milestones forward",
          "should move work milestones backward",
          "should clear start date and complete date of milestone tasks"
        ],
        "Children": []
      },
      {
        "$id": "7903",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch update work milestones with complete tasks",
        "WhenList": [
          "when update work milestone of work record with complete task"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should move work milestones forward"
        ],
        "Children": []
      },
      {
        "$id": "7904",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch update work milestones with complete tasks and revision task",
        "WhenList": [
          "when update work milestone of work record with complete task"
        ],
        "ThenList": [
          "should return 200 as status code"
        ],
        "Children": []
      },
      {
        "$id": "7905",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch update work milestones to completed with unsubmitted questionnaire",
        "WhenList": [
          "finish all task of current milstone"
        ],
        "ThenList": [
          "should be forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7906",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch update work milestones to completed with submitted questionnaire",
        "WhenList": [
          "finish all task of current milstone"
        ],
        "ThenList": [
          "should be ok",
          "should move work milestones"
        ],
        "Children": []
      },
      {
        "$id": "7907",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch update work milestones with started tasks",
        "WhenList": [
          "when update work milestone of work record with start task"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should move work milestones backward"
        ],
        "Children": []
      },
      {
        "$id": "7908",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch update work milestones with partial valid request",
        "WhenList": [
          "when update work milestone of work record"
        ],
        "ThenList": [
          "should return error message",
          "should move work milestones forward"
        ],
        "Children": []
      },
      {
        "$id": "7909",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch update work milestones with issue service status",
        "WhenList": [
          "when update work milestone of work record"
        ],
        "ThenList": [
          "should return forbidden",
          "should not change current milestone"
        ],
        "Children": []
      },
      {
        "$id": "7910",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch update work milestones with restricted engagement",
        "WhenList": [
          "when update work milestone of work record"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7911",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch move back work milestones with invalid task responsibility",
        "WhenList": [
          "when update work milestone of work record"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should remove task responsibility which not have workrecord practice type"
        ],
        "Children": []
      },
      {
        "$id": "7912",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch move back work milestones with task responsibility inactive",
        "WhenList": [
          "when update work milestone of work record"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should remove task responsibility which not have workrecord practice type"
        ],
        "Children": []
      },
      {
        "$id": "7913",
        "FileName": "when_batch_update_work_milestones_with_valid_request.cs",
        "Description": "when batch move back work milestones with task responsibility not match responsible office",
        "WhenList": [
          "when update work milestone of work record"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should remove task responsibility which not have workrecord practice type"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7914",
    "FileName": "when_confirm_unsigned_consent.cs",
    "Description": "when confirm unsigned consent",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7915",
        "FileName": "when_confirm_unsigned_consent.cs",
        "Description": "when authorized to confirm unsigned consent",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7916",
            "FileName": "when_confirm_unsigned_consent.cs",
            "Description": "when a user in delegated office",
            "WhenList": [
              "confirm to sign"
            ],
            "ThenList": [
              "should return ok",
              "should have confirm consent send"
            ],
            "Children": []
          },
          {
            "$id": "7917",
            "FileName": "when_confirm_unsigned_consent.cs",
            "Description": "when a user in work record team",
            "WhenList": [
              "confirm to sign"
            ],
            "ThenList": [
              "should return ok",
              "should have confirm consent send"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7918",
        "FileName": "when_confirm_unsigned_consent.cs",
        "Description": "when unauthorized to confirm unsigned consent",
        "WhenList": [
          "confirm to sign"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7919",
        "FileName": "when_confirm_unsigned_consent.cs",
        "Description": "when assign to check list",
        "WhenList": [
          "confirm to sign"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7920",
    "FileName": "when_confirm_unsigned_consent_of_tracking_organizer.cs",
    "Description": "when confirm unsigned consent of tracking organizer",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7921",
        "FileName": "when_confirm_unsigned_consent_of_tracking_organizer.cs",
        "Description": "when authorized to confirm unsigned consent",
        "WhenList": [
          "confirm to sign"
        ],
        "ThenList": [
          "should return ok",
          "should return sign 7216 and FROR"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7922",
    "FileName": "when_confirm_unsigned_consent_with_invalid_request.cs",
    "Description": "when confirm unsigned consent with invalid request",
    "WhenList": [
      "confirm to sign"
    ],
    "ThenList": [
      "should return bad request"
    ],
    "Children": []
  },
  {
    "$id": "7923",
    "FileName": "when_unsigned_consent_has_been_confirm_to_ignore.cs",
    "Description": "when unsigned consent has been confirm to ignore",
    "WhenList": [
      "when load the work record"
    ],
    "ThenList": [
      "should return ok",
      "should include consent confirmed history"
    ],
    "Children": []
  },
  {
    "$id": "7924",
    "FileName": "when_update_estimated_completion_date.cs",
    "Description": "when update estimated completion date",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7925",
        "FileName": "when_update_estimated_completion_date.cs",
        "Description": "with a correct request",
        "WhenList": [
          "patch estimated completion date"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "7926",
        "FileName": "when_update_estimated_completion_date.cs",
        "Description": "with an empty date",
        "WhenList": [
          "patch estimated completion date"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "7927",
        "FileName": "when_update_estimated_completion_date.cs",
        "Description": "without a date",
        "WhenList": [
          "patch nothing"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7928",
    "FileName": "when_update_estimated_completion_date.cs",
    "Description": "when update estimated completion date which workrecord related to restricted engagement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7929",
        "FileName": "when_update_estimated_completion_date.cs",
        "Description": "give estimated date",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7930",
    "FileName": "when_update_tax_work_record_basic_information_without_notes.cs",
    "Description": "when update tax work record basic information without notes",
    "WhenList": [
      "when update work record basic info"
    ],
    "ThenList": [
      "should return 204 as status code",
      "should update existed work record basic info but notes"
    ],
    "Children": []
  },
  {
    "$id": "7931",
    "FileName": "when_update_tax_work_record_service_status.cs",
    "Description": "when update tax work record service status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7932",
        "FileName": "when_update_tax_work_record_service_status.cs",
        "Description": "when service status valid",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return service status"
        ],
        "Children": []
      },
      {
        "$id": "7933",
        "FileName": "when_update_tax_work_record_service_status.cs",
        "Description": "when service status invalid",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should not update service status"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7934",
    "FileName": "when_update_tax_work_record_with_both_responsibility_and_responsible_office.cs",
    "Description": "when update tax work record with both responsibility and responsible office",
    "WhenList": [
      "when update work record milestone info"
    ],
    "ThenList": [
      "should return bad request",
      "should not update work record"
    ],
    "Children": []
  },
  {
    "$id": "7935",
    "FileName": "when_update_tax_work_record_with_valid_basic_information.cs",
    "Description": "when update tax work record with valid basic information",
    "WhenList": [
      "when update work record basic info"
    ],
    "ThenList": [
      "should return 204 as status code",
      "should update existed work record basic info"
    ],
    "Children": []
  },
  {
    "$id": "7936",
    "FileName": "when_update_tax_work_record_with_valid_task_responsibility.cs",
    "Description": "when update tax work record with valid task responsibility",
    "WhenList": [
      "when update work record milestone info"
    ],
    "ThenList": [
      "should return 204 as status code",
      "should update existed work record milestone info by setting new responsibility",
      "should update existed work record milestone info by clearing responsibility"
    ],
    "Children": []
  },
  {
    "$id": "7937",
    "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
    "Description": "when create and update tax work record tax equalization",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7938",
        "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
        "Description": "with a valid request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7939",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when adding tax equalization data",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should add work record tax equalization",
              "should create default settlement data",
              "should log the activity history"
            ],
            "Children": []
          },
          {
            "$id": "7940",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when adding tax equalization data with existing client payment cycle",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should get correct next payment day"
            ],
            "Children": []
          },
          {
            "$id": "7941",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when adding tax equalization data without file to my mobility",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should add work record tax equalization without file id"
            ],
            "Children": []
          },
          {
            "$id": "7942",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when editing existing tax equalization data",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should update work record tax equalization",
              "should log the activity history"
            ],
            "Children": []
          },
          {
            "$id": "7943",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when edit date finalized with manual customized due date",
            "WhenList": [
              "update date finalized"
            ],
            "ThenList": [
              "should success",
              "should not re calculate the due date"
            ],
            "Children": []
          },
          {
            "$id": "7944",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when editing date finalized for existing tax equalization data should not recalculate the due date",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should re calculate the due date"
            ],
            "Children": []
          },
          {
            "$id": "7945",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when adding tax equalization data with min and max supported amount",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should success",
              "should update work record tax equalization"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "7946",
        "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
        "Description": "with an invalid request",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "7947",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when no currency",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "7948",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when currency does not exist",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "7949",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when date finalized is in the future",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "7950",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when adding teq and teq record already exists for the work record",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return error"
            ],
            "Children": []
          },
          {
            "$id": "7951",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when uploaded file type is invalid",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return error"
            ],
            "Children": []
          },
          {
            "$id": "7952",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when editing teq and teq record does not exist",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return not found"
            ],
            "Children": []
          },
          {
            "$id": "7953",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when adding tax equalization to an immigration work record",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return error"
            ],
            "Children": []
          },
          {
            "$id": "7954",
            "FileName": "when_create_and_update_tax_work_record_tax_equalization.cs",
            "Description": "when editing started settlement tax equalization data",
            "WhenList": [
              "of"
            ],
            "ThenList": [
              "should return conflict"
            ],
            "Children": []
          }
        ]
      }
    ]
  },
  {
    "$id": "7955",
    "FileName": "when_delete_tax_equalization.cs",
    "Description": "when delete tax equalization",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7956",
        "FileName": "when_delete_tax_equalization.cs",
        "Description": "given work record with tax equalization",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no content",
          "should remove tax equlization from work record",
          "should log the activity history"
        ],
        "Children": []
      },
      {
        "$id": "7957",
        "FileName": "when_delete_tax_equalization.cs",
        "Description": "given tax other work record with tax equalization",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      },
      {
        "$id": "7958",
        "FileName": "when_delete_tax_equalization.cs",
        "Description": "given work record without tax equalization",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should be not found"
        ],
        "Children": []
      },
      {
        "$id": "7959",
        "FileName": "when_delete_tax_equalization.cs",
        "Description": "given tax other work record with started teq settlement",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should not delete"
        ],
        "Children": []
      },
      {
        "$id": "7960",
        "FileName": "when_delete_tax_equalization.cs",
        "Description": "given tax other work record with teq settlement with comments",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no content",
          "should delete comments"
        ],
        "Children": []
      },
      {
        "$id": "7961",
        "FileName": "when_delete_tax_equalization.cs",
        "Description": "given tax other work record with teq settlement with payments",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no content",
          "should delete payments"
        ],
        "Children": []
      },
      {
        "$id": "7962",
        "FileName": "when_delete_tax_equalization.cs",
        "Description": "given tax other work record with teq settlement with file",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return no content"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7963",
    "FileName": "estimated_completion_date.cs",
    "Description": "estimated completion date",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7964",
        "FileName": "estimated_completion_date.cs",
        "Description": "when add one missing item",
        "WhenList": [
          "add missing item success"
        ],
        "ThenList": [
          "should update estimated completion date to null"
        ],
        "Children": []
      },
      {
        "$id": "7965",
        "FileName": "estimated_completion_date.cs",
        "Description": "when has missing item",
        "WhenList": [
          "patch estimated completion date"
        ],
        "ThenList": [
          "should not update estimated completion date"
        ],
        "Children": []
      },
      {
        "$id": "7966",
        "FileName": "estimated_completion_date.cs",
        "Description": "when missing item received",
        "WhenList": [
          "patch estimated completion date"
        ],
        "ThenList": [
          "should not update estimated completion date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7967",
    "FileName": "LoadCommonOfficesTest.cs",
    "Description": "load common offices test",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7968",
        "FileName": "LoadCommonOfficesTest.cs",
        "Description": "when work records has common offices",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return shared offices"
        ],
        "Children": []
      },
      {
        "$id": "7969",
        "FileName": "LoadCommonOfficesTest.cs",
        "Description": "when work records has no common offices",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return shared offices"
        ],
        "Children": []
      },
      {
        "$id": "7970",
        "FileName": "LoadCommonOfficesTest.cs",
        "Description": "when no work records",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return shared offices"
        ],
        "Children": []
      },
      {
        "$id": "7971",
        "FileName": "LoadCommonOfficesTest.cs",
        "Description": "when work records more than max top count",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should succeed",
          "should return shared offices"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7972",
    "FileName": "patch_update_estimated_complete_date_when_work_record_has_issues.cs",
    "Description": "patch update estimated complete date when work record has issues",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should not update"
    ],
    "Children": []
  },
  {
    "$id": "7973",
    "FileName": "patch_update_no_filing_requirement.cs",
    "Description": "patch update no filing requirement",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7974",
        "FileName": "patch_update_no_filing_requirement.cs",
        "Description": "when mark no filing requirement and organizer is submitted",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7975",
    "FileName": "patch_update_service_status.cs",
    "Description": "patch update service status",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7976",
        "FileName": "patch_update_service_status.cs",
        "Description": "when update service status of tax workrecord with organizer",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update service status",
          "should record activity history",
          "should remove active questionnaire links",
          "should remove back to in process link",
          "should remove missing item addition link",
          "should remove links of missing item",
          "should remove links of revision task creation",
          "should remove assignee file upload link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7977",
    "FileName": "patch_update_task_and_checklist_assignments_when_work_record_not_no_issues.cs",
    "Description": "patch update task and checklist assignments when work record not no issues",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "7978",
    "FileName": "patch_update_work_record_assignment.cs",
    "Description": "patch update work record assignment",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7979",
        "FileName": "patch_update_work_record_assignment.cs",
        "Description": "when update work record with assignment",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update assignment"
        ],
        "Children": []
      },
      {
        "$id": "7980",
        "FileName": "patch_update_work_record_assignment.cs",
        "Description": "when update work record with assignment change to null",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should update assignment"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7981",
    "FileName": "when_patch_update_responsible_office.cs",
    "Description": "when patch update responsible office",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7982",
        "FileName": "when_patch_update_responsible_office.cs",
        "Description": "when update without responsible office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7983",
    "FileName": "when_update_immigration_work_record_detail.cs",
    "Description": "when update immigration work record detail",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7984",
        "FileName": "when_update_immigration_work_record_detail.cs",
        "Description": "when update immigration work record correctly",
        "WhenList": [
          "send request to update work record details"
        ],
        "ThenList": [
          "should return ok",
          "should success",
          "should record history when update service status"
        ],
        "Children": []
      },
      {
        "$id": "7985",
        "FileName": "when_update_immigration_work_record_detail.cs",
        "Description": "when update immigration general work record correctly",
        "WhenList": [
          "send request to update work record details"
        ],
        "ThenList": [
          "should return ok",
          "should success",
          "should record history when update service status"
        ],
        "Children": []
      },
      {
        "$id": "7986",
        "FileName": "when_update_immigration_work_record_detail.cs",
        "Description": "when update immigration work record by staff not in subscribed office",
        "WhenList": [
          "send request to update work details"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7987",
        "FileName": "when_update_immigration_work_record_detail.cs",
        "Description": "should NOT include billing edit link after patch update when staff is in work record delegated coordination office",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7988",
    "FileName": "when_update_immigration_work_record_service_specifics.cs",
    "Description": "when update immigration work record service specifics",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7989",
        "FileName": "when_update_immigration_work_record_service_specifics.cs",
        "Description": "update service specifics by work office staff",
        "WhenList": [
          "send request to update service specifics"
        ],
        "ThenList": [
          "should return ok",
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "7990",
        "FileName": "when_update_immigration_work_record_service_specifics.cs",
        "Description": "update immigration general service specifics by work office staff",
        "WhenList": [
          "send request to update service specifics"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "7991",
        "FileName": "when_update_immigration_work_record_service_specifics.cs",
        "Description": "update service specifics by staff who is not in work office",
        "WhenList": [
          "send request to update service specifics"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "7992",
        "FileName": "when_update_immigration_work_record_service_specifics.cs",
        "Description": "update service specifics should not modify work details",
        "WhenList": [
          "send request to update work details"
        ],
        "ThenList": [
          "should return ok",
          "should not update work record detail fields"
        ],
        "Children": []
      },
      {
        "$id": "7993",
        "FileName": "when_update_immigration_work_record_service_specifics.cs",
        "Description": "update service specifics should update work record name if dependant name changed",
        "WhenList": [
          "send request to update work details"
        ],
        "ThenList": [
          "should update work record name"
        ],
        "Children": []
      },
      {
        "$id": "7994",
        "FileName": "when_update_immigration_work_record_service_specifics.cs",
        "Description": "update service specifics should not update work record name if dependant name is not changed",
        "WhenList": [
          "send request to update work details"
        ],
        "ThenList": [
          "should keep work record name"
        ],
        "Children": []
      },
      {
        "$id": "7995",
        "FileName": "when_update_immigration_work_record_service_specifics.cs",
        "Description": "should NOT include billing edit link after patch update when staff is in work record delegated coordination office",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "7996",
    "FileName": "when_update_social_security_certificate_of_coverage_work_record.cs",
    "Description": "when update social security certificate of coverage work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "7997",
        "FileName": "when_update_social_security_certificate_of_coverage_work_record.cs",
        "Description": "when update responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return updated work record"
        ],
        "Children": []
      },
      {
        "$id": "7998",
        "FileName": "when_update_social_security_certificate_of_coverage_work_record.cs",
        "Description": "when update work record detail",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return updated work record"
        ],
        "Children": []
      },
      {
        "$id": "7999",
        "FileName": "when_update_social_security_certificate_of_coverage_work_record.cs",
        "Description": "should NOT include billing edit link after patch update when staff is in work record delegated coordination office",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8000",
    "FileName": "when_update_social_security_other_compliance_work_record.cs",
    "Description": "when update social security other compliance work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8001",
        "FileName": "when_update_social_security_other_compliance_work_record.cs",
        "Description": "when update responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return updated work record"
        ],
        "Children": []
      },
      {
        "$id": "8002",
        "FileName": "when_update_social_security_other_compliance_work_record.cs",
        "Description": "when update work record detail",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok",
          "should return updated work record"
        ],
        "Children": []
      },
      {
        "$id": "8003",
        "FileName": "when_update_social_security_other_compliance_work_record.cs",
        "Description": "should NOT include billing edit link after patch update when staff is in work record delegated coordination office",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8004",
    "FileName": "when_update_tax_return_work_record_download_reminder.cs",
    "Description": "when update tax return work record download reminder",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8005",
        "FileName": "when_update_tax_return_work_record_download_reminder.cs",
        "Description": "when user is in responsibile office and has same practice type",
        "WhenList": [
          "turn on tax return report download reminder"
        ],
        "ThenList": [
          "should return ok",
          "should enable reminder and contain history"
        ],
        "Children": []
      },
      {
        "$id": "8006",
        "FileName": "when_update_tax_return_work_record_download_reminder.cs",
        "Description": "when user is not in responsibile office",
        "WhenList": [
          "turn on tax return report download reminder"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "8007",
        "FileName": "when_update_tax_return_work_record_download_reminder.cs",
        "Description": "when user has different practice type",
        "WhenList": [
          "turn on tax return report download reminder"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8008",
    "FileName": "when_update_tax_return_work_record_with_cpq.cs",
    "Description": "when update tax return work record with cpq",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8009",
        "FileName": "when_update_tax_return_work_record_with_cpq.cs",
        "Description": "question set administrator set the default rule",
        "WhenList": [
          "submit work record which has cpq by default rule"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "8010",
        "FileName": "when_update_tax_return_work_record_with_cpq.cs",
        "Description": "question set administrator did not set the default rule",
        "WhenList": [
          "submit work record which has cpq by default rule"
        ],
        "ThenList": [
          "should return forbidden when no default question set"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8011",
    "FileName": "when_update_tax_work_record_detail.cs",
    "Description": "when update tax work record detail",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8012",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when update basic information",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return ok",
          "should update work record detail and keep before team"
        ],
        "Children": []
      },
      {
        "$id": "8013",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when update efile consent on",
        "WhenList": [
          "turn efile consent on"
        ],
        "ThenList": [
          "should return ok",
          "should update work record detail and keep before team",
          "should record history"
        ],
        "Children": []
      },
      {
        "$id": "8014",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when update efile consent off",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return ok",
          "should update work record detail and keep before team",
          "should record history"
        ],
        "Children": []
      },
      {
        "$id": "8015",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when update team",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return ok",
          "should update team and keep other details"
        ],
        "Children": []
      },
      {
        "$id": "8016",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "when update responsible office",
        "WhenList": [],
        "ThenList": [],
        "Children": [
          {
            "$id": "8017",
            "FileName": "when_update_tax_work_record_detail.cs",
            "Description": "when update responsible office with valid uri",
            "WhenList": [
              "update work record responsible office"
            ],
            "ThenList": [
              "should return ok",
              "should update work record detail and keep before team"
            ],
            "Children": []
          },
          {
            "$id": "8018",
            "FileName": "when_update_tax_work_record_detail.cs",
            "Description": "when update responsible office with invalid uri",
            "WhenList": [
              "update work record responsible office"
            ],
            "ThenList": [
              "should return bad request"
            ],
            "Children": []
          },
          {
            "$id": "8019",
            "FileName": "when_update_tax_work_record_detail.cs",
            "Description": "when update responsible office of work record with task template already subscribed",
            "WhenList": [
              "update responsible office"
            ],
            "ThenList": [
              "should return ok",
              "should office to template subscribed office"
            ],
            "Children": []
          }
        ]
      },
      {
        "$id": "8020",
        "FileName": "when_update_tax_work_record_detail.cs",
        "Description": "should NOT include billing edit link after patch update when staff is in work record delegated coordination office",
        "WhenList": [
          "update work record details"
        ],
        "ThenList": [
          "should return OK",
          "should NOT contain billing edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8021",
    "FileName": "when_work_record_custom_field_section_with_correct_date_type_request.cs",
    "Description": "when work record custom field section with correct date type request",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8022",
        "FileName": "when_work_record_custom_field_section_with_correct_date_type_request.cs",
        "Description": "when update work record custom field value",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 200 OK",
          "should update the custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8023",
    "FileName": "when_work_record_custom_field_section_with_date_type_and_invalid_date.cs",
    "Description": "when work record custom field section with date type and invalid date",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8024",
        "FileName": "when_work_record_custom_field_section_with_date_type_and_invalid_date.cs",
        "Description": "when update work record custom field value",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should update the custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8025",
    "FileName": "when_work_record_custom_field_section_with_date_type_not_supporting_request_format.cs",
    "Description": "when work record custom field section with date type not supporting request format",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8026",
        "FileName": "when_work_record_custom_field_section_with_date_type_not_supporting_request_format.cs",
        "Description": "when update work record custom field value",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return 400 bad request",
          "should update the custom fields"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8027",
    "FileName": "work_record_custom_field_section_correct_edit.cs",
    "Description": "work record custom field section correct edit",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should update the custom fields"
    ],
    "Children": []
  },
  {
    "$id": "8028",
    "FileName": "work_record_custom_field_section_correct_edit_empty_value.cs",
    "Description": "work record custom field section correct edit empty value",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 200 OK",
      "should update the custom fields"
    ],
    "Children": []
  },
  {
    "$id": "8029",
    "FileName": "work_record_custom_field_section_more_than_255_character.cs",
    "Description": "work record custom field section more than 255 character",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 400 bad request"
    ],
    "Children": []
  },
  {
    "$id": "8030",
    "FileName": "when_get_immigration_work_record_service_update_link_and_work_record_is_on_post_work_milestone.cs",
    "Description": "when get immigration work record service update link and work record is on post work milestone",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8031",
        "FileName": "when_get_immigration_work_record_service_update_link_and_work_record_is_on_post_work_milestone.cs",
        "Description": "when work record is on post work milestone",
        "WhenList": [
          "get immigration work record"
        ],
        "ThenList": [
          "should return 200",
          "should not get service update links"
        ],
        "Children": []
      },
      {
        "$id": "8032",
        "FileName": "when_get_immigration_work_record_service_update_link_and_work_record_is_on_post_work_milestone.cs",
        "Description": "when work record is on done milestone",
        "WhenList": [
          "get immigration work record"
        ],
        "ThenList": [
          "should return 200",
          "should not get service update links"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8033",
    "FileName": "when_get_work_record_work_service_list.cs",
    "Description": "when get work record work service list",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should get type of service and know the service have same task template or not",
      "should not get inactive type of service",
      "should not get different practice type type of service",
      "should not get different country type of service",
      "should get type of service and know the service have been used or not"
    ],
    "Children": []
  },
  {
    "$id": "8034",
    "FileName": "when_get_work_record_work_service_list.cs",
    "Description": "when get work service list of work record with undefined priamry service",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should get type of undefined type of service"
    ],
    "Children": []
  },
  {
    "$id": "8035",
    "FileName": "when_try_to_update_primary_services_for_immigration_application_work_record_if_work_record_is_on_post_work_milestone.cs",
    "Description": "when try to update primary services for immigration application work record if work record is on post work milestone",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8036",
        "FileName": "when_try_to_update_primary_services_for_immigration_application_work_record_if_work_record_is_on_post_work_milestone.cs",
        "Description": "when immigration application work record is on post work milestone",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return bad request",
          "should not update primary application",
          "should not update immigration work record primary service"
        ],
        "Children": []
      },
      {
        "$id": "8037",
        "FileName": "when_try_to_update_primary_services_for_immigration_application_work_record_if_work_record_is_on_post_work_milestone.cs",
        "Description": "when immigration application work record is on done milestone",
        "WhenList": [
          "update"
        ],
        "ThenList": [
          "should return bad request",
          "should not update primary application",
          "should not update immigration work record primary service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8038",
    "FileName": "when_update_additional_services.cs",
    "Description": "when update additional services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8039",
        "FileName": "when_update_additional_services.cs",
        "Description": "when staff in assignee engagements work office",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return ok",
          "should not change work record name when only update additional services",
          "should update additional services",
          "should update type of service used field",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "8040",
        "FileName": "when_update_additional_services.cs",
        "Description": "when staff assign to check list",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8041",
        "FileName": "when_update_additional_services.cs",
        "Description": "when current user office is coordinating office",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 ok as response status code",
          "should update additional services"
        ],
        "Children": []
      },
      {
        "$id": "8042",
        "FileName": "when_update_additional_services.cs",
        "Description": "when current user is in work record team",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 ok as response status code",
          "should update additional services"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8043",
    "FileName": "when_update_additional_services.cs",
    "Description": "when update additional services with invalid data",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return bad request",
      "should not update additional services"
    ],
    "Children": []
  },
  {
    "$id": "8044",
    "FileName": "when_update_additional_services_for_immigration_application_work_record.cs",
    "Description": "when update additional services for immigration application work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8045",
        "FileName": "when_update_additional_services_for_immigration_application_work_record.cs",
        "Description": "when add new additional service for work record in review milestone",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return ok",
          "should create new additional services",
          "should create task assignments for new additional services",
          "should create additional applications with task in preparation milestone",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "8046",
        "FileName": "when_update_additional_services_for_immigration_application_work_record.cs",
        "Description": "when add new additional service for work record not in review milestone",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return ok",
          "should create new additional services",
          "should create task assignments for new additional services",
          "should create additional applications"
        ],
        "Children": []
      },
      {
        "$id": "8047",
        "FileName": "when_update_additional_services_for_immigration_application_work_record.cs",
        "Description": "when remove additional service",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return ok",
          "should remove additional services",
          "should remove additional applications",
          "should remove additional application tasks",
          "should remove additional application task assignments",
          "should remove documents related to additional applications"
        ],
        "Children": []
      },
      {
        "$id": "8048",
        "FileName": "when_update_additional_services_for_immigration_application_work_record.cs",
        "Description": "when remove additional service with missing items",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return ok",
          "should remove missing items"
        ],
        "Children": []
      },
      {
        "$id": "8049",
        "FileName": "when_update_additional_services_for_immigration_application_work_record.cs",
        "Description": "when add and remove additional service",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return ok",
          "should not change work record name when only update additional services",
          "should add additional services",
          "should add additional applications",
          "should create task assignments for new additional services and remove assignments for removed additional serices"
        ],
        "Children": []
      },
      {
        "$id": "8050",
        "FileName": "when_update_additional_services_for_immigration_application_work_record.cs",
        "Description": "when update additional service with undefined primary service",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8051",
        "FileName": "when_update_additional_services_for_immigration_application_work_record.cs",
        "Description": "when update service with defined primary service for undefined immi work record",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return OK"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8052",
    "FileName": "when_update_additional_services_for_work_record_related_to_restricted_engagement.cs",
    "Description": "when update additional services for work record related to restricted engagement",
    "WhenList": [
      "of update"
    ],
    "ThenList": [
      "should return"
    ],
    "Children": []
  },
  {
    "$id": "8053",
    "FileName": "when_update_additional_services_with_restricted_assignee.cs",
    "Description": "when update additional services with restricted assignee",
    "WhenList": [
      "of update"
    ],
    "ThenList": [
      "should return forbidden"
    ],
    "Children": []
  },
  {
    "$id": "8054",
    "FileName": "when_update_additional_services_work_record_with_service_status.cs",
    "Description": "when update additional services work record with service status",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return 403 forbidden"
    ],
    "Children": []
  },
  {
    "$id": "8055",
    "FileName": "when_update_primary_and_additional_services_for_immigration_application_work_record.cs",
    "Description": "when update primary and additional services for immigration application work record",
    "WhenList": [
      "update primary service and add additional service"
    ],
    "ThenList": [
      "should record activity history for changing primary service",
      "should record activity history for adding additional service"
    ],
    "Children": []
  },
  {
    "$id": "8056",
    "FileName": "when_update_primary_services.cs",
    "Description": "when update primary services",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8057",
        "FileName": "when_update_primary_services.cs",
        "Description": "when update tax work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 ok as response status code",
          "should update primary service",
          "should update type of service used field",
          "should update work record name",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "8058",
        "FileName": "when_update_primary_services.cs",
        "Description": "when update tax work record to engagement type of service",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 ok as response status code",
          "should update primary service",
          "should update work record name",
          "should update type of service used field",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "8059",
        "FileName": "when_update_primary_services.cs",
        "Description": "when update immigration work record",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return 200 ok as response status code",
          "should update primary service",
          "should update work record name",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "8060",
        "FileName": "when_update_primary_services.cs",
        "Description": "when the old primary service task template is mandatory and different with the new one",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden as response status code"
        ],
        "Children": []
      },
      {
        "$id": "8061",
        "FileName": "when_update_primary_services.cs",
        "Description": "when the old primary service task template is not mandatory and different with the new one",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden as response status code"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8062",
    "FileName": "when_update_primary_services_for_immigration_application_work_record.cs",
    "Description": "when update primary services for immigration application work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8063",
        "FileName": "when_update_primary_services_for_immigration_application_work_record.cs",
        "Description": "when immigration application work record has only primary service",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return ok",
          "should update primary application",
          "should update immigration work record primary service",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "8064",
        "FileName": "when_update_primary_services_for_immigration_application_work_record.cs",
        "Description": "when immigraiton application work record has primary service and additional services",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return ok",
          "should update primary application",
          "should update immigration work record primary service",
          "should record activity history"
        ],
        "Children": []
      },
      {
        "$id": "8065",
        "FileName": "when_update_primary_services_for_immigration_application_work_record.cs",
        "Description": "should update primary service missing items when update primary service",
        "WhenList": [
          "of update"
        ],
        "ThenList": [
          "should return ok",
          "should update primary application",
          "should update immigration work record primary service"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8066",
    "FileName": "when_batch_get_archive_work_records.cs",
    "Description": "when batch get archive work records with pagination links",
    "WhenList": [
      "get the first page event"
    ],
    "ThenList": [
      "should return correct work record",
      "should return correct next link",
      "should return no next link when no more events left",
      "should return no next link when left events less than limit",
      "should return no next link when current request with no events"
    ],
    "Children": []
  },
  {
    "$id": "8067",
    "FileName": "when_country_level_role_operates_work_records.cs",
    "Description": "when country level role operates work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8068",
        "FileName": "when_country_level_role_operates_work_records.cs",
        "Description": "when get",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "8069",
        "FileName": "when_country_level_role_operates_work_records.cs",
        "Description": "when update responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "8070",
        "FileName": "when_country_level_role_operates_work_records.cs",
        "Description": "when update other info",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8071",
    "FileName": "when_engagements_responsible_office_staff_operates_work_records.cs",
    "Description": "when engagements responsible office staff operates work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8072",
        "FileName": "when_engagements_responsible_office_staff_operates_work_records.cs",
        "Description": "when get",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "8073",
        "FileName": "when_engagements_responsible_office_staff_operates_work_records.cs",
        "Description": "when update responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "8074",
        "FileName": "when_engagements_responsible_office_staff_operates_work_records.cs",
        "Description": "when update other info",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8075",
    "FileName": "when_engagements_responsible_office_staff_operates_work_records.cs",
    "Description": "when engagements staff in work record team operates work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8076",
        "FileName": "when_engagements_responsible_office_staff_operates_work_records.cs",
        "Description": "when get",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "8077",
        "FileName": "when_engagements_responsible_office_staff_operates_work_records.cs",
        "Description": "when update responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "8078",
        "FileName": "when_engagements_responsible_office_staff_operates_work_records.cs",
        "Description": "when update other info",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8079",
    "FileName": "when_engagements_subscribed_offices_staff_operates_work_records.cs",
    "Description": "when engagements subscribed offices staff operates work records",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8080",
        "FileName": "when_engagements_subscribed_offices_staff_operates_work_records.cs",
        "Description": "when get",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return ok"
        ],
        "Children": []
      },
      {
        "$id": "8081",
        "FileName": "when_engagements_subscribed_offices_staff_operates_work_records.cs",
        "Description": "when update responsibility",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should success"
        ],
        "Children": []
      },
      {
        "$id": "8082",
        "FileName": "when_engagements_subscribed_offices_staff_operates_work_records.cs",
        "Description": "when update other info",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8083",
    "FileName": "when_get_tax_work_record_of_different_service_status_by_id_with_teq.cs",
    "Description": "when get tax work record of different service status by id with teq",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8084",
        "FileName": "when_get_tax_work_record_of_different_service_status_by_id_with_teq.cs",
        "Description": "when work record service of no issue",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should return tax equalization edit link"
        ],
        "Children": []
      },
      {
        "$id": "8085",
        "FileName": "when_get_tax_work_record_of_different_service_status_by_id_with_teq.cs",
        "Description": "when work record service of declined",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should not return tax equalization edit link"
        ],
        "Children": []
      },
      {
        "$id": "8086",
        "FileName": "when_get_tax_work_record_of_different_service_status_by_id_with_teq.cs",
        "Description": "when work record service of cancelled",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should not return tax equalization edit link"
        ],
        "Children": []
      },
      {
        "$id": "8087",
        "FileName": "when_get_tax_work_record_of_different_service_status_by_id_with_teq.cs",
        "Description": "when work record service of non complier",
        "WhenList": [
          "get tax work record"
        ],
        "ThenList": [
          "should not return tax equalization edit link"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8088",
    "FileName": "when_manipulate_work_records_with_restrict_assignee.cs",
    "Description": "when manipulate work records with restrict assignee",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8089",
        "FileName": "when_manipulate_work_records_with_restrict_assignee.cs",
        "Description": "when batch update work records",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return fobidden"
        ],
        "Children": []
      },
      {
        "$id": "8090",
        "FileName": "when_manipulate_work_records_with_restrict_assignee.cs",
        "Description": "when delete work recored",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return fobidden"
        ],
        "Children": []
      },
      {
        "$id": "8091",
        "FileName": "when_manipulate_work_records_with_restrict_assignee.cs",
        "Description": "when update work milestone",
        "WhenList": [
          "when update"
        ],
        "ThenList": [
          "should return error"
        ],
        "Children": []
      },
      {
        "$id": "8092",
        "FileName": "when_manipulate_work_records_with_restrict_assignee.cs",
        "Description": "should clear responsibility when move back milestone",
        "WhenList": [
          "when update work milestone of work record"
        ],
        "ThenList": [
          "should return 200 as status code",
          "should reset responsibility for uncompleted tasks"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8093",
    "FileName": "WorkRecordsWithDefaultTaskTest.cs",
    "Description": "work records with default task test",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8094",
        "FileName": "WorkRecordsWithDefaultTaskTest.cs",
        "Description": "when create work record without applying task template",
        "WhenList": [
          "create work record without applying task template"
        ],
        "ThenList": [
          "should return 201 created as status code",
          "should return created work record uri in location header",
          "should create work records"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8095",
    "FileName": "AssigneeOptimisticLockTest.cs",
    "Description": "assignee optimistic lock test",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should prevent i update it",
      "should allow me to update it by reload"
    ],
    "Children": []
  },
  {
    "$id": "8096",
    "FileName": "when_Assignee_validate.cs",
    "Description": "when assignee validate",
    "WhenList": [],
    "ThenList": [
      "validates first name null",
      "validates first name empty",
      "validates first name length 256",
      "validates first name length 255",
      "validates nullable fields when null",
      "validates nullable fields when length exceeds limit",
      "validates nullable fields when length equals limit",
      "validates last name null",
      "validates last name empty",
      "validates last name length 256",
      "validates last name length 255",
      "validates home country not null",
      "validates primary mail not null",
      "validates primary mail not empty",
      "validates primary mail format",
      "validates primary mail with valid format",
      "validates secondary mail can null",
      "validates secondary mail not empty",
      "validates secondary mail format",
      "validates secondary mail with valid format",
      "validates family member name not null",
      "validates passport country not null",
      "validates passport number not null",
      "validates passport number not empty"
    ],
    "Children": [
      {
        "$id": "8097",
        "FileName": "when_Assignee_validate.cs",
        "Description": "assignment validation",
        "WhenList": [],
        "ThenList": [
          "validates when assignment country is null",
          "validates when assignment country is not null",
          "validates when assignment start date after expected end date",
          "validates when assignment start date equals expected end date",
          "validates when assignment start date before expected end date",
          "validates when assignment start date after actual end date",
          "validates when assignment start date equals actual end date",
          "validates when assignment start date before actual end date"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8098",
    "FileName": "when_search_assignee_by_name.cs",
    "Description": "when search assignee by name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8099",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by empty fuzzy name",
        "WhenList": [
          "do a search for assignee by fuzzy name using single name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8100",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by fuzzy name using single name prefix",
        "WhenList": [
          "do a search for assignee by fuzzy name using single name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8101",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by partial last name with comma",
        "WhenList": [
          "do a search for assignee by fuzzy name using single name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8102",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search no assignee by fuzzy name using single name partial match but is not prefix",
        "WhenList": [
          "do a search for assignee by fuzzy name using single name partial match"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8103",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by fuzzy name using double name prefix",
        "WhenList": [
          "do a search assignee by fuzzy name using double name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8104",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by fuzzy name using double name prefix with more than one space",
        "WhenList": [
          "do a search assignee by fuzzy name using double name prefix with more than one space"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8105",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by fuzzy name using full name prefix",
        "WhenList": [
          "do a search assignee by fuzzy name using full name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8106",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by fuzzy name using partial formal name prefix",
        "WhenList": [
          "do a search assignee by fuzzy name using partial formal name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8107",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by strange name with two commas",
        "WhenList": [
          "do a search assignee by fuzzy name using partial formal name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8108",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by fuzzy name using full formal name prefix",
        "WhenList": [
          "do a search assignee by fuzzy name using full formal name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8109",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by fuzzy name using full formal name prefix with more than one space",
        "WhenList": [
          "do a search assignee by fuzzy name using full formal name prefix with more than one space"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8110",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee whose name contains space only by first name prefix",
        "WhenList": [
          "do a search assignee by first name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8111",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee whose name contains space only by last name prefix",
        "WhenList": [
          "do a search assignee by last name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8112",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee whose name contains space by starting from middle",
        "WhenList": [
          "do a search assignee by starting from middle"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8113",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee whose name contains space by full name prefix",
        "WhenList": [
          "do a search assignee by full name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8114",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee whose name contains space by formal name prefix",
        "WhenList": [
          "do a search assignee by formal name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8115",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee whose name contains space by formal name prefix with more than one space",
        "WhenList": [
          "do a search assignee by formal name prefix with more than one space"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8116",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee whose name contains space by formal name prefix with more than one space before comma",
        "WhenList": [
          "do a search assignee by formal name prefix with more than one space before comma"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8117",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee whose name contains space by full name",
        "WhenList": [
          "do a search assignee by full name"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8118",
        "FileName": "when_search_assignee_by_name.cs",
        "Description": "when search assignee by last name and middle name",
        "WhenList": [
          "do a search assignee by full name"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8119",
    "FileName": "when_find_country_by_id.cs",
    "Description": "when find country by id",
    "WhenList": [
      "when"
    ],
    "ThenList": [
      "should succeed"
    ],
    "Children": []
  },
  {
    "$id": "8120",
    "FileName": "when_load_saved_engagement.cs",
    "Description": "when load saved engagement",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed and load all related office information"
    ],
    "Children": []
  },
  {
    "$id": "8121",
    "FileName": "when_search_client_users_by_name.cs",
    "Description": "when search client users by name",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8122",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user by empty fuzzy name",
        "WhenList": [
          "do a search for assignee by fuzzy name using single name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8123",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user by fuzzy name using single name prefix",
        "WhenList": [
          "do a search for assignee by fuzzy name using single name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8124",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user by partial last name with comma",
        "WhenList": [
          "do a search for assignee by fuzzy name using single name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8125",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search no client user by fuzzy name using single name partial match but is not prefix",
        "WhenList": [
          "do a search for assignee by fuzzy name using single name partial match"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8126",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user by fuzzy name using double name prefix",
        "WhenList": [
          "do a search assignee by fuzzy name using double name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8127",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user by fuzzy name using double name prefix with more than one space",
        "WhenList": [
          "do a search assignee by fuzzy name using double name prefix with more than one space"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8128",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user by fuzzy name using partial formal name prefix",
        "WhenList": [
          "do a search assignee by fuzzy name using partial formal name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8129",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user whose name contains space only by first name prefix",
        "WhenList": [
          "do a search assignee by first name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8130",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client whose name contains space only by last name prefix",
        "WhenList": [
          "do a search assignee by last name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8131",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user whose name contains space by full name prefix",
        "WhenList": [
          "do a search assignee by full name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8132",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user whose name contains space by formal name prefix",
        "WhenList": [
          "do a search assignee by formal name prefix"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8133",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user whose name contains space by formal name prefix with more than one space",
        "WhenList": [
          "do a search assignee by formal name prefix with more than one space"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8134",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user whose name contains space by formal name prefix with more than one space before comma",
        "WhenList": [
          "do a search assignee by formal name prefix with more than one space before comma"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      },
      {
        "$id": "8135",
        "FileName": "when_search_client_users_by_name.cs",
        "Description": "when search client user whose name contains space by full name",
        "WhenList": [
          "do a search assignee by full name"
        ],
        "ThenList": [
          "should return assignee matched"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8136",
    "FileName": "when_find_office_by_id.cs",
    "Description": "when find office by id",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should succeed"
    ],
    "Children": []
  },
  {
    "$id": "8137",
    "FileName": "when_immigration_approver_modify_staff_profile.cs",
    "Description": "when immigration approver modify staff profile",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8138",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when modify staff profile except access and practice type",
        "WhenList": [
          "request to modify staff"
        ],
        "ThenList": [
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8139",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when modify access of higher level staff",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8140",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as country level user and modify access of lower level staff but country is different with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8141",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as country level user and modify access of same level staff but country is different with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8142",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as office level user and modify access of lower level staff but office is different with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8143",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as office level user and modify access of same level staff but office is different with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8144",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as country level user and modify access of lower level staff and country is same with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should no content",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8145",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as country level user and modify access of same level staff and country is same with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should no content",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8146",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as office level user and modify access of lower level staff and office is same with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should no content",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8147",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as office level user and modify access of same level staff and office is same with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should no content",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8148",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when add immigration practice type to staff",
        "WhenList": [
          "add immigration to staff"
        ],
        "ThenList": [
          "should ok",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8149",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when remove immigration practice type from staff",
        "WhenList": [
          "remove immigration from staff"
        ],
        "ThenList": [
          "should ok",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8150",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when add tax practice type to staff with current user have no tax practice type",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8151",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when remove tax practice type from staff with current user have no tax practice type",
        "WhenList": [
          "remove tax from staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8152",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as general level user have tax practice type and add practice type to staff",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8153",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as general level user have social practice type and add practice type to staff",
        "WhenList": [
          "add social to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8154",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as office level user have tax practice type and add practice type to staff with different office",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8155",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as country level user have tax practice type and add practice type to staff with different country",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8156",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as office level user have social practice type and add practice type to staff with different office",
        "WhenList": [
          "add social to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8157",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as country level user have social practice type and add practice type to staff with different country",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8158",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as office level user have tax social practice type and add practice type to staff with same office",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should ok",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8159",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when login as country level user have tax social practice type and add practice type to staff with same country",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should ok",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8160",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when add social security practice type to staff",
        "WhenList": [
          "add social security to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8161",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when remove social security practice type from staff",
        "WhenList": [
          "remove social security from staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8162",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when add technology practice type to staff",
        "WhenList": [
          "add technology to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8163",
        "FileName": "when_immigration_approver_modify_staff_profile.cs",
        "Description": "when remove technology practice type from staff",
        "WhenList": [
          "remove technology from staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8164",
    "FileName": "when_technology_approver_modify_staff_profile.cs",
    "Description": "when technology approver modify staff profile",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8165",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when modify staff profile except access and practice type",
        "WhenList": [
          "request to modify staff"
        ],
        "ThenList": [
          "should return no content",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8166",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when modify access of higher level staff",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8167",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as country level user and modify access of lower level staff but country is different with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8168",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as country level user and modify access of same level staff but country is different with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8169",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as office level user and modify access of lower level staff but office is different with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8170",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as office level user and modify access of same level staff but office is different with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8171",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as country level user and modify access of lower level staff and country is same with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should no content",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8172",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as country level user and modify access of same level staff and country is same with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should no content",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8173",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as office level user and modify access of lower level staff and office is same with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should no content",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8174",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as office level user and modify access of same level staff and office is same with current user",
        "WhenList": [
          "modify the office level staff access"
        ],
        "ThenList": [
          "should no content",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8175",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when add immigration practice type to staff",
        "WhenList": [
          "add immigration to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8176",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when remove immigration practice type from staff",
        "WhenList": [
          "remove immigration from staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8177",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when add tax practice type to staff",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8178",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when remove tax practice type from staff",
        "WhenList": [
          "remove tax from staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8179",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as general level user have tax practice type and add practice type to staff",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8180",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as general level user have social practice type and add practice type to staff",
        "WhenList": [
          "add social to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8181",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as office level user have tax practice type and add practice type to staff with different office",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8182",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as country level user have tax practice type and add practice type to staff with different country",
        "WhenList": [
          "add tax to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8183",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as office level user have social practice type and add practice type to staff with different office",
        "WhenList": [
          "add social to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8184",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as country level user have social practice type and add practice type to staff with different country",
        "WhenList": [
          "add social to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8185",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as office level user have tax social practice type and add practice type to staff with same office",
        "WhenList": [
          "add tax and social to staff"
        ],
        "ThenList": [
          "should ok",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8186",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when login as country level user have tax social practice type and add practice type to staff with same country",
        "WhenList": [
          "add tax and social to staff"
        ],
        "ThenList": [
          "should ok",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8187",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when add social security practice type to staff",
        "WhenList": [
          "add social security to staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8188",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when remove social security practice type from staff",
        "WhenList": [
          "remove social security from staff"
        ],
        "ThenList": [
          "should forbidden"
        ],
        "Children": []
      },
      {
        "$id": "8189",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when add technology practice type to staff",
        "WhenList": [
          "add technology to staff"
        ],
        "ThenList": [
          "should ok",
          "should modify staff"
        ],
        "Children": []
      },
      {
        "$id": "8190",
        "FileName": "when_technology_approver_modify_staff_profile.cs",
        "Description": "when remove technology practice type from staff",
        "WhenList": [
          "remove technology from staff"
        ],
        "ThenList": [
          "should ok",
          "should modify staff"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8191",
    "FileName": "FuzzySearchStaffByNameTest.cs",
    "Description": "fuzzy search staff by name test",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8192",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff by fuzzy name using single name prefix",
        "WhenList": [
          "do a search for staff by fuzzy name using single name prefix"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8193",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search no staff by fuzzy name using single name partial match but is not prefix",
        "WhenList": [
          "do a search for staff by fuzzy name using single name partial match"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8194",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff by fuzzy name using double name prefix",
        "WhenList": [
          "do a search staff by fuzzy name using double name prefix"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8195",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff by fuzzy name using double name prefix with more than one space",
        "WhenList": [
          "do a search staff by fuzzy name using double name prefix with more than one space"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8196",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff by fuzzy name using full name prefix",
        "WhenList": [
          "do a search staff by fuzzy name using full name prefix"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8197",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff by fuzzy name using partial formal name prefix",
        "WhenList": [
          "do a search staff by fuzzy name using partial formal name prefix"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8198",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff by fuzzy name using full formal name prefix",
        "WhenList": [
          "do a search staff by fuzzy name using full formal name prefix"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8199",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff by fuzzy name using full formal name prefix with more than one space",
        "WhenList": [
          "do a search staff by fuzzy name using full formal name prefix with more than one space"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8200",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff whose name contains space only by first name prefix",
        "WhenList": [
          "do a search staff by first name prefix"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8201",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff whose name contains space only by last name prefix",
        "WhenList": [
          "do a search staff by last name prefix"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8202",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff whose name contains space by starting from middle",
        "WhenList": [
          "do a search staff by starting from middle"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8203",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff whose name contains space by full name prefix",
        "WhenList": [
          "do a search staff by full name prefix"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8204",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff whose name contains space by formal name prefix",
        "WhenList": [
          "do a search staff by formal name prefix"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8205",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff whose name contains space by formal name prefix with more than one space",
        "WhenList": [
          "do a search staff by formal name prefix with more than one space"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8206",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff whose name contains space by formal name prefix with more than one space before comma",
        "WhenList": [
          "do a search staff by formal name prefix with more than one space before comma"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      },
      {
        "$id": "8207",
        "FileName": "FuzzySearchStaffByNameTest.cs",
        "Description": "when search staff whose name contains space by full name",
        "WhenList": [
          "do a search staff by full name"
        ],
        "ThenList": [
          "should return staff matched"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8208",
    "FileName": "when_load_staff_by_id.cs",
    "Description": "when load staff by id",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8209",
        "FileName": "when_load_staff_by_id.cs",
        "Description": "when load general staff",
        "WhenList": [
          "load by id"
        ],
        "ThenList": [
          "should be same"
        ],
        "Children": []
      },
      {
        "$id": "8210",
        "FileName": "when_load_staff_by_id.cs",
        "Description": "when load global admin staff",
        "WhenList": [
          "load by id"
        ],
        "ThenList": [
          "should be same"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8211",
    "FileName": "when_find_all_types_of_service_for_assignee_workrecord.cs",
    "Description": "when find all types of service for assignee workrecord",
    "WhenList": [],
    "ThenList": [
      "should succeed and return data ordered properly"
    ],
    "Children": []
  },
  {
    "$id": "8212",
    "FileName": "when_find_service_by_id.cs",
    "Description": "when find service by id",
    "WhenList": [
      "when find by id"
    ],
    "ThenList": [
      "should succeed"
    ],
    "Children": []
  },
  {
    "$id": "8213",
    "FileName": "when_type_of_service_validate.cs",
    "Description": "when type of service validate",
    "WhenList": [],
    "ThenList": [
      "validates description not empty",
      "validates description not null",
      "validates country not null",
      "validates duplicate description in the same country and same record type",
      "validates duplicate description in the same country and different record type"
    ],
    "Children": []
  },
  {
    "$id": "8214",
    "FileName": "when_fetch_tax_work_record.cs",
    "Description": "when fetch tax work record",
    "WhenList": [
      "when find by id"
    ],
    "ThenList": [
      "should return expected tax work record"
    ],
    "Children": []
  },
  {
    "$id": "8215",
    "FileName": "when_batch_find_work_records.cs",
    "Description": "when batch find work records",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return without error"
    ],
    "Children": []
  },
  {
    "$id": "8216",
    "FileName": "when_move_current_milestone_back.cs",
    "Description": "when move current milestone back",
    "WhenList": [
      "when move back"
    ],
    "ThenList": [
      "should keep date of milestones before current milestone",
      "should clear date of milestones after current milestone"
    ],
    "Children": []
  },
  {
    "$id": "8217",
    "FileName": "when_single_create_tax_work_record.cs",
    "Description": "when single create tax work record",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8218",
        "FileName": "when_single_create_tax_work_record.cs",
        "Description": "when create work record for non restricted assgineee",
        "WhenList": [
          "get workrecord"
        ],
        "ThenList": [
          "should return 201",
          "should create workdrecord successfully"
        ],
        "Children": []
      },
      {
        "$id": "8219",
        "FileName": "when_single_create_tax_work_record.cs",
        "Description": "when create single work record for restricted assginee with task assignment responsiblity is her contact",
        "WhenList": [
          "single create work record for restircted assignee"
        ],
        "ThenList": [
          "should return ok",
          "should work record first task assignment responsiblity equal john"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8220",
    "FileName": "when_test_if_milestone_is_finished.cs",
    "Description": "when test if milestone is finished",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8221",
        "FileName": "when_test_if_milestone_is_finished.cs",
        "Description": "when provided milestone is before current milestone",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return true"
        ],
        "Children": []
      },
      {
        "$id": "8222",
        "FileName": "when_test_if_milestone_is_finished.cs",
        "Description": "when provided milestone is current milestone",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return false"
        ],
        "Children": []
      },
      {
        "$id": "8223",
        "FileName": "when_test_if_milestone_is_finished.cs",
        "Description": "when provided milestone is after current milestone",
        "WhenList": [
          "when"
        ],
        "ThenList": [
          "should return false"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8224",
    "FileName": "when_test_if_tax_return_work_record_is_duplicated.cs",
    "Description": "when test if tax return work record is duplicated",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8225",
        "FileName": "when_test_if_tax_return_work_record_is_duplicated.cs",
        "Description": "when provided tax return work record have the same assignee service year jurisdiction questionset",
        "WhenList": [
          "test if tax return work record is duplicated"
        ],
        "ThenList": [
          "should return true"
        ],
        "Children": []
      },
      {
        "$id": "8226",
        "FileName": "when_test_if_tax_return_work_record_is_duplicated.cs",
        "Description": "when provided cpq tax return work record and assignee already has cpq for given year and jurisdiction",
        "WhenList": [
          "test if tax return work record is duplicated"
        ],
        "ThenList": [
          "should return true"
        ],
        "Children": []
      },
      {
        "$id": "8227",
        "FileName": "when_test_if_tax_return_work_record_is_duplicated.cs",
        "Description": "when provided paper work record and assignee already has one paper work record",
        "WhenList": [
          "test if paper work record is duplicated"
        ],
        "ThenList": [
          "should return false"
        ],
        "Children": []
      },
      {
        "$id": "8228",
        "FileName": "when_test_if_tax_return_work_record_is_duplicated.cs",
        "Description": "when provided tax return work record is not duplicated",
        "WhenList": [
          "test if tax return work record is duplicated"
        ],
        "ThenList": [
          "should return false"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8229",
    "FileName": "WorkRecordOptimisticLockTest.cs",
    "Description": "tax work record optimistic lock test",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should prevent i update it",
      "should allow me to update it by reload"
    ],
    "Children": []
  },
  {
    "$id": "8230",
    "FileName": "when_create_work_record.cs",
    "Description": "when create work record",
    "WhenList": [
      "a work record is using the service"
    ],
    "ThenList": [
      "should create work record",
      "should update type of service to used"
    ],
    "Children": []
  },
  {
    "$id": "8231",
    "FileName": "when_create_work_record.cs",
    "Description": "when create work record with engagement type of service to be primary service",
    "WhenList": [
      "a work record is using the service"
    ],
    "ThenList": [
      "should create work record",
      "should update type of service to used"
    ],
    "Children": []
  },
  {
    "$id": "8232",
    "FileName": "when_create_work_record.cs",
    "Description": "when create work record with engagement type of service to be additional service",
    "WhenList": [
      "a work record is using the service"
    ],
    "ThenList": [
      "should create work record",
      "should update type of service to used"
    ],
    "Children": []
  },
  {
    "$id": "8233",
    "FileName": "when_begin_http_request.cs",
    "Description": "when begin http request",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should log request url and response time"
    ],
    "Children": []
  },
  {
    "$id": "8234",
    "FileName": "when_end_http_request.cs",
    "Description": "request log module test",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8235",
        "FileName": "when_end_http_request.cs",
        "Description": "when end http request",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should log request url and response time"
        ],
        "Children": []
      },
      {
        "$id": "8236",
        "FileName": "when_end_http_request.cs",
        "Description": "when process health resource",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should NOT log request"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8237",
    "FileName": "when_object_get_logger.cs",
    "Description": "when object get logger",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return logger with name to be class name of object"
    ],
    "Children": [
      {
        "$id": "8238",
        "FileName": "when_object_get_logger.cs",
        "Description": "dummy",
        "WhenList": [],
        "ThenList": [],
        "Children": []
      }
    ]
  },
  {
    "$id": "8239",
    "FileName": "CreateAssigneeCsvRequestTransformerTest.cs",
    "Description": "create assignee csv request transformer test",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8240",
        "FileName": "CreateAssigneeCsvRequestTransformerTest.cs",
        "Description": "when transform assignee",
        "WhenList": [
          "transform"
        ],
        "ThenList": [
          "should add general contact",
          "should add client association"
        ],
        "Children": []
      },
      {
        "$id": "8241",
        "FileName": "CreateAssigneeCsvRequestTransformerTest.cs",
        "Description": "when transform assignee from request without assignment",
        "WhenList": [
          "transform"
        ],
        "ThenList": [
          "should not add assignment"
        ],
        "Children": []
      },
      {
        "$id": "8242",
        "FileName": "CreateAssigneeCsvRequestTransformerTest.cs",
        "Description": "when transform assignee from request without passport",
        "WhenList": [
          "transform"
        ],
        "ThenList": [
          "should not add passport"
        ],
        "Children": []
      },
      {
        "$id": "8243",
        "FileName": "CreateAssigneeCsvRequestTransformerTest.cs",
        "Description": "when transform assignee from request without family member",
        "WhenList": [
          "transform"
        ],
        "ThenList": [
          "should not add family member"
        ],
        "Children": []
      },
      {
        "$id": "8244",
        "FileName": "CreateAssigneeCsvRequestTransformerTest.cs",
        "Description": "when transform date",
        "WhenList": [
          "transform"
        ],
        "ThenList": [
          "should transfer family member birthday with specific format",
          "should transfer assignment start date with specific format",
          "should transfer assignment actual end date with specific format",
          "should transfer assignment expected end date with specific format"
        ],
        "Children": []
      },
      {
        "$id": "8245",
        "FileName": "CreateAssigneeCsvRequestTransformerTest.cs",
        "Description": "when transform account from request",
        "WhenList": [
          "transform"
        ],
        "ThenList": [
          "should transfer profile birthday",
          "should transfer home country",
          "should transfer host country"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8246",
    "FileName": "UriExtensionTest.cs",
    "Description": "entity existed specs",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8247",
        "FileName": "UriExtensionTest.cs",
        "Description": "when entity uri with valid resource",
        "WhenList": [
          "when mapped entity existed"
        ],
        "ThenList": [
          "should return true given existed entity uri"
        ],
        "Children": []
      },
      {
        "$id": "8248",
        "FileName": "UriExtensionTest.cs",
        "Description": "when entity uri with invalid format",
        "WhenList": [
          "when mapped entity existed"
        ],
        "ThenList": [
          "should return true given existed entity uri"
        ],
        "Children": []
      },
      {
        "$id": "8249",
        "FileName": "UriExtensionTest.cs",
        "Description": "when entity uri with invalid resource type",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return false"
        ],
        "Children": []
      },
      {
        "$id": "8250",
        "FileName": "UriExtensionTest.cs",
        "Description": "when entity uri with invalid resource id format",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return false"
        ],
        "Children": []
      },
      {
        "$id": "8251",
        "FileName": "UriExtensionTest.cs",
        "Description": "when entity uri with non exist resource id",
        "WhenList": [
          "of"
        ],
        "ThenList": [
          "should return false"
        ],
        "Children": []
      }
    ]
  },
  {
    "$id": "8252",
    "FileName": "FamilyMemberValidatorTest.cs",
    "Description": "family member validator test",
    "WhenList": [],
    "ThenList": [
      "validates family member first name not null",
      "validates family member first name not empty",
      "validates family member first name length 256",
      "validates family member first name length 255",
      "validates family member last name not null",
      "validates family member last name not empty",
      "validates family member last name length 256",
      "validates family member last name length 255"
    ],
    "Children": []
  },
  {
    "$id": "8253",
    "FileName": "OutOfScopeWorkValidatorTest.cs",
    "Description": "out of scope work validator test",
    "WhenList": [],
    "ThenList": [
      "validates out of scope work date not null",
      "validates time spent hours not null",
      "validates description not null",
      "validates length of description greater than 1",
      "validates length of description less than 512",
      "validates date less than utc now",
      "validates time spent hours not less than 0",
      "validates time spent hours not greater than 24",
      "should pass with valid data"
    ],
    "Children": []
  },
  {
    "$id": "8254",
    "FileName": "StaffEmailFormatValidatorSpec.cs",
    "Description": "staff email format validator spec",
    "WhenList": [],
    "ThenList": [
      "should succeed given an valid email address",
      "should generate error message when given email is not in white list",
      "should generate error message"
    ],
    "Children": []
  },
  {
    "$id": "8255",
    "FileName": "TypeOfServiceValidatorTest.cs",
    "Description": "type of service validator test",
    "WhenList": [],
    "ThenList": [
      "should be valid for type immigration",
      "should be invalid if all fields are same with existing one",
      "should be invalid if description is null",
      "should be invalid if description is longer than 255",
      "should be invalid if jurisdiction is null"
    ],
    "Children": []
  },
  {
    "$id": "8256",
    "FileName": "when_validate_add_missing_information_request.cs",
    "Description": "when validate add missing information request",
    "WhenList": [],
    "ThenList": [
      "should be invalid if description is empty",
      "should be invalid if from is empty",
      "should be invalid if sine format invalid",
      "should be valid if from pwc and all field is vaild"
    ],
    "Children": []
  },
  {
    "$id": "8257",
    "FileName": "when_group_list_into_batches.cs",
    "Description": "when group list into batches",
    "WhenList": [
      "of"
    ],
    "ThenList": [
      "should return batches of specific size"
    ],
    "Children": []
  },
  {
    "$id": "8258",
    "FileName": "0143_AddDefaultReponsibleOfficeIdForChecklistItemTest.cs",
    "Description": "add default reponsible office id for checklist item test",
    "WhenList": [
      "migrate up"
    ],
    "ThenList": [
      "should set null valued responsible office ids to work record responsible office id"
    ],
    "Children": []
  },
  {
    "$id": "8259",
    "FileName": "0144_MigrateToSupportMultipleWorkRecordNotesTest.cs",
    "Description": "migrate to support multiple work record notes",
    "WhenList": [
      "migrate up"
    ],
    "ThenList": [
      "should add work record note"
    ],
    "Children": []
  },
  {
    "$id": "8260",
    "FileName": "0146_AddChecklistIdColumnToDoItemTableAndGenerateWorkRecordTaskRelatedToDoItemsTest.cs",
    "Description": "add checklist id column to do item table and generate work record task related to do items",
    "WhenList": [
      "migrate up"
    ],
    "ThenList": [
      "should add to do item for work record task and checklist item"
    ],
    "Children": []
  },
  {
    "$id": "8261",
    "FileName": "0158_RenameFeatureToggleForAssigneeInfoAccessControlList.cs",
    "Description": "rename feature toggle for assignee info access control list test",
    "WhenList": [
      "migrate up"
    ],
    "ThenList": [
      "should change the name of the specific row"
    ],
    "Children": []
  },
  {
    "$id": "8262",
    "FileName": "0186_AddGOMigrationProcessTableTest.cs",
    "Description": "add GO migration process table test",
    "WhenList": [
      "migrate up"
    ],
    "ThenList": [
      "should add go migration process"
    ],
    "Children": []
  },
  {
    "$id": "8263",
    "FileName": "0255_AddGOMigrationWorkRecordTest.cs",
    "Description": "add GO migration work record test",
    "WhenList": [
      "migrate up"
    ],
    "ThenList": [
      "should add go migration workrecord"
    ],
    "Children": []
  },
  {
    "$id": "8264",
    "FileName": "0287_ChangeAssigneeIdColumnToBeNullableFacts.cs",
    "Description": "change assignee id column to be nullable facts",
    "WhenList": [
      "migrate up"
    ],
    "ThenList": [
      "should add go migration workrecord"
    ],
    "Children": []
  },
  {
    "$id": "8265",
    "FileName": "0340_AddEngagementAdminForExistingEngagement.cs",
    "Description": "add engagement admin for existing engagement facts",
    "WhenList": [
      "migrate up"
    ],
    "ThenList": [
      "should add engagement admin"
    ],
    "Children": []
  },
  {
    "$id": "8266",
    "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
    "Description": "migrate scheduler settings to new table tests",
    "WhenList": [],
    "ThenList": [],
    "Children": [
      {
        "$id": "8267",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate work days work hours resource number and effective date",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8268",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate the latest resource number before today",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8269",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate the latest resource number that is larger than zero before today",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8270",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate the resource number with zero to unavailable days that is later than today",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8271",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate holiday that starts before today and end after today",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8272",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate two holiday durations to unavailable days",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8273",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate two schedulers work days work hours resource number and effective date",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate default scheduler",
          "should migrate custom scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8274",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate two schedulers unavailable days",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate default scheduler",
          "should migrate custom scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8275",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate the first 15 days when holiday does not have end date",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8276",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate the first 15 days when holiday ends 16 days later",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8277",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate the holidays that is followed by another holiday",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler"
        ],
        "Children": []
      },
      {
        "$id": "8278",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate when only have resource number that is zero",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler weekly availability to valid state",
          "should migrate scheduler unavailable days"
        ],
        "Children": []
      },
      {
        "$id": "8279",
        "FileName": "0776_MigrateSchedulerSettingsToNewTableTests.cs",
        "Description": "should migrate when work hours is null",
        "WhenList": [
          "migrate up"
        ],
        "ThenList": [
          "should migrate scheduler weekly availability to valid state"
        ],
        "Children": []
      }
    ]
  }
]